// OptFrame - Optimization Framework

// Copyright (C) 2009, 2010, 2011
// http://optframe.sourceforge.net/
//
// This file is part of the OptFrame optimization framework. This framework
// is free software; you can redistribute it and/or modify it under the
// terms of the GNU Lesser General Public License v3 as published by the
// Free Software Foundation.

// This framework is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License v3 for more details.

// You should have received a copy of the GNU Lesser General Public License v3
// along with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
// USA.

// ===================================
// Main.cpp file generated by OptFrame
// Project Traveling Salesman Problem
// ===================================

#include <stdlib.h>
#include <math.h>

#include <iostream>

using namespace std;

#include <set>

#include "../OptFrame/Loader.hpp"
#include "OptHScheduling.h"

using namespace OptHS;
using namespace scannerpp;

int main(int argc, char **argv)
{
	Loader<RepOptHS, OPTFRAME_DEFAULT_ADS, MemOptHS> loader;
	OptHSProblemCommand opths;
	//optframe.execute("system.read ../definitions.opt");
	//optframe.execute("problem.OptHS load Y Z M B E J");
	//optframe.execute("component.exec_constructive $Constructive 0  sol-random");
	//optframe.execute("evaluate $Evaluator 0 $sol-random");
	//optframe.execute("print $sol-random");
	//optframe.execute("component.create_list [ OptFrame:NS 0 ] OptFrame:NS ns_list");
	//optframe.execute("component.build OptFrame:LocalSearch:LAHC $Evaluator 0  $ns_list 1000 10000 50 my_lahc");
	//optframe.execute("component.exec_local_search 0 30  $sol-random  $my_lahc  best-solution  time");
	//optframe.execute("echo found best solution in $time milliseconds");
	//optframe.execute("evaluate $Evaluator 0 $best-solution");
	//optframe.execute("to_string $best-solution bs_str");
    //optframe.execute("echo $bs_str");

	cout << "Program ended successfully" << endl;

	return 0;
}
