// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
var key;
for (key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function shell_read(filename, binary) {
    var ret;
      if (!nodeFS) nodeFS = require('fs');
      if (!nodePath) nodePath = require('path');
      filename = nodePath['normalize'](filename);
      ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = function shell_read(f) {
      return read(f);
    };
  } else {
    Module['read'] = function shell_read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    var data;
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status, toThrow) {
      quit(status);
    }
  }
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function shell_read(url) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.send(null);
      return xhr.responseText;
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.responseType = 'arraybuffer';
        xhr.send(null);
        return new Uint8Array(xhr.response);
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
        return;
      }
      onerror();
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function shell_print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function shell_printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependent on the others
  throw new Error('Unknown runtime environment. Where are we?');
}

if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}
if (!Module['quit']) {
  Module['quit'] = function(status, toThrow) {
    throw toThrow;
  }
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
    return value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    if (!func) return; // on null pointer, return undefined
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
  return func;
}

var JSfuncs = {
  // Helpers for cwrap -- it can't refer to Runtime directly because it might
  // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
  // out what the minified function name is.
  'stackSave': function() {
    Runtime.stackSave()
  },
  'stackRestore': function() {
    Runtime.stackRestore()
  },
  // type conversion from js to c
  'arrayToC' : function(arr) {
    var ret = Runtime.stackAlloc(arr.length);
    writeArrayToMemory(arr, ret);
    return ret;
  },
  'stringToC' : function(str) {
    var ret = 0;
    if (str !== null && str !== undefined && str !== 0) { // null string
      // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
      var len = (str.length << 2) + 1;
      ret = Runtime.stackAlloc(len);
      stringToUTF8(str, ret, len);
    }
    return ret;
  }
};
// For fast lookup of conversion functions
var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

// C calling interface.
function ccall (ident, returnType, argTypes, args, opts) {
  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  if (args) {
    for (var i = 0; i < args.length; i++) {
      var converter = toC[argTypes[i]];
      if (converter) {
        if (stack === 0) stack = Runtime.stackSave();
        cArgs[i] = converter(args[i]);
      } else {
        cArgs[i] = args[i];
      }
    }
  }
  var ret = func.apply(null, cArgs);
  if (returnType === 'string') ret = Pointer_stringify(ret);
  if (stack !== 0) {
    Runtime.stackRestore(stack);
  }
  return ret;
}

function cwrap (ident, returnType, argTypes) {
  argTypes = argTypes || [];
  var cfunc = getCFunc(ident);
  // When the function takes numbers and returns a number, we can just return
  // the original function
  var numericArgs = argTypes.every(function(type){ return type === 'number'});
  var numericRet = returnType !== 'string';
  if (numericRet && numericArgs) {
    return cfunc;
  }
  return function() {
    return ccall(ident, returnType, argTypes, arguments);
  }
}

Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for getValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var stop;
    ptr = ret;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
  if (__cxa_demangle_func) {
    try {
      var s =
        func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = __cxa_demangle_func(buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;



function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  HEAP8.set(array, buffer);
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;






// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = Runtime.GLOBAL_BASE;

STATICTOP = STATIC_BASE + 38544;
/* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__I_000101() } }, { func: function() { __GLOBAL__sub_I_mainHFM_cpp() } }, { func: function() { __GLOBAL__sub_I_iostream_cpp() } });


memoryInitializer = "website/js/hfm-converted.js.mem";





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        // A rethrown exception can reach refcount 0; it must not be discarded
        // Its next handler will clear the rethrown flag and addRef it, prior to
        // final decRef and destruction here
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Module['dynCall_vi'](info.destructor, ptr);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};function ___cxa_begin_catch(ptr) {
      var info = EXCEPTIONS.infos[ptr];
      if (info && !info.caught) {
        info.caught = true;
        __ZSt18uncaught_exceptionv.uncaught_exception--;
      }
      if (info) info.rethrown = false;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  
  
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((Runtime.setTempRet0(0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((Runtime.setTempRet0(0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((Runtime.setTempRet0(typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((Runtime.setTempRet0(throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function ___gxx_personality_v0() {
    }

  function ___lock() {}

  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    }function ___map_file(pathname, size) {
      ___setErrNo(ERRNO_CODES.EPERM);
      return -1;
    }

  
    

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up; up--) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion
  
              var fd = process.stdin.fd;
              if (isPosixPlatform) {
                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
                var usingDevice = false;
                try {
                  fd = fs.openSync('/dev/stdin', 'r');
                  usingDevice = true;
                } catch (e) {}
              }
  
              try {
                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
              } catch(e) {
                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;
                else throw e;
              }
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.length : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) {
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        if (!req) {
          return callback("Unable to connect to IndexedDB");
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          try {
            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
            transaction.onerror = function(e) {
              callback(this.error);
              e.preventDefault();
            };
  
            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
            var index = store.index('timestamp');
  
            index.openKeyCursor().onsuccess = function(event) {
              var cursor = event.target.result;
  
              if (!cursor) {
                return callback(null, { type: 'remote', db: db, entries: entries });
              }
  
              entries[cursor.primaryKey] = { timestamp: cursor.key };
  
              cursor.continue();
            };
          } catch (e) {
            return callback(e);
          }
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            // Issue 4254: Using curr as a node name will prevent the node
            // from being found in FS.nameTable when FS.open is called on
            // a path which holds a child of this node,
            // given that all FS functions assume node names
            // are just their corresponding parts within their given path,
            // rather than incremental aggregates which include their parent's
            // directories.
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readdir:function (node) {
          var entries = ['.', '..'];
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readlink:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        }}};
  
  var _stdin=STATICTOP; STATICTOP += 16;;
  
  var _stdout=STATICTOP; STATICTOP += 16;;
  
  var _stderr=STATICTOP; STATICTOP += 16;;var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        FS.syncFSRequests++;
  
        if (FS.syncFSRequests > 1) {
          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function doCallback(err) {
          assert(FS.syncFSRequests > 0);
          FS.syncFSRequests--;
          return callback(err);
        }
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdirTree:function (path, mode) {
        var dirs = path.split('/');
        var d = '';
        for (var i = 0; i < dirs.length; ++i) {
          if (!dirs[i]) continue;
          d += '/' + dirs[i];
          try {
            FS.mkdir(d, mode);
          } catch(e) {
            if (e.errno != ERRNO_CODES.EEXIST) throw e;
          }
        }
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // According to POSIX, we should map EISDIR to EPERM, but
          // we instead do what Linux does (and we must, as we use
          // the musl linux libc).
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (lookup.node === null) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto')['randomBytes'](1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
  
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          if (usesGzip || !datalength) {
            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
            datalength = this.getter(0).length;
            chunkSize = datalength;
            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
          }
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperties(lazyArray, {
            length: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._length;
              }
            },
            chunkSize: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._chunkSize;
              }
            }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init(); // XXX perhaps this method should move onto Browser?
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
  
        var len = Math.min(bufsize, lengthBytesUTF8(ret));
        var endChar = HEAP8[buf+len];
        stringToUTF8(ret, buf, bufsize+1);
        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.
        HEAP8[buf+len] = endChar;
  
        return len;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit
      var offset = offset_low;
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -ERRNO_CODES.EINVAL;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        case 12: {
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2;
          return 0;
        }
        case 13:
        case 14:
        case 13:
        case 14:
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default: {
          return -ERRNO_CODES.EINVAL;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21506: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        case 21523: {
          // TODO: in theory we should write to the winsize struct that gets
          // passed in, but for now musl doesn't read anything on it
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall91(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // munmap
      var addr = SYSCALLS.get(), len = SYSCALLS.get();
      // TODO: support unmmap'ing parts of allocations
      var info = SYSCALLS.mappings[addr];
      if (!info) return 0;
      if (len === info.len) {
        var stream = FS.getStream(info.fd);
        SYSCALLS.doMsync(addr, stream, len, info.flags)
        FS.munmap(stream);
        SYSCALLS.mappings[addr] = null;
        if (info.allocated) {
          _free(info.malloc);
        }
      }
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
   
  
   
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC);   

  function ___unlock() {}

   

  function _abort() {
      Module['abort']();
    }

   

   

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

  
  
  
  
  var _environ=STATICTOP; STATICTOP += 16;;var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = ENV['LOGNAME'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        ENV['LANG'] = 'C.UTF-8';
        ENV['_'] = Module['thisProgram'];
        // Allocate memory.
        poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
        envPtr = allocate(MAX_ENV_VALUES * 4,
                          'i8*', ALLOC_STATIC);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((_environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((_environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
      return _getenv.ret;
    }

  function _gettimeofday(ptr) {
      var now = Date.now();
      HEAP32[((ptr)>>2)]=(now/1000)|0; // seconds
      HEAP32[(((ptr)+(4))>>2)]=((now % 1000)*1000)|0; // microseconds
      return 0;
    }



   

  var _llvm_ctlz_i32=true;

  function _llvm_stackrestore(p) {
      var self = _llvm_stacksave;
      var ret = self.LLVM_SAVEDSTACKS[p];
      self.LLVM_SAVEDSTACKS.splice(p, 1);
      Runtime.stackRestore(ret);
    }

  function _llvm_stacksave() {
      var self = _llvm_stacksave;
      if (!self.LLVM_SAVEDSTACKS) {
        self.LLVM_SAVEDSTACKS = [];
      }
      self.LLVM_SAVEDSTACKS.push(Runtime.stackSave());
      return self.LLVM_SAVEDSTACKS.length-1;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 

   

   

   

  function _pthread_cond_wait() { return 0; }

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

   

   

  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Module['dynCall_v'](func);
      _pthread_once.seen[ptr] = 1;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

   

   

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          var twelveHour = date.tm_hour;
          if (twelveHour == 0) twelveHour = 12;
          else if (twelveHour > 12) twelveHour -= 12;
          return leadingNulls(twelveHour, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour >= 0 && date.tm_hour < 12) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var ___dso_handle=STATICTOP; STATICTOP += 16;;
FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });;
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); };
___buildEnvironment(ENV);;
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

var ASSERTIONS = false;

// All functions here should be maybeExported from jsifier.js

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      if (ASSERTIONS) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      }
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}


Module["intArrayFromString"] = intArrayFromString;
Module["intArrayToString"] = intArrayToString;

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_did(index,a1,a2) {
  try {
    return Module["dynCall_did"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_didd(index,a1,a2,a3) {
  try {
    return Module["dynCall_didd"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iid(index,a1,a2) {
  try {
    return Module["dynCall_iid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iidi(index,a1,a2,a3) {
  try {
    return Module["dynCall_iidi"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiid(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiid"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "invoke_di": invoke_di, "invoke_did": invoke_did, "invoke_didd": invoke_didd, "invoke_ii": invoke_ii, "invoke_iid": invoke_iid, "invoke_iidi": invoke_iidi, "invoke_iii": invoke_iii, "invoke_iiii": invoke_iiii, "invoke_iiiii": invoke_iiiii, "invoke_iiiiid": invoke_iiiiid, "invoke_iiiiii": invoke_iiiiii, "invoke_iiiiiid": invoke_iiiiiid, "invoke_iiiiiii": invoke_iiiiiii, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_v": invoke_v, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_viii": invoke_viii, "invoke_viiid": invoke_viiid, "invoke_viiii": invoke_viiii, "invoke_viiiii": invoke_viiiii, "invoke_viiiiii": invoke_viiiiii, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___assert_fail": ___assert_fail, "___buildEnvironment": ___buildEnvironment, "___cxa_allocate_exception": ___cxa_allocate_exception, "___cxa_atexit": ___cxa_atexit, "___cxa_begin_catch": ___cxa_begin_catch, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "___cxa_throw": ___cxa_throw, "___gxx_personality_v0": ___gxx_personality_v0, "___lock": ___lock, "___map_file": ___map_file, "___resumeException": ___resumeException, "___setErrNo": ___setErrNo, "___syscall140": ___syscall140, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "___syscall221": ___syscall221, "___syscall5": ___syscall5, "___syscall54": ___syscall54, "___syscall6": ___syscall6, "___syscall91": ___syscall91, "___unlock": ___unlock, "__addDays": __addDays, "__arraySum": __arraySum, "__exit": __exit, "__isLeapYear": __isLeapYear, "_abort": _abort, "_atexit": _atexit, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_exit": _exit, "_getenv": _getenv, "_gettimeofday": _gettimeofday, "_llvm_stackrestore": _llvm_stackrestore, "_llvm_stacksave": _llvm_stacksave, "_pthread_cond_wait": _pthread_cond_wait, "_pthread_getspecific": _pthread_getspecific, "_pthread_key_create": _pthread_key_create, "_pthread_once": _pthread_once, "_pthread_setspecific": _pthread_setspecific, "_strftime": _strftime, "_strftime_l": _strftime_l, "_time": _time, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "cttz_i8": cttz_i8, "___dso_handle": ___dso_handle };
// EMSCRIPTEN_START_ASM
var asm = (/** @suppress {uselessCode} */ function(global, env, buffer) {
'use asm';


  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var cttz_i8=env.cttz_i8|0;
  var ___dso_handle=env.___dso_handle|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var invoke_di=env.invoke_di;
  var invoke_did=env.invoke_did;
  var invoke_didd=env.invoke_didd;
  var invoke_ii=env.invoke_ii;
  var invoke_iid=env.invoke_iid;
  var invoke_iidi=env.invoke_iidi;
  var invoke_iii=env.invoke_iii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_v=env.invoke_v;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_viii=env.invoke_viii;
  var invoke_viiid=env.invoke_viiid;
  var invoke_viiii=env.invoke_viiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___assert_fail=env.___assert_fail;
  var ___buildEnvironment=env.___buildEnvironment;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ___cxa_atexit=env.___cxa_atexit;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var ___cxa_throw=env.___cxa_throw;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___lock=env.___lock;
  var ___map_file=env.___map_file;
  var ___resumeException=env.___resumeException;
  var ___setErrNo=env.___setErrNo;
  var ___syscall140=env.___syscall140;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var ___syscall221=env.___syscall221;
  var ___syscall5=env.___syscall5;
  var ___syscall54=env.___syscall54;
  var ___syscall6=env.___syscall6;
  var ___syscall91=env.___syscall91;
  var ___unlock=env.___unlock;
  var __addDays=env.__addDays;
  var __arraySum=env.__arraySum;
  var __exit=env.__exit;
  var __isLeapYear=env.__isLeapYear;
  var _abort=env._abort;
  var _atexit=env._atexit;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _exit=env._exit;
  var _getenv=env._getenv;
  var _gettimeofday=env._gettimeofday;
  var _llvm_stackrestore=env._llvm_stackrestore;
  var _llvm_stacksave=env._llvm_stacksave;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _pthread_getspecific=env._pthread_getspecific;
  var _pthread_key_create=env._pthread_key_create;
  var _pthread_once=env._pthread_once;
  var _pthread_setspecific=env._pthread_setspecific;
  var _strftime=env._strftime;
  var _strftime_l=env._strftime_l;
  var _time=env._time;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function __Z9onlineHFMiPPcPNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$012$us$i = 0, $$0229968 = 0, $$0230972 = 0, $$0231982 = 0, $$0232980 = 0, $$0233977 = 0, $$0234975 = 0, $$0235985 = 0, $$0236989 = 0, $$02731007 = 0, $$02771002 = 0, $$02771002$us = 0, $$0278997 = 0, $$0278997$us = 0, $$0280994 = 0, $$0967 = 0, $$1276 = 0, $$pre$phi1081Z2D = 0, $$pre$phi9$i$iZ2D = 0, $$pre1061 = 0, $$pre1062 = 0, $$pre1064 = 0, $10 = 0, $1004 = 0, $1006 = 0, $101 = 0, $1030 = 0, $1035 = 0, $1039 = 0, $1046 = 0, $1048 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1061 = 0, $1063 = 0, $1070 = 0, $1072 = 0, $1079 = 0, $1081 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1087 = 0, $1089 = 0, $1090 = 0, $1097 = 0, $1098 = 0, $11 = 0, $1100 = 0, $1101 = 0, $1108 = 0, $1110 = 0, $1117 = 0, $1119 = 0, $112 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1125 = 0, $1127 = 0, $1128 = 0, $1135 = 0, $1136 = 0, $1138 = 0, $1146 = 0, $1148 = 0, $1155 = 0, $1156 = 0, $1158 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1164 = 0, $1166 = 0, $1167 = 0, $1174 = 0, $1175 = 0, $1177 = 0, $1179 = 0, $1180 = 0, $1184 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $12 = 0, $124 = 0, $129 = 0, $13 = 0, $133 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $14 = 0, $142 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $154 = 0, $155 = 0, $157 = 0, $159 = 0, $16 = 0, $160 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $172 = 0, $173 = 0, $174 = 0, $176 = 0, $178 = 0, $179 = 0, $18 = 0, $186 = 0, $188 = 0, $19 = 0, $193 = 0, $197 = 0, $20 = 0, $202 = 0, $203 = 0, $204 = 0, $206 = 0, $209 = 0, $21 = 0, $212 = 0, $214 = 0, $215 = 0, $219 = 0, $22 = 0, $225 = 0, $227 = 0, $228 = 0, $23 = 0, $230 = 0, $232 = 0, $233 = 0, $234 = 0, $236 = 0, $238 = 0, $239 = 0, $246 = 0, $247 = 0, $249 = 0, $250 = 0, $252 = 0, $253 = 0, $257 = 0, $260 = 0, $262 = 0, $267 = 0, $271 = 0, $272 = 0, $273 = 0, $275 = 0, $276 = 0, $28 = 0, $281 = 0, $283 = 0, $284 = 0, $287 = 0, $289 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $297 = 0, $301 = 0, $303 = 0, $306 = 0, $307 = 0, $309 = 0, $312 = 0, $314 = 0, $315 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $322 = 0, $33 = 0, $334 = 0, $339 = 0, $340 = 0, $342 = 0, $347 = 0, $351 = 0, $352 = 0, $359 = 0, $36 = 0, $364 = 0, $369 = 0, $373 = 0, $376 = 0, $377 = 0, $378 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $386 = 0, $391 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $399 = 0, $4 = 0, $408 = 0, $41 = 0, $412 = 0, $414 = 0, $429 = 0, $433 = 0, $443 = 0, $45 = 0, $450 = 0, $451 = 0, $457 = 0, $462 = 0, $466 = 0, $468 = 0, $473 = 0, $477 = 0, $479 = 0, $484 = 0, $488 = 0, $49 = 0, $490 = 0, $495 = 0, $499 = 0, $5 = 0, $501 = 0, $506 = 0, $510 = 0, $512 = 0, $517 = 0, $521 = 0, $526 = 0, $53 = 0, $530 = 0, $531 = 0, $537 = 0, $538 = 0, $539 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $553 = 0, $557 = 0, $561 = 0, $569 = 0, $572 = 0, $58 = 0, $580 = 0, $595 = 0, $597 = 0, $598 = 0, $6 = 0, $606 = 0, $609 = 0, $611 = 0, $614 = 0, $617 = 0, $618 = 0, $619 = 0, $625 = 0, $626 = 0, $627 = 0, $629 = 0, $63 = 0, $630 = 0, $632 = 0, $634 = 0, $637 = 0, $645 = 0, $658 = 0, $665 = 0, $67 = 0, $671 = 0, $673 = 0, $678 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $690 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $725 = 0, $727 = 0, $728 = 0, $744 = 0, $751 = 0, $76 = 0, $761 = 0, $772 = 0, $781 = 0, $784 = 0, $785 = 0, $790 = 0, $797 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $805 = 0, $807 = 0, $81 = 0, $815 = 0, $817 = 0, $821 = 0, $824 = 0, $83 = 0, $836 = 0, $837 = 0, $840 = 0, $848 = 0, $850 = 0, $858 = 0, $860 = 0, $864 = 0, $867 = 0, $87 = 0, $880 = 0, $887 = 0, $891 = 0, $892 = 0, $9 = 0, $90 = 0, $908 = 0, $910 = 0, $935 = 0, $94 = 0, $940 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $968 = 0, $979 = 0, $983 = 0, $987 = 0, $988 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 3136 | 0;
 $4 = sp + 2624 | 0;
 $5 = sp + 80 | 0;
 $6 = sp + 3088 | 0;
 $7 = sp + 3072 | 0;
 $8 = sp + 3124 | 0;
 $9 = sp + 3112 | 0;
 $10 = sp + 72 | 0;
 $11 = sp + 3024 | 0;
 $12 = sp + 3012 | 0;
 $13 = sp + 3100 | 0;
 $14 = sp + 2912 | 0;
 $15 = sp + 2900 | 0;
 $16 = sp + 2888 | 0;
 $17 = sp + 2876 | 0;
 $18 = sp + 2864 | 0;
 $19 = sp + 2852 | 0;
 $20 = sp + 2840 | 0;
 $21 = sp + 2696 | 0;
 $22 = sp;
 HEAP32[7580] = 1;
 $23 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21493, 36) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $23 + (HEAP32[(HEAP32[$23 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $28 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 28 >> 2] & 63]($28, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($23, $32) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($23) | 0;
 $33 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21530, 20) | 0;
 $36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($33, HEAP32[7580] | 0) | 0, 21551, 10) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $36 + (HEAP32[(HEAP32[$36 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $41 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$41 >> 2] | 0) + 28 >> 2] & 63]($41, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($36, $45) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($36) | 0;
 $49 = $5 + 12 | 0;
 HEAP8[$49 + 4 >> 0] = 0;
 HEAP32[$5 + 8 >> 2] = 2;
 HEAP8[$5 + 15 >> 0] = 0;
 HEAP8[$49 >> 0] = 1;
 HEAP8[$5 + 13 >> 0] = 1;
 HEAP8[$5 + 14 >> 0] = 0;
 HEAP32[$5 >> 2] = 3668;
 $53 = $5 + 36 | 0;
 HEAP32[$53 >> 2] = _time(0) | 0;
 HEAP8[$5 + 40 >> 0] = 0;
 HEAP8[$5 + 32 >> 0] = 0;
 HEAPF64[$5 + 24 >> 3] = 0.0;
 HEAP32[$5 >> 2] = 3752;
 _time(0) | 0;
 $58 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEl(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 15878, 7) | 0, 1) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $58 + (HEAP32[(HEAP32[$58 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $63 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $67 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$63 >> 2] | 0) + 28 >> 2] & 63]($63, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($58, $67) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($58) | 0;
 _srand(1);
 HEAP32[$53 >> 2] = 1;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 511]($5);
 $71 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 15886, 11) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $71 + (HEAP32[(HEAP32[$71 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $76 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $80 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$76 >> 2] | 0) + 28 >> 2] & 63]($76, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($71, $80) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($71) | 0;
 HEAP32[$6 >> 2] = 0;
 $81 = $6 + 4 | 0;
 HEAP32[$81 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $83 = __Znwj(48) | 0;
 HEAP32[$4 >> 2] = $83;
 HEAP32[$4 + 8 >> 2] = -2147483600;
 HEAP32[$4 + 4 >> 2] = 46;
 dest = $83;
 src = 21562;
 stop = dest + 46 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$83 + 46 >> 0] = 0;
 $87 = $6 + 8 | 0;
 __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($6, $4);
 if ((HEAP8[$4 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $90 = __Znwj(48) | 0;
 HEAP32[$4 >> 2] = $90;
 HEAP32[$4 + 8 >> 2] = -2147483600;
 HEAP32[$4 + 4 >> 2] = 45;
 dest = $90;
 src = 21609;
 stop = dest + 45 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$90 + 45 >> 0] = 0;
 $94 = HEAP32[$81 >> 2] | 0;
 if ($94 >>> 0 < (HEAP32[$87 >> 2] | 0) >>> 0) {
  HEAP32[$94 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$94 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$94 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 12;
 } else {
  __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($6, $4);
  if ((HEAP8[$4 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
 };
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $101 = __Znwj(48) | 0;
 HEAP32[$4 >> 2] = $101;
 HEAP32[$4 + 8 >> 2] = -2147483600;
 HEAP32[$4 + 4 >> 2] = 45;
 dest = $101;
 src = 21655;
 stop = dest + 45 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$101 + 45 >> 0] = 0;
 $105 = HEAP32[$81 >> 2] | 0;
 if ($105 >>> 0 < (HEAP32[$87 >> 2] | 0) >>> 0) {
  HEAP32[$105 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$105 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$105 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 12;
 } else {
  __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($6, $4);
  if ((HEAP8[$4 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
 };
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $112 = __Znwj(48) | 0;
 HEAP32[$4 >> 2] = $112;
 HEAP32[$4 + 8 >> 2] = -2147483600;
 HEAP32[$4 + 4 >> 2] = 45;
 dest = $112;
 src = 21701;
 stop = dest + 45 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$112 + 45 >> 0] = 0;
 $116 = HEAP32[$81 >> 2] | 0;
 if ($116 >>> 0 < (HEAP32[$87 >> 2] | 0) >>> 0) {
  HEAP32[$116 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$116 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$116 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 12;
 } else {
  __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($6, $4);
  if ((HEAP8[$4 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
 }
 $124 = __ZN8optframelsINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEERNS1_13basic_ostreamIcS4_EESA_RKNS1_6vectorIT_NS5_ISC_EEEE(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21747, 26) | 0, $6) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $124 + (HEAP32[(HEAP32[$124 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $129 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $133 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$129 >> 2] | 0) + 28 >> 2] & 63]($129, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($124, $133) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($124) | 0;
 HEAP32[$7 >> 2] = 3880;
 $134 = $7 + 4 | 0;
 HEAP32[$134 >> 2] = 0;
 $135 = $7 + 8 | 0;
 HEAP32[$135 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 do if (!$3) {
  __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_($9, $6);
  __ZN3HFM14treatForecastsC2ENSt3__26vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE($4, $9);
  $225 = $4 + 8 | 0;
  __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($7 + 4 | 0, HEAP32[$4 + 4 >> 2] | 0, HEAP32[$225 >> 2] | 0);
  HEAP32[$4 >> 2] = 3880;
  $227 = $4 + 4 | 0;
  $228 = HEAP32[$227 >> 2] | 0;
  if ($228 | 0) {
   $230 = HEAP32[$225 >> 2] | 0;
   if (($230 | 0) == ($228 | 0)) $246 = $228; else {
    $233 = $230;
    while (1) {
     $232 = $233 + -12 | 0;
     HEAP32[$225 >> 2] = $232;
     $234 = HEAP32[$232 >> 2] | 0;
     if (!$234) $236 = $232; else {
      $238 = $233 + -8 | 0;
      $239 = HEAP32[$238 >> 2] | 0;
      if (($239 | 0) != ($234 | 0)) HEAP32[$238 >> 2] = $239 + (~(($239 + -8 - $234 | 0) >>> 3) << 3);
      __ZdlPv($234);
      $236 = HEAP32[$225 >> 2] | 0;
     }
     if (($236 | 0) == ($228 | 0)) break; else $233 = $236;
    }
    $246 = HEAP32[$227 >> 2] | 0;
   }
   __ZdlPv($246);
  }
  $247 = HEAP32[$9 >> 2] | 0;
  if ($247 | 0) {
   $249 = $9 + 4 | 0;
   $250 = HEAP32[$249 >> 2] | 0;
   if (($250 | 0) == ($247 | 0)) $260 = $247; else {
    $253 = $250;
    while (1) {
     $252 = $253 + -12 | 0;
     HEAP32[$249 >> 2] = $252;
     if ((HEAP8[$252 + 11 >> 0] | 0) < 0) {
      __ZdlPv(HEAP32[$252 >> 2] | 0);
      $257 = HEAP32[$249 >> 2] | 0;
     } else $257 = $252;
     if (($257 | 0) == ($247 | 0)) break; else $253 = $257;
    }
    $260 = HEAP32[$9 >> 2] | 0;
   }
   __ZdlPv($260);
  }
 } else {
  __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2ERKS5_($8, $3);
  HEAP32[$4 >> 2] = 3880;
  $138 = $4 + 4 | 0;
  HEAP32[$138 >> 2] = 0;
  $139 = $4 + 8 | 0;
  HEAP32[$139 >> 2] = 0;
  HEAP32[$4 + 12 >> 2] = 0;
  $142 = $8 + 4 | 0;
  __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($138, HEAP32[$8 >> 2] | 0, HEAP32[$142 >> 2] | 0);
  __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($7 + 4 | 0, HEAP32[$4 + 4 >> 2] | 0, HEAP32[$139 >> 2] | 0);
  HEAP32[$4 >> 2] = 3880;
  $148 = $4 + 4 | 0;
  $149 = HEAP32[$148 >> 2] | 0;
  if ($149 | 0) {
   $151 = HEAP32[$139 >> 2] | 0;
   if (($151 | 0) == ($149 | 0)) $167 = $149; else {
    $154 = $151;
    while (1) {
     $153 = $154 + -12 | 0;
     HEAP32[$139 >> 2] = $153;
     $155 = HEAP32[$153 >> 2] | 0;
     if (!$155) $157 = $153; else {
      $159 = $154 + -8 | 0;
      $160 = HEAP32[$159 >> 2] | 0;
      if (($160 | 0) != ($155 | 0)) HEAP32[$159 >> 2] = $160 + (~(($160 + -8 - $155 | 0) >>> 3) << 3);
      __ZdlPv($155);
      $157 = HEAP32[$139 >> 2] | 0;
     }
     if (($157 | 0) == ($149 | 0)) break; else $154 = $157;
    }
    $167 = HEAP32[$148 >> 2] | 0;
   }
   __ZdlPv($167);
  }
  $168 = HEAP32[$8 >> 2] | 0;
  if ($168 | 0) {
   $170 = HEAP32[$142 >> 2] | 0;
   if (($170 | 0) == ($168 | 0)) $186 = $168; else {
    $173 = $170;
    while (1) {
     $172 = $173 + -12 | 0;
     HEAP32[$142 >> 2] = $172;
     $174 = HEAP32[$172 >> 2] | 0;
     if (!$174) $176 = $172; else {
      $178 = $173 + -8 | 0;
      $179 = HEAP32[$178 >> 2] | 0;
      if (($179 | 0) != ($174 | 0)) HEAP32[$178 >> 2] = $179 + (~(($179 + -8 - $174 | 0) >>> 3) << 3);
      __ZdlPv($174);
      $176 = HEAP32[$142 >> 2] | 0;
     }
     if (($176 | 0) == ($168 | 0)) break; else $173 = $176;
    }
    $186 = HEAP32[$8 >> 2] | 0;
   }
   __ZdlPv($186);
  }
  $188 = __ZN8optframelsINSt3__26vectorIdNS1_9allocatorIdEEEEEERNS1_13basic_ostreamIcNS1_11char_traitsIcEEEESA_RKNS2_IT_NS3_ISB_EEEE(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21774, 17) | 0, $3) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $188 + (HEAP32[(HEAP32[$188 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $193 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $197 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$193 >> 2] | 0) + 28 >> 2] & 63]($193, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($188, $197) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($188) | 0;
  $202 = ((HEAP32[$3 + 4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0) / 12 | 0;
  $203 = HEAP32[$81 >> 2] | 0;
  $204 = HEAP32[$6 >> 2] | 0;
  $206 = ($203 - $204 | 0) / 12 | 0;
  $209 = $203;
  if ($202 >>> 0 > $206 >>> 0) {
   __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE8__appendEj($6, $202 - $206 | 0);
   break;
  }
  if ($202 >>> 0 < $206 >>> 0) {
   $212 = $204 + ($202 * 12 | 0) | 0;
   if (($209 | 0) != ($212 | 0)) {
    $215 = $209;
    while (1) {
     $214 = $215 + -12 | 0;
     HEAP32[$81 >> 2] = $214;
     if ((HEAP8[$214 + 11 >> 0] | 0) < 0) {
      __ZdlPv(HEAP32[$214 >> 2] | 0);
      $219 = HEAP32[$81 >> 2] | 0;
     } else $219 = $214;
     if (($219 | 0) == ($212 | 0)) break; else $215 = $219;
    }
   }
  }
 } while (0);
 $262 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21792, 27) | 0, 10) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $262 + (HEAP32[(HEAP32[$262 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $267 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $271 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$267 >> 2] | 0) + 28 >> 2] & 63]($267, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($262, $271) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($262) | 0;
 HEAPF64[$10 >> 3] = -1.0;
 $272 = $11 + 28 | 0;
 HEAP32[$272 >> 2] = 0;
 $273 = $11 + 32 | 0;
 HEAP32[$273 >> 2] = 0;
 HEAP32[$11 + 36 >> 2] = 0;
 $275 = $11 + 40 | 0;
 HEAP32[$275 >> 2] = -1;
 $276 = $11 + 44 | 0;
 HEAP32[$276 >> 2] = -1;
 HEAP32[$11 >> 2] = -1;
 HEAP32[$11 + 4 >> 2] = -1;
 HEAP32[$11 + 8 >> 2] = -1;
 HEAP32[$11 + 12 >> 2] = -1;
 HEAP32[$11 + 16 >> 2] = -1;
 HEAP32[$11 + 20 >> 2] = -1;
 HEAP32[$11 + 24 >> 2] = -1;
 HEAPF64[$4 >> 3] = -1.0;
 __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($272, $4);
 HEAP32[$11 + 4 >> 2] = 100;
 HEAP32[$11 + 8 >> 2] = 600;
 HEAP32[$11 >> 2] = 1e4;
 HEAP32[$11 + 20 >> 2] = 2;
 HEAP32[$11 + 24 >> 2] = 10;
 HEAP32[$12 >> 2] = 0;
 $281 = $12 + 4 | 0;
 HEAP32[$281 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $283 = HEAP32[$81 >> 2] | 0;
 $284 = HEAP32[$6 >> 2] | 0;
 if (($283 - $284 | 0) > 0) {
  $287 = $12 + 8 | 0;
  $$02731007 = 0;
  $1188 = $284;
  $1189 = $283;
  $307 = 0;
  $309 = 0;
  while (1) {
   if (($307 | 0) == ($309 | 0)) {
    __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($12, $10);
    $314 = HEAP32[$6 >> 2] | 0;
    $315 = HEAP32[$81 >> 2] | 0;
   } else {
    HEAPF64[$307 >> 3] = +HEAPF64[$10 >> 3];
    HEAP32[$281 >> 2] = $307 + 8;
    $314 = $1188;
    $315 = $1189;
   }
   $312 = $$02731007 + 1 | 0;
   if (($312 | 0) >= (($315 - $314 | 0) / 12 | 0 | 0)) break;
   $$02731007 = $312;
   $1188 = $314;
   $1189 = $315;
   $307 = HEAP32[$281 >> 2] | 0;
   $309 = HEAP32[$287 >> 2] | 0;
  }
  $$pre1061 = HEAP32[$12 >> 2] | 0;
  $$pre$phi1081Z2D = $281;
  $292 = $$pre1061;
  $293 = HEAP32[$281 >> 2] | 0;
  $301 = $$pre1061;
 } else {
  $$pre$phi1081Z2D = $281;
  $292 = 0;
  $293 = 0;
  $301 = 0;
 }
 HEAP32[$13 >> 2] = 0;
 $289 = $13 + 4 | 0;
 HEAP32[$289 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $291 = $293 - $292 | 0;
 $294 = $291 >> 3;
 if (!$294) {
  $318 = 0;
  $319 = 0;
 } else {
  if ($294 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($13);
  $297 = __Znwj($291) | 0;
  HEAP32[$289 >> 2] = $297;
  HEAP32[$13 >> 2] = $297;
  HEAP32[$13 + 8 >> 2] = $297 + ($294 << 3);
  $303 = (HEAP32[$$pre$phi1081Z2D >> 2] | 0) - $301 | 0;
  if (($303 | 0) > 0) {
   $306 = $297 + ($303 >>> 3 << 3) | 0;
   _memcpy($297 | 0, $301 | 0, $303 | 0) | 0;
   HEAP32[$289 >> 2] = $306;
   $318 = $297;
   $319 = $306;
  } else {
   $318 = $297;
   $319 = $297;
  }
 }
 __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($272, $318, $319);
 $320 = HEAP32[$13 >> 2] | 0;
 if ($320 | 0) {
  $322 = HEAP32[$289 >> 2] | 0;
  if (($322 | 0) != ($320 | 0)) HEAP32[$289 >> 2] = $322 + (~(($322 + -8 - $320 | 0) >>> 3) << 3);
  __ZdlPv($320);
 }
 HEAP32[$276 >> 2] = 0;
 HEAP32[$275 >> 2] = 0;
 __ZN3HFM17ProblemParametersC2Ei($14, ((HEAP32[$81 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0) / 12 | 0);
 HEAP32[$14 + 8 >> 2] = 5;
 $334 = HEAP32[$134 >> 2] | 0;
 $339 = (HEAP32[$334 + 4 >> 2] | 0) - (HEAP32[$334 >> 2] | 0) >> 3;
 $340 = $339 + -5 | 0;
 $342 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21399, 17) | 0, 10.0) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $342 + (HEAP32[(HEAP32[$342 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $347 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $351 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$347 >> 2] | 0) + 28 >> 2] & 63]($347, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($342, $351) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($342) | 0;
 $352 = $339 + -10 | 0;
 $359 = ~~+Math_ceil(+(+(~~(+($352 | 0) * 10.0 / 100.0) | 0)));
 $$ = ((($359 | 0) > ($352 | 0)) << 31 >> 31) + $359 | 0;
 $$1276 = ($$ | 0) > 1 ? $$ : 1;
 $364 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21820, 23) | 0, $$1276) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $364 + (HEAP32[(HEAP32[$364 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $369 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $373 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$369 >> 2] | 0) + 28 >> 2] & 63]($369, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($364, $373) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($364) | 0;
 $376 = (HEAP32[$81 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $377 = ($376 | 0) > 0;
 L110 : do if ($377) {
  $378 = $14 + 28 | 0;
  $381 = HEAP32[$378 >> 2] | 0;
  $382 = (HEAP32[$14 + 32 >> 2] | 0) - $381 | 0;
  $383 = $382 >> 2;
  $384 = $381;
  $386 = ($376 | 0) / 12 | 0;
  L112 : do if (($382 | 0) > 0) {
   $$02771002$us = 0;
   while (1) {
    if (($383 | 0) <= ($$02771002$us | 0)) {
     label = 87;
     break;
    }
    if ($383 >>> 0 <= $$02771002$us >>> 0) {
     label = 89;
     break;
    }
    HEAP32[$384 + ($$02771002$us << 2) >> 2] = $$1276;
    $$02771002$us = $$02771002$us + 1 | 0;
    if (($$02771002$us | 0) >= ($386 | 0)) break L112;
   }
   if ((label | 0) == 87) ___assert_fail(15898, 15934, 135, 21844); else if ((label | 0) == 89) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($378);
  } else {
   $$02771002 = 0;
   while (1) {
    if (($383 | 0) <= ($$02771002 | 0)) {
     label = 87;
     break;
    }
    if ($383 >>> 0 <= $$02771002 >>> 0) {
     label = 89;
     break;
    }
    HEAP32[$384 + ($$02771002 << 2) >> 2] = $$1276;
    $$02771002 = $$02771002 + 1 | 0;
    if (($$02771002 | 0) >= ($386 | 0)) break L112;
   }
   if ((label | 0) == 87) ___assert_fail(15898, 15934, 135, 21844); else if ((label | 0) == 89) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($378);
  } while (0);
  if ($377) {
   $391 = $14 + 40 | 0;
   $394 = HEAP32[$391 >> 2] | 0;
   $395 = (HEAP32[$14 + 44 >> 2] | 0) - $394 | 0;
   $396 = $395 >> 2;
   $397 = $394;
   $399 = ($376 | 0) / 12 | 0;
   if (($395 | 0) > 0) {
    $$0278997$us = 0;
    while (1) {
     if (($396 | 0) <= ($$0278997$us | 0)) {
      label = 95;
      break;
     }
     if ($396 >>> 0 <= $$0278997$us >>> 0) {
      label = 97;
      break;
     }
     HEAP32[$397 + ($$0278997$us << 2) >> 2] = $$0278997$us;
     $$0278997$us = $$0278997$us + 1 | 0;
     if (($$0278997$us | 0) >= ($399 | 0)) break L110;
    }
    if ((label | 0) == 95) ___assert_fail(21854, 15934, 120, 21895); else if ((label | 0) == 97) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($391);
   } else {
    $$0278997 = 0;
    while (1) {
     if (($396 | 0) <= ($$0278997 | 0)) {
      label = 95;
      break;
     }
     if ($396 >>> 0 <= $$0278997 >>> 0) {
      label = 97;
      break;
     }
     HEAP32[$397 + ($$0278997 << 2) >> 2] = $$0278997;
     $$0278997 = $$0278997 + 1 | 0;
     if (($$0278997 | 0) >= ($399 | 0)) break L110;
    }
    if ((label | 0) == 95) ___assert_fail(21854, 15934, 120, 21895); else if ((label | 0) == 97) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($391);
   }
  }
 } while (0);
 $408 = $14 + 92 | 0;
 if ((HEAP32[$408 >> 2] | 0) > 1) {
  $412 = HEAP32[$14 + 88 >> 2] | 0;
  $$012$us$i = 1;
  do {
   $414 = $412 + ($$012$us$i >>> 5 << 2) | 0;
   HEAP32[$414 >> 2] = 1 << ($$012$us$i & 31) | HEAP32[$414 >> 2];
   $$012$us$i = $$012$us$i + 1 | 0;
  } while (($$012$us$i | 0) < (HEAP32[$408 >> 2] | 0));
 }
 $429 = HEAP32[$14 + 28 >> 2] | 0;
 if (((HEAP32[$14 + 32 >> 2] | 0) - $429 | 0) <= 0) ___assert_fail(15898, 15934, 149, 15973);
 $433 = HEAP32[$429 >> 2] | 0;
 HEAP32[33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) + 8 >> 2] = 9;
 $443 = 33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[$443 >> 2] = HEAP32[$443 >> 2] & -261 | 4;
 $450 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21475, 17) | 0;
 $451 = HEAP32[$134 >> 2] | 0;
 $457 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($450, (HEAP32[$451 + 4 >> 2] | 0) - (HEAP32[$451 >> 2] | 0) >> 3) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $457 + (HEAP32[(HEAP32[$457 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $462 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $466 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$462 >> 2] | 0) + 28 >> 2] & 63]($462, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($457, $466) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($457) | 0;
 $468 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21417, 33) | 0, $340) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $468 + (HEAP32[(HEAP32[$468 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $473 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $477 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$473 >> 2] | 0) + 28 >> 2] & 63]($473, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($468, $477) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($468) | 0;
 $479 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21362, 22) | 0, 0) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $479 + (HEAP32[(HEAP32[$479 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $484 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $488 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$484 >> 2] | 0) + 28 >> 2] & 63]($484, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($479, $488) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($479) | 0;
 $490 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21451, 7) | 0, +($340 - $433 | 0) / 5.0) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $490 + (HEAP32[(HEAP32[$490 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $495 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $499 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$495 >> 2] | 0) + 28 >> 2] & 63]($495, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($490, $499) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($490) | 0;
 $501 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21459, 13) | 0, $433) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $501 + (HEAP32[(HEAP32[$501 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $506 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $510 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$506 >> 2] | 0) + 28 >> 2] & 63]($506, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($501, $510) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($501) | 0;
 $512 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21385, 13) | 0, 5) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $512 + (HEAP32[(HEAP32[$512 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $517 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $521 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$517 >> 2] | 0) + 28 >> 2] & 63]($517, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($512, $521) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($512) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $512 + (HEAP32[(HEAP32[$512 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $526 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $530 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$526 >> 2] | 0) + 28 >> 2] & 63]($526, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($512, $530) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($512) | 0;
 HEAP32[$15 >> 2] = 0;
 $531 = $15 + 4 | 0;
 HEAP32[$531 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 if (((HEAP32[$81 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0) > 0) {
  $537 = $15 + 8 | 0;
  $538 = $4 + 4 | 0;
  $539 = $4 + 8 | 0;
  $$0280994 = 0;
  do {
   __ZN3HFM14treatForecasts27getPartsForecastsEndToBeginEiii($4, $7, $$0280994, 5, $340);
   $569 = HEAP32[$531 >> 2] | 0;
   if ($569 >>> 0 < (HEAP32[$537 >> 2] | 0) >>> 0) {
    HEAP32[$569 >> 2] = 0;
    $572 = $569 + 4 | 0;
    HEAP32[$572 >> 2] = 0;
    HEAP32[$569 + 8 >> 2] = 0;
    HEAP32[$569 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$572 >> 2] = HEAP32[$538 >> 2];
    HEAP32[$569 + 8 >> 2] = HEAP32[$539 >> 2];
    HEAP32[$539 >> 2] = 0;
    HEAP32[$538 >> 2] = 0;
    HEAP32[$4 >> 2] = 0;
    HEAP32[$531 >> 2] = $569 + 12;
   } else {
    __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_($15, $4);
    $$pre1062 = HEAP32[$4 >> 2] | 0;
    if ($$pre1062 | 0) {
     $580 = HEAP32[$538 >> 2] | 0;
     if (($580 | 0) != ($$pre1062 | 0)) HEAP32[$538 >> 2] = $580 + (~(($580 + -8 - $$pre1062 | 0) >>> 3) << 3);
     __ZdlPv($$pre1062);
    }
   }
   $$0280994 = $$0280994 + 1 | 0;
  } while (($$0280994 | 0) < (((HEAP32[$81 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0) / 12 | 0 | 0));
 }
 $540 = __Znwj(32) | 0;
 HEAP32[$540 >> 2] = 6156;
 $541 = $540 + 4 | 0;
 HEAP32[$541 >> 2] = 0;
 HEAP32[$541 + 4 >> 2] = 0;
 HEAP32[$541 + 8 >> 2] = 0;
 HEAP32[$541 + 12 >> 2] = 0;
 HEAP32[$541 + 16 >> 2] = 0;
 HEAP32[$541 + 20 >> 2] = 0;
 HEAP8[$541 + 24 >> 0] = 0;
 $542 = __Znwj(244) | 0;
 __ZN3HFM13ForecastClassC2ERNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEERNS_17ProblemParametersERN8optframe7RandGenERNS_9HFMParamsE($542, $15, $14, $5, $11);
 $543 = __Znwj(40) | 0;
 HEAP8[$543 + 16 >> 0] = 0;
 HEAP32[$543 + 8 >> 2] = 2;
 HEAP8[$543 + 15 >> 0] = 0;
 HEAP8[$543 + 12 >> 0] = 1;
 HEAP8[$543 + 13 >> 0] = 1;
 HEAP8[$543 + 14 >> 0] = 0;
 HEAP32[$543 >> 2] = 3836;
 HEAPF64[$543 + 24 >> 3] = 10.0;
 HEAPF64[$543 + 32 >> 3] = 0.0;
 $553 = HEAP32[$542 + 68 >> 2] | 0;
 $557 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$553 >> 2] | 0) + 36 >> 2] & 31]($553, $543, 0, 0) | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$543 >> 2] | 0) + 4 >> 2] & 511]($543);
 __ZN3HFM13ForecastClass31addSolToParetoWithParetoManagerERN8optframe6ParetoI6RepHFMiEERKNS1_8SolutionIS3_iEE($542, $540, $557);
 $561 = __ZN3HFM13ForecastClass17runMultiObjSearchEdPN8optframe6ParetoI6RepHFMiEE($542, 10.0, $540) | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$540 >> 2] | 0) + 8 >> 2] & 511]($540);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$542 >> 2] | 0) + 4 >> 2] & 511]($542);
 if ($557 | 0) {
  HEAP32[$557 + 32 >> 2] = 4920;
  $595 = HEAP32[$557 + 72 >> 2] | 0;
  if ($595 | 0) {
   $597 = $557 + 76 | 0;
   $598 = HEAP32[$597 >> 2] | 0;
   if (($598 | 0) != ($595 | 0)) HEAP32[$597 >> 2] = $598 + (~(($598 + -16 - $595 | 0) >>> 4) << 4);
   __ZdlPv($595);
  }
  HEAP32[$557 >> 2] = 5136;
  $606 = HEAP32[$557 + 20 >> 2] | 0;
  if ($606 | 0) {
   __ZN6RepHFMD2Ev($606);
   __ZdlPv($606);
  }
  $609 = HEAP32[$557 + 24 >> 2] | 0;
  if ($609 | 0) __ZdlPv($609);
  __ZdlPv($557);
 }
 $611 = __Znwj(244) | 0;
 __ZN3HFM13ForecastClassC2ERNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEERNS_17ProblemParametersERN8optframe7RandGenERNS_9HFMParamsE($611, $15, $14, $5, $11);
 __ZNSt3__26vectorIPN8optframe15MultiEvaluationENS_9allocatorIS3_EEEC2ERKS6_($16, $561 + 16 | 0);
 __ZNSt3__26vectorIPN8optframe8SolutionI6RepHFMiEENS_9allocatorIS5_EEEC2ERKS8_($17, $561 + 4 | 0);
 $614 = $16 + 4 | 0;
 $617 = (HEAP32[$614 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) | 0;
 $618 = $617 >> 2;
 HEAP32[$18 >> 2] = 0;
 $619 = $18 + 4 | 0;
 HEAP32[$619 >> 2] = 0;
 HEAP32[$18 + 8 >> 2] = 0;
 if (((HEAP32[$81 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0) > 0) {
  $625 = $18 + 8 | 0;
  $626 = $4 + 4 | 0;
  $627 = $4 + 8 | 0;
  $$0236989 = 0;
  do {
   __ZN3HFM14treatForecasts27getPartsForecastsEndToBeginEiii($4, $7, $$0236989, 5, $433);
   $634 = HEAP32[$619 >> 2] | 0;
   if ($634 >>> 0 < (HEAP32[$625 >> 2] | 0) >>> 0) {
    HEAP32[$634 >> 2] = 0;
    $637 = $634 + 4 | 0;
    HEAP32[$637 >> 2] = 0;
    HEAP32[$634 + 8 >> 2] = 0;
    HEAP32[$634 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$637 >> 2] = HEAP32[$626 >> 2];
    HEAP32[$634 + 8 >> 2] = HEAP32[$627 >> 2];
    HEAP32[$627 >> 2] = 0;
    HEAP32[$626 >> 2] = 0;
    HEAP32[$4 >> 2] = 0;
    HEAP32[$619 >> 2] = $634 + 12;
   } else {
    __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_($18, $4);
    $$pre1064 = HEAP32[$4 >> 2] | 0;
    if ($$pre1064 | 0) {
     $645 = HEAP32[$626 >> 2] | 0;
     if (($645 | 0) != ($$pre1064 | 0)) HEAP32[$626 >> 2] = $645 + (~(($645 + -8 - $$pre1064 | 0) >>> 3) << 3);
     __ZdlPv($$pre1064);
    }
   }
   $$0236989 = $$0236989 + 1 | 0;
  } while (($$0236989 | 0) < (((HEAP32[$81 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0) / 12 | 0 | 0));
 }
 $629 = HEAP32[$14 + 84 >> 2] | 0;
 HEAP32[$19 >> 2] = 0;
 $630 = $19 + 4 | 0;
 HEAP32[$630 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 __ZN3HFM14treatForecasts27getPartsForecastsEndToBeginEiii($4, $7, $629, 0, 5);
 $632 = HEAP32[$19 >> 2] | 0;
 if (!$632) $$pre$phi9$i$iZ2D = $19 + 8 | 0; else {
  $658 = HEAP32[$630 >> 2] | 0;
  if (($658 | 0) != ($632 | 0)) HEAP32[$630 >> 2] = $658 + (~(($658 + -8 - $632 | 0) >>> 3) << 3);
  __ZdlPv($632);
  $665 = $19 + 8 | 0;
  HEAP32[$665 >> 2] = 0;
  HEAP32[$630 >> 2] = 0;
  HEAP32[$19 >> 2] = 0;
  $$pre$phi9$i$iZ2D = $665;
 }
 HEAP32[$19 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$630 >> 2] = HEAP32[$4 + 4 >> 2];
 HEAP32[$$pre$phi9$i$iZ2D >> 2] = HEAP32[$4 + 8 >> 2];
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$20 >> 2] = 0;
 $671 = $20 + 4 | 0;
 HEAP32[$671 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 $673 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21910, 46) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $673 + (HEAP32[(HEAP32[$673 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $678 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $682 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$678 >> 2] | 0) + 28 >> 2] & 63]($678, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($673, $682) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($673) | 0;
 $683 = $21 + 64 | 0;
 $684 = $21 + 8 | 0;
 HEAP32[$684 >> 2] = 3472;
 $685 = $21 + 12 | 0;
 HEAP32[$21 >> 2] = 404;
 HEAP32[$683 >> 2] = 424;
 HEAP32[$21 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($21 + 64 | 0, $685);
 HEAP32[$21 + 136 >> 2] = 0;
 HEAP32[$21 + 140 >> 2] = -1;
 HEAP32[$21 >> 2] = 3452;
 HEAP32[$683 >> 2] = 3492;
 HEAP32[$684 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($685);
 HEAP32[$685 >> 2] = 3548;
 $690 = $21 + 44 | 0;
 HEAP32[$690 >> 2] = 0;
 HEAP32[$690 + 4 >> 2] = 0;
 HEAP32[$690 + 8 >> 2] = 0;
 HEAP32[$690 + 12 >> 2] = 0;
 HEAP32[$21 + 60 >> 2] = 24;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($685, $4);
 if ((HEAP8[$4 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
 $696 = ($617 | 0) > 0;
 L204 : do if ($696) {
  $697 = $611 + 24 | 0;
  $698 = $611 + 8 | 0;
  $699 = $21 + 8 | 0;
  $700 = $20 + 8 | 0;
  $701 = $22 + 15 | 0;
  $702 = $22 + 14 | 0;
  $703 = $22 + 13 | 0;
  $704 = $22 + 12 | 0;
  $705 = $22 + 8 | 0;
  $706 = $704 + 4 | 0;
  $707 = $22 + 24 | 0;
  $708 = $22 + 32 | 0;
  $709 = $22 + 40 | 0;
  $710 = $22 + 52 | 0;
  $711 = $22 + 56 | 0;
  $712 = $22 + 57 | 0;
  $713 = $22 + 64 | 0;
  $714 = $22 + 40 | 0;
  $715 = $22 + 44 | 0;
  $$0235985 = 0;
  L206 : while (1) {
   $725 = HEAP32[$698 >> 2] | 0;
   $727 = HEAP32[$725 + 84 >> 2] | 0;
   $728 = HEAP32[$18 >> 2] | 0;
   HEAP32[$4 >> 2] = __ZN3HFM12HFMEvaluator15returnForecastsERK6RepHFMRKNSt3__26vectorINS5_IdNS4_9allocatorIdEEEENS6_IS8_EEEEii(HEAP32[$697 >> 2] | 0, HEAP32[(HEAP32[(HEAP32[$17 >> 2] | 0) + ($$0235985 << 2) >> 2] | 0) + 20 >> 2] | 0, $18, (HEAP32[$728 + ($727 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$728 + ($727 * 12 | 0) >> 2] | 0) >> 3, HEAP32[$725 + 8 >> 2] | 0) | 0;
   HEAP32[33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) + 8 >> 2] = 2;
   if (!$$0235985) {
    __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($699, 23204, 18) | 0;
    $744 = HEAP32[$4 >> 2] | 0;
    if (((HEAP32[$744 + 4 >> 2] | 0) - (HEAP32[$744 >> 2] | 0) | 0) > 0) {
     $$0234975 = 0;
     do {
      __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($699, 23223, 2) | 0, $$0234975) | 0, 15622, 1) | 0;
      __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($699, 15620, 1) | 0;
      $$0234975 = $$0234975 + 1 | 0;
      $761 = HEAP32[$4 >> 2] | 0;
     } while (($$0234975 | 0) < ((HEAP32[$761 + 4 >> 2] | 0) - (HEAP32[$761 >> 2] | 0) >> 3 | 0));
    }
    $751 = HEAP32[HEAP32[$16 >> 2] >> 2] | 0;
    if (((HEAP32[$751 + 24 >> 2] | 0) - (HEAP32[$751 + 20 >> 2] | 0) | 0) > 0) {
     $$0233977 = 0;
     do {
      __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($699, 23226, 5) | 0, $$0233977) | 0, 23232, 2) | 0;
      $$0233977 = $$0233977 + 1 | 0;
      $772 = HEAP32[HEAP32[$16 >> 2] >> 2] | 0;
     } while (($$0233977 | 0) < (((HEAP32[$772 + 24 >> 2] | 0) - (HEAP32[$772 + 20 >> 2] | 0) | 0) / 72 | 0 | 0));
    }
    __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($699, 21473, 1) | 0;
   }
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($699, $$0235985) | 0, 15620, 1) | 0;
   $781 = HEAP32[$4 >> 2] | 0;
   $784 = HEAP32[$781 >> 2] | 0;
   $785 = (HEAP32[$781 + 4 >> 2] | 0) - $784 | 0;
   if (($785 | 0) > 0) {
    $$0232980 = 0;
    $797 = $785 >>> 3;
    $799 = $781;
    $800 = $784;
    while (1) {
     if ($797 >>> 0 <= $$0232980 >>> 0) {
      label = 149;
      break L206;
     }
     $805 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd(33664, +HEAPF64[$800 + ($$0232980 << 3) >> 3]) | 0, 17685, 1) | 0;
     $807 = HEAP32[$19 >> 2] | 0;
     if ((HEAP32[$630 >> 2] | 0) - $807 >> 3 >>> 0 <= $$0232980 >>> 0) {
      label = 151;
      break L206;
     }
     $815 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($805, +HEAPF64[$807 + ($$0232980 << 3) >> 3]) | 0, 17685, 1) | 0;
     $817 = HEAP32[$19 >> 2] | 0;
     if ((HEAP32[$630 >> 2] | 0) - $817 >> 3 >>> 0 <= $$0232980 >>> 0) {
      label = 153;
      break L206;
     }
     $821 = HEAP32[$4 >> 2] | 0;
     $824 = HEAP32[$821 >> 2] | 0;
     if ((HEAP32[$821 + 4 >> 2] | 0) - $824 >> 3 >>> 0 <= $$0232980 >>> 0) {
      label = 155;
      break L206;
     }
     __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($815, +HEAPF64[$817 + ($$0232980 << 3) >> 3] - +HEAPF64[$824 + ($$0232980 << 3) >> 3]) | 0, 17284, 1) | 0;
     $836 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($699, 23235, 1) | 0;
     $837 = HEAP32[$4 >> 2] | 0;
     $840 = HEAP32[$837 >> 2] | 0;
     if ((HEAP32[$837 + 4 >> 2] | 0) - $840 >> 3 >>> 0 <= $$0232980 >>> 0) {
      label = 157;
      break L206;
     }
     $848 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($836, +HEAPF64[$840 + ($$0232980 << 3) >> 3]) | 0, 17685, 1) | 0;
     $850 = HEAP32[$19 >> 2] | 0;
     if ((HEAP32[$630 >> 2] | 0) - $850 >> 3 >>> 0 <= $$0232980 >>> 0) {
      label = 159;
      break L206;
     }
     $858 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($848, +HEAPF64[$850 + ($$0232980 << 3) >> 3]) | 0, 17685, 1) | 0;
     $860 = HEAP32[$19 >> 2] | 0;
     if ((HEAP32[$630 >> 2] | 0) - $860 >> 3 >>> 0 <= $$0232980 >>> 0) {
      label = 161;
      break L206;
     }
     $864 = HEAP32[$4 >> 2] | 0;
     $867 = HEAP32[$864 >> 2] | 0;
     if ((HEAP32[$864 + 4 >> 2] | 0) - $867 >> 3 >>> 0 <= $$0232980 >>> 0) {
      label = 163;
      break L206;
     }
     __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($858, +HEAPF64[$860 + ($$0232980 << 3) >> 3] - +HEAPF64[$867 + ($$0232980 << 3) >> 3]) | 0, 15680, 1) | 0;
     __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($699, 15620, 1) | 0;
     $$0232980 = $$0232980 + 1 | 0;
     $880 = HEAP32[$4 >> 2] | 0;
     $800 = HEAP32[$880 >> 2] | 0;
     $797 = (HEAP32[$880 + 4 >> 2] | 0) - $800 >> 3;
     if (($$0232980 | 0) >= ($797 | 0)) break; else $799 = $880;
    }
   }
   $790 = HEAP32[(HEAP32[$16 >> 2] | 0) + ($$0235985 << 2) >> 2] | 0;
   if (((HEAP32[$790 + 24 >> 2] | 0) - (HEAP32[$790 + 20 >> 2] | 0) | 0) > 0) {
    $$0231982 = 0;
    $891 = $790;
    do {
     $892 = HEAP32[$891 + 20 >> 2] | 0;
     HEAP8[$706 >> 0] = 0;
     HEAP32[$705 >> 2] = 2;
     HEAP8[$701 >> 0] = 0;
     HEAP8[$704 >> 0] = 1;
     HEAP8[$703 >> 0] = 1;
     HEAP8[$702 >> 0] = 0;
     HEAP32[$22 >> 2] = 4920;
     HEAPF64[$707 >> 3] = +HEAPF64[$892 + ($$0231982 * 72 | 0) + 24 >> 3];
     HEAPF64[$708 >> 3] = +HEAPF64[$892 + ($$0231982 * 72 | 0) + 32 >> 3];
     __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($709, $892 + ($$0231982 * 72 | 0) + 40 | 0);
     HEAP32[$710 >> 2] = HEAP32[$892 + ($$0231982 * 72 | 0) + 52 >> 2];
     HEAP8[$711 >> 0] = HEAP8[$892 + ($$0231982 * 72 | 0) + 56 >> 0] | 0;
     HEAP8[$712 >> 0] = HEAP8[$892 + ($$0231982 * 72 | 0) + 57 >> 0] | 0;
     HEAPF64[$713 >> 3] = +HEAPF64[$892 + ($$0231982 * 72 | 0) + 64 >> 3];
     __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($699, +HEAPF64[$707 >> 3]) | 0, 15620, 1) | 0;
     HEAP32[$22 >> 2] = 4920;
     $908 = HEAP32[$714 >> 2] | 0;
     if ($908 | 0) {
      $910 = HEAP32[$715 >> 2] | 0;
      if (($910 | 0) != ($908 | 0)) HEAP32[$715 >> 2] = $910 + (~(($910 + -16 - $908 | 0) >>> 4) << 4);
      __ZdlPv($908);
     }
     $$0231982 = $$0231982 + 1 | 0;
     $891 = HEAP32[(HEAP32[$16 >> 2] | 0) + ($$0235985 << 2) >> 2] | 0;
    } while (($$0231982 | 0) < (((HEAP32[$891 + 24 >> 2] | 0) - (HEAP32[$891 + 20 >> 2] | 0) | 0) / 72 | 0 | 0));
   }
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($699, 21473, 1) | 0;
   $887 = HEAP32[$671 >> 2] | 0;
   if (($887 | 0) == (HEAP32[$700 >> 2] | 0)) __ZNSt3__26vectorIPNS0_IdNS_9allocatorIdEEEENS1_IS4_EEE21__push_back_slow_pathIRKS4_EEvOT_($20, $4); else {
    HEAP32[$887 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$671 >> 2] = (HEAP32[$671 >> 2] | 0) + 4;
   }
   $$0235985 = $$0235985 + 1 | 0;
   if (($$0235985 | 0) >= ($618 | 0)) break L204;
  }
  if ((label | 0) == 149) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($799); else if ((label | 0) == 151) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($19); else if ((label | 0) == 153) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($19); else if ((label | 0) == 155) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($821); else if ((label | 0) == 157) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($837); else if ((label | 0) == 159) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($19); else if ((label | 0) == 161) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($19); else if ((label | 0) == 163) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($864);
 } while (0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($4, $685);
 $716 = $0 + 11 | 0;
 if ((HEAP8[$716 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
 } else {
  HEAP8[$0 >> 0] = 0;
  HEAP8[$716 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, 0);
 HEAP32[$0 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
 $935 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21957, 52) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $935 + (HEAP32[(HEAP32[$935 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $940 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $944 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$940 >> 2] | 0) + 28 >> 2] & 63]($940, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($935, $944) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($935) | 0;
 if ($696) {
  $945 = $4 + 15 | 0;
  $946 = $4 + 14 | 0;
  $947 = $4 + 13 | 0;
  $948 = $4 + 12 | 0;
  $949 = $4 + 8 | 0;
  $950 = $948 + 4 | 0;
  $951 = $4 + 24 | 0;
  $952 = $4 + 32 | 0;
  $953 = $4 + 40 | 0;
  $954 = $4 + 52 | 0;
  $955 = $4 + 56 | 0;
  $956 = $4 + 57 | 0;
  $957 = $4 + 64 | 0;
  $958 = $4 + 40 | 0;
  $959 = $4 + 44 | 0;
  $$0230972 = 0;
  do {
   HEAP32[33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) + 8 >> 2] = 5;
   $968 = HEAP32[(HEAP32[$16 >> 2] | 0) + ($$0230972 << 2) >> 2] | 0;
   if (((HEAP32[$968 + 24 >> 2] | 0) - (HEAP32[$968 + 20 >> 2] | 0) | 0) > 0) {
    $$0229968 = 0;
    $987 = $968;
    do {
     $988 = HEAP32[$987 + 20 >> 2] | 0;
     HEAP8[$950 >> 0] = 0;
     HEAP32[$949 >> 2] = 2;
     HEAP8[$945 >> 0] = 0;
     HEAP8[$948 >> 0] = 1;
     HEAP8[$947 >> 0] = 1;
     HEAP8[$946 >> 0] = 0;
     HEAP32[$4 >> 2] = 4920;
     HEAPF64[$951 >> 3] = +HEAPF64[$988 + ($$0229968 * 72 | 0) + 24 >> 3];
     HEAPF64[$952 >> 3] = +HEAPF64[$988 + ($$0229968 * 72 | 0) + 32 >> 3];
     __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($953, $988 + ($$0229968 * 72 | 0) + 40 | 0);
     HEAP32[$954 >> 2] = HEAP32[$988 + ($$0229968 * 72 | 0) + 52 >> 2];
     HEAP8[$955 >> 0] = HEAP8[$988 + ($$0229968 * 72 | 0) + 56 >> 0] | 0;
     HEAP8[$956 >> 0] = HEAP8[$988 + ($$0229968 * 72 | 0) + 57 >> 0] | 0;
     HEAPF64[$957 >> 3] = +HEAPF64[$988 + ($$0229968 * 72 | 0) + 64 >> 3];
     __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd(33664, +HEAPF64[$951 >> 3]) | 0, 22010, 2) | 0;
     HEAP32[$4 >> 2] = 4920;
     $1004 = HEAP32[$958 >> 2] | 0;
     if ($1004 | 0) {
      $1006 = HEAP32[$959 >> 2] | 0;
      if (($1006 | 0) != ($1004 | 0)) HEAP32[$959 >> 2] = $1006 + (~(($1006 + -16 - $1004 | 0) >>> 4) << 4);
      __ZdlPv($1004);
     }
     $$0229968 = $$0229968 + 1 | 0;
     $987 = HEAP32[(HEAP32[$16 >> 2] | 0) + ($$0230972 << 2) >> 2] | 0;
    } while (($$0229968 | 0) < (((HEAP32[$987 + 24 >> 2] | 0) - (HEAP32[$987 + 20 >> 2] | 0) | 0) / 72 | 0 | 0));
   }
   __ZNKSt3__28ios_base6getlocEv($4, 33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) | 0);
   $979 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
   $983 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$979 >> 2] | 0) + 28 >> 2] & 63]($979, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(33664, $983) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(33664) | 0;
   $$0230972 = $$0230972 + 1 | 0;
  } while (($$0230972 | 0) < ($618 | 0));
 }
 if ($561 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$561 >> 2] | 0) + 8 >> 2] & 511]($561);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$611 >> 2] | 0) + 4 >> 2] & 511]($611);
 if ($696) {
  $$0967 = 0;
  do {
   $1046 = HEAP32[(HEAP32[$20 >> 2] | 0) + ($$0967 << 2) >> 2] | 0;
   if ($1046 | 0) {
    $1048 = HEAP32[$1046 >> 2] | 0;
    if ($1048 | 0) {
     $1050 = $1046 + 4 | 0;
     $1051 = HEAP32[$1050 >> 2] | 0;
     if (($1051 | 0) != ($1048 | 0)) HEAP32[$1050 >> 2] = $1051 + (~(($1051 + -8 - $1048 | 0) >>> 3) << 3);
     __ZdlPv($1048);
    }
    __ZdlPv($1046);
   }
   $$0967 = $$0967 + 1 | 0;
  } while (($$0967 | 0) < ($618 | 0));
 }
 $1030 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 23237, 28) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $1030 + (HEAP32[(HEAP32[$1030 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $1035 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $1039 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$1035 >> 2] | 0) + 28 >> 2] & 63]($1035, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($1030, $1039) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1030) | 0;
 HEAP32[$21 >> 2] = 3452;
 HEAP32[$683 >> 2] = 3492;
 HEAP32[$21 + 8 >> 2] = 3472;
 HEAP32[$685 >> 2] = 3548;
 if ((HEAP8[$690 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$690 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($685);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($21, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($683);
 $1061 = HEAP32[$20 >> 2] | 0;
 if ($1061 | 0) {
  $1063 = HEAP32[$671 >> 2] | 0;
  if (($1063 | 0) != ($1061 | 0)) HEAP32[$671 >> 2] = $1063 + (~(($1063 + -4 - $1061 | 0) >>> 2) << 2);
  __ZdlPv($1061);
 }
 $1070 = HEAP32[$19 >> 2] | 0;
 if ($1070 | 0) {
  $1072 = HEAP32[$630 >> 2] | 0;
  if (($1072 | 0) != ($1070 | 0)) HEAP32[$630 >> 2] = $1072 + (~(($1072 + -8 - $1070 | 0) >>> 3) << 3);
  __ZdlPv($1070);
 }
 $1079 = HEAP32[$18 >> 2] | 0;
 if ($1079 | 0) {
  $1081 = HEAP32[$619 >> 2] | 0;
  if (($1081 | 0) == ($1079 | 0)) $1097 = $1079; else {
   $1084 = $1081;
   while (1) {
    $1083 = $1084 + -12 | 0;
    HEAP32[$619 >> 2] = $1083;
    $1085 = HEAP32[$1083 >> 2] | 0;
    if (!$1085) $1087 = $1083; else {
     $1089 = $1084 + -8 | 0;
     $1090 = HEAP32[$1089 >> 2] | 0;
     if (($1090 | 0) != ($1085 | 0)) HEAP32[$1089 >> 2] = $1090 + (~(($1090 + -8 - $1085 | 0) >>> 3) << 3);
     __ZdlPv($1085);
     $1087 = HEAP32[$619 >> 2] | 0;
    }
    if (($1087 | 0) == ($1079 | 0)) break; else $1084 = $1087;
   }
   $1097 = HEAP32[$18 >> 2] | 0;
  }
  __ZdlPv($1097);
 }
 $1098 = HEAP32[$17 >> 2] | 0;
 if ($1098 | 0) {
  $1100 = $17 + 4 | 0;
  $1101 = HEAP32[$1100 >> 2] | 0;
  if (($1101 | 0) != ($1098 | 0)) HEAP32[$1100 >> 2] = $1101 + (~(($1101 + -4 - $1098 | 0) >>> 2) << 2);
  __ZdlPv($1098);
 }
 $1108 = HEAP32[$16 >> 2] | 0;
 if ($1108 | 0) {
  $1110 = HEAP32[$614 >> 2] | 0;
  if (($1110 | 0) != ($1108 | 0)) HEAP32[$614 >> 2] = $1110 + (~(($1110 + -4 - $1108 | 0) >>> 2) << 2);
  __ZdlPv($1108);
 }
 $1117 = HEAP32[$15 >> 2] | 0;
 if ($1117 | 0) {
  $1119 = HEAP32[$531 >> 2] | 0;
  if (($1119 | 0) == ($1117 | 0)) $1135 = $1117; else {
   $1122 = $1119;
   while (1) {
    $1121 = $1122 + -12 | 0;
    HEAP32[$531 >> 2] = $1121;
    $1123 = HEAP32[$1121 >> 2] | 0;
    if (!$1123) $1125 = $1121; else {
     $1127 = $1122 + -8 | 0;
     $1128 = HEAP32[$1127 >> 2] | 0;
     if (($1128 | 0) != ($1123 | 0)) HEAP32[$1127 >> 2] = $1128 + (~(($1128 + -8 - $1123 | 0) >>> 3) << 3);
     __ZdlPv($1123);
     $1125 = HEAP32[$531 >> 2] | 0;
    }
    if (($1125 | 0) == ($1117 | 0)) break; else $1122 = $1125;
   }
   $1135 = HEAP32[$15 >> 2] | 0;
  }
  __ZdlPv($1135);
 }
 __ZN3HFM17ProblemParametersD2Ev($14);
 $1136 = HEAP32[$12 >> 2] | 0;
 if ($1136 | 0) {
  $1138 = HEAP32[$281 >> 2] | 0;
  if (($1138 | 0) != ($1136 | 0)) HEAP32[$281 >> 2] = $1138 + (~(($1138 + -8 - $1136 | 0) >>> 3) << 3);
  __ZdlPv($1136);
 }
 $1146 = HEAP32[$11 + 28 >> 2] | 0;
 if ($1146 | 0) {
  $1148 = HEAP32[$273 >> 2] | 0;
  if (($1148 | 0) != ($1146 | 0)) HEAP32[$273 >> 2] = $1148 + (~(($1148 + -8 - $1146 | 0) >>> 3) << 3);
  __ZdlPv($1146);
 }
 HEAP32[$7 >> 2] = 3880;
 $1155 = $7 + 4 | 0;
 $1156 = HEAP32[$1155 >> 2] | 0;
 if ($1156 | 0) {
  $1158 = HEAP32[$135 >> 2] | 0;
  if (($1158 | 0) == ($1156 | 0)) $1174 = $1156; else {
   $1161 = $1158;
   while (1) {
    $1160 = $1161 + -12 | 0;
    HEAP32[$135 >> 2] = $1160;
    $1162 = HEAP32[$1160 >> 2] | 0;
    if (!$1162) $1164 = $1160; else {
     $1166 = $1161 + -8 | 0;
     $1167 = HEAP32[$1166 >> 2] | 0;
     if (($1167 | 0) != ($1162 | 0)) HEAP32[$1166 >> 2] = $1167 + (~(($1167 + -8 - $1162 | 0) >>> 3) << 3);
     __ZdlPv($1162);
     $1164 = HEAP32[$135 >> 2] | 0;
    }
    if (($1164 | 0) == ($1156 | 0)) break; else $1161 = $1164;
   }
   $1174 = HEAP32[$1155 >> 2] | 0;
  }
  __ZdlPv($1174);
 }
 $1175 = HEAP32[$6 >> 2] | 0;
 if (!$1175) {
  STACKTOP = sp;
  return;
 }
 $1177 = HEAP32[$81 >> 2] | 0;
 if (($1177 | 0) == ($1175 | 0)) $1187 = $1175; else {
  $1180 = $1177;
  while (1) {
   $1179 = $1180 + -12 | 0;
   HEAP32[$81 >> 2] = $1179;
   if ((HEAP8[$1179 + 11 >> 0] | 0) < 0) {
    __ZdlPv(HEAP32[$1179 >> 2] | 0);
    $1184 = HEAP32[$81 >> 2] | 0;
   } else $1184 = $1179;
   if (($1184 | 0) == ($1175 | 0)) break; else $1180 = $1184;
  }
  $1187 = HEAP32[$6 >> 2] | 0;
 }
 __ZdlPv($1187);
 STACKTOP = sp;
 return;
}

function _malloc($0) {
 $0 = $0 | 0;
 var $$$0192$i = 0, $$$0193$i = 0, $$$4351$i = 0, $$$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i18$i = 0, $$01$i$i = 0, $$0189$i = 0, $$0192$lcssa$i = 0, $$01928$i = 0, $$0193$lcssa$i = 0, $$01937$i = 0, $$0197 = 0, $$0199 = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$0211$i$i = 0, $$0212$i$i = 0, $$024371$i = 0, $$0287$i$i = 0, $$0288$i$i = 0, $$0289$i$i = 0, $$0295$i$i = 0, $$0296$i$i = 0, $$0342$i = 0, $$0344$i = 0, $$0345$i = 0, $$0347$i = 0, $$0353$i = 0, $$0358$i = 0, $$0359$i = 0, $$0361$i = 0, $$0362$i = 0, $$0368$i = 0, $$1196$i = 0, $$1198$i = 0, $$124470$i = 0, $$1291$i$i = 0, $$1293$i$i = 0, $$1343$i = 0, $$1348$i = 0, $$1363$i = 0, $$1370$i = 0, $$1374$i = 0, $$2234253237$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2355$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i201 = 0, $$3350$i = 0, $$3372$i = 0, $$4$lcssa$i = 0, $$4$ph$i = 0, $$415$i = 0, $$4236$i = 0, $$4351$lcssa$i = 0, $$435114$i = 0, $$4357$$4$i = 0, $$4357$ph$i = 0, $$435713$i = 0, $$723948$i = 0, $$749$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i20$iZ2D = 0, $$pre$phi$i211Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi11$i$iZ2D = 0, $$pre$phiZ2D = 0, $1 = 0, $1001 = 0, $1007 = 0, $101 = 0, $1010 = 0, $1011 = 0, $102 = 0, $1029 = 0, $1031 = 0, $1038 = 0, $1039 = 0, $1040 = 0, $1048 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $108 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $134 = 0, $138 = 0, $14 = 0, $142 = 0, $145 = 0, $148 = 0, $149 = 0, $155 = 0, $157 = 0, $16 = 0, $160 = 0, $162 = 0, $165 = 0, $167 = 0, $17 = 0, $170 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $179 = 0, $18 = 0, $180 = 0, $182 = 0, $183 = 0, $188 = 0, $189 = 0, $19 = 0, $20 = 0, $201 = 0, $205 = 0, $211 = 0, $218 = 0, $222 = 0, $231 = 0, $232 = 0, $234 = 0, $235 = 0, $239 = 0, $240 = 0, $248 = 0, $249 = 0, $250 = 0, $252 = 0, $253 = 0, $258 = 0, $259 = 0, $262 = 0, $264 = 0, $267 = 0, $27 = 0, $272 = 0, $279 = 0, $289 = 0, $293 = 0, $299 = 0, $30 = 0, $303 = 0, $306 = 0, $310 = 0, $312 = 0, $313 = 0, $315 = 0, $317 = 0, $319 = 0, $321 = 0, $323 = 0, $325 = 0, $327 = 0, $337 = 0, $338 = 0, $34 = 0, $348 = 0, $350 = 0, $353 = 0, $355 = 0, $358 = 0, $360 = 0, $363 = 0, $366 = 0, $367 = 0, $369 = 0, $37 = 0, $370 = 0, $372 = 0, $373 = 0, $375 = 0, $376 = 0, $381 = 0, $382 = 0, $387 = 0, $394 = 0, $398 = 0, $404 = 0, $41 = 0, $411 = 0, $415 = 0, $423 = 0, $426 = 0, $427 = 0, $428 = 0, $432 = 0, $433 = 0, $439 = 0, $44 = 0, $444 = 0, $445 = 0, $448 = 0, $450 = 0, $453 = 0, $458 = 0, $464 = 0, $466 = 0, $468 = 0, $47 = 0, $470 = 0, $487 = 0, $489 = 0, $49 = 0, $496 = 0, $497 = 0, $498 = 0, $50 = 0, $506 = 0, $508 = 0, $509 = 0, $511 = 0, $52 = 0, $520 = 0, $524 = 0, $526 = 0, $527 = 0, $528 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $546 = 0, $548 = 0, $549 = 0, $555 = 0, $557 = 0, $559 = 0, $56 = 0, $564 = 0, $566 = 0, $568 = 0, $569 = 0, $570 = 0, $578 = 0, $579 = 0, $58 = 0, $582 = 0, $586 = 0, $589 = 0, $591 = 0, $597 = 0, $6 = 0, $60 = 0, $601 = 0, $605 = 0, $614 = 0, $615 = 0, $62 = 0, $621 = 0, $623 = 0, $627 = 0, $630 = 0, $632 = 0, $637 = 0, $64 = 0, $643 = 0, $648 = 0, $649 = 0, $650 = 0, $656 = 0, $657 = 0, $658 = 0, $662 = 0, $67 = 0, $673 = 0, $678 = 0, $679 = 0, $681 = 0, $687 = 0, $689 = 0, $69 = 0, $693 = 0, $699 = 0, $7 = 0, $70 = 0, $703 = 0, $709 = 0, $71 = 0, $711 = 0, $717 = 0, $72 = 0, $721 = 0, $722 = 0, $727 = 0, $73 = 0, $733 = 0, $738 = 0, $741 = 0, $742 = 0, $745 = 0, $747 = 0, $749 = 0, $752 = 0, $763 = 0, $768 = 0, $77 = 0, $770 = 0, $773 = 0, $775 = 0, $778 = 0, $781 = 0, $782 = 0, $783 = 0, $785 = 0, $787 = 0, $788 = 0, $790 = 0, $791 = 0, $796 = 0, $797 = 0, $8 = 0, $80 = 0, $810 = 0, $813 = 0, $814 = 0, $820 = 0, $828 = 0, $834 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $843 = 0, $844 = 0, $850 = 0, $855 = 0, $856 = 0, $859 = 0, $861 = 0, $864 = 0, $869 = 0, $87 = 0, $875 = 0, $877 = 0, $879 = 0, $880 = 0, $898 = 0, $9 = 0, $900 = 0, $907 = 0, $908 = 0, $909 = 0, $916 = 0, $92 = 0, $920 = 0, $924 = 0, $926 = 0, $93 = 0, $932 = 0, $933 = 0, $935 = 0, $936 = 0, $940 = 0, $945 = 0, $946 = 0, $947 = 0, $95 = 0, $953 = 0, $955 = 0, $96 = 0, $961 = 0, $966 = 0, $969 = 0, $970 = 0, $971 = 0, $975 = 0, $976 = 0, $98 = 0, $982 = 0, $987 = 0, $988 = 0, $991 = 0, $993 = 0, $996 = 0, label = 0, sp = 0, $955$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 do if ($0 >>> 0 < 245) {
  $6 = $0 >>> 0 < 11 ? 16 : $0 + 11 & -8;
  $7 = $6 >>> 3;
  $8 = HEAP32[7584] | 0;
  $9 = $8 >>> $7;
  if ($9 & 3 | 0) {
   $14 = ($9 & 1 ^ 1) + $7 | 0;
   $16 = 30376 + ($14 << 1 << 2) | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   $19 = $18 + 8 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   do if (($16 | 0) == ($20 | 0)) HEAP32[7584] = $8 & ~(1 << $14); else {
    if ($20 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort();
    $27 = $20 + 12 | 0;
    if ((HEAP32[$27 >> 2] | 0) == ($18 | 0)) {
     HEAP32[$27 >> 2] = $16;
     HEAP32[$17 >> 2] = $20;
     break;
    } else _abort();
   } while (0);
   $30 = $14 << 3;
   HEAP32[$18 + 4 >> 2] = $30 | 3;
   $34 = $18 + $30 + 4 | 0;
   HEAP32[$34 >> 2] = HEAP32[$34 >> 2] | 1;
   $$0 = $19;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $37 = HEAP32[7586] | 0;
  if ($6 >>> 0 > $37 >>> 0) {
   if ($9 | 0) {
    $41 = 2 << $7;
    $44 = $9 << $7 & ($41 | 0 - $41);
    $47 = ($44 & 0 - $44) + -1 | 0;
    $49 = $47 >>> 12 & 16;
    $50 = $47 >>> $49;
    $52 = $50 >>> 5 & 8;
    $54 = $50 >>> $52;
    $56 = $54 >>> 2 & 4;
    $58 = $54 >>> $56;
    $60 = $58 >>> 1 & 2;
    $62 = $58 >>> $60;
    $64 = $62 >>> 1 & 1;
    $67 = ($52 | $49 | $56 | $60 | $64) + ($62 >>> $64) | 0;
    $69 = 30376 + ($67 << 1 << 2) | 0;
    $70 = $69 + 8 | 0;
    $71 = HEAP32[$70 >> 2] | 0;
    $72 = $71 + 8 | 0;
    $73 = HEAP32[$72 >> 2] | 0;
    do if (($69 | 0) == ($73 | 0)) {
     $77 = $8 & ~(1 << $67);
     HEAP32[7584] = $77;
     $98 = $77;
    } else {
     if ($73 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort();
     $80 = $73 + 12 | 0;
     if ((HEAP32[$80 >> 2] | 0) == ($71 | 0)) {
      HEAP32[$80 >> 2] = $69;
      HEAP32[$70 >> 2] = $73;
      $98 = $8;
      break;
     } else _abort();
    } while (0);
    $84 = ($67 << 3) - $6 | 0;
    HEAP32[$71 + 4 >> 2] = $6 | 3;
    $87 = $71 + $6 | 0;
    HEAP32[$87 + 4 >> 2] = $84 | 1;
    HEAP32[$87 + $84 >> 2] = $84;
    if ($37 | 0) {
     $92 = HEAP32[7589] | 0;
     $93 = $37 >>> 3;
     $95 = 30376 + ($93 << 1 << 2) | 0;
     $96 = 1 << $93;
     if (!($98 & $96)) {
      HEAP32[7584] = $98 | $96;
      $$0199 = $95;
      $$pre$phiZ2D = $95 + 8 | 0;
     } else {
      $101 = $95 + 8 | 0;
      $102 = HEAP32[$101 >> 2] | 0;
      if ($102 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
       $$0199 = $102;
       $$pre$phiZ2D = $101;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $92;
     HEAP32[$$0199 + 12 >> 2] = $92;
     HEAP32[$92 + 8 >> 2] = $$0199;
     HEAP32[$92 + 12 >> 2] = $95;
    }
    HEAP32[7586] = $84;
    HEAP32[7589] = $87;
    $$0 = $72;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $108 = HEAP32[7585] | 0;
   if (!$108) $$0197 = $6; else {
    $112 = ($108 & 0 - $108) + -1 | 0;
    $114 = $112 >>> 12 & 16;
    $115 = $112 >>> $114;
    $117 = $115 >>> 5 & 8;
    $119 = $115 >>> $117;
    $121 = $119 >>> 2 & 4;
    $123 = $119 >>> $121;
    $125 = $123 >>> 1 & 2;
    $127 = $123 >>> $125;
    $129 = $127 >>> 1 & 1;
    $134 = HEAP32[30640 + (($117 | $114 | $121 | $125 | $129) + ($127 >>> $129) << 2) >> 2] | 0;
    $138 = (HEAP32[$134 + 4 >> 2] & -8) - $6 | 0;
    $142 = HEAP32[$134 + 16 + (((HEAP32[$134 + 16 >> 2] | 0) == 0 & 1) << 2) >> 2] | 0;
    if (!$142) {
     $$0192$lcssa$i = $134;
     $$0193$lcssa$i = $138;
    } else {
     $$01928$i = $134;
     $$01937$i = $138;
     $145 = $142;
     while (1) {
      $148 = (HEAP32[$145 + 4 >> 2] & -8) - $6 | 0;
      $149 = $148 >>> 0 < $$01937$i >>> 0;
      $$$0193$i = $149 ? $148 : $$01937$i;
      $$$0192$i = $149 ? $145 : $$01928$i;
      $145 = HEAP32[$145 + 16 + (((HEAP32[$145 + 16 >> 2] | 0) == 0 & 1) << 2) >> 2] | 0;
      if (!$145) {
       $$0192$lcssa$i = $$$0192$i;
       $$0193$lcssa$i = $$$0193$i;
       break;
      } else {
       $$01928$i = $$$0192$i;
       $$01937$i = $$$0193$i;
      }
     }
    }
    $155 = HEAP32[7588] | 0;
    if ($$0192$lcssa$i >>> 0 < $155 >>> 0) _abort();
    $157 = $$0192$lcssa$i + $6 | 0;
    if ($$0192$lcssa$i >>> 0 >= $157 >>> 0) _abort();
    $160 = HEAP32[$$0192$lcssa$i + 24 >> 2] | 0;
    $162 = HEAP32[$$0192$lcssa$i + 12 >> 2] | 0;
    do if (($162 | 0) == ($$0192$lcssa$i | 0)) {
     $173 = $$0192$lcssa$i + 20 | 0;
     $174 = HEAP32[$173 >> 2] | 0;
     if (!$174) {
      $176 = $$0192$lcssa$i + 16 | 0;
      $177 = HEAP32[$176 >> 2] | 0;
      if (!$177) {
       $$3$i = 0;
       break;
      } else {
       $$1196$i = $177;
       $$1198$i = $176;
      }
     } else {
      $$1196$i = $174;
      $$1198$i = $173;
     }
     while (1) {
      $179 = $$1196$i + 20 | 0;
      $180 = HEAP32[$179 >> 2] | 0;
      if ($180 | 0) {
       $$1196$i = $180;
       $$1198$i = $179;
       continue;
      }
      $182 = $$1196$i + 16 | 0;
      $183 = HEAP32[$182 >> 2] | 0;
      if (!$183) break; else {
       $$1196$i = $183;
       $$1198$i = $182;
      }
     }
     if ($$1198$i >>> 0 < $155 >>> 0) _abort(); else {
      HEAP32[$$1198$i >> 2] = 0;
      $$3$i = $$1196$i;
      break;
     }
    } else {
     $165 = HEAP32[$$0192$lcssa$i + 8 >> 2] | 0;
     if ($165 >>> 0 < $155 >>> 0) _abort();
     $167 = $165 + 12 | 0;
     if ((HEAP32[$167 >> 2] | 0) != ($$0192$lcssa$i | 0)) _abort();
     $170 = $162 + 8 | 0;
     if ((HEAP32[$170 >> 2] | 0) == ($$0192$lcssa$i | 0)) {
      HEAP32[$167 >> 2] = $162;
      HEAP32[$170 >> 2] = $165;
      $$3$i = $162;
      break;
     } else _abort();
    } while (0);
    L73 : do if ($160 | 0) {
     $188 = HEAP32[$$0192$lcssa$i + 28 >> 2] | 0;
     $189 = 30640 + ($188 << 2) | 0;
     do if (($$0192$lcssa$i | 0) == (HEAP32[$189 >> 2] | 0)) {
      HEAP32[$189 >> 2] = $$3$i;
      if (!$$3$i) {
       HEAP32[7585] = $108 & ~(1 << $188);
       break L73;
      }
     } else if ($160 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
      HEAP32[$160 + 16 + (((HEAP32[$160 + 16 >> 2] | 0) != ($$0192$lcssa$i | 0) & 1) << 2) >> 2] = $$3$i;
      if (!$$3$i) break L73; else break;
     } while (0);
     $201 = HEAP32[7588] | 0;
     if ($$3$i >>> 0 < $201 >>> 0) _abort();
     HEAP32[$$3$i + 24 >> 2] = $160;
     $205 = HEAP32[$$0192$lcssa$i + 16 >> 2] | 0;
     do if ($205 | 0) if ($205 >>> 0 < $201 >>> 0) _abort(); else {
      HEAP32[$$3$i + 16 >> 2] = $205;
      HEAP32[$205 + 24 >> 2] = $$3$i;
      break;
     } while (0);
     $211 = HEAP32[$$0192$lcssa$i + 20 >> 2] | 0;
     if ($211 | 0) if ($211 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
      HEAP32[$$3$i + 20 >> 2] = $211;
      HEAP32[$211 + 24 >> 2] = $$3$i;
      break;
     }
    } while (0);
    if ($$0193$lcssa$i >>> 0 < 16) {
     $218 = $$0193$lcssa$i + $6 | 0;
     HEAP32[$$0192$lcssa$i + 4 >> 2] = $218 | 3;
     $222 = $$0192$lcssa$i + $218 + 4 | 0;
     HEAP32[$222 >> 2] = HEAP32[$222 >> 2] | 1;
    } else {
     HEAP32[$$0192$lcssa$i + 4 >> 2] = $6 | 3;
     HEAP32[$157 + 4 >> 2] = $$0193$lcssa$i | 1;
     HEAP32[$157 + $$0193$lcssa$i >> 2] = $$0193$lcssa$i;
     if ($37 | 0) {
      $231 = HEAP32[7589] | 0;
      $232 = $37 >>> 3;
      $234 = 30376 + ($232 << 1 << 2) | 0;
      $235 = 1 << $232;
      if (!($8 & $235)) {
       HEAP32[7584] = $8 | $235;
       $$0189$i = $234;
       $$pre$phi$iZ2D = $234 + 8 | 0;
      } else {
       $239 = $234 + 8 | 0;
       $240 = HEAP32[$239 >> 2] | 0;
       if ($240 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
        $$0189$i = $240;
        $$pre$phi$iZ2D = $239;
       }
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $231;
      HEAP32[$$0189$i + 12 >> 2] = $231;
      HEAP32[$231 + 8 >> 2] = $$0189$i;
      HEAP32[$231 + 12 >> 2] = $234;
     }
     HEAP32[7586] = $$0193$lcssa$i;
     HEAP32[7589] = $157;
    }
    $$0 = $$0192$lcssa$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else $$0197 = $6;
 } else if ($0 >>> 0 > 4294967231) $$0197 = -1; else {
  $248 = $0 + 11 | 0;
  $249 = $248 & -8;
  $250 = HEAP32[7585] | 0;
  if (!$250) $$0197 = $249; else {
   $252 = 0 - $249 | 0;
   $253 = $248 >>> 8;
   if (!$253) $$0358$i = 0; else if ($249 >>> 0 > 16777215) $$0358$i = 31; else {
    $258 = ($253 + 1048320 | 0) >>> 16 & 8;
    $259 = $253 << $258;
    $262 = ($259 + 520192 | 0) >>> 16 & 4;
    $264 = $259 << $262;
    $267 = ($264 + 245760 | 0) >>> 16 & 2;
    $272 = 14 - ($262 | $258 | $267) + ($264 << $267 >>> 15) | 0;
    $$0358$i = $249 >>> ($272 + 7 | 0) & 1 | $272 << 1;
   }
   $279 = HEAP32[30640 + ($$0358$i << 2) >> 2] | 0;
   L117 : do if (!$279) {
    $$2355$i = 0;
    $$3$i201 = 0;
    $$3350$i = $252;
    label = 81;
   } else {
    $$0342$i = 0;
    $$0347$i = $252;
    $$0353$i = $279;
    $$0359$i = $249 << (($$0358$i | 0) == 31 ? 0 : 25 - ($$0358$i >>> 1) | 0);
    $$0362$i = 0;
    while (1) {
     $289 = (HEAP32[$$0353$i + 4 >> 2] & -8) - $249 | 0;
     if ($289 >>> 0 < $$0347$i >>> 0) if (!$289) {
      $$415$i = $$0353$i;
      $$435114$i = 0;
      $$435713$i = $$0353$i;
      label = 85;
      break L117;
     } else {
      $$1343$i = $$0353$i;
      $$1348$i = $289;
     } else {
      $$1343$i = $$0342$i;
      $$1348$i = $$0347$i;
     }
     $293 = HEAP32[$$0353$i + 20 >> 2] | 0;
     $$0353$i = HEAP32[$$0353$i + 16 + ($$0359$i >>> 31 << 2) >> 2] | 0;
     $$1363$i = ($293 | 0) == 0 | ($293 | 0) == ($$0353$i | 0) ? $$0362$i : $293;
     $299 = ($$0353$i | 0) == 0;
     if ($299) {
      $$2355$i = $$1363$i;
      $$3$i201 = $$1343$i;
      $$3350$i = $$1348$i;
      label = 81;
      break;
     } else {
      $$0342$i = $$1343$i;
      $$0347$i = $$1348$i;
      $$0359$i = $$0359$i << (($299 ^ 1) & 1);
      $$0362$i = $$1363$i;
     }
    }
   } while (0);
   if ((label | 0) == 81) {
    if (($$2355$i | 0) == 0 & ($$3$i201 | 0) == 0) {
     $303 = 2 << $$0358$i;
     $306 = $250 & ($303 | 0 - $303);
     if (!$306) {
      $$0197 = $249;
      break;
     }
     $310 = ($306 & 0 - $306) + -1 | 0;
     $312 = $310 >>> 12 & 16;
     $313 = $310 >>> $312;
     $315 = $313 >>> 5 & 8;
     $317 = $313 >>> $315;
     $319 = $317 >>> 2 & 4;
     $321 = $317 >>> $319;
     $323 = $321 >>> 1 & 2;
     $325 = $321 >>> $323;
     $327 = $325 >>> 1 & 1;
     $$4$ph$i = 0;
     $$4357$ph$i = HEAP32[30640 + (($315 | $312 | $319 | $323 | $327) + ($325 >>> $327) << 2) >> 2] | 0;
    } else {
     $$4$ph$i = $$3$i201;
     $$4357$ph$i = $$2355$i;
    }
    if (!$$4357$ph$i) {
     $$4$lcssa$i = $$4$ph$i;
     $$4351$lcssa$i = $$3350$i;
    } else {
     $$415$i = $$4$ph$i;
     $$435114$i = $$3350$i;
     $$435713$i = $$4357$ph$i;
     label = 85;
    }
   }
   if ((label | 0) == 85) while (1) {
    label = 0;
    $337 = (HEAP32[$$435713$i + 4 >> 2] & -8) - $249 | 0;
    $338 = $337 >>> 0 < $$435114$i >>> 0;
    $$$4351$i = $338 ? $337 : $$435114$i;
    $$4357$$4$i = $338 ? $$435713$i : $$415$i;
    $$435713$i = HEAP32[$$435713$i + 16 + (((HEAP32[$$435713$i + 16 >> 2] | 0) == 0 & 1) << 2) >> 2] | 0;
    if (!$$435713$i) {
     $$4$lcssa$i = $$4357$$4$i;
     $$4351$lcssa$i = $$$4351$i;
     break;
    } else {
     $$415$i = $$4357$$4$i;
     $$435114$i = $$$4351$i;
     label = 85;
    }
   }
   if (!$$4$lcssa$i) $$0197 = $249; else if ($$4351$lcssa$i >>> 0 < ((HEAP32[7586] | 0) - $249 | 0) >>> 0) {
    $348 = HEAP32[7588] | 0;
    if ($$4$lcssa$i >>> 0 < $348 >>> 0) _abort();
    $350 = $$4$lcssa$i + $249 | 0;
    if ($$4$lcssa$i >>> 0 >= $350 >>> 0) _abort();
    $353 = HEAP32[$$4$lcssa$i + 24 >> 2] | 0;
    $355 = HEAP32[$$4$lcssa$i + 12 >> 2] | 0;
    do if (($355 | 0) == ($$4$lcssa$i | 0)) {
     $366 = $$4$lcssa$i + 20 | 0;
     $367 = HEAP32[$366 >> 2] | 0;
     if (!$367) {
      $369 = $$4$lcssa$i + 16 | 0;
      $370 = HEAP32[$369 >> 2] | 0;
      if (!$370) {
       $$3372$i = 0;
       break;
      } else {
       $$1370$i = $370;
       $$1374$i = $369;
      }
     } else {
      $$1370$i = $367;
      $$1374$i = $366;
     }
     while (1) {
      $372 = $$1370$i + 20 | 0;
      $373 = HEAP32[$372 >> 2] | 0;
      if ($373 | 0) {
       $$1370$i = $373;
       $$1374$i = $372;
       continue;
      }
      $375 = $$1370$i + 16 | 0;
      $376 = HEAP32[$375 >> 2] | 0;
      if (!$376) break; else {
       $$1370$i = $376;
       $$1374$i = $375;
      }
     }
     if ($$1374$i >>> 0 < $348 >>> 0) _abort(); else {
      HEAP32[$$1374$i >> 2] = 0;
      $$3372$i = $$1370$i;
      break;
     }
    } else {
     $358 = HEAP32[$$4$lcssa$i + 8 >> 2] | 0;
     if ($358 >>> 0 < $348 >>> 0) _abort();
     $360 = $358 + 12 | 0;
     if ((HEAP32[$360 >> 2] | 0) != ($$4$lcssa$i | 0)) _abort();
     $363 = $355 + 8 | 0;
     if ((HEAP32[$363 >> 2] | 0) == ($$4$lcssa$i | 0)) {
      HEAP32[$360 >> 2] = $355;
      HEAP32[$363 >> 2] = $358;
      $$3372$i = $355;
      break;
     } else _abort();
    } while (0);
    L164 : do if (!$353) $470 = $250; else {
     $381 = HEAP32[$$4$lcssa$i + 28 >> 2] | 0;
     $382 = 30640 + ($381 << 2) | 0;
     do if (($$4$lcssa$i | 0) == (HEAP32[$382 >> 2] | 0)) {
      HEAP32[$382 >> 2] = $$3372$i;
      if (!$$3372$i) {
       $387 = $250 & ~(1 << $381);
       HEAP32[7585] = $387;
       $470 = $387;
       break L164;
      }
     } else if ($353 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
      HEAP32[$353 + 16 + (((HEAP32[$353 + 16 >> 2] | 0) != ($$4$lcssa$i | 0) & 1) << 2) >> 2] = $$3372$i;
      if (!$$3372$i) {
       $470 = $250;
       break L164;
      } else break;
     } while (0);
     $394 = HEAP32[7588] | 0;
     if ($$3372$i >>> 0 < $394 >>> 0) _abort();
     HEAP32[$$3372$i + 24 >> 2] = $353;
     $398 = HEAP32[$$4$lcssa$i + 16 >> 2] | 0;
     do if ($398 | 0) if ($398 >>> 0 < $394 >>> 0) _abort(); else {
      HEAP32[$$3372$i + 16 >> 2] = $398;
      HEAP32[$398 + 24 >> 2] = $$3372$i;
      break;
     } while (0);
     $404 = HEAP32[$$4$lcssa$i + 20 >> 2] | 0;
     if (!$404) $470 = $250; else if ($404 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
      HEAP32[$$3372$i + 20 >> 2] = $404;
      HEAP32[$404 + 24 >> 2] = $$3372$i;
      $470 = $250;
      break;
     }
    } while (0);
    do if ($$4351$lcssa$i >>> 0 < 16) {
     $411 = $$4351$lcssa$i + $249 | 0;
     HEAP32[$$4$lcssa$i + 4 >> 2] = $411 | 3;
     $415 = $$4$lcssa$i + $411 + 4 | 0;
     HEAP32[$415 >> 2] = HEAP32[$415 >> 2] | 1;
    } else {
     HEAP32[$$4$lcssa$i + 4 >> 2] = $249 | 3;
     HEAP32[$350 + 4 >> 2] = $$4351$lcssa$i | 1;
     HEAP32[$350 + $$4351$lcssa$i >> 2] = $$4351$lcssa$i;
     $423 = $$4351$lcssa$i >>> 3;
     if ($$4351$lcssa$i >>> 0 < 256) {
      $426 = 30376 + ($423 << 1 << 2) | 0;
      $427 = HEAP32[7584] | 0;
      $428 = 1 << $423;
      if (!($427 & $428)) {
       HEAP32[7584] = $427 | $428;
       $$0368$i = $426;
       $$pre$phi$i211Z2D = $426 + 8 | 0;
      } else {
       $432 = $426 + 8 | 0;
       $433 = HEAP32[$432 >> 2] | 0;
       if ($433 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
        $$0368$i = $433;
        $$pre$phi$i211Z2D = $432;
       }
      }
      HEAP32[$$pre$phi$i211Z2D >> 2] = $350;
      HEAP32[$$0368$i + 12 >> 2] = $350;
      HEAP32[$350 + 8 >> 2] = $$0368$i;
      HEAP32[$350 + 12 >> 2] = $426;
      break;
     }
     $439 = $$4351$lcssa$i >>> 8;
     if (!$439) $$0361$i = 0; else if ($$4351$lcssa$i >>> 0 > 16777215) $$0361$i = 31; else {
      $444 = ($439 + 1048320 | 0) >>> 16 & 8;
      $445 = $439 << $444;
      $448 = ($445 + 520192 | 0) >>> 16 & 4;
      $450 = $445 << $448;
      $453 = ($450 + 245760 | 0) >>> 16 & 2;
      $458 = 14 - ($448 | $444 | $453) + ($450 << $453 >>> 15) | 0;
      $$0361$i = $$4351$lcssa$i >>> ($458 + 7 | 0) & 1 | $458 << 1;
     }
     $464 = 30640 + ($$0361$i << 2) | 0;
     HEAP32[$350 + 28 >> 2] = $$0361$i;
     $466 = $350 + 16 | 0;
     HEAP32[$466 + 4 >> 2] = 0;
     HEAP32[$466 >> 2] = 0;
     $468 = 1 << $$0361$i;
     if (!($470 & $468)) {
      HEAP32[7585] = $470 | $468;
      HEAP32[$464 >> 2] = $350;
      HEAP32[$350 + 24 >> 2] = $464;
      HEAP32[$350 + 12 >> 2] = $350;
      HEAP32[$350 + 8 >> 2] = $350;
      break;
     }
     $$0344$i = $$4351$lcssa$i << (($$0361$i | 0) == 31 ? 0 : 25 - ($$0361$i >>> 1) | 0);
     $$0345$i = HEAP32[$464 >> 2] | 0;
     while (1) {
      if ((HEAP32[$$0345$i + 4 >> 2] & -8 | 0) == ($$4351$lcssa$i | 0)) {
       label = 139;
       break;
      }
      $487 = $$0345$i + 16 + ($$0344$i >>> 31 << 2) | 0;
      $489 = HEAP32[$487 >> 2] | 0;
      if (!$489) {
       label = 136;
       break;
      } else {
       $$0344$i = $$0344$i << 1;
       $$0345$i = $489;
      }
     }
     if ((label | 0) == 136) if ($487 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
      HEAP32[$487 >> 2] = $350;
      HEAP32[$350 + 24 >> 2] = $$0345$i;
      HEAP32[$350 + 12 >> 2] = $350;
      HEAP32[$350 + 8 >> 2] = $350;
      break;
     } else if ((label | 0) == 139) {
      $496 = $$0345$i + 8 | 0;
      $497 = HEAP32[$496 >> 2] | 0;
      $498 = HEAP32[7588] | 0;
      if ($497 >>> 0 >= $498 >>> 0 & $$0345$i >>> 0 >= $498 >>> 0) {
       HEAP32[$497 + 12 >> 2] = $350;
       HEAP32[$496 >> 2] = $350;
       HEAP32[$350 + 8 >> 2] = $497;
       HEAP32[$350 + 12 >> 2] = $$0345$i;
       HEAP32[$350 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } while (0);
    $$0 = $$4$lcssa$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $$0197 = $249;
  }
 } while (0);
 $506 = HEAP32[7586] | 0;
 if ($506 >>> 0 >= $$0197 >>> 0) {
  $508 = $506 - $$0197 | 0;
  $509 = HEAP32[7589] | 0;
  if ($508 >>> 0 > 15) {
   $511 = $509 + $$0197 | 0;
   HEAP32[7589] = $511;
   HEAP32[7586] = $508;
   HEAP32[$511 + 4 >> 2] = $508 | 1;
   HEAP32[$511 + $508 >> 2] = $508;
   HEAP32[$509 + 4 >> 2] = $$0197 | 3;
  } else {
   HEAP32[7586] = 0;
   HEAP32[7589] = 0;
   HEAP32[$509 + 4 >> 2] = $506 | 3;
   $520 = $509 + $506 + 4 | 0;
   HEAP32[$520 >> 2] = HEAP32[$520 >> 2] | 1;
  }
  $$0 = $509 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $524 = HEAP32[7587] | 0;
 if ($524 >>> 0 > $$0197 >>> 0) {
  $526 = $524 - $$0197 | 0;
  HEAP32[7587] = $526;
  $527 = HEAP32[7590] | 0;
  $528 = $527 + $$0197 | 0;
  HEAP32[7590] = $528;
  HEAP32[$528 + 4 >> 2] = $526 | 1;
  HEAP32[$527 + 4 >> 2] = $$0197 | 3;
  $$0 = $527 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP32[7702] | 0)) {
  HEAP32[7704] = 4096;
  HEAP32[7703] = 4096;
  HEAP32[7705] = -1;
  HEAP32[7706] = -1;
  HEAP32[7707] = 0;
  HEAP32[7695] = 0;
  $538 = $1 & -16 ^ 1431655768;
  HEAP32[$1 >> 2] = $538;
  HEAP32[7702] = $538;
  $542 = 4096;
 } else $542 = HEAP32[7704] | 0;
 $539 = $$0197 + 48 | 0;
 $540 = $$0197 + 47 | 0;
 $541 = $542 + $540 | 0;
 $543 = 0 - $542 | 0;
 $544 = $541 & $543;
 if ($544 >>> 0 <= $$0197 >>> 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $546 = HEAP32[7694] | 0;
 if ($546 | 0) {
  $548 = HEAP32[7692] | 0;
  $549 = $548 + $544 | 0;
  if ($549 >>> 0 <= $548 >>> 0 | $549 >>> 0 > $546 >>> 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 L244 : do if (!(HEAP32[7695] & 4)) {
  $555 = HEAP32[7590] | 0;
  L246 : do if (!$555) label = 163; else {
   $$0$i$i = 30784;
   while (1) {
    $557 = HEAP32[$$0$i$i >> 2] | 0;
    if ($557 >>> 0 <= $555 >>> 0) {
     $559 = $$0$i$i + 4 | 0;
     if (($557 + (HEAP32[$559 >> 2] | 0) | 0) >>> 0 > $555 >>> 0) break;
    }
    $564 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if (!$564) {
     label = 163;
     break L246;
    } else $$0$i$i = $564;
   }
   $589 = $541 - $524 & $543;
   if ($589 >>> 0 < 2147483647) {
    $591 = _sbrk($589 | 0) | 0;
    if (($591 | 0) == ((HEAP32[$$0$i$i >> 2] | 0) + (HEAP32[$559 >> 2] | 0) | 0)) if (($591 | 0) == (-1 | 0)) $$2234253237$i = $589; else {
     $$723948$i = $589;
     $$749$i = $591;
     label = 180;
     break L244;
    } else {
     $$2247$ph$i = $591;
     $$2253$ph$i = $589;
     label = 171;
    }
   } else $$2234253237$i = 0;
  } while (0);
  do if ((label | 0) == 163) {
   $566 = _sbrk(0) | 0;
   if (($566 | 0) == (-1 | 0)) $$2234253237$i = 0; else {
    $568 = $566;
    $569 = HEAP32[7703] | 0;
    $570 = $569 + -1 | 0;
    $$$i = (($570 & $568 | 0) == 0 ? 0 : ($570 + $568 & 0 - $569) - $568 | 0) + $544 | 0;
    $578 = HEAP32[7692] | 0;
    $579 = $$$i + $578 | 0;
    if ($$$i >>> 0 > $$0197 >>> 0 & $$$i >>> 0 < 2147483647) {
     $582 = HEAP32[7694] | 0;
     if ($582 | 0) if ($579 >>> 0 <= $578 >>> 0 | $579 >>> 0 > $582 >>> 0) {
      $$2234253237$i = 0;
      break;
     }
     $586 = _sbrk($$$i | 0) | 0;
     if (($586 | 0) == ($566 | 0)) {
      $$723948$i = $$$i;
      $$749$i = $566;
      label = 180;
      break L244;
     } else {
      $$2247$ph$i = $586;
      $$2253$ph$i = $$$i;
      label = 171;
     }
    } else $$2234253237$i = 0;
   }
  } while (0);
  do if ((label | 0) == 171) {
   $597 = 0 - $$2253$ph$i | 0;
   if (!($539 >>> 0 > $$2253$ph$i >>> 0 & ($$2253$ph$i >>> 0 < 2147483647 & ($$2247$ph$i | 0) != (-1 | 0)))) if (($$2247$ph$i | 0) == (-1 | 0)) {
    $$2234253237$i = 0;
    break;
   } else {
    $$723948$i = $$2253$ph$i;
    $$749$i = $$2247$ph$i;
    label = 180;
    break L244;
   }
   $601 = HEAP32[7704] | 0;
   $605 = $540 - $$2253$ph$i + $601 & 0 - $601;
   if ($605 >>> 0 >= 2147483647) {
    $$723948$i = $$2253$ph$i;
    $$749$i = $$2247$ph$i;
    label = 180;
    break L244;
   }
   if ((_sbrk($605 | 0) | 0) == (-1 | 0)) {
    _sbrk($597 | 0) | 0;
    $$2234253237$i = 0;
    break;
   } else {
    $$723948$i = $605 + $$2253$ph$i | 0;
    $$749$i = $$2247$ph$i;
    label = 180;
    break L244;
   }
  } while (0);
  HEAP32[7695] = HEAP32[7695] | 4;
  $$4236$i = $$2234253237$i;
  label = 178;
 } else {
  $$4236$i = 0;
  label = 178;
 } while (0);
 if ((label | 0) == 178) if ($544 >>> 0 < 2147483647) {
  $614 = _sbrk($544 | 0) | 0;
  $615 = _sbrk(0) | 0;
  $621 = $615 - $614 | 0;
  $623 = $621 >>> 0 > ($$0197 + 40 | 0) >>> 0;
  if (!(($614 | 0) == (-1 | 0) | $623 ^ 1 | $614 >>> 0 < $615 >>> 0 & (($614 | 0) != (-1 | 0) & ($615 | 0) != (-1 | 0)) ^ 1)) {
   $$723948$i = $623 ? $621 : $$4236$i;
   $$749$i = $614;
   label = 180;
  }
 }
 if ((label | 0) == 180) {
  $627 = (HEAP32[7692] | 0) + $$723948$i | 0;
  HEAP32[7692] = $627;
  if ($627 >>> 0 > (HEAP32[7693] | 0) >>> 0) HEAP32[7693] = $627;
  $630 = HEAP32[7590] | 0;
  do if (!$630) {
   $632 = HEAP32[7588] | 0;
   if (($632 | 0) == 0 | $$749$i >>> 0 < $632 >>> 0) HEAP32[7588] = $$749$i;
   HEAP32[7696] = $$749$i;
   HEAP32[7697] = $$723948$i;
   HEAP32[7699] = 0;
   HEAP32[7593] = HEAP32[7702];
   HEAP32[7592] = -1;
   $$01$i$i = 0;
   do {
    $637 = 30376 + ($$01$i$i << 1 << 2) | 0;
    HEAP32[$637 + 12 >> 2] = $637;
    HEAP32[$637 + 8 >> 2] = $637;
    $$01$i$i = $$01$i$i + 1 | 0;
   } while (($$01$i$i | 0) != 32);
   $643 = $$749$i + 8 | 0;
   $648 = ($643 & 7 | 0) == 0 ? 0 : 0 - $643 & 7;
   $649 = $$749$i + $648 | 0;
   $650 = $$723948$i + -40 - $648 | 0;
   HEAP32[7590] = $649;
   HEAP32[7587] = $650;
   HEAP32[$649 + 4 >> 2] = $650 | 1;
   HEAP32[$649 + $650 + 4 >> 2] = 40;
   HEAP32[7591] = HEAP32[7706];
  } else {
   $$024371$i = 30784;
   while (1) {
    $656 = HEAP32[$$024371$i >> 2] | 0;
    $657 = $$024371$i + 4 | 0;
    $658 = HEAP32[$657 >> 2] | 0;
    if (($$749$i | 0) == ($656 + $658 | 0)) {
     label = 190;
     break;
    }
    $662 = HEAP32[$$024371$i + 8 >> 2] | 0;
    if (!$662) break; else $$024371$i = $662;
   }
   if ((label | 0) == 190) if (!(HEAP32[$$024371$i + 12 >> 2] & 8)) if ($630 >>> 0 < $$749$i >>> 0 & $630 >>> 0 >= $656 >>> 0) {
    HEAP32[$657 >> 2] = $658 + $$723948$i;
    $673 = $630 + 8 | 0;
    $678 = ($673 & 7 | 0) == 0 ? 0 : 0 - $673 & 7;
    $679 = $630 + $678 | 0;
    $681 = (HEAP32[7587] | 0) + ($$723948$i - $678) | 0;
    HEAP32[7590] = $679;
    HEAP32[7587] = $681;
    HEAP32[$679 + 4 >> 2] = $681 | 1;
    HEAP32[$679 + $681 + 4 >> 2] = 40;
    HEAP32[7591] = HEAP32[7706];
    break;
   }
   $687 = HEAP32[7588] | 0;
   if ($$749$i >>> 0 < $687 >>> 0) {
    HEAP32[7588] = $$749$i;
    $752 = $$749$i;
   } else $752 = $687;
   $689 = $$749$i + $$723948$i | 0;
   $$124470$i = 30784;
   while (1) {
    if ((HEAP32[$$124470$i >> 2] | 0) == ($689 | 0)) {
     label = 198;
     break;
    }
    $693 = HEAP32[$$124470$i + 8 >> 2] | 0;
    if (!$693) break; else $$124470$i = $693;
   }
   if ((label | 0) == 198) if (!(HEAP32[$$124470$i + 12 >> 2] & 8)) {
    HEAP32[$$124470$i >> 2] = $$749$i;
    $699 = $$124470$i + 4 | 0;
    HEAP32[$699 >> 2] = (HEAP32[$699 >> 2] | 0) + $$723948$i;
    $703 = $$749$i + 8 | 0;
    $709 = $$749$i + (($703 & 7 | 0) == 0 ? 0 : 0 - $703 & 7) | 0;
    $711 = $689 + 8 | 0;
    $717 = $689 + (($711 & 7 | 0) == 0 ? 0 : 0 - $711 & 7) | 0;
    $721 = $709 + $$0197 | 0;
    $722 = $717 - $709 - $$0197 | 0;
    HEAP32[$709 + 4 >> 2] = $$0197 | 3;
    do if (($717 | 0) == ($630 | 0)) {
     $727 = (HEAP32[7587] | 0) + $722 | 0;
     HEAP32[7587] = $727;
     HEAP32[7590] = $721;
     HEAP32[$721 + 4 >> 2] = $727 | 1;
    } else {
     if (($717 | 0) == (HEAP32[7589] | 0)) {
      $733 = (HEAP32[7586] | 0) + $722 | 0;
      HEAP32[7586] = $733;
      HEAP32[7589] = $721;
      HEAP32[$721 + 4 >> 2] = $733 | 1;
      HEAP32[$721 + $733 >> 2] = $733;
      break;
     }
     $738 = HEAP32[$717 + 4 >> 2] | 0;
     if (($738 & 3 | 0) == 1) {
      $741 = $738 & -8;
      $742 = $738 >>> 3;
      L314 : do if ($738 >>> 0 < 256) {
       $745 = HEAP32[$717 + 8 >> 2] | 0;
       $747 = HEAP32[$717 + 12 >> 2] | 0;
       $749 = 30376 + ($742 << 1 << 2) | 0;
       do if (($745 | 0) != ($749 | 0)) {
        if ($745 >>> 0 < $752 >>> 0) _abort();
        if ((HEAP32[$745 + 12 >> 2] | 0) == ($717 | 0)) break;
        _abort();
       } while (0);
       if (($747 | 0) == ($745 | 0)) {
        HEAP32[7584] = HEAP32[7584] & ~(1 << $742);
        break;
       }
       do if (($747 | 0) == ($749 | 0)) $$pre$phi11$i$iZ2D = $747 + 8 | 0; else {
        if ($747 >>> 0 < $752 >>> 0) _abort();
        $763 = $747 + 8 | 0;
        if ((HEAP32[$763 >> 2] | 0) == ($717 | 0)) {
         $$pre$phi11$i$iZ2D = $763;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$745 + 12 >> 2] = $747;
       HEAP32[$$pre$phi11$i$iZ2D >> 2] = $745;
      } else {
       $768 = HEAP32[$717 + 24 >> 2] | 0;
       $770 = HEAP32[$717 + 12 >> 2] | 0;
       do if (($770 | 0) == ($717 | 0)) {
        $781 = $717 + 16 | 0;
        $782 = $781 + 4 | 0;
        $783 = HEAP32[$782 >> 2] | 0;
        if (!$783) {
         $785 = HEAP32[$781 >> 2] | 0;
         if (!$785) {
          $$3$i$i = 0;
          break;
         } else {
          $$1291$i$i = $785;
          $$1293$i$i = $781;
         }
        } else {
         $$1291$i$i = $783;
         $$1293$i$i = $782;
        }
        while (1) {
         $787 = $$1291$i$i + 20 | 0;
         $788 = HEAP32[$787 >> 2] | 0;
         if ($788 | 0) {
          $$1291$i$i = $788;
          $$1293$i$i = $787;
          continue;
         }
         $790 = $$1291$i$i + 16 | 0;
         $791 = HEAP32[$790 >> 2] | 0;
         if (!$791) break; else {
          $$1291$i$i = $791;
          $$1293$i$i = $790;
         }
        }
        if ($$1293$i$i >>> 0 < $752 >>> 0) _abort(); else {
         HEAP32[$$1293$i$i >> 2] = 0;
         $$3$i$i = $$1291$i$i;
         break;
        }
       } else {
        $773 = HEAP32[$717 + 8 >> 2] | 0;
        if ($773 >>> 0 < $752 >>> 0) _abort();
        $775 = $773 + 12 | 0;
        if ((HEAP32[$775 >> 2] | 0) != ($717 | 0)) _abort();
        $778 = $770 + 8 | 0;
        if ((HEAP32[$778 >> 2] | 0) == ($717 | 0)) {
         HEAP32[$775 >> 2] = $770;
         HEAP32[$778 >> 2] = $773;
         $$3$i$i = $770;
         break;
        } else _abort();
       } while (0);
       if (!$768) break;
       $796 = HEAP32[$717 + 28 >> 2] | 0;
       $797 = 30640 + ($796 << 2) | 0;
       do if (($717 | 0) == (HEAP32[$797 >> 2] | 0)) {
        HEAP32[$797 >> 2] = $$3$i$i;
        if ($$3$i$i | 0) break;
        HEAP32[7585] = HEAP32[7585] & ~(1 << $796);
        break L314;
       } else if ($768 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
        HEAP32[$768 + 16 + (((HEAP32[$768 + 16 >> 2] | 0) != ($717 | 0) & 1) << 2) >> 2] = $$3$i$i;
        if (!$$3$i$i) break L314; else break;
       } while (0);
       $810 = HEAP32[7588] | 0;
       if ($$3$i$i >>> 0 < $810 >>> 0) _abort();
       HEAP32[$$3$i$i + 24 >> 2] = $768;
       $813 = $717 + 16 | 0;
       $814 = HEAP32[$813 >> 2] | 0;
       do if ($814 | 0) if ($814 >>> 0 < $810 >>> 0) _abort(); else {
        HEAP32[$$3$i$i + 16 >> 2] = $814;
        HEAP32[$814 + 24 >> 2] = $$3$i$i;
        break;
       } while (0);
       $820 = HEAP32[$813 + 4 >> 2] | 0;
       if (!$820) break;
       if ($820 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
        HEAP32[$$3$i$i + 20 >> 2] = $820;
        HEAP32[$820 + 24 >> 2] = $$3$i$i;
        break;
       }
      } while (0);
      $$0$i18$i = $717 + $741 | 0;
      $$0287$i$i = $741 + $722 | 0;
     } else {
      $$0$i18$i = $717;
      $$0287$i$i = $722;
     }
     $828 = $$0$i18$i + 4 | 0;
     HEAP32[$828 >> 2] = HEAP32[$828 >> 2] & -2;
     HEAP32[$721 + 4 >> 2] = $$0287$i$i | 1;
     HEAP32[$721 + $$0287$i$i >> 2] = $$0287$i$i;
     $834 = $$0287$i$i >>> 3;
     if ($$0287$i$i >>> 0 < 256) {
      $837 = 30376 + ($834 << 1 << 2) | 0;
      $838 = HEAP32[7584] | 0;
      $839 = 1 << $834;
      do if (!($838 & $839)) {
       HEAP32[7584] = $838 | $839;
       $$0295$i$i = $837;
       $$pre$phi$i20$iZ2D = $837 + 8 | 0;
      } else {
       $843 = $837 + 8 | 0;
       $844 = HEAP32[$843 >> 2] | 0;
       if ($844 >>> 0 >= (HEAP32[7588] | 0) >>> 0) {
        $$0295$i$i = $844;
        $$pre$phi$i20$iZ2D = $843;
        break;
       }
       _abort();
      } while (0);
      HEAP32[$$pre$phi$i20$iZ2D >> 2] = $721;
      HEAP32[$$0295$i$i + 12 >> 2] = $721;
      HEAP32[$721 + 8 >> 2] = $$0295$i$i;
      HEAP32[$721 + 12 >> 2] = $837;
      break;
     }
     $850 = $$0287$i$i >>> 8;
     do if (!$850) $$0296$i$i = 0; else {
      if ($$0287$i$i >>> 0 > 16777215) {
       $$0296$i$i = 31;
       break;
      }
      $855 = ($850 + 1048320 | 0) >>> 16 & 8;
      $856 = $850 << $855;
      $859 = ($856 + 520192 | 0) >>> 16 & 4;
      $861 = $856 << $859;
      $864 = ($861 + 245760 | 0) >>> 16 & 2;
      $869 = 14 - ($859 | $855 | $864) + ($861 << $864 >>> 15) | 0;
      $$0296$i$i = $$0287$i$i >>> ($869 + 7 | 0) & 1 | $869 << 1;
     } while (0);
     $875 = 30640 + ($$0296$i$i << 2) | 0;
     HEAP32[$721 + 28 >> 2] = $$0296$i$i;
     $877 = $721 + 16 | 0;
     HEAP32[$877 + 4 >> 2] = 0;
     HEAP32[$877 >> 2] = 0;
     $879 = HEAP32[7585] | 0;
     $880 = 1 << $$0296$i$i;
     if (!($879 & $880)) {
      HEAP32[7585] = $879 | $880;
      HEAP32[$875 >> 2] = $721;
      HEAP32[$721 + 24 >> 2] = $875;
      HEAP32[$721 + 12 >> 2] = $721;
      HEAP32[$721 + 8 >> 2] = $721;
      break;
     }
     $$0288$i$i = $$0287$i$i << (($$0296$i$i | 0) == 31 ? 0 : 25 - ($$0296$i$i >>> 1) | 0);
     $$0289$i$i = HEAP32[$875 >> 2] | 0;
     while (1) {
      if ((HEAP32[$$0289$i$i + 4 >> 2] & -8 | 0) == ($$0287$i$i | 0)) {
       label = 265;
       break;
      }
      $898 = $$0289$i$i + 16 + ($$0288$i$i >>> 31 << 2) | 0;
      $900 = HEAP32[$898 >> 2] | 0;
      if (!$900) {
       label = 262;
       break;
      } else {
       $$0288$i$i = $$0288$i$i << 1;
       $$0289$i$i = $900;
      }
     }
     if ((label | 0) == 262) if ($898 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
      HEAP32[$898 >> 2] = $721;
      HEAP32[$721 + 24 >> 2] = $$0289$i$i;
      HEAP32[$721 + 12 >> 2] = $721;
      HEAP32[$721 + 8 >> 2] = $721;
      break;
     } else if ((label | 0) == 265) {
      $907 = $$0289$i$i + 8 | 0;
      $908 = HEAP32[$907 >> 2] | 0;
      $909 = HEAP32[7588] | 0;
      if ($908 >>> 0 >= $909 >>> 0 & $$0289$i$i >>> 0 >= $909 >>> 0) {
       HEAP32[$908 + 12 >> 2] = $721;
       HEAP32[$907 >> 2] = $721;
       HEAP32[$721 + 8 >> 2] = $908;
       HEAP32[$721 + 12 >> 2] = $$0289$i$i;
       HEAP32[$721 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } while (0);
    $$0 = $709 + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $$0$i$i$i = 30784;
   while (1) {
    $916 = HEAP32[$$0$i$i$i >> 2] | 0;
    if ($916 >>> 0 <= $630 >>> 0) {
     $920 = $916 + (HEAP32[$$0$i$i$i + 4 >> 2] | 0) | 0;
     if ($920 >>> 0 > $630 >>> 0) break;
    }
    $$0$i$i$i = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
   }
   $924 = $920 + -47 | 0;
   $926 = $924 + 8 | 0;
   $932 = $924 + (($926 & 7 | 0) == 0 ? 0 : 0 - $926 & 7) | 0;
   $933 = $630 + 16 | 0;
   $935 = $932 >>> 0 < $933 >>> 0 ? $630 : $932;
   $936 = $935 + 8 | 0;
   $940 = $$749$i + 8 | 0;
   $945 = ($940 & 7 | 0) == 0 ? 0 : 0 - $940 & 7;
   $946 = $$749$i + $945 | 0;
   $947 = $$723948$i + -40 - $945 | 0;
   HEAP32[7590] = $946;
   HEAP32[7587] = $947;
   HEAP32[$946 + 4 >> 2] = $947 | 1;
   HEAP32[$946 + $947 + 4 >> 2] = 40;
   HEAP32[7591] = HEAP32[7706];
   $953 = $935 + 4 | 0;
   HEAP32[$953 >> 2] = 27;
   HEAP32[$936 >> 2] = HEAP32[7696];
   HEAP32[$936 + 4 >> 2] = HEAP32[7697];
   HEAP32[$936 + 8 >> 2] = HEAP32[7698];
   HEAP32[$936 + 12 >> 2] = HEAP32[7699];
   HEAP32[7696] = $$749$i;
   HEAP32[7697] = $$723948$i;
   HEAP32[7699] = 0;
   HEAP32[7698] = $936;
   $955 = $935 + 24 | 0;
   do {
    $955$looptemp = $955;
    $955 = $955 + 4 | 0;
    HEAP32[$955 >> 2] = 7;
   } while (($955$looptemp + 8 | 0) >>> 0 < $920 >>> 0);
   if (($935 | 0) != ($630 | 0)) {
    $961 = $935 - $630 | 0;
    HEAP32[$953 >> 2] = HEAP32[$953 >> 2] & -2;
    HEAP32[$630 + 4 >> 2] = $961 | 1;
    HEAP32[$935 >> 2] = $961;
    $966 = $961 >>> 3;
    if ($961 >>> 0 < 256) {
     $969 = 30376 + ($966 << 1 << 2) | 0;
     $970 = HEAP32[7584] | 0;
     $971 = 1 << $966;
     if (!($970 & $971)) {
      HEAP32[7584] = $970 | $971;
      $$0211$i$i = $969;
      $$pre$phi$i$iZ2D = $969 + 8 | 0;
     } else {
      $975 = $969 + 8 | 0;
      $976 = HEAP32[$975 >> 2] | 0;
      if ($976 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
       $$0211$i$i = $976;
       $$pre$phi$i$iZ2D = $975;
      }
     }
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $630;
     HEAP32[$$0211$i$i + 12 >> 2] = $630;
     HEAP32[$630 + 8 >> 2] = $$0211$i$i;
     HEAP32[$630 + 12 >> 2] = $969;
     break;
    }
    $982 = $961 >>> 8;
    if (!$982) $$0212$i$i = 0; else if ($961 >>> 0 > 16777215) $$0212$i$i = 31; else {
     $987 = ($982 + 1048320 | 0) >>> 16 & 8;
     $988 = $982 << $987;
     $991 = ($988 + 520192 | 0) >>> 16 & 4;
     $993 = $988 << $991;
     $996 = ($993 + 245760 | 0) >>> 16 & 2;
     $1001 = 14 - ($991 | $987 | $996) + ($993 << $996 >>> 15) | 0;
     $$0212$i$i = $961 >>> ($1001 + 7 | 0) & 1 | $1001 << 1;
    }
    $1007 = 30640 + ($$0212$i$i << 2) | 0;
    HEAP32[$630 + 28 >> 2] = $$0212$i$i;
    HEAP32[$630 + 20 >> 2] = 0;
    HEAP32[$933 >> 2] = 0;
    $1010 = HEAP32[7585] | 0;
    $1011 = 1 << $$0212$i$i;
    if (!($1010 & $1011)) {
     HEAP32[7585] = $1010 | $1011;
     HEAP32[$1007 >> 2] = $630;
     HEAP32[$630 + 24 >> 2] = $1007;
     HEAP32[$630 + 12 >> 2] = $630;
     HEAP32[$630 + 8 >> 2] = $630;
     break;
    }
    $$0206$i$i = $961 << (($$0212$i$i | 0) == 31 ? 0 : 25 - ($$0212$i$i >>> 1) | 0);
    $$0207$i$i = HEAP32[$1007 >> 2] | 0;
    while (1) {
     if ((HEAP32[$$0207$i$i + 4 >> 2] & -8 | 0) == ($961 | 0)) {
      label = 292;
      break;
     }
     $1029 = $$0207$i$i + 16 + ($$0206$i$i >>> 31 << 2) | 0;
     $1031 = HEAP32[$1029 >> 2] | 0;
     if (!$1031) {
      label = 289;
      break;
     } else {
      $$0206$i$i = $$0206$i$i << 1;
      $$0207$i$i = $1031;
     }
    }
    if ((label | 0) == 289) if ($1029 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
     HEAP32[$1029 >> 2] = $630;
     HEAP32[$630 + 24 >> 2] = $$0207$i$i;
     HEAP32[$630 + 12 >> 2] = $630;
     HEAP32[$630 + 8 >> 2] = $630;
     break;
    } else if ((label | 0) == 292) {
     $1038 = $$0207$i$i + 8 | 0;
     $1039 = HEAP32[$1038 >> 2] | 0;
     $1040 = HEAP32[7588] | 0;
     if ($1039 >>> 0 >= $1040 >>> 0 & $$0207$i$i >>> 0 >= $1040 >>> 0) {
      HEAP32[$1039 + 12 >> 2] = $630;
      HEAP32[$1038 >> 2] = $630;
      HEAP32[$630 + 8 >> 2] = $1039;
      HEAP32[$630 + 12 >> 2] = $$0207$i$i;
      HEAP32[$630 + 24 >> 2] = 0;
      break;
     } else _abort();
    }
   }
  } while (0);
  $1048 = HEAP32[7587] | 0;
  if ($1048 >>> 0 > $$0197 >>> 0) {
   $1050 = $1048 - $$0197 | 0;
   HEAP32[7587] = $1050;
   $1051 = HEAP32[7590] | 0;
   $1052 = $1051 + $$0197 | 0;
   HEAP32[7590] = $1052;
   HEAP32[$1052 + 4 >> 2] = $1050 | 1;
   HEAP32[$1051 + 4 >> 2] = $$0197 | 3;
   $$0 = $1051 + 8 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN8optframe4NGESI6RepHFMiE6searchERNS_4SOSCEPKNS_8SolutionIS1_iEEPKNS_10EvaluationE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i = 0, $$0$lcssa = 0, $$0135903 = 0, $$0136$lcssa = 0, $$0136930 = 0, $$0158917 = 0, $$0159$lcssa = 0.0, $$0159929 = 0.0, $$0160908 = 0, $$0161913 = 0, $$0162928 = 0, $$0163904 = 0, $$0170923 = 0, $$03031$i = 0, $$032$i = 0, $$0456$lcssa = 0.0, $$0456907 = 0.0, $$0457$lcssa = 0.0, $$0457906 = 0.0, $$0931 = 0, $$1 = 0, $$1137 = 0, $$lcssa557 = 0, $$pre977 = 0, $10 = 0, $103 = 0.0, $104 = 0, $108 = 0.0, $109 = 0, $11 = 0, $12 = 0, $120 = 0, $122 = 0, $13 = 0, $14 = 0, $149 = 0, $151 = 0, $159 = 0, $164 = 0, $166 = 0, $168 = 0, $169 = 0, $18 = 0, $180 = 0, $206 = 0, $209 = 0, $21 = 0, $218 = 0.0, $223 = 0, $225 = 0, $23 = 0, $232 = 0, $234 = 0, $242 = 0, $246 = 0, $25 = 0, $253 = 0, $26 = 0, $262 = 0, $267 = 0, $271 = 0, $272 = 0, $275 = 0, $285 = 0.0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $359 = 0, $362 = 0, $365 = 0, $371 = 0.0, $372 = 0, $373 = 0, $375 = 0, $38 = 0, $382 = 0, $384 = 0, $391 = 0, $393 = 0, $398 = 0, $4 = 0, $400 = 0, $407 = 0, $412 = 0, $414 = 0, $417 = 0, $418 = 0, $42 = 0, $422 = 0, $424 = 0, $426 = 0, $43 = 0, $437 = 0, $438 = 0, $439 = 0, $442 = 0, $448 = 0, $451 = 0, $452 = 0, $453 = 0, $457 = 0.0, $458 = 0, $467 = 0, $47 = 0, $473 = 0, $485 = 0, $499 = 0, $5 = 0, $501 = 0, $508 = 0, $509 = 0, $51 = 0, $515 = 0, $518 = 0, $52 = 0, $520 = 0, $527 = 0, $529 = 0, $53 = 0, $536 = 0, $538 = 0, $54 = 0, $545 = 0, $547 = 0, $55 = 0, $550 = 0, $554 = 0, $559 = 0, $56 = 0, $563 = 0, $57 = 0, $570 = 0, $572 = 0, $573 = 0, $576 = 0, $58 = 0, $580 = 0, $581 = 0, $584 = 0, $587 = 0, $59 = 0, $590 = 0, $595 = 0, $599 = 0, $6 = 0, $60 = 0, $602 = 0.0, $606 = 0.0, $609 = 0.0, $61 = 0, $612 = 0, $62 = 0, $620 = 0, $625 = 0, $626 = 0, $628 = 0, $63 = 0, $633 = 0, $637 = 0, $641 = 0, $644 = 0, $646 = 0.0, $648 = 0.0, $653 = 0, $655 = 0, $664 = 0, $666 = 0, $67 = 0, $678 = 0, $681 = 0, $685 = 0, $690 = 0, $694 = 0, $695 = 0, $696 = 0, $698 = 0, $7 = 0, $700 = 0, $705 = 0, $707 = 0, $712 = 0, $716 = 0, $717 = 0, $72 = 0, $725 = 0.0, $736 = 0, $738 = 0, $743 = 0, $747 = 0, $748 = 0, $75 = 0, $750 = 0, $755 = 0, $759 = 0, $760 = 0, $765 = 0, $769 = 0, $770 = 0, $775 = 0, $779 = 0, $780 = 0, $788 = 0, $793 = 0, $797 = 0, $8 = 0, $801 = 0, $804 = 0, $806 = 0, $83 = 0, $837 = 0, $839 = 0, $841 = 0, $842 = 0, $843 = 0, $845 = 0, $847 = 0, $848 = 0, $85 = 0, $855 = 0, $856 = 0, $858 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $9 = 0, $92 = 0.0, $93 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $vararg_buffer7 = sp + 248 | 0;
 $vararg_buffer2 = sp + 224 | 0;
 $vararg_buffer = sp + 216 | 0;
 $4 = sp + 144 | 0;
 $5 = sp + 72 | 0;
 $6 = sp + 312 | 0;
 $7 = sp + 300 | 0;
 $8 = sp + 296 | 0;
 $9 = sp + 292 | 0;
 $10 = sp + 280 | 0;
 $11 = sp + 268 | 0;
 $12 = sp + 256 | 0;
 $13 = sp + 340 | 0;
 $14 = sp;
 $18 = $6 + 12 | 0;
 HEAP8[$18 + 4 >> 0] = 0;
 HEAP32[$6 + 8 >> 2] = 2;
 HEAP8[$6 + 15 >> 0] = 0;
 HEAP8[$18 >> 0] = 1;
 HEAP8[$6 + 13 >> 0] = 1;
 HEAP8[$6 + 14 >> 0] = 0;
 HEAP32[$6 >> 2] = 5092;
 $21 = $6 + 17 | 0;
 HEAP8[$21 >> 0] = 0;
 _gettimeofday($6 + 20 | 0, $4 | 0) | 0;
 HEAP32[$7 >> 2] = 0;
 $23 = $7 + 4 | 0;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$9 >> 2] = 0;
 $25 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17509, 12) | 0;
 $26 = $1 + 32 | 0;
 $29 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($25, +HEAPF64[$26 >> 3]) | 0, 15620, 1) | 0;
 $30 = $1 + 24 | 0;
 $33 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($29, +HEAPF64[$30 >> 3]) | 0, 15622, 1) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $33 + (HEAP32[(HEAP32[$33 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $38 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $42 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$38 >> 2] | 0) + 28 >> 2] & 63]($38, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($33, $42) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($33) | 0;
 $43 = $0 + 48 | 0;
 __ZNSt3__26vectorIPN8optframe7NGESIndI6RepHFMiEENS_9allocatorIS5_EEE7reserveEj($7, HEAP32[(HEAP32[$43 >> 2] | 0) + 24 >> 2] | 0);
 $47 = HEAP32[$43 >> 2] | 0;
 if ((HEAP32[$47 + 24 >> 2] | 0) > 0) {
  $51 = $0 + 24 | 0;
  $52 = $4 + 4 | 0;
  $53 = $4 + 8 | 0;
  $54 = $0 + 52 | 0;
  $55 = $0 + 20 | 0;
  $56 = $7 + 8 | 0;
  $57 = $5 + 40 | 0;
  $58 = $5 + 44 | 0;
  $59 = $0 + 44 | 0;
  $60 = $5 + 8 | 0;
  $61 = $5 + 16 | 0;
  $62 = $5 + 24 | 0;
  $63 = $4 + 8 | 0;
  $$0136930 = 0;
  $$0159929 = 0.0;
  $$0162928 = 0;
  $$0931 = 0;
  while (1) {
   $67 = HEAP32[$51 >> 2] | 0;
   $72 = FUNCTION_TABLE_iid[HEAP32[(HEAP32[$67 >> 2] | 0) + 36 >> 2] & 3]($67, +HEAPF64[$30 >> 3]) | 0;
   HEAP32[$4 >> 2] = 0;
   HEAP32[$52 >> 2] = 0;
   HEAP32[$53 >> 2] = 0;
   if ((HEAP32[$54 >> 2] | 0) > 0) {
    $$0170923 = 0;
    do {
     $88 = HEAP32[$59 >> 2] | 0;
     $92 = +FUNCTION_TABLE_di[HEAP32[(HEAP32[$88 >> 2] | 0) + 56 >> 2] & 7]($88);
     $93 = HEAP32[$59 >> 2] | 0;
     $98 = (FUNCTION_TABLE_iidi[HEAP32[(HEAP32[$93 >> 2] | 0) + 60 >> 2] & 3]($93, .5, 10) | 0) + 1 | 0;
     $99 = HEAP32[$59 >> 2] | 0;
     $103 = +FUNCTION_TABLE_di[HEAP32[(HEAP32[$99 >> 2] | 0) + 56 >> 2] & 7]($99);
     $104 = HEAP32[$59 >> 2] | 0;
     $108 = +FUNCTION_TABLE_di[HEAP32[(HEAP32[$104 >> 2] | 0) + 56 >> 2] & 7]($104);
     HEAPF64[$5 >> 3] = $92;
     HEAP32[$60 >> 2] = $98;
     HEAPF64[$61 >> 3] = $103;
     HEAPF64[$62 >> 3] = $108;
     $109 = HEAP32[$52 >> 2] | 0;
     if ($109 >>> 0 < (HEAP32[$63 >> 2] | 0) >>> 0) {
      HEAP32[$109 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$109 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$109 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      HEAP32[$109 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
      HEAP32[$109 + 16 >> 2] = HEAP32[$5 + 16 >> 2];
      HEAP32[$109 + 20 >> 2] = HEAP32[$5 + 20 >> 2];
      HEAP32[$109 + 24 >> 2] = HEAP32[$5 + 24 >> 2];
      HEAP32[$109 + 28 >> 2] = HEAP32[$5 + 28 >> 2];
      HEAP32[$52 >> 2] = $109 + 32;
     } else __ZNSt3__26vectorIN8optframe16NGESIndStructureI6RepHFMiEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_($4, $5);
     $$0170923 = $$0170923 + 1 | 0;
    } while (($$0170923 | 0) < (HEAP32[$54 >> 2] | 0));
   }
   $75 = HEAP32[$55 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$75 >> 2] | 0) + 76 >> 2] & 31]($5, $75, HEAP32[$72 + 20 >> 2] | 0, HEAP32[$72 + 24 >> 2] | 0);
   $83 = __Znwj(128) | 0;
   __ZN8optframe7NGESIndI6RepHFMiEC2ERNS_8SolutionIS1_iEERNS_10EvaluationERNSt3__26vectorINS_16NGESIndStructureIS1_iEENS8_9allocatorISB_EEEEi($83, $72, $5, $4, HEAP32[$54 >> 2] | 0);
   HEAP32[$10 >> 2] = $83;
   $85 = HEAP32[$23 >> 2] | 0;
   if (($85 | 0) == (HEAP32[$56 >> 2] | 0)) __ZNSt3__26vectorIPN8optframe7NGESIndI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($7, $10); else {
    HEAP32[$85 >> 2] = $83;
    HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 4;
   }
   if (!$$0162928) {
    $120 = __Znwj(72) | 0;
    $122 = HEAP32[HEAP32[$7 >> 2] >> 2] | 0;
    HEAP8[$120 + 16 >> 0] = 0;
    HEAP32[$120 + 8 >> 2] = 2;
    HEAP8[$120 + 15 >> 0] = 0;
    HEAP8[$120 + 12 >> 0] = 1;
    HEAP8[$120 + 13 >> 0] = 1;
    HEAP8[$120 + 14 >> 0] = 0;
    HEAP32[$120 >> 2] = 4920;
    HEAPF64[$120 + 24 >> 3] = +HEAPF64[$122 + 56 >> 3];
    HEAPF64[$120 + 32 >> 3] = +HEAPF64[$122 + 64 >> 3];
    __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($120 + 40 | 0, $122 + 72 | 0);
    HEAP32[$120 + 52 >> 2] = HEAP32[$122 + 84 >> 2];
    HEAP8[$120 + 56 >> 0] = HEAP8[$122 + 88 >> 0] | 0;
    HEAP8[$120 + 57 >> 0] = HEAP8[$122 + 89 >> 0] | 0;
    HEAPF64[$120 + 64 >> 3] = +HEAPF64[$122 + 96 >> 3];
    $149 = __Znwj(28) | 0;
    $151 = HEAP32[HEAP32[$7 >> 2] >> 2] | 0;
    HEAP8[$149 + 16 >> 0] = 0;
    HEAP32[$149 + 8 >> 2] = 2;
    HEAP8[$149 + 15 >> 0] = 0;
    HEAP8[$149 + 12 >> 0] = 1;
    HEAP8[$149 + 13 >> 0] = 1;
    HEAP8[$149 + 14 >> 0] = 0;
    HEAP32[$149 >> 2] = 5136;
    $159 = __Znwj(128) | 0;
    __ZN6RepHFMC2ERKS_($159, HEAP32[$151 + 20 >> 2] | 0);
    HEAP32[$149 + 20 >> 2] = $159;
    $164 = HEAP32[$151 + 24 >> 2] | 0;
    if (!$164) $168 = 0; else {
     $166 = __Znwj(4) | 0;
     HEAP32[$166 >> 2] = HEAP32[$164 >> 2];
     $168 = $166;
    }
    HEAP32[$149 + 24 >> 2] = $168;
    $$1 = $149;
    $$1137 = $120;
   } else {
    $169 = HEAP32[$55 >> 2] | 0;
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$169 >> 2] | 0) + 40 >> 2] & 63]($169, (HEAP32[(HEAP32[$7 >> 2] | 0) + ($$0162928 << 2) >> 2] | 0) + 32 | 0, $$0136930) | 0) {
     $180 = HEAP32[(HEAP32[$7 >> 2] | 0) + ($$0162928 << 2) >> 2] | 0;
     if (($180 + 32 | 0) == ($$0136930 | 0)) $206 = $180; else {
      HEAPF64[$$0136930 + 24 >> 3] = +HEAPF64[$180 + 56 >> 3];
      HEAPF64[$$0136930 + 32 >> 3] = +HEAPF64[$180 + 64 >> 3];
      HEAP8[$$0136930 + 56 >> 0] = HEAP8[$180 + 88 >> 0] | 0;
      HEAP8[$$0136930 + 57 >> 0] = HEAP8[$180 + 89 >> 0] | 0;
      HEAPF64[$$0136930 + 64 >> 3] = +HEAPF64[$180 + 96 >> 3];
      __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($$0136930 + 40 | 0, HEAP32[$180 + 72 >> 2] | 0, HEAP32[$180 + 76 >> 2] | 0);
      HEAP32[$$0136930 + 52 >> 2] = HEAP32[$180 + 84 >> 2];
      $206 = HEAP32[(HEAP32[$7 >> 2] | 0) + ($$0162928 << 2) >> 2] | 0;
     }
     __ZN8optframe8SolutionI6RepHFMiEaSERKS2_($$0931, $206) | 0;
     $$1 = $$0931;
     $$1137 = $$0136930;
    } else {
     $$1 = $$0931;
     $$1137 = $$0136930;
    }
   }
   $209 = HEAP32[(HEAP32[$7 >> 2] | 0) + ($$0162928 << 2) >> 2] | 0;
   $218 = $$0159929 + (+HEAPF64[$209 + 56 >> 3] + +HEAPF64[$209 + 96 >> 3] * +HEAPF64[$209 + 64 >> 3]);
   if ($72 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$72 >> 2] | 0) + 4 >> 2] & 511]($72);
   HEAP32[$5 >> 2] = 4920;
   $223 = HEAP32[$57 >> 2] | 0;
   if ($223 | 0) {
    $225 = HEAP32[$58 >> 2] | 0;
    if (($225 | 0) != ($223 | 0)) HEAP32[$58 >> 2] = $225 + (~(($225 + -16 - $223 | 0) >>> 4) << 4);
    __ZdlPv($223);
   }
   $232 = HEAP32[$4 >> 2] | 0;
   if ($232 | 0) {
    $234 = HEAP32[$52 >> 2] | 0;
    if (($234 | 0) != ($232 | 0)) HEAP32[$52 >> 2] = $234 + (~(($234 + -32 - $232 | 0) >>> 5) << 5);
    __ZdlPv($232);
   }
   $$0162928 = $$0162928 + 1 | 0;
   $242 = HEAP32[$43 >> 2] | 0;
   if (($$0162928 | 0) >= (HEAP32[$242 + 24 >> 2] | 0)) {
    $$0$lcssa = $$1;
    $$0136$lcssa = $$1137;
    $$0159$lcssa = $218;
    $876 = $242;
    break;
   } else {
    $$0136930 = $$1137;
    $$0159929 = $218;
    $$0931 = $$1;
   }
  }
 } else {
  $$0$lcssa = 0;
  $$0136$lcssa = 0;
  $$0159$lcssa = 0.0;
  $876 = $47;
 }
 if (!(HEAP8[$0 + 14 >> 0] | 0)) $275 = $876; else {
  $246 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17522, 16) | 0;
  $253 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($246, $$0159$lcssa / +(HEAP32[(HEAP32[$43 >> 2] | 0) + 24 >> 2] | 0)) | 0, 17539, 8) | 0;
  $262 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($253, +HEAPF64[$$0136$lcssa + 24 >> 3] + +HEAPF64[$$0136$lcssa + 64 >> 3] * +HEAPF64[$$0136$lcssa + 32 >> 3]) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $262 + (HEAP32[(HEAP32[$262 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $267 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $271 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$267 >> 2] | 0) + 28 >> 2] & 63]($267, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($262, $271) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($262) | 0;
  $275 = HEAP32[$43 >> 2] | 0;
 }
 HEAP32[$10 >> 2] = 0;
 $272 = $10 + 4 | 0;
 HEAP32[$272 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 do if ((HEAP32[$275 + 32 >> 2] | 0) > 0) {
  $285 = +(HEAP32[$6 + 20 >> 2] | 0) * 1.0e6 + +(HEAP32[$6 + 24 >> 2] | 0);
  $286 = $4 + 4 | 0;
  $287 = $0 + 20 | 0;
  $288 = $4 + 15 | 0;
  $289 = $4 + 14 | 0;
  $290 = $4 + 13 | 0;
  $291 = $4 + 12 | 0;
  $292 = $4 + 8 | 0;
  $293 = $291 + 4 | 0;
  $294 = $4 + 24 | 0;
  $295 = $4 + 40 | 0;
  $296 = $4 + 44 | 0;
  $297 = $4 + 48 | 0;
  $298 = $4 + 64 | 0;
  $299 = $4 + 32 | 0;
  $300 = $4 + 52 | 0;
  $301 = $4 + 56 | 0;
  $302 = $4 + 57 | 0;
  $303 = $$0136$lcssa + 24 | 0;
  $304 = $$0136$lcssa + 64 | 0;
  $305 = $$0136$lcssa + 32 | 0;
  $306 = $5 + 15 | 0;
  $307 = $5 + 14 | 0;
  $308 = $5 + 13 | 0;
  $309 = $5 + 12 | 0;
  $310 = $5 + 8 | 0;
  $311 = $309 + 4 | 0;
  $312 = $5 + 24 | 0;
  $313 = $5 + 40 | 0;
  $314 = $5 + 44 | 0;
  $315 = $5 + 48 | 0;
  $316 = $5 + 64 | 0;
  $317 = $5 + 32 | 0;
  $318 = $5 + 52 | 0;
  $319 = $5 + 56 | 0;
  $320 = $5 + 57 | 0;
  $321 = $5 + 4 | 0;
  $322 = $5 + 8 | 0;
  $323 = $5 + 8 | 0;
  $324 = $0 + 15 | 0;
  $325 = $11 + 4 | 0;
  $326 = $11 + 8 | 0;
  $327 = $0 + 52 | 0;
  $328 = $10 + 8 | 0;
  $329 = $4 + 8 | 0;
  $330 = $11 + 8 | 0;
  $331 = $0 + 44 | 0;
  $332 = $4 + 15 | 0;
  $333 = $4 + 14 | 0;
  $334 = $4 + 13 | 0;
  $335 = $4 + 12 | 0;
  $336 = $4 + 8 | 0;
  $337 = $335 + 4 | 0;
  $338 = $4 + 20 | 0;
  $339 = $4 + 24 | 0;
  $340 = $13 + 4 | 0;
  $341 = $13 + 8 | 0;
  $342 = $12 + 4 | 0;
  $343 = $0 + 28 | 0;
  $344 = $14 + 40 | 0;
  $345 = $11 + 4 | 0;
  $346 = $14 + 44 | 0;
  $347 = $13 + 8 | 0;
  L49 : while (1) {
   _gettimeofday($4 | 0, $5 | 0) | 0;
   if (!((+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$286 >> 2] | 0) - $285) * 1.0e-06 < +HEAPF64[$30 >> 3])) {
    label = 35;
    break;
   }
   $362 = HEAP32[$287 >> 2] | 0;
   $365 = HEAP32[(HEAP32[$362 >> 2] | 0) + 40 >> 2] | 0;
   HEAP8[$293 >> 0] = 0;
   HEAP32[$292 >> 2] = 2;
   HEAP8[$288 >> 0] = 0;
   HEAP8[$291 >> 0] = 1;
   HEAP8[$290 >> 0] = 1;
   HEAP8[$289 >> 0] = 0;
   HEAP32[$4 >> 2] = 4920;
   HEAPF64[$294 >> 3] = +HEAPF64[$26 >> 3];
   HEAP32[$295 >> 2] = 0;
   HEAP32[$296 >> 2] = 0;
   HEAP32[$297 >> 2] = 0;
   HEAPF64[$298 >> 3] = 1.0;
   HEAPF64[$299 >> 3] = 0.0;
   HEAP32[$300 >> 2] = 2;
   HEAP8[$301 >> 0] = 0;
   HEAP8[$302 >> 0] = 0;
   $371 = +HEAPF64[$303 >> 3] + +HEAPF64[$304 >> 3] * +HEAPF64[$305 >> 3];
   HEAP8[$311 >> 0] = 0;
   HEAP32[$310 >> 2] = 2;
   HEAP8[$306 >> 0] = 0;
   HEAP8[$309 >> 0] = 1;
   HEAP8[$308 >> 0] = 1;
   HEAP8[$307 >> 0] = 0;
   HEAP32[$5 >> 2] = 4920;
   HEAPF64[$312 >> 3] = $371;
   HEAP32[$313 >> 2] = 0;
   HEAP32[$314 >> 2] = 0;
   HEAP32[$315 >> 2] = 0;
   HEAPF64[$316 >> 3] = 1.0;
   HEAPF64[$317 >> 3] = 0.0;
   HEAP32[$318 >> 2] = 2;
   HEAP8[$319 >> 0] = 0;
   HEAP8[$320 >> 0] = 0;
   $372 = FUNCTION_TABLE_iiii[$365 & 63]($362, $4, $5) | 0;
   HEAP32[$5 >> 2] = 4920;
   $373 = HEAP32[$313 >> 2] | 0;
   if ($373 | 0) {
    $375 = HEAP32[$314 >> 2] | 0;
    if (($375 | 0) != ($373 | 0)) HEAP32[$314 >> 2] = $375 + (~(($375 + -16 - $373 | 0) >>> 4) << 4);
    __ZdlPv($373);
   }
   HEAP32[$4 >> 2] = 4920;
   $382 = HEAP32[$295 >> 2] | 0;
   if ($382 | 0) {
    $384 = HEAP32[$296 >> 2] | 0;
    if (($384 | 0) != ($382 | 0)) HEAP32[$296 >> 2] = $384 + (~(($384 + -16 - $382 | 0) >>> 4) << 4);
    __ZdlPv($382);
   }
   if (!$372) {
    label = 35;
    break;
   }
   $391 = HEAP32[$43 >> 2] | 0;
   $393 = HEAP32[$391 + 28 >> 2] | 0;
   HEAP32[$5 >> 2] = 0;
   HEAP32[$321 >> 2] = 0;
   HEAP32[$322 >> 2] = 0;
   if (!$393) $$lcssa557 = $391; else {
    if ($393 >>> 0 > 1073741823) {
     label = 49;
     break;
    }
    $398 = __Znwj($393 << 2) | 0;
    HEAP32[$321 >> 2] = $398;
    HEAP32[$5 >> 2] = $398;
    HEAP32[$323 >> 2] = $398 + ($393 << 2);
    $$0$i$i = $393;
    $400 = $398;
    do {
     HEAP32[$400 >> 2] = 0;
     $400 = (HEAP32[$321 >> 2] | 0) + 4 | 0;
     HEAP32[$321 >> 2] = $400;
     $$0$i$i = $$0$i$i + -1 | 0;
    } while (($$0$i$i | 0) != 0);
    $$pre977 = HEAP32[$43 >> 2] | 0;
    if ((HEAP32[$$pre977 + 28 >> 2] | 0) > 0) {
     $$0163904 = 0;
     $412 = $$pre977;
     while (1) {
      $407 = HEAP32[$331 >> 2] | 0;
      $414 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$407 >> 2] | 0) + 44 >> 2] & 63]($407, HEAP32[$412 + 24 >> 2] | 0) | 0;
      $417 = HEAP32[(HEAP32[$7 >> 2] | 0) + ($414 << 2) >> 2] | 0;
      HEAP8[$337 >> 0] = 0;
      HEAP32[$336 >> 2] = 2;
      HEAP8[$332 >> 0] = 0;
      HEAP8[$335 >> 0] = 1;
      HEAP8[$334 >> 0] = 1;
      HEAP8[$333 >> 0] = 0;
      HEAP32[$4 >> 2] = 5136;
      $418 = __Znwj(128) | 0;
      __ZN6RepHFMC2ERKS_($418, HEAP32[$417 + 20 >> 2] | 0);
      HEAP32[$338 >> 2] = $418;
      $422 = HEAP32[$417 + 24 >> 2] | 0;
      if (!$422) $426 = 0; else {
       $424 = __Znwj(4) | 0;
       HEAP32[$424 >> 2] = HEAP32[$422 >> 2];
       $426 = $424;
      }
      HEAP32[$339 >> 2] = $426;
      __ZNSt3__26vectorIN8optframe16NGESIndStructureI6RepHFMiEENS_9allocatorIS4_EEEC2ERKS7_($11, (HEAP32[(HEAP32[$7 >> 2] | 0) + ($414 << 2) >> 2] | 0) + 104 | 0);
      __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($12, (HEAP32[(HEAP32[$7 >> 2] | 0) + ($414 << 2) >> 2] | 0) + 116 | 0);
      __ZN8optframe4NGESI6RepHFMiE14mutateESParamsERNSt3__26vectorINS_16NGESIndStructureIS1_iEENS3_9allocatorIS6_EEEERNS4_IiNS7_IiEEEEi($0, $11, $12, HEAP32[$327 >> 2] | 0);
      HEAP32[$13 >> 2] = 0;
      HEAP32[$340 >> 2] = 0;
      HEAP32[$341 >> 2] = 0;
      $437 = HEAP32[$12 >> 2] | 0;
      $438 = (HEAP32[$342 >> 2] | 0) - $437 | 0;
      $439 = $438 >> 2;
      if (!$439) {
       $878 = 0;
       $879 = 0;
      } else {
       if ($439 >>> 0 > 1073741823) {
        label = 57;
        break L49;
       }
       $442 = __Znwj($438) | 0;
       HEAP32[$340 >> 2] = $442;
       HEAP32[$13 >> 2] = $442;
       HEAP32[$347 >> 2] = $442 + ($439 << 2);
       if (($438 | 0) > 0) {
        _memcpy($442 | 0, $437 | 0, $438 | 0) | 0;
        HEAP32[$340 >> 2] = $442 + ($438 >>> 2 << 2);
        $878 = $442;
        $879 = $442;
       } else {
        $878 = $442;
        $879 = $442;
       }
      }
      $448 = HEAP32[$327 >> 2] | 0;
      if (($448 | 0) > 0) {
       $$032$i = 0;
       $451 = $879;
       do {
        $452 = HEAP32[$451 + ($$032$i << 2) >> 2] | 0;
        $453 = HEAP32[$331 >> 2] | 0;
        $457 = +FUNCTION_TABLE_di[HEAP32[(HEAP32[$453 >> 2] | 0) + 56 >> 2] & 7]($453);
        $458 = HEAP32[$11 >> 2] | 0;
        do if ($457 < +HEAPF64[$458 + ($452 << 5) >> 3]) {
         if ((HEAP32[$458 + ($452 << 5) + 8 >> 2] | 0) > 0) $$03031$i = 0; else break;
         do {
          $467 = HEAP32[(HEAP32[$343 >> 2] | 0) + ($452 << 2) >> 2] | 0;
          $473 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$467 >> 2] | 0) + 36 >> 2] & 63]($467, HEAP32[$338 >> 2] | 0, HEAP32[$339 >> 2] | 0) | 0;
          do if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$473 >> 2] | 0) + 36 >> 2] & 63]($473, HEAP32[$338 >> 2] | 0, HEAP32[$339 >> 2] | 0) | 0) {
           $485 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$473 >> 2] | 0) + 44 >> 2] & 63]($473, HEAP32[$338 >> 2] | 0, HEAP32[$339 >> 2] | 0) | 0;
           if (!$485) break;
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$485 >> 2] | 0) + 4 >> 2] & 511]($485);
          } while (0);
          FUNCTION_TABLE_vi[HEAP32[(HEAP32[$473 >> 2] | 0) + 4 >> 2] & 511]($473);
          $$03031$i = $$03031$i + 1 | 0;
         } while (($$03031$i | 0) < (HEAP32[(HEAP32[$11 >> 2] | 0) + ($452 << 5) + 8 >> 2] | 0));
        } while (0);
        $$032$i = $$032$i + 1 | 0;
        $451 = HEAP32[$13 >> 2] | 0;
       } while (($$032$i | 0) != ($448 | 0));
       $499 = $451;
       $508 = $451;
      } else {
       $499 = $879;
       $508 = $878;
      }
      if ($499 | 0) {
       $501 = HEAP32[$340 >> 2] | 0;
       if (($501 | 0) != ($499 | 0)) HEAP32[$340 >> 2] = $501 + (~(($501 + -4 - $499 | 0) >>> 2) << 2);
       __ZdlPv($508);
      }
      $509 = HEAP32[$287 >> 2] | 0;
      FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$509 >> 2] | 0) + 76 >> 2] & 31]($14, $509, HEAP32[$338 >> 2] | 0, HEAP32[$339 >> 2] | 0);
      $515 = __Znwj(128) | 0;
      __ZN8optframe7NGESIndI6RepHFMiEC2ERNS_8SolutionIS1_iEERNS_10EvaluationERNSt3__26vectorINS_16NGESIndStructureIS1_iEENS8_9allocatorISB_EEEERNS9_IiNSC_IiEEEE($515, $4, $14, $11, $12);
      HEAP32[(HEAP32[$5 >> 2] | 0) + ($$0163904 << 2) >> 2] = $515;
      HEAP32[$14 >> 2] = 4920;
      $518 = HEAP32[$344 >> 2] | 0;
      if ($518 | 0) {
       $520 = HEAP32[$346 >> 2] | 0;
       if (($520 | 0) != ($518 | 0)) HEAP32[$346 >> 2] = $520 + (~(($520 + -16 - $518 | 0) >>> 4) << 4);
       __ZdlPv($518);
      }
      $527 = HEAP32[$12 >> 2] | 0;
      if ($527 | 0) {
       $529 = HEAP32[$342 >> 2] | 0;
       if (($529 | 0) != ($527 | 0)) HEAP32[$342 >> 2] = $529 + (~(($529 + -4 - $527 | 0) >>> 2) << 2);
       __ZdlPv($527);
      }
      $536 = HEAP32[$11 >> 2] | 0;
      if ($536 | 0) {
       $538 = HEAP32[$345 >> 2] | 0;
       if (($538 | 0) != ($536 | 0)) HEAP32[$345 >> 2] = $538 + (~(($538 + -32 - $536 | 0) >>> 5) << 5);
       __ZdlPv($536);
      }
      HEAP32[$4 >> 2] = 5136;
      $545 = HEAP32[$338 >> 2] | 0;
      if ($545 | 0) {
       __ZN6RepHFMD2Ev($545);
       __ZdlPv($545);
      }
      $547 = HEAP32[$339 >> 2] | 0;
      if ($547 | 0) __ZdlPv($547);
      $$0163904 = $$0163904 + 1 | 0;
      $550 = HEAP32[$43 >> 2] | 0;
      if (($$0163904 | 0) >= (HEAP32[$550 + 28 >> 2] | 0)) {
       $$lcssa557 = $550;
       break;
      } else $412 = $550;
     }
    } else $$lcssa557 = $$pre977;
   }
   switch (HEAP32[$$lcssa557 + 12 >> 2] | 0) {
   case 0:
    {
     __ZN8optframe4NGESI6RepHFMiE11competitionERNSt3__26vectorIPNS_7NGESIndIS1_iEENS3_9allocatorIS7_EEEESB_RNS_8SolutionIS1_iEERNS_10EvaluationERiRKii($0, $7, $5, $$0$lcssa, $$0136$lcssa, $8, $9, 0);
     break;
    }
   case 1:
    {
     __ZN8optframe4NGESI6RepHFMiE11competitionERNSt3__26vectorIPNS_7NGESIndIS1_iEENS3_9allocatorIS7_EEEESB_RNS_8SolutionIS1_iEERNS_10EvaluationERiRKii($0, $7, $5, $$0$lcssa, $$0136$lcssa, $8, $9, 1);
     break;
    }
   default:
    {
     $554 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17548, 31) | 0;
     __ZNKSt3__28ios_base6getlocEv($4, $554 + (HEAP32[(HEAP32[$554 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $559 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
     $563 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$559 >> 2] | 0) + 28 >> 2] & 63]($559, 10) | 0;
     __ZNSt3__26localeD2Ev($4);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($554, $563) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($554) | 0;
     _getchar() | 0;
    }
   }
   if (HEAP8[$324 >> 0] | 0) {
    HEAP32[$11 >> 2] = 0;
    HEAP32[$325 >> 2] = 0;
    HEAP32[$326 >> 2] = 0;
    if ((HEAP32[$327 >> 2] | 0) > 0) {
     $$0161913 = 0;
     do {
      $570 = HEAP32[(HEAP32[$43 >> 2] | 0) + 24 >> 2] | 0;
      if (($570 | 0) > 0) {
       $572 = HEAP32[$7 >> 2] | 0;
       $$0160908 = 0;
       $$0456907 = 0.0;
       $$0457906 = 0.0;
       while (1) {
        $599 = HEAP32[(HEAP32[$572 + ($$0160908 << 2) >> 2] | 0) + 104 >> 2] | 0;
        $602 = $$0457906 + +HEAPF64[$599 + ($$0161913 << 5) >> 3];
        $606 = $$0456907 + +(HEAP32[$599 + ($$0161913 << 5) + 8 >> 2] | 0);
        $$0160908 = $$0160908 + 1 | 0;
        if (($$0160908 | 0) >= ($570 | 0)) {
         $$0456$lcssa = $606;
         $$0457$lcssa = $602;
         break;
        } else {
         $$0456907 = $606;
         $$0457906 = $602;
        }
       }
      } else {
       $$0456$lcssa = 0.0;
       $$0457$lcssa = 0.0;
      }
      $609 = +($570 | 0);
      HEAPF64[$4 >> 3] = $$0457$lcssa / $609;
      HEAPF64[$329 >> 3] = $$0456$lcssa / $609;
      $612 = HEAP32[$325 >> 2] | 0;
      if ($612 >>> 0 < (HEAP32[$330 >> 2] | 0) >>> 0) {
       HEAP32[$612 >> 2] = HEAP32[$4 >> 2];
       HEAP32[$612 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
       HEAP32[$612 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
       HEAP32[$612 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
       HEAP32[$325 >> 2] = $612 + 16;
      } else __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($11, $4);
      $$0161913 = $$0161913 + 1 | 0;
     } while (($$0161913 | 0) < (HEAP32[$327 >> 2] | 0));
    }
    $573 = HEAP32[$272 >> 2] | 0;
    if (($573 | 0) == (HEAP32[$328 >> 2] | 0)) __ZNSt3__26vectorINS0_INS_4pairIddEENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($10, $11); else {
     HEAP32[$573 >> 2] = 0;
     $576 = $573 + 4 | 0;
     HEAP32[$576 >> 2] = 0;
     HEAP32[$573 + 8 >> 2] = 0;
     $580 = (HEAP32[$325 >> 2] | 0) - (HEAP32[$11 >> 2] | 0) | 0;
     $581 = $580 >> 4;
     if (!$581) $595 = $573; else {
      if ($581 >>> 0 > 268435455) {
       label = 100;
       break;
      }
      $584 = __Znwj($580) | 0;
      HEAP32[$576 >> 2] = $584;
      HEAP32[$573 >> 2] = $584;
      HEAP32[$573 + 8 >> 2] = $584 + ($581 << 4);
      $587 = HEAP32[$11 >> 2] | 0;
      $590 = (HEAP32[$325 >> 2] | 0) - $587 | 0;
      if (($590 | 0) > 0) {
       _memcpy($584 | 0, $587 | 0, $590 | 0) | 0;
       HEAP32[$576 >> 2] = $584 + ($590 >>> 4 << 4);
       $595 = HEAP32[$272 >> 2] | 0;
      } else $595 = $573;
     }
     HEAP32[$272 >> 2] = $595 + 12;
    }
    $620 = (HEAP32[$43 >> 2] | 0) + 36 | 0;
    if ((HEAP8[$620 + 11 >> 0] | 0) < 0) $625 = HEAP32[$620 >> 2] | 0; else $625 = $620;
    $626 = _fopen($625, 17580) | 0;
    if (!$626) {
     $628 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17582, 47) | 0;
     __ZNKSt3__28ios_base6getlocEv($4, $628 + (HEAP32[(HEAP32[$628 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $633 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
     $637 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$633 >> 2] | 0) + 28 >> 2] & 63]($633, 10) | 0;
     __ZNSt3__26localeD2Ev($4);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($628, $637) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($628) | 0;
    } else {
     $641 = HEAP32[$9 >> 2] | 0;
     HEAP32[$vararg_buffer >> 2] = HEAP32[(HEAP32[$43 >> 2] | 0) + 48 >> 2];
     HEAP32[$vararg_buffer + 4 >> 2] = $641;
     _fprintf($626, 17630, $vararg_buffer) | 0;
     if ((HEAP32[$327 >> 2] | 0) > 0) {
      $$0158917 = 0;
      do {
       $644 = HEAP32[$11 >> 2] | 0;
       $646 = +HEAPF64[$644 + ($$0158917 << 4) >> 3];
       $648 = +HEAPF64[$644 + ($$0158917 << 4) + 8 >> 3];
       HEAPF64[$vararg_buffer2 >> 3] = $646;
       HEAPF64[$vararg_buffer2 + 8 >> 3] = $648;
       HEAPF64[$vararg_buffer2 + 16 >> 3] = $646 * $648;
       _fprintf($626, 17637, $vararg_buffer2) | 0;
       $$0158917 = $$0158917 + 1 | 0;
      } while (($$0158917 | 0) < (HEAP32[$327 >> 2] | 0));
     }
     _fputc(10, $626) | 0;
     _fclose($626) | 0;
    }
    $653 = HEAP32[$11 >> 2] | 0;
    if ($653 | 0) {
     $655 = HEAP32[$325 >> 2] | 0;
     if (($655 | 0) != ($653 | 0)) HEAP32[$325 >> 2] = $655 + (~(($655 + -16 - $653 | 0) >>> 4) << 4);
     __ZdlPv($653);
    }
   }
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
   $664 = HEAP32[$5 >> 2] | 0;
   if ($664 | 0) {
    $666 = HEAP32[$321 >> 2] | 0;
    if (($666 | 0) != ($664 | 0)) HEAP32[$321 >> 2] = $666 + (~(($666 + -4 - $664 | 0) >>> 2) << 2);
    __ZdlPv($664);
   }
   if ((HEAP32[$8 >> 2] | 0) >= (HEAP32[(HEAP32[$43 >> 2] | 0) + 32 >> 2] | 0)) {
    label = 35;
    break;
   }
  }
  if ((label | 0) == 35) {
   $359 = HEAP32[$43 >> 2] | 0;
   break;
  } else if ((label | 0) == 49) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($5); else if ((label | 0) == 57) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($13); else if ((label | 0) == 100) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($573);
 } else $359 = $275; while (0);
 if ((HEAP32[$359 + 24 >> 2] | 0) > 0) {
  $$0135903 = 0;
  $877 = $359;
  while (1) {
   $797 = HEAP32[(HEAP32[$7 >> 2] | 0) + ($$0135903 << 2) >> 2] | 0;
   if (!$797) $801 = $877; else {
    __ZN8optframe7NGESIndI6RepHFMiED2Ev($797);
    __ZdlPv($797);
    $801 = HEAP32[$43 >> 2] | 0;
   }
   $$0135903 = $$0135903 + 1 | 0;
   if (($$0135903 | 0) >= (HEAP32[$801 + 24 >> 2] | 0)) break; else $877 = $801;
  }
 }
 $678 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17647, 37) | 0;
 $681 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($678, HEAP32[$8 >> 2] | 0) | 0, 17685, 1) | 0;
 $685 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($681, HEAP32[(HEAP32[$43 >> 2] | 0) + 32 >> 2] | 0) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $685 + (HEAP32[(HEAP32[$685 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $690 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $694 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$690 >> 2] | 0) + 28 >> 2] & 63]($690, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($685, $694) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($685) | 0;
 $695 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17687, 9) | 0;
 $696 = $$0136$lcssa + 24 | 0;
 $698 = $$0136$lcssa + 64 | 0;
 $700 = $$0136$lcssa + 32 | 0;
 $705 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($695, +HEAPF64[$696 >> 3] + +HEAPF64[$698 >> 3] * +HEAPF64[$700 >> 3]) | 0, 17685, 1) | 0;
 $707 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($705, +HEAPF64[$26 >> 3]) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $707 + (HEAP32[(HEAP32[$707 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $712 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $716 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$712 >> 2] | 0) + 28 >> 2] & 63]($712, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($707, $716) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($707) | 0;
 $717 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17697, 11) | 0;
 _gettimeofday($4 | 0, $5 | 0) | 0;
 $725 = +(HEAP32[$6 + 20 >> 2] | 0) * 1.0e6 + +(HEAP32[$6 + 24 >> 2] | 0);
 $736 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($717, (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$4 + 4 >> 2] | 0) - $725) * 1.0e-06) | 0, 17685, 1) | 0;
 $738 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($736, +HEAPF64[$30 >> 3]) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $738 + (HEAP32[(HEAP32[$738 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $743 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $747 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$743 >> 2] | 0) + 28 >> 2] & 63]($743, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($738, $747) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($738) | 0;
 $748 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17709, 2) | 0;
 $750 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($748, HEAP32[$9 >> 2] | 0) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $750 + (HEAP32[(HEAP32[$750 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $755 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $759 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$755 >> 2] | 0) + 28 >> 2] & 63]($755, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($750, $759) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($750) | 0;
 $760 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17712, 13) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $760 + (HEAP32[(HEAP32[$760 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $765 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $769 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$765 >> 2] | 0) + 28 >> 2] & 63]($765, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($760, $769) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($760) | 0;
 $770 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17726, 74) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $770 + (HEAP32[(HEAP32[$770 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $775 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $779 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$775 >> 2] | 0) + 28 >> 2] & 63]($775, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($770, $779) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($770) | 0;
 $780 = __Znwj(104) | 0;
 HEAP8[$780 + 16 >> 0] = 0;
 HEAP32[$780 + 8 >> 2] = 2;
 HEAP8[$780 + 15 >> 0] = 0;
 HEAP8[$780 + 12 >> 0] = 1;
 HEAP8[$780 + 13 >> 0] = 1;
 HEAP8[$780 + 14 >> 0] = 0;
 HEAP32[$780 >> 2] = 5136;
 $788 = __Znwj(128) | 0;
 __ZN6RepHFMC2ERKS_($788, HEAP32[$$0$lcssa + 20 >> 2] | 0);
 HEAP32[$780 + 20 >> 2] = $788;
 $793 = HEAP32[$$0$lcssa + 24 >> 2] | 0;
 if (!$793) $806 = 0; else {
  $804 = __Znwj(4) | 0;
  HEAP32[$804 >> 2] = HEAP32[$793 >> 2];
  $806 = $804;
 }
 HEAP32[$780 + 24 >> 2] = $806;
 HEAP8[$780 + 48 >> 0] = 0;
 HEAP32[$780 + 40 >> 2] = 2;
 HEAP8[$780 + 47 >> 0] = 0;
 HEAP8[$780 + 44 >> 0] = 1;
 HEAP8[$780 + 45 >> 0] = 1;
 HEAP8[$780 + 46 >> 0] = 0;
 HEAP32[$780 + 32 >> 2] = 4920;
 HEAPF64[$780 + 56 >> 3] = +HEAPF64[$696 >> 3];
 HEAPF64[$780 + 64 >> 3] = +HEAPF64[$700 >> 3];
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($780 + 72 | 0, $$0136$lcssa + 40 | 0);
 HEAP32[$780 + 84 >> 2] = HEAP32[$$0136$lcssa + 52 >> 2];
 HEAP8[$780 + 88 >> 0] = HEAP8[$$0136$lcssa + 56 >> 0] | 0;
 HEAP8[$780 + 89 >> 0] = HEAP8[$$0136$lcssa + 57 >> 0] | 0;
 HEAPF64[$780 + 96 >> 3] = +HEAPF64[$698 >> 3];
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$0$lcssa >> 2] | 0) + 4 >> 2] & 511]($$0$lcssa);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$0136$lcssa >> 2] | 0) + 4 >> 2] & 511]($$0136$lcssa);
 $837 = HEAP32[$10 >> 2] | 0;
 if ($837 | 0) {
  $839 = HEAP32[$272 >> 2] | 0;
  if (($839 | 0) == ($837 | 0)) $855 = $837; else {
   $842 = $839;
   while (1) {
    $841 = $842 + -12 | 0;
    HEAP32[$272 >> 2] = $841;
    $843 = HEAP32[$841 >> 2] | 0;
    if (!$843) $845 = $841; else {
     $847 = $842 + -8 | 0;
     $848 = HEAP32[$847 >> 2] | 0;
     if (($848 | 0) != ($843 | 0)) HEAP32[$847 >> 2] = $848 + (~(($848 + -16 - $843 | 0) >>> 4) << 4);
     __ZdlPv($843);
     $845 = HEAP32[$272 >> 2] | 0;
    }
    if (($845 | 0) == ($837 | 0)) break; else $842 = $845;
   }
   $855 = HEAP32[$10 >> 2] | 0;
  }
  __ZdlPv($855);
 }
 $856 = HEAP32[$7 >> 2] | 0;
 if ($856 | 0) {
  $858 = HEAP32[$23 >> 2] | 0;
  if (($858 | 0) != ($856 | 0)) HEAP32[$23 >> 2] = $858 + (~(($858 + -4 - $856 | 0) >>> 2) << 2);
  __ZdlPv($856);
 }
 HEAP32[$6 >> 2] = 5092;
 if (!(HEAP8[$21 >> 0] | 0)) {
  STACKTOP = sp;
  return $780 | 0;
 }
 _gettimeofday($4 | 0, $5 | 0) | 0;
 HEAPF64[$vararg_buffer7 >> 3] = (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$4 + 4 >> 2] | 0) - $725) * 1.0e-06;
 _printf(17801, $vararg_buffer7) | 0;
 STACKTOP = sp;
 return $780 | 0;
}

function __ZN3HFM15ConstructiveACF19generateSolutionACFEfd($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 var $$$1 = 0, $$$4 = 0, $$$7 = 0, $$$7$1 = 0, $$0$lcssa = 0, $$0102119$i = 0.0, $$0106117$i = 0.0, $$0121$i = 0, $$0182827 = 0, $$0225828 = 0, $$0226840 = 0, $$0228834 = 0, $$0229849 = 0, $$070120$i = 0, $$071129$i = 0, $$072135$i = 0, $$073118$i = 0, $$0858 = 0, $$1$i = 0, $$1$lcssa = 0, $$1103$i = 0.0, $$1107$i = 0.0, $$1829 = 0, $$2104134$i = 0.0, $$2108128$i = 0.0, $$2136$i = 0, $$3$i = 0, $$3$lcssa = 0, $$3105$i = 0.0, $$3109$i = 0.0, $$3841 = 0, $$4$lcssa = 0, $$4$sink$i = 0.0, $$4$sink$i293 = 0.0, $$4835 = 0, $$6$lcssa = 0, $$6850 = 0, $$lcssa636 = 0, $$lcssa645 = 0, $$lcssa700 = 0, $$lcssa714 = 0, $$pre = 0, $$pre$i292 = 0, $$pre146$i = 0, $$pre952 = 0, $$pre957 = 0, $$sink110$i = 0.0, $$sink110$i294 = 0.0, $10 = 0, $102 = 0, $104 = 0, $106 = 0, $11 = 0, $110 = 0, $112 = 0, $118 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0.0, $125 = 0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0, $135 = 0, $137 = 0, $14 = 0, $140 = 0, $142 = 0, $144 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $155 = 0, $156 = 0, $159 = 0, $16 = 0, $164 = 0, $165 = 0, $172 = 0, $176 = 0.0, $177 = 0, $181 = 0.0, $182 = 0, $184 = 0, $187 = 0, $189 = 0, $190 = 0, $191 = 0, $208 = 0.0, $209 = 0.0, $21 = 0, $218 = 0.0, $22 = 0, $23 = 0, $238 = 0.0, $239 = 0.0, $248 = 0.0, $25 = 0, $252 = 0, $256 = 0, $260 = 0, $264 = 0.0, $265 = 0, $269 = 0.0, $27 = 0, $270 = 0, $274 = 0, $281 = 0, $284 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $293 = 0, $296 = 0, $299 = 0, $3 = 0, $304 = 0, $305 = 0, $307 = 0, $31 = 0, $316 = 0, $319 = 0, $321 = 0, $323 = 0, $324 = 0, $325 = 0, $327 = 0, $33 = 0, $330 = 0, $334 = 0, $335 = 0, $338 = 0, $341 = 0, $344 = 0, $349 = 0, $350 = 0, $354 = 0, $359 = 0, $36 = 0, $360 = 0, $363 = 0, $368 = 0, $369 = 0, $37 = 0, $378 = 0, $38 = 0, $382 = 0.0, $383 = 0, $387 = 0.0, $388 = 0, $39 = 0, $392 = 0.0, $393 = 0, $397 = 0.0, $398 = 0, $4 = 0, $40 = 0, $402 = 0, $409 = 0, $41 = 0, $412 = 0, $415 = 0, $416 = 0, $417 = 0, $42 = 0, $421 = 0, $424 = 0, $427 = 0, $43 = 0, $432 = 0, $433 = 0, $435 = 0, $44 = 0, $442 = 0, $444 = 0, $45 = 0, $453 = 0, $456 = 0, $459 = 0, $46 = 0, $463 = 0, $468 = 0, $469 = 0, $47 = 0, $472 = 0, $473 = 0, $477 = 0, $478 = 0, $48 = 0, $481 = 0, $484 = 0, $487 = 0, $49 = 0, $492 = 0, $493 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $506 = 0, $51 = 0, $510 = 0, $515 = 0, $516 = 0, $519 = 0, $52 = 0, $523 = 0.0, $524 = 0, $528 = 0.0, $529 = 0, $53 = 0, $533 = 0.0, $534 = 0, $538 = 0.0, $539 = 0, $54 = 0, $543 = 0, $55 = 0, $550 = 0, $553 = 0, $556 = 0, $557 = 0, $558 = 0, $56 = 0, $562 = 0, $565 = 0, $568 = 0, $57 = 0, $573 = 0, $574 = 0, $576 = 0, $58 = 0, $583 = 0, $585 = 0, $59 = 0, $594 = 0, $595 = 0, $6 = 0, $60 = 0, $602 = 0, $61 = 0, $610 = 0, $612 = 0, $614 = 0, $618 = 0, $62 = 0, $624 = 0, $628 = 0, $629 = 0, $63 = 0, $633 = 0, $637 = 0.0, $638 = 0, $644 = 0, $651 = 0, $653 = 0, $660 = 0, $662 = 0, $664 = 0, $665 = 0, $666 = 0, $668 = 0, $670 = 0, $671 = 0, $678 = 0, $679 = 0, $681 = 0, $683 = 0, $684 = 0, $685 = 0, $687 = 0, $689 = 0, $690 = 0, $697 = 0, $698 = 0, $7 = 0, $700 = 0, $702 = 0, $703 = 0, $704 = 0, $706 = 0, $708 = 0, $709 = 0, $716 = 0, $717 = 0, $719 = 0, $721 = 0, $722 = 0, $723 = 0, $725 = 0, $727 = 0, $728 = 0, $735 = 0, $736 = 0, $738 = 0, $740 = 0, $741 = 0, $742 = 0, $744 = 0, $746 = 0, $747 = 0, $754 = 0, $755 = 0, $757 = 0, $764 = 0, $766 = 0, $767 = 0, $769 = 0, $770 = 0, $771 = 0, $773 = 0, $775 = 0, $776 = 0, $783 = 0, $784 = 0, $789 = 0, $790 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $81 = 0, $89 = 0, $9 = 0, $93 = 0.0, $94 = 0, $storemerge854 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $3 = sp + 240 | 0;
 $4 = sp + 228 | 0;
 $5 = sp + 216 | 0;
 $6 = sp + 204 | 0;
 $7 = sp + 192 | 0;
 $8 = sp + 180 | 0;
 $9 = sp + 168 | 0;
 $10 = sp + 24 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 156 | 0;
 $13 = sp + 152 | 0;
 $14 = sp;
 $15 = $0 + 20 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 $21 = (HEAP32[$16 + 8 >> 2] | 0) - (HEAP32[$16 + 4 >> 2] | 0) | 0;
 $22 = ($21 | 0) / 12 | 0;
 __ZN3HFM15ConstructiveACF17returnRLCUsingACFEv($3, $0);
 HEAP32[$4 >> 2] = 0;
 $23 = $4 + 4 | 0;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$5 >> 2] = 0;
 $25 = $5 + 4 | 0;
 HEAP32[$25 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 $27 = $6 + 4 | 0;
 HEAP32[$27 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$7 >> 2] = 0;
 $29 = $7 + 4 | 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 $31 = $8 + 4 | 0;
 HEAP32[$31 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 HEAP32[$9 >> 2] = 0;
 $33 = $9 + 4 | 0;
 HEAP32[$33 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 do if (($21 | 0) > 0) {
  $36 = $0 + 124 | 0;
  $37 = $0 + 128 | 0;
  $38 = $0 + 132 | 0;
  $39 = $0 + 136 | 0;
  $40 = $10 + 4 | 0;
  $41 = $10 + 8 | 0;
  $42 = $11 + 4 | 0;
  $43 = $10 + 8 | 0;
  $44 = $8 + 8 | 0;
  $45 = $11 + 4 | 0;
  $46 = $11 + 8 | 0;
  $47 = $9 + 8 | 0;
  $48 = $10 + 4 | 0;
  $49 = $10 + 8 | 0;
  $50 = $6 + 8 | 0;
  $51 = $11 + 4 | 0;
  $52 = $11 + 8 | 0;
  $53 = $7 + 8 | 0;
  $54 = $11 + 4 | 0;
  $55 = $10 + 8 | 0;
  $56 = $10 + 4 | 0;
  $57 = $4 + 8 | 0;
  $58 = $10 + 4 | 0;
  $59 = $10 + 8 | 0;
  $60 = $5 + 8 | 0;
  $$0858 = 0;
  $storemerge854 = 0;
  L3 : while (1) {
   $112 = HEAP32[$3 >> 2] | 0;
   $118 = (HEAP32[$112 + ($storemerge854 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$112 + ($storemerge854 * 12 | 0) >> 2] | 0) >> 4;
   $119 = HEAP32[$15 >> 2] | 0;
   $121 = HEAP32[$119 + 16 >> 2] | 0;
   $123 = +HEAPF64[$121 + ($storemerge854 << 3) >> 3];
   $125 = HEAP32[$119 + 40 >> 2] | 0;
   $127 = +HEAPF64[$125 + ($storemerge854 << 3) >> 3];
   $128 = +HEAPF64[$121 >> 3];
   $129 = +HEAPF64[$125 >> 3];
   $130 = HEAP32[$36 >> 2] | 0;
   $135 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$130 >> 2] | 0) + 44 >> 2] & 63]($130, HEAP32[$37 >> 2] | 0) | 0;
   $137 = HEAP32[$36 >> 2] | 0;
   $140 = HEAP32[(HEAP32[$137 >> 2] | 0) + 44 >> 2] | 0;
   if (($135 | 0) > 0) {
    $$0225828 = 0;
    $$1829 = $$0858;
    $148 = $140;
    $149 = $137;
    while (1) {
     $150 = FUNCTION_TABLE_iii[$148 & 63]($149, $118) | 0;
     $155 = HEAP32[(HEAP32[(HEAP32[$3 >> 2] | 0) + ($storemerge854 * 12 | 0) >> 2] | 0) + ($150 << 4) + 8 >> 2] | 0;
     HEAP32[$10 >> 2] = $storemerge854;
     HEAP32[$56 >> 2] = $155;
     $156 = HEAP32[$23 >> 2] | 0;
     if ($156 >>> 0 < (HEAP32[$57 >> 2] | 0) >>> 0) {
      $159 = $10;
      $164 = HEAP32[$159 + 4 >> 2] | 0;
      $165 = $156;
      HEAP32[$165 >> 2] = HEAP32[$159 >> 2];
      HEAP32[$165 + 4 >> 2] = $164;
      HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($4, $10);
     $$$1 = ($155 | 0) > ($$1829 | 0) ? $155 : $$1829;
     $172 = HEAP32[$36 >> 2] | 0;
     $176 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$172 >> 2] | 0) + 68 >> 2] & 1]($172, $123, $127);
     $177 = HEAP32[$36 >> 2] | 0;
     $181 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$177 >> 2] | 0) + 68 >> 2] & 1]($177, $123, $127);
     $182 = HEAP32[$15 >> 2] | 0;
     $184 = HEAP32[$182 + 4 >> 2] | 0;
     $187 = HEAP32[$184 >> 2] | 0;
     $189 = (HEAP32[$184 + 4 >> 2] | 0) - $187 >> 3;
     $190 = ($189 | 0) > ($155 | 0);
     $191 = $187;
     if ($190) {
      $$pre146$i = HEAP32[$184 + ($storemerge854 * 12 | 0) >> 2] | 0;
      $$0102119$i = 0.0;
      $$0121$i = 0;
      $$070120$i = $155;
      while (1) {
       if (!(+HEAPF64[$$pre146$i + ($$070120$i - $155 << 3) >> 3] >= $176)) {
        $$1$i = $$0121$i;
        $$1103$i = $$0102119$i;
       } else {
        $$1$i = $$0121$i + 1 | 0;
        $$1103$i = $$0102119$i + +HEAPF64[$191 + ($$070120$i << 3) >> 3];
       }
       $$070120$i = $$070120$i + 1 | 0;
       if (($$070120$i | 0) == ($189 | 0)) break; else {
        $$0102119$i = $$1103$i;
        $$0121$i = $$1$i;
       }
      }
      if (!$$1$i) label = 16; else {
       $208 = +($$1$i | 0);
       $209 = $$1103$i / $208;
       $$0106117$i = 0.0;
       $$073118$i = $155;
       while (1) {
        if (!(+HEAPF64[$$pre146$i + ($$073118$i - $155 << 3) >> 3] >= $176)) $$1107$i = $$0106117$i; else {
         $218 = +HEAPF64[$191 + ($$073118$i << 3) >> 3] - $209;
         $$1107$i = $$0106117$i + $218 * $218;
        }
        $$073118$i = $$073118$i + 1 | 0;
        if (($$073118$i | 0) == ($189 | 0)) break; else $$0106117$i = $$1107$i;
       }
       $$4$sink$i = $209;
       $$sink110$i = +Math_sqrt(+($$1107$i / $208));
      }
     } else label = 16;
     if ((label | 0) == 16) {
      label = 0;
      $$4$sink$i = +HEAPF64[HEAP32[$182 + 16 >> 2] >> 3];
      $$sink110$i = +HEAPF64[HEAP32[$182 + 40 >> 2] >> 3];
     }
     if ($190) {
      $$pre$i292 = HEAP32[$184 + ($storemerge854 * 12 | 0) >> 2] | 0;
      $$072135$i = $155;
      $$2104134$i = 0.0;
      $$2136$i = 0;
      while (1) {
       if (!(+HEAPF64[$$pre$i292 + ($$072135$i - $155 << 3) >> 3] <= $181)) {
        $$3$i = $$2136$i;
        $$3105$i = $$2104134$i;
       } else {
        $$3$i = $$2136$i + 1 | 0;
        $$3105$i = $$2104134$i + +HEAPF64[$191 + ($$072135$i << 3) >> 3];
       }
       $$072135$i = $$072135$i + 1 | 0;
       if (($$072135$i | 0) == ($189 | 0)) break; else {
        $$2104134$i = $$3105$i;
        $$2136$i = $$3$i;
       }
      }
      if (!$$3$i) label = 28; else {
       $238 = +($$3$i | 0);
       $239 = $$3105$i / $238;
       $$071129$i = $155;
       $$2108128$i = 0.0;
       while (1) {
        if (!(+HEAPF64[$$pre$i292 + ($$071129$i - $155 << 3) >> 3] <= $181)) $$3109$i = $$2108128$i; else {
         $248 = +HEAPF64[$191 + ($$071129$i << 3) >> 3] - $239;
         $$3109$i = $$2108128$i + $248 * $248;
        }
        $$071129$i = $$071129$i + 1 | 0;
        if (($$071129$i | 0) == ($189 | 0)) break; else $$2108128$i = $$3109$i;
       }
       $$4$sink$i293 = $239;
       $$sink110$i294 = +Math_sqrt(+($$3109$i / $238));
      }
     } else label = 28;
     if ((label | 0) == 28) {
      label = 0;
      $$4$sink$i293 = +HEAPF64[HEAP32[$182 + 16 >> 2] >> 3];
      $$sink110$i294 = +HEAPF64[HEAP32[$182 + 40 >> 2] >> 3];
     }
     $252 = HEAP32[$36 >> 2] | 0;
     +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$252 >> 2] | 0) + 68 >> 2] & 1]($252, $$4$sink$i, $$sink110$i);
     $256 = HEAP32[$36 >> 2] | 0;
     +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$256 >> 2] | 0) + 68 >> 2] & 1]($256, $$4$sink$i293, $$sink110$i294);
     $260 = HEAP32[$36 >> 2] | 0;
     $264 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$260 >> 2] | 0) + 68 >> 2] & 1]($260, $$sink110$i, $$sink110$i);
     $265 = HEAP32[$36 >> 2] | 0;
     $269 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$265 >> 2] | 0) + 68 >> 2] & 1]($265, $$sink110$i294, $$sink110$i294);
     $270 = HEAP32[$36 >> 2] | 0;
     $274 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$270 >> 2] | 0) + 44 >> 2] & 63]($270, 2) | 0;
     HEAP32[$10 >> 2] = 0;
     HEAP32[$58 >> 2] = 0;
     HEAP32[$59 >> 2] = 0;
     __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEj($10, 6);
     $$pre = HEAP32[$10 >> 2] | 0;
     HEAPF64[$$pre >> 3] = $176;
     HEAPF64[$$pre + 8 >> 3] = $264;
     HEAPF64[$$pre + 16 >> 3] = $181;
     HEAPF64[$$pre + 24 >> 3] = $269;
     HEAPF64[$$pre + 32 >> 3] = 1.0;
     HEAPF64[$$pre + 40 >> 3] = +($274 | 0);
     $281 = HEAP32[$25 >> 2] | 0;
     if (($281 | 0) == (HEAP32[$60 >> 2] | 0)) {
      __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($5, $10);
      $305 = HEAP32[$10 >> 2] | 0;
     } else {
      HEAP32[$281 >> 2] = 0;
      $284 = $281 + 4 | 0;
      HEAP32[$284 >> 2] = 0;
      HEAP32[$281 + 8 >> 2] = 0;
      $287 = HEAP32[$10 >> 2] | 0;
      $288 = (HEAP32[$58 >> 2] | 0) - $287 | 0;
      $289 = $288 >> 3;
      if (!$289) {
       $304 = $281;
       $799 = $287;
      } else {
       if ($289 >>> 0 > 536870911) {
        label = 37;
        break L3;
       }
       $293 = __Znwj($288) | 0;
       HEAP32[$284 >> 2] = $293;
       HEAP32[$281 >> 2] = $293;
       HEAP32[$281 + 8 >> 2] = $293 + ($289 << 3);
       $296 = HEAP32[$10 >> 2] | 0;
       $299 = (HEAP32[$58 >> 2] | 0) - $296 | 0;
       if (($299 | 0) > 0) {
        _memcpy($293 | 0, $296 | 0, $299 | 0) | 0;
        HEAP32[$284 >> 2] = $293 + ($299 >>> 3 << 3);
        $304 = HEAP32[$25 >> 2] | 0;
        $799 = $296;
       } else {
        $304 = $281;
        $799 = $296;
       }
      }
      HEAP32[$25 >> 2] = $304 + 12;
      $305 = $799;
     }
     if ($305 | 0) {
      $307 = HEAP32[$58 >> 2] | 0;
      if (($307 | 0) != ($305 | 0)) HEAP32[$58 >> 2] = $307 + (~(($307 + -8 - $305 | 0) >>> 3) << 3);
      __ZdlPv($305);
     }
     $$0225828 = $$0225828 + 1 | 0;
     $316 = HEAP32[$36 >> 2] | 0;
     $319 = HEAP32[(HEAP32[$316 >> 2] | 0) + 44 >> 2] | 0;
     if (($$0225828 | 0) >= ($135 | 0)) {
      $$1$lcssa = $$$1;
      $$lcssa636 = $319;
      $$lcssa645 = $316;
      break;
     } else {
      $$1829 = $$$1;
      $148 = $319;
      $149 = $316;
     }
    }
   } else {
    $$1$lcssa = $$0858;
    $$lcssa636 = $140;
    $$lcssa645 = $137;
   }
   $142 = FUNCTION_TABLE_iii[$$lcssa636 & 63]($$lcssa645, HEAP32[$38 >> 2] | 0) | 0;
   $144 = HEAP32[$36 >> 2] | 0;
   $147 = HEAP32[(HEAP32[$144 >> 2] | 0) + 44 >> 2] | 0;
   if (($142 | 0) > 0) {
    $$0226840 = 0;
    $$3841 = $$1$lcssa;
    $323 = $147;
    $324 = $144;
    while (1) {
     $325 = FUNCTION_TABLE_iii[$323 & 63]($324, 5) | 0;
     HEAP32[$10 >> 2] = 0;
     HEAP32[$48 >> 2] = 0;
     HEAP32[$49 >> 2] = 0;
     if (($325 | 0) > -2) {
      $$0228834 = 0;
      $$4835 = $$3841;
      while (1) {
       $350 = HEAP32[$36 >> 2] | 0;
       $354 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$350 >> 2] | 0) + 44 >> 2] & 63]($350, $118) | 0;
       $359 = HEAP32[(HEAP32[(HEAP32[$3 >> 2] | 0) + ($storemerge854 * 12 | 0) >> 2] | 0) + ($354 << 4) + 8 >> 2] | 0;
       HEAP32[$11 >> 2] = $storemerge854;
       HEAP32[$54 >> 2] = $359;
       $360 = HEAP32[$48 >> 2] | 0;
       if ($360 >>> 0 < (HEAP32[$55 >> 2] | 0) >>> 0) {
        $363 = $11;
        $368 = HEAP32[$363 + 4 >> 2] | 0;
        $369 = $360;
        HEAP32[$369 >> 2] = HEAP32[$363 >> 2];
        HEAP32[$369 + 4 >> 2] = $368;
        HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 8;
       } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($10, $11);
       $$$4 = ($359 | 0) > ($$4835 | 0) ? $359 : $$4835;
       if (($$0228834 | 0) > ($325 | 0)) {
        $$4$lcssa = $$$4;
        break;
       } else {
        $$0228834 = $$0228834 + 1 | 0;
        $$4835 = $$$4;
       }
      }
     } else $$4$lcssa = $$3841;
     $327 = HEAP32[$27 >> 2] | 0;
     if (($327 | 0) == (HEAP32[$50 >> 2] | 0)) __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($6, $10); else {
      HEAP32[$327 >> 2] = 0;
      $330 = $327 + 4 | 0;
      HEAP32[$330 >> 2] = 0;
      HEAP32[$327 + 8 >> 2] = 0;
      $334 = (HEAP32[$48 >> 2] | 0) - (HEAP32[$10 >> 2] | 0) | 0;
      $335 = $334 >> 3;
      if (!$335) $349 = $327; else {
       if ($335 >>> 0 > 536870911) {
        label = 52;
        break L3;
       }
       $338 = __Znwj($334) | 0;
       HEAP32[$330 >> 2] = $338;
       HEAP32[$327 >> 2] = $338;
       HEAP32[$327 + 8 >> 2] = $338 + ($335 << 3);
       $341 = HEAP32[$10 >> 2] | 0;
       $344 = (HEAP32[$48 >> 2] | 0) - $341 | 0;
       if (($344 | 0) > 0) {
        _memcpy($338 | 0, $341 | 0, $344 | 0) | 0;
        HEAP32[$330 >> 2] = $338 + ($344 >>> 3 << 3);
        $349 = HEAP32[$27 >> 2] | 0;
       } else $349 = $327;
      }
      HEAP32[$27 >> 2] = $349 + 12;
     }
     $378 = HEAP32[$36 >> 2] | 0;
     $382 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$378 >> 2] | 0) + 68 >> 2] & 1]($378, $123, $127);
     $383 = HEAP32[$36 >> 2] | 0;
     $387 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$383 >> 2] | 0) + 68 >> 2] & 1]($383, $123, $127);
     $388 = HEAP32[$36 >> 2] | 0;
     $392 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$388 >> 2] | 0) + 68 >> 2] & 1]($388, $128, $129);
     $393 = HEAP32[$36 >> 2] | 0;
     $397 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$393 >> 2] | 0) + 68 >> 2] & 1]($393, $128, $129);
     $398 = HEAP32[$36 >> 2] | 0;
     $402 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$398 >> 2] | 0) + 44 >> 2] & 63]($398, 2) | 0;
     HEAP32[$11 >> 2] = 0;
     HEAP32[$51 >> 2] = 0;
     HEAP32[$52 >> 2] = 0;
     __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEj($11, 6);
     $$pre952 = HEAP32[$11 >> 2] | 0;
     HEAPF64[$$pre952 >> 3] = $382;
     HEAPF64[$$pre952 + 8 >> 3] = $392;
     HEAPF64[$$pre952 + 16 >> 3] = $387;
     HEAPF64[$$pre952 + 24 >> 3] = $397;
     HEAPF64[$$pre952 + 32 >> 3] = 1.0;
     HEAPF64[$$pre952 + 40 >> 3] = +($402 | 0);
     $409 = HEAP32[$29 >> 2] | 0;
     if (($409 | 0) == (HEAP32[$53 >> 2] | 0)) {
      __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($7, $11);
      $433 = HEAP32[$11 >> 2] | 0;
     } else {
      HEAP32[$409 >> 2] = 0;
      $412 = $409 + 4 | 0;
      HEAP32[$412 >> 2] = 0;
      HEAP32[$409 + 8 >> 2] = 0;
      $415 = HEAP32[$11 >> 2] | 0;
      $416 = (HEAP32[$51 >> 2] | 0) - $415 | 0;
      $417 = $416 >> 3;
      if (!$417) {
       $432 = $409;
       $800 = $415;
      } else {
       if ($417 >>> 0 > 536870911) {
        label = 64;
        break L3;
       }
       $421 = __Znwj($416) | 0;
       HEAP32[$412 >> 2] = $421;
       HEAP32[$409 >> 2] = $421;
       HEAP32[$409 + 8 >> 2] = $421 + ($417 << 3);
       $424 = HEAP32[$11 >> 2] | 0;
       $427 = (HEAP32[$51 >> 2] | 0) - $424 | 0;
       if (($427 | 0) > 0) {
        _memcpy($421 | 0, $424 | 0, $427 | 0) | 0;
        HEAP32[$412 >> 2] = $421 + ($427 >>> 3 << 3);
        $432 = HEAP32[$29 >> 2] | 0;
        $800 = $424;
       } else {
        $432 = $409;
        $800 = $424;
       }
      }
      HEAP32[$29 >> 2] = $432 + 12;
      $433 = $800;
     }
     if ($433 | 0) {
      $435 = HEAP32[$51 >> 2] | 0;
      if (($435 | 0) != ($433 | 0)) HEAP32[$51 >> 2] = $435 + (~(($435 + -8 - $433 | 0) >>> 3) << 3);
      __ZdlPv($433);
     }
     $442 = HEAP32[$10 >> 2] | 0;
     if ($442 | 0) {
      $444 = HEAP32[$48 >> 2] | 0;
      if (($444 | 0) != ($442 | 0)) HEAP32[$48 >> 2] = $444 + (~(($444 + -8 - $442 | 0) >>> 3) << 3);
      __ZdlPv($442);
     }
     $$0226840 = $$0226840 + 1 | 0;
     $453 = HEAP32[$36 >> 2] | 0;
     $456 = HEAP32[(HEAP32[$453 >> 2] | 0) + 44 >> 2] | 0;
     if (($$0226840 | 0) >= ($142 | 0)) {
      $$3$lcssa = $$4$lcssa;
      $$lcssa700 = $456;
      $$lcssa714 = $453;
      break;
     } else {
      $$3841 = $$4$lcssa;
      $323 = $456;
      $324 = $453;
     }
    }
   } else {
    $$3$lcssa = $$1$lcssa;
    $$lcssa700 = $147;
    $$lcssa714 = $144;
   }
   $321 = FUNCTION_TABLE_iii[$$lcssa700 & 63]($$lcssa714, HEAP32[$39 >> 2] | 0) | 0;
   if (($321 | 0) > 0) {
    $$0229849 = 0;
    $$6850 = $$3$lcssa;
    while (1) {
     HEAP32[$10 >> 2] = 0;
     HEAP32[$40 >> 2] = 0;
     HEAP32[$41 >> 2] = 0;
     $459 = HEAP32[$36 >> 2] | 0;
     $463 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$459 >> 2] | 0) + 44 >> 2] & 63]($459, $118) | 0;
     $468 = HEAP32[(HEAP32[(HEAP32[$3 >> 2] | 0) + ($storemerge854 * 12 | 0) >> 2] | 0) + ($463 << 4) + 8 >> 2] | 0;
     HEAP32[$11 >> 2] = $storemerge854;
     HEAP32[$42 >> 2] = $468;
     $469 = HEAP32[$40 >> 2] | 0;
     if ($469 >>> 0 < (HEAP32[$43 >> 2] | 0) >>> 0) {
      $493 = $11;
      $498 = HEAP32[$493 + 4 >> 2] | 0;
      $499 = $469;
      HEAP32[$499 >> 2] = HEAP32[$493 >> 2];
      HEAP32[$499 + 4 >> 2] = $498;
      HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($10, $11);
     $$$7 = ($468 | 0) > ($$6850 | 0) ? $468 : $$6850;
     $506 = HEAP32[$36 >> 2] | 0;
     $510 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$506 >> 2] | 0) + 44 >> 2] & 63]($506, $118) | 0;
     $515 = HEAP32[(HEAP32[(HEAP32[$3 >> 2] | 0) + ($storemerge854 * 12 | 0) >> 2] | 0) + ($510 << 4) + 8 >> 2] | 0;
     HEAP32[$11 >> 2] = $storemerge854;
     HEAP32[$42 >> 2] = $515;
     $516 = HEAP32[$40 >> 2] | 0;
     if ($516 >>> 0 < (HEAP32[$43 >> 2] | 0) >>> 0) {
      $784 = $11;
      $789 = HEAP32[$784 + 4 >> 2] | 0;
      $790 = $516;
      HEAP32[$790 >> 2] = HEAP32[$784 >> 2];
      HEAP32[$790 + 4 >> 2] = $789;
      HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($10, $11);
     $$$7$1 = ($515 | 0) > ($$$7 | 0) ? $515 : $$$7;
     $472 = HEAP32[$31 >> 2] | 0;
     if (($472 | 0) == (HEAP32[$44 >> 2] | 0)) __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($8, $10); else {
      HEAP32[$472 >> 2] = 0;
      $473 = $472 + 4 | 0;
      HEAP32[$473 >> 2] = 0;
      HEAP32[$472 + 8 >> 2] = 0;
      $477 = (HEAP32[$40 >> 2] | 0) - (HEAP32[$10 >> 2] | 0) | 0;
      $478 = $477 >> 3;
      if (!$478) $492 = $472; else {
       if ($478 >>> 0 > 536870911) {
        label = 82;
        break L3;
       }
       $481 = __Znwj($477) | 0;
       HEAP32[$473 >> 2] = $481;
       HEAP32[$472 >> 2] = $481;
       HEAP32[$472 + 8 >> 2] = $481 + ($478 << 3);
       $484 = HEAP32[$10 >> 2] | 0;
       $487 = (HEAP32[$40 >> 2] | 0) - $484 | 0;
       if (($487 | 0) > 0) {
        _memcpy($481 | 0, $484 | 0, $487 | 0) | 0;
        HEAP32[$473 >> 2] = $481 + ($487 >>> 3 << 3);
        $492 = HEAP32[$31 >> 2] | 0;
       } else $492 = $472;
      }
      HEAP32[$31 >> 2] = $492 + 12;
     }
     $519 = HEAP32[$36 >> 2] | 0;
     $523 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$519 >> 2] | 0) + 68 >> 2] & 1]($519, $123, $127);
     $524 = HEAP32[$36 >> 2] | 0;
     $528 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$524 >> 2] | 0) + 68 >> 2] & 1]($524, $123, $127);
     $529 = HEAP32[$36 >> 2] | 0;
     $533 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$529 >> 2] | 0) + 68 >> 2] & 1]($529, $128, $129);
     $534 = HEAP32[$36 >> 2] | 0;
     $538 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$534 >> 2] | 0) + 68 >> 2] & 1]($534, $128, $129);
     $539 = HEAP32[$36 >> 2] | 0;
     $543 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$539 >> 2] | 0) + 44 >> 2] & 63]($539, 2) | 0;
     HEAP32[$11 >> 2] = 0;
     HEAP32[$45 >> 2] = 0;
     HEAP32[$46 >> 2] = 0;
     __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEj($11, 6);
     $$pre957 = HEAP32[$11 >> 2] | 0;
     HEAPF64[$$pre957 >> 3] = $523;
     HEAPF64[$$pre957 + 8 >> 3] = $533;
     HEAPF64[$$pre957 + 16 >> 3] = $528;
     HEAPF64[$$pre957 + 24 >> 3] = $538;
     HEAPF64[$$pre957 + 32 >> 3] = 1.0;
     HEAPF64[$$pre957 + 40 >> 3] = +($543 | 0);
     $550 = HEAP32[$33 >> 2] | 0;
     if (($550 | 0) == (HEAP32[$47 >> 2] | 0)) {
      __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($9, $11);
      $574 = HEAP32[$11 >> 2] | 0;
     } else {
      HEAP32[$550 >> 2] = 0;
      $553 = $550 + 4 | 0;
      HEAP32[$553 >> 2] = 0;
      HEAP32[$550 + 8 >> 2] = 0;
      $556 = HEAP32[$11 >> 2] | 0;
      $557 = (HEAP32[$45 >> 2] | 0) - $556 | 0;
      $558 = $557 >> 3;
      if (!$558) {
       $573 = $550;
       $801 = $556;
      } else {
       if ($558 >>> 0 > 536870911) {
        label = 93;
        break L3;
       }
       $562 = __Znwj($557) | 0;
       HEAP32[$553 >> 2] = $562;
       HEAP32[$550 >> 2] = $562;
       HEAP32[$550 + 8 >> 2] = $562 + ($558 << 3);
       $565 = HEAP32[$11 >> 2] | 0;
       $568 = (HEAP32[$45 >> 2] | 0) - $565 | 0;
       if (($568 | 0) > 0) {
        _memcpy($562 | 0, $565 | 0, $568 | 0) | 0;
        HEAP32[$553 >> 2] = $562 + ($568 >>> 3 << 3);
        $573 = HEAP32[$33 >> 2] | 0;
        $801 = $565;
       } else {
        $573 = $550;
        $801 = $565;
       }
      }
      HEAP32[$33 >> 2] = $573 + 12;
      $574 = $801;
     }
     if ($574 | 0) {
      $576 = HEAP32[$45 >> 2] | 0;
      if (($576 | 0) != ($574 | 0)) HEAP32[$45 >> 2] = $576 + (~(($576 + -8 - $574 | 0) >>> 3) << 3);
      __ZdlPv($574);
     }
     $583 = HEAP32[$10 >> 2] | 0;
     if ($583 | 0) {
      $585 = HEAP32[$40 >> 2] | 0;
      if (($585 | 0) != ($583 | 0)) HEAP32[$40 >> 2] = $585 + (~(($585 + -8 - $583 | 0) >>> 3) << 3);
      __ZdlPv($583);
     }
     $$0229849 = $$0229849 + 1 | 0;
     if (($$0229849 | 0) >= ($321 | 0)) {
      $$6$lcssa = $$$7$1;
      break;
     } else $$6850 = $$$7$1;
    }
   } else $$6$lcssa = $$3$lcssa;
   $storemerge854 = $storemerge854 + 1 | 0;
   if (($storemerge854 | 0) >= ($22 | 0)) {
    label = 3;
    break;
   } else $$0858 = $$6$lcssa;
  }
  if ((label | 0) == 3) {
   $$0$lcssa = $$6$lcssa;
   $62 = HEAP32[$4 >> 2] | 0;
   $63 = HEAP32[$23 >> 2] | 0;
   break;
  } else if ((label | 0) == 37) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($281); else if ((label | 0) == 52) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($327); else if ((label | 0) == 64) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($409); else if ((label | 0) == 82) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($472); else if ((label | 0) == 93) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($550);
 } else {
  $$0$lcssa = 0;
  $62 = 0;
  $63 = 0;
 } while (0);
 $61 = $10 + 88 | 0;
 dest = $10;
 stop = dest + 72 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $61;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($10, $62, $63);
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($10 + 12 | 0, HEAP32[$5 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($10 + 24 | 0, HEAP32[$6 >> 2] | 0, HEAP32[$27 >> 2] | 0);
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($10 + 36 | 0, HEAP32[$7 >> 2] | 0, HEAP32[$29 >> 2] | 0);
 __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($10 + 48 | 0, HEAP32[$8 >> 2] | 0, HEAP32[$31 >> 2] | 0);
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($10 + 60 | 0, HEAP32[$9 >> 2] | 0, HEAP32[$33 >> 2] | 0);
 HEAP32[$10 + 72 >> 2] = $$0$lcssa;
 $80 = $0 + 124 | 0;
 $81 = HEAP32[$80 >> 2] | 0;
 HEAPF64[$10 + 80 >> 3] = +(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$81 >> 2] | 0) + 44 >> 2] & 63]($81, 100) | 0) / 1.0e4;
 $89 = HEAP32[$80 >> 2] | 0;
 $93 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$89 >> 2] | 0) + 68 >> 2] & 1]($89, 0.0, .1);
 $94 = __Znwj(48) | 0;
 HEAPF64[$94 >> 3] = $93;
 HEAPF64[$94 + 8 >> 3] = $93;
 HEAPF64[$94 + 16 >> 3] = $93;
 HEAPF64[$94 + 24 >> 3] = $93;
 HEAPF64[$94 + 32 >> 3] = $93;
 HEAPF64[$94 + 40 >> 3] = $93;
 __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($10 + 88 | 0, $94, $94 + 48 | 0);
 HEAP32[$11 >> 2] = 0;
 $102 = $11 + 4 | 0;
 HEAP32[$102 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$12 >> 2] = 0;
 $104 = $12 + 4 | 0;
 HEAP32[$104 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $106 = HEAP32[$80 >> 2] | 0;
 $110 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$106 >> 2] | 0) + 44 >> 2] & 63]($106, 1) | 0;
 if (($110 | 0) >= -1) {
  $594 = $11 + 8 | 0;
  $595 = $12 + 8 | 0;
  $$0182827 = 0;
  while (1) {
   $614 = HEAP32[$80 >> 2] | 0;
   $618 = HEAP32[$3 >> 2] | 0;
   $624 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$614 >> 2] | 0) + 44 >> 2] & 63]($614, (HEAP32[$618 + 4 >> 2] | 0) - (HEAP32[$618 >> 2] | 0) >> 4) | 0;
   $628 = HEAP32[(HEAP32[HEAP32[$3 >> 2] >> 2] | 0) + ($624 << 4) + 8 >> 2] | 0;
   HEAP32[$13 >> 2] = $628;
   $629 = HEAP32[$102 >> 2] | 0;
   if (($629 | 0) == (HEAP32[$594 >> 2] | 0)) __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_($11, $13); else {
    HEAP32[$629 >> 2] = $628;
    HEAP32[$102 >> 2] = $629 + 4;
   }
   $633 = HEAP32[$80 >> 2] | 0;
   $637 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$633 >> 2] | 0) + 68 >> 2] & 1]($633, 0.0, .1);
   HEAPF64[$14 >> 3] = $637;
   $638 = HEAP32[$104 >> 2] | 0;
   if ($638 >>> 0 < (HEAP32[$595 >> 2] | 0) >>> 0) {
    HEAPF64[$638 >> 3] = $637;
    HEAP32[$104 >> 2] = $638 + 8;
   } else __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($12, $14);
   if (($$0182827 | 0) > ($110 | 0)) break; else $$0182827 = $$0182827 + 1 | 0;
  }
 }
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($10 + 100 | 0, HEAP32[$11 >> 2] | 0, HEAP32[$102 >> 2] | 0);
 __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($10 + 112 | 0, HEAP32[$12 >> 2] | 0, HEAP32[$104 >> 2] | 0);
 $602 = __Znwj(28) | 0;
 HEAP8[$602 + 16 >> 0] = 0;
 HEAP32[$602 + 8 >> 2] = 2;
 HEAP8[$602 + 15 >> 0] = 0;
 HEAP8[$602 + 12 >> 0] = 1;
 HEAP8[$602 + 13 >> 0] = 1;
 HEAP8[$602 + 14 >> 0] = 0;
 HEAP32[$602 >> 2] = 5136;
 $610 = __Znwj(128) | 0;
 __ZN6RepHFMC2ERKS_($610, $10);
 HEAP32[$602 + 20 >> 2] = $610;
 HEAP32[$602 + 24 >> 2] = 0;
 $612 = HEAP32[$12 >> 2] | 0;
 if ($612 | 0) {
  $644 = HEAP32[$104 >> 2] | 0;
  if (($644 | 0) != ($612 | 0)) HEAP32[$104 >> 2] = $644 + (~(($644 + -8 - $612 | 0) >>> 3) << 3);
  __ZdlPv($612);
 }
 $651 = HEAP32[$11 >> 2] | 0;
 if ($651 | 0) {
  $653 = HEAP32[$102 >> 2] | 0;
  if (($653 | 0) != ($651 | 0)) HEAP32[$102 >> 2] = $653 + (~(($653 + -4 - $651 | 0) >>> 2) << 2);
  __ZdlPv($651);
 }
 __ZdlPv($94);
 __ZN6RepHFMD2Ev($10);
 $660 = HEAP32[$9 >> 2] | 0;
 if ($660 | 0) {
  $662 = HEAP32[$33 >> 2] | 0;
  if (($662 | 0) == ($660 | 0)) $678 = $660; else {
   $665 = $662;
   while (1) {
    $664 = $665 + -12 | 0;
    HEAP32[$33 >> 2] = $664;
    $666 = HEAP32[$664 >> 2] | 0;
    if (!$666) $668 = $664; else {
     $670 = $665 + -8 | 0;
     $671 = HEAP32[$670 >> 2] | 0;
     if (($671 | 0) != ($666 | 0)) HEAP32[$670 >> 2] = $671 + (~(($671 + -8 - $666 | 0) >>> 3) << 3);
     __ZdlPv($666);
     $668 = HEAP32[$33 >> 2] | 0;
    }
    if (($668 | 0) == ($660 | 0)) break; else $665 = $668;
   }
   $678 = HEAP32[$9 >> 2] | 0;
  }
  __ZdlPv($678);
 }
 $679 = HEAP32[$8 >> 2] | 0;
 if ($679 | 0) {
  $681 = HEAP32[$31 >> 2] | 0;
  if (($681 | 0) == ($679 | 0)) $697 = $679; else {
   $684 = $681;
   while (1) {
    $683 = $684 + -12 | 0;
    HEAP32[$31 >> 2] = $683;
    $685 = HEAP32[$683 >> 2] | 0;
    if (!$685) $687 = $683; else {
     $689 = $684 + -8 | 0;
     $690 = HEAP32[$689 >> 2] | 0;
     if (($690 | 0) != ($685 | 0)) HEAP32[$689 >> 2] = $690 + (~(($690 + -8 - $685 | 0) >>> 3) << 3);
     __ZdlPv($685);
     $687 = HEAP32[$31 >> 2] | 0;
    }
    if (($687 | 0) == ($679 | 0)) break; else $684 = $687;
   }
   $697 = HEAP32[$8 >> 2] | 0;
  }
  __ZdlPv($697);
 }
 $698 = HEAP32[$7 >> 2] | 0;
 if ($698 | 0) {
  $700 = HEAP32[$29 >> 2] | 0;
  if (($700 | 0) == ($698 | 0)) $716 = $698; else {
   $703 = $700;
   while (1) {
    $702 = $703 + -12 | 0;
    HEAP32[$29 >> 2] = $702;
    $704 = HEAP32[$702 >> 2] | 0;
    if (!$704) $706 = $702; else {
     $708 = $703 + -8 | 0;
     $709 = HEAP32[$708 >> 2] | 0;
     if (($709 | 0) != ($704 | 0)) HEAP32[$708 >> 2] = $709 + (~(($709 + -8 - $704 | 0) >>> 3) << 3);
     __ZdlPv($704);
     $706 = HEAP32[$29 >> 2] | 0;
    }
    if (($706 | 0) == ($698 | 0)) break; else $703 = $706;
   }
   $716 = HEAP32[$7 >> 2] | 0;
  }
  __ZdlPv($716);
 }
 $717 = HEAP32[$6 >> 2] | 0;
 if ($717 | 0) {
  $719 = HEAP32[$27 >> 2] | 0;
  if (($719 | 0) == ($717 | 0)) $735 = $717; else {
   $722 = $719;
   while (1) {
    $721 = $722 + -12 | 0;
    HEAP32[$27 >> 2] = $721;
    $723 = HEAP32[$721 >> 2] | 0;
    if (!$723) $725 = $721; else {
     $727 = $722 + -8 | 0;
     $728 = HEAP32[$727 >> 2] | 0;
     if (($728 | 0) != ($723 | 0)) HEAP32[$727 >> 2] = $728 + (~(($728 + -8 - $723 | 0) >>> 3) << 3);
     __ZdlPv($723);
     $725 = HEAP32[$27 >> 2] | 0;
    }
    if (($725 | 0) == ($717 | 0)) break; else $722 = $725;
   }
   $735 = HEAP32[$6 >> 2] | 0;
  }
  __ZdlPv($735);
 }
 $736 = HEAP32[$5 >> 2] | 0;
 if ($736 | 0) {
  $738 = HEAP32[$25 >> 2] | 0;
  if (($738 | 0) == ($736 | 0)) $754 = $736; else {
   $741 = $738;
   while (1) {
    $740 = $741 + -12 | 0;
    HEAP32[$25 >> 2] = $740;
    $742 = HEAP32[$740 >> 2] | 0;
    if (!$742) $744 = $740; else {
     $746 = $741 + -8 | 0;
     $747 = HEAP32[$746 >> 2] | 0;
     if (($747 | 0) != ($742 | 0)) HEAP32[$746 >> 2] = $747 + (~(($747 + -8 - $742 | 0) >>> 3) << 3);
     __ZdlPv($742);
     $744 = HEAP32[$25 >> 2] | 0;
    }
    if (($744 | 0) == ($736 | 0)) break; else $741 = $744;
   }
   $754 = HEAP32[$5 >> 2] | 0;
  }
  __ZdlPv($754);
 }
 $755 = HEAP32[$4 >> 2] | 0;
 if ($755 | 0) {
  $757 = HEAP32[$23 >> 2] | 0;
  if (($757 | 0) != ($755 | 0)) HEAP32[$23 >> 2] = $757 + (~(($757 + -8 - $755 | 0) >>> 3) << 3);
  __ZdlPv($755);
 }
 $764 = HEAP32[$3 >> 2] | 0;
 if (!$764) {
  STACKTOP = sp;
  return $602 | 0;
 }
 $766 = $3 + 4 | 0;
 $767 = HEAP32[$766 >> 2] | 0;
 if (($767 | 0) == ($764 | 0)) $783 = $764; else {
  $770 = $767;
  while (1) {
   $769 = $770 + -12 | 0;
   HEAP32[$766 >> 2] = $769;
   $771 = HEAP32[$769 >> 2] | 0;
   if (!$771) $773 = $769; else {
    $775 = $770 + -8 | 0;
    $776 = HEAP32[$775 >> 2] | 0;
    if (($776 | 0) != ($771 | 0)) HEAP32[$775 >> 2] = $776 + (~(($776 + -16 - $771 | 0) >>> 4) << 4);
    __ZdlPv($771);
    $773 = HEAP32[$766 >> 2] | 0;
   }
   if (($773 | 0) == ($764 | 0)) break; else $770 = $773;
  }
  $783 = HEAP32[$3 >> 2] | 0;
 }
 __ZdlPv($783);
 STACKTOP = sp;
 return $602 | 0;
}

function __ZN3HFM18ConstructiveRandom21generateSolutionAlphaEfd($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 var $$0235828 = 0, $$0236842 = 0, $$0237832 = 0, $$0237832$us = 0, $$0239858 = 0, $$0827 = 0, $$lcssa688 = 0, $$lcssa703 = 0, $$pre = 0, $$pre956 = 0, $$pre961 = 0, $10 = 0, $105 = 0, $107 = 0, $109 = 0, $11 = 0, $113 = 0, $115 = 0, $117 = 0, $12 = 0, $120 = 0, $122 = 0, $125 = 0, $126 = 0.0, $127 = 0.0, $129 = 0, $13 = 0, $135 = 0, $137 = 0, $139 = 0, $14 = 0, $144 = 0, $145 = 0, $15 = 0, $150 = 0, $152 = 0, $153 = 0.0, $154 = 0.0, $155 = 0, $160 = 0, $162 = 0, $165 = 0, $166 = 0, $167 = 0.0, $168 = 0.0, $169 = 0, $172 = 0, $174 = 0, $175 = 0, $178 = 0, $18 = 0, $185 = 0, $188 = 0, $193 = 0, $194 = 0, $200 = 0, $204 = 0.0, $205 = 0, $209 = 0.0, $21 = 0, $210 = 0, $214 = 0.0, $215 = 0, $219 = 0.0, $22 = 0, $220 = 0, $224 = 0, $23 = 0, $231 = 0, $234 = 0, $237 = 0, $238 = 0, $239 = 0, $243 = 0, $246 = 0, $249 = 0, $25 = 0, $254 = 0, $255 = 0, $257 = 0, $267 = 0, $269 = 0, $27 = 0, $270 = 0.0, $271 = 0.0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $277 = 0, $282 = 0, $283 = 0, $286 = 0, $29 = 0, $291 = 0, $294 = 0, $299 = 0, $3 = 0, $300 = 0, $308 = 0, $31 = 0, $311 = 0, $315 = 0, $316 = 0, $319 = 0, $322 = 0, $325 = 0, $33 = 0, $330 = 0, $331 = 0, $336 = 0, $337 = 0, $340 = 0, $345 = 0, $346 = 0, $354 = 0, $358 = 0.0, $359 = 0, $36 = 0, $363 = 0.0, $364 = 0, $368 = 0.0, $369 = 0, $37 = 0, $373 = 0.0, $374 = 0, $378 = 0, $38 = 0, $385 = 0, $388 = 0, $39 = 0, $391 = 0, $392 = 0, $393 = 0, $397 = 0, $4 = 0, $40 = 0, $400 = 0, $403 = 0, $408 = 0, $409 = 0, $41 = 0, $411 = 0, $418 = 0, $42 = 0, $420 = 0, $429 = 0, $43 = 0, $432 = 0, $435 = 0, $438 = 0, $44 = 0, $440 = 0, $441 = 0, $445 = 0, $446 = 0, $449 = 0, $45 = 0, $454 = 0, $457 = 0, $46 = 0, $462 = 0, $463 = 0, $469 = 0, $47 = 0, $474 = 0, $475 = 0, $478 = 0, $479 = 0, $48 = 0, $482 = 0, $486 = 0, $487 = 0, $49 = 0, $490 = 0, $493 = 0, $496 = 0, $5 = 0, $50 = 0, $501 = 0, $502 = 0, $507 = 0, $508 = 0, $51 = 0, $514 = 0, $519 = 0, $52 = 0, $520 = 0, $523 = 0, $527 = 0.0, $528 = 0, $53 = 0, $532 = 0.0, $533 = 0, $537 = 0.0, $538 = 0, $54 = 0, $542 = 0.0, $543 = 0, $547 = 0, $55 = 0, $554 = 0, $557 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $566 = 0, $569 = 0, $57 = 0, $572 = 0, $577 = 0, $578 = 0, $58 = 0, $580 = 0, $587 = 0, $589 = 0, $59 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $609 = 0, $61 = 0, $617 = 0, $619 = 0, $62 = 0, $621 = 0, $622 = 0, $624 = 0, $63 = 0, $634 = 0, $635 = 0, $639 = 0, $64 = 0, $643 = 0.0, $644 = 0, $65 = 0, $650 = 0, $657 = 0, $659 = 0, $66 = 0, $666 = 0, $668 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $674 = 0, $676 = 0, $677 = 0, $684 = 0, $685 = 0, $687 = 0, $689 = 0, $690 = 0, $691 = 0, $693 = 0, $695 = 0, $696 = 0, $7 = 0, $703 = 0, $704 = 0, $706 = 0, $708 = 0, $709 = 0, $710 = 0, $712 = 0, $714 = 0, $715 = 0, $722 = 0, $723 = 0, $725 = 0, $727 = 0, $728 = 0, $729 = 0, $731 = 0, $733 = 0, $734 = 0, $741 = 0, $742 = 0, $744 = 0, $746 = 0, $747 = 0, $748 = 0, $750 = 0, $752 = 0, $753 = 0, $760 = 0, $761 = 0, $763 = 0, $770 = 0, $772 = 0, $774 = 0, $775 = 0, $776 = 0, $778 = 0, $780 = 0, $781 = 0, $788 = 0, $789 = 0, $794 = 0, $795 = 0, $8 = 0, $805 = 0, $808 = 0, $813 = 0, $814 = 0, $820 = 0, $821 = 0, $822 = 0, $83 = 0, $84 = 0, $88 = 0.0, $89 = 0, $9 = 0, $95 = 0, $storemerge241$us = 0, $storemerge241$us$1 = 0, $storemerge243$us = 0, $storemerge245 = 0, $storemerge863 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $3 = sp + 240 | 0;
 $4 = sp + 228 | 0;
 $5 = sp + 216 | 0;
 $6 = sp + 204 | 0;
 $7 = sp + 192 | 0;
 $8 = sp + 180 | 0;
 $9 = sp + 168 | 0;
 $10 = sp + 24 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 156 | 0;
 $13 = sp + 152 | 0;
 $14 = sp;
 $15 = $0 + 20 | 0;
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2ERKS5_($3, (HEAP32[$15 >> 2] | 0) + 4 | 0);
 $18 = $3 + 4 | 0;
 $21 = (HEAP32[$18 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0;
 $22 = ($21 | 0) / 12 | 0;
 HEAP32[$4 >> 2] = 0;
 $23 = $4 + 4 | 0;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$5 >> 2] = 0;
 $25 = $5 + 4 | 0;
 HEAP32[$25 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 $27 = $6 + 4 | 0;
 HEAP32[$27 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$7 >> 2] = 0;
 $29 = $7 + 4 | 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 $31 = $8 + 4 | 0;
 HEAP32[$31 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 HEAP32[$9 >> 2] = 0;
 $33 = $9 + 4 | 0;
 HEAP32[$33 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 do if (($21 | 0) > 0) {
  $36 = $0 + 52 | 0;
  $37 = $0 + 56 | 0;
  $38 = $0 + 64 | 0;
  $39 = $0 + 68 | 0;
  $40 = $0 + 124 | 0;
  $41 = $0 + 128 | 0;
  $42 = $10 + 4 | 0;
  $43 = $4 + 8 | 0;
  $44 = $10 + 4 | 0;
  $45 = $10 + 8 | 0;
  $46 = $5 + 8 | 0;
  $47 = $0 + 132 | 0;
  $48 = $10 + 4 | 0;
  $49 = $10 + 8 | 0;
  $50 = $11 + 4 | 0;
  $51 = $10 + 8 | 0;
  $52 = $6 + 8 | 0;
  $53 = $11 + 4 | 0;
  $54 = $11 + 8 | 0;
  $55 = $7 + 8 | 0;
  $56 = $0 + 136 | 0;
  $57 = $10 + 4 | 0;
  $58 = $10 + 8 | 0;
  $59 = $11 + 4 | 0;
  $60 = $10 + 8 | 0;
  $61 = $8 + 8 | 0;
  $62 = $11 + 4 | 0;
  $63 = $11 + 8 | 0;
  $64 = $9 + 8 | 0;
  $storemerge863 = 0;
  L3 : while (1) {
   $115 = HEAP32[$15 >> 2] | 0;
   $117 = HEAP32[$115 + 16 >> 2] | 0;
   $120 = ~~+HEAPF64[$117 + ($storemerge863 << 3) >> 3];
   $122 = HEAP32[$115 + 40 >> 2] | 0;
   $125 = ~~+HEAPF64[$122 + ($storemerge863 << 3) >> 3];
   $126 = +HEAPF64[$117 >> 3];
   $127 = +HEAPF64[$122 >> 3];
   $129 = HEAP32[$36 >> 2] | 0;
   if (((HEAP32[$37 >> 2] | 0) - $129 >> 2 | 0) <= ($storemerge863 | 0)) {
    label = 6;
    break;
   }
   $135 = HEAP32[$129 + ($storemerge863 << 2) >> 2] | 0;
   $137 = HEAP32[$38 >> 2] | 0;
   $139 = (HEAP32[$39 >> 2] | 0) - $137 >> 2;
   if (($139 | 0) <= ($storemerge863 | 0)) {
    label = 8;
    break;
   }
   if ($139 >>> 0 <= $storemerge863 >>> 0) {
    label = 10;
    break;
   }
   $144 = HEAP32[$137 + ($storemerge863 << 2) >> 2] | 0;
   $145 = HEAP32[$40 >> 2] | 0;
   $150 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$145 >> 2] | 0) + 44 >> 2] & 63]($145, HEAP32[$41 >> 2] | 0) | 0;
   if (($150 | 0) > 0) {
    $152 = ($144 | 0) > 0;
    $153 = +($120 | 0);
    $154 = +($125 | 0);
    $$0235828 = 0;
    do {
     $169 = HEAP32[$40 >> 2] | 0;
     $172 = HEAP32[(HEAP32[$169 >> 2] | 0) + 44 >> 2] | 0;
     do if ($152) {
      $174 = (FUNCTION_TABLE_iii[$172 & 63]($169, 2) | 0) == 0;
      $175 = HEAP32[$40 >> 2] | 0;
      $178 = HEAP32[(HEAP32[$175 >> 2] | 0) + 44 >> 2] | 0;
      if ($174) {
       $storemerge245 = (FUNCTION_TABLE_iii[$178 & 63]($175, $135) | 0) + 1 | 0;
       break;
      } else {
       $storemerge245 = ~(FUNCTION_TABLE_iii[$178 & 63]($175, $144) | 0);
       break;
      }
     } else $storemerge245 = (FUNCTION_TABLE_iii[$172 & 63]($169, $135) | 0) + 1 | 0; while (0);
     HEAP32[$10 >> 2] = $storemerge863;
     HEAP32[$42 >> 2] = $storemerge245;
     $185 = HEAP32[$23 >> 2] | 0;
     if ($185 >>> 0 < (HEAP32[$43 >> 2] | 0) >>> 0) {
      $188 = $10;
      $193 = HEAP32[$188 + 4 >> 2] | 0;
      $194 = $185;
      HEAP32[$194 >> 2] = HEAP32[$188 >> 2];
      HEAP32[$194 + 4 >> 2] = $193;
      HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($4, $10);
     $200 = HEAP32[$40 >> 2] | 0;
     $204 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$200 >> 2] | 0) + 68 >> 2] & 1]($200, $153, $154);
     $205 = HEAP32[$40 >> 2] | 0;
     $209 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$205 >> 2] | 0) + 68 >> 2] & 1]($205, $153, $154);
     $210 = HEAP32[$40 >> 2] | 0;
     $214 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$210 >> 2] | 0) + 68 >> 2] & 1]($210, $126, $127);
     $215 = HEAP32[$40 >> 2] | 0;
     $219 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$215 >> 2] | 0) + 68 >> 2] & 1]($215, $126, $127);
     $220 = HEAP32[$40 >> 2] | 0;
     $224 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$220 >> 2] | 0) + 44 >> 2] & 63]($220, 2) | 0;
     HEAP32[$10 >> 2] = 0;
     HEAP32[$44 >> 2] = 0;
     HEAP32[$45 >> 2] = 0;
     __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEj($10, 6);
     $$pre = HEAP32[$10 >> 2] | 0;
     HEAPF64[$$pre >> 3] = $204;
     HEAPF64[$$pre + 8 >> 3] = $214;
     HEAPF64[$$pre + 16 >> 3] = $209;
     HEAPF64[$$pre + 24 >> 3] = $219;
     HEAPF64[$$pre + 32 >> 3] = 1.0;
     HEAPF64[$$pre + 40 >> 3] = +($224 | 0);
     $231 = HEAP32[$25 >> 2] | 0;
     if (($231 | 0) == (HEAP32[$46 >> 2] | 0)) {
      __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($5, $10);
      $255 = HEAP32[$10 >> 2] | 0;
     } else {
      HEAP32[$231 >> 2] = 0;
      $234 = $231 + 4 | 0;
      HEAP32[$234 >> 2] = 0;
      HEAP32[$231 + 8 >> 2] = 0;
      $237 = HEAP32[$10 >> 2] | 0;
      $238 = (HEAP32[$44 >> 2] | 0) - $237 | 0;
      $239 = $238 >> 3;
      if (!$239) {
       $254 = $231;
       $820 = $237;
      } else {
       if ($239 >>> 0 > 536870911) {
        label = 26;
        break L3;
       }
       $243 = __Znwj($238) | 0;
       HEAP32[$234 >> 2] = $243;
       HEAP32[$231 >> 2] = $243;
       HEAP32[$231 + 8 >> 2] = $243 + ($239 << 3);
       $246 = HEAP32[$10 >> 2] | 0;
       $249 = (HEAP32[$44 >> 2] | 0) - $246 | 0;
       if (($249 | 0) > 0) {
        _memcpy($243 | 0, $246 | 0, $249 | 0) | 0;
        HEAP32[$234 >> 2] = $243 + ($249 >>> 3 << 3);
        $254 = HEAP32[$25 >> 2] | 0;
        $820 = $246;
       } else {
        $254 = $231;
        $820 = $246;
       }
      }
      HEAP32[$25 >> 2] = $254 + 12;
      $255 = $820;
     }
     if ($255 | 0) {
      $257 = HEAP32[$44 >> 2] | 0;
      if (($257 | 0) != ($255 | 0)) HEAP32[$44 >> 2] = $257 + (~(($257 + -8 - $255 | 0) >>> 3) << 3);
      __ZdlPv($255);
     }
     $$0235828 = $$0235828 + 1 | 0;
    } while (($$0235828 | 0) < ($150 | 0));
   }
   $155 = HEAP32[$40 >> 2] | 0;
   $160 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$155 >> 2] | 0) + 44 >> 2] & 63]($155, HEAP32[$47 >> 2] | 0) | 0;
   $162 = HEAP32[$40 >> 2] | 0;
   $165 = HEAP32[(HEAP32[$162 >> 2] | 0) + 44 >> 2] | 0;
   if (($160 | 0) > 0) {
    $166 = ($144 | 0) > 0;
    $167 = +($120 | 0);
    $168 = +($125 | 0);
    $$0236842 = 0;
    $272 = $165;
    $273 = $162;
    while (1) {
     $274 = FUNCTION_TABLE_iii[$272 & 63]($273, 5) | 0;
     $275 = $274 + 2 | 0;
     HEAP32[$10 >> 2] = 0;
     HEAP32[$48 >> 2] = 0;
     HEAP32[$49 >> 2] = 0;
     L43 : do if (($274 | 0) > -2) {
      if ($166) $$0237832$us = 0; else {
       $$0237832 = 0;
       while (1) {
        $331 = HEAP32[$40 >> 2] | 0;
        $336 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$331 >> 2] | 0) + 44 >> 2] & 63]($331, $135) | 0) + 1 | 0;
        HEAP32[$11 >> 2] = $storemerge863;
        HEAP32[$50 >> 2] = $336;
        $337 = HEAP32[$48 >> 2] | 0;
        if ($337 >>> 0 < (HEAP32[$51 >> 2] | 0) >>> 0) {
         $340 = $11;
         $345 = HEAP32[$340 + 4 >> 2] | 0;
         $346 = $337;
         HEAP32[$346 >> 2] = HEAP32[$340 >> 2];
         HEAP32[$346 + 4 >> 2] = $345;
         HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 8;
        } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($10, $11);
        $$0237832 = $$0237832 + 1 | 0;
        if (($$0237832 | 0) >= ($275 | 0)) break L43;
       }
      }
      do {
       $277 = HEAP32[$40 >> 2] | 0;
       $282 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$277 >> 2] | 0) + 44 >> 2] & 63]($277, 2) | 0) == 0;
       $283 = HEAP32[$40 >> 2] | 0;
       $286 = HEAP32[(HEAP32[$283 >> 2] | 0) + 44 >> 2] | 0;
       if ($282) $storemerge243$us = (FUNCTION_TABLE_iii[$286 & 63]($283, $135) | 0) + 1 | 0; else $storemerge243$us = ~(FUNCTION_TABLE_iii[$286 & 63]($283, $144) | 0);
       HEAP32[$11 >> 2] = $storemerge863;
       HEAP32[$50 >> 2] = $storemerge243$us;
       $291 = HEAP32[$48 >> 2] | 0;
       if ($291 >>> 0 < (HEAP32[$51 >> 2] | 0) >>> 0) {
        $294 = $11;
        $299 = HEAP32[$294 + 4 >> 2] | 0;
        $300 = $291;
        HEAP32[$300 >> 2] = HEAP32[$294 >> 2];
        HEAP32[$300 + 4 >> 2] = $299;
        HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 8;
       } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($10, $11);
       $$0237832$us = $$0237832$us + 1 | 0;
      } while (($$0237832$us | 0) < ($275 | 0));
     } while (0);
     $308 = HEAP32[$27 >> 2] | 0;
     if (($308 | 0) == (HEAP32[$52 >> 2] | 0)) __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($6, $10); else {
      HEAP32[$308 >> 2] = 0;
      $311 = $308 + 4 | 0;
      HEAP32[$311 >> 2] = 0;
      HEAP32[$308 + 8 >> 2] = 0;
      $315 = (HEAP32[$48 >> 2] | 0) - (HEAP32[$10 >> 2] | 0) | 0;
      $316 = $315 >> 3;
      if (!$316) $330 = $308; else {
       if ($316 >>> 0 > 536870911) {
        label = 50;
        break L3;
       }
       $319 = __Znwj($315) | 0;
       HEAP32[$311 >> 2] = $319;
       HEAP32[$308 >> 2] = $319;
       HEAP32[$308 + 8 >> 2] = $319 + ($316 << 3);
       $322 = HEAP32[$10 >> 2] | 0;
       $325 = (HEAP32[$48 >> 2] | 0) - $322 | 0;
       if (($325 | 0) > 0) {
        _memcpy($319 | 0, $322 | 0, $325 | 0) | 0;
        HEAP32[$311 >> 2] = $319 + ($325 >>> 3 << 3);
        $330 = HEAP32[$27 >> 2] | 0;
       } else $330 = $308;
      }
      HEAP32[$27 >> 2] = $330 + 12;
     }
     $354 = HEAP32[$40 >> 2] | 0;
     $358 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$354 >> 2] | 0) + 68 >> 2] & 1]($354, $167, $168);
     $359 = HEAP32[$40 >> 2] | 0;
     $363 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$359 >> 2] | 0) + 68 >> 2] & 1]($359, $167, $168);
     $364 = HEAP32[$40 >> 2] | 0;
     $368 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$364 >> 2] | 0) + 68 >> 2] & 1]($364, $126, $127);
     $369 = HEAP32[$40 >> 2] | 0;
     $373 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$369 >> 2] | 0) + 68 >> 2] & 1]($369, $126, $127);
     $374 = HEAP32[$40 >> 2] | 0;
     $378 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$374 >> 2] | 0) + 44 >> 2] & 63]($374, 2) | 0;
     HEAP32[$11 >> 2] = 0;
     HEAP32[$53 >> 2] = 0;
     HEAP32[$54 >> 2] = 0;
     __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEj($11, 6);
     $$pre956 = HEAP32[$11 >> 2] | 0;
     HEAPF64[$$pre956 >> 3] = $358;
     HEAPF64[$$pre956 + 8 >> 3] = $368;
     HEAPF64[$$pre956 + 16 >> 3] = $363;
     HEAPF64[$$pre956 + 24 >> 3] = $373;
     HEAPF64[$$pre956 + 32 >> 3] = 1.0;
     HEAPF64[$$pre956 + 40 >> 3] = +($378 | 0);
     $385 = HEAP32[$29 >> 2] | 0;
     if (($385 | 0) == (HEAP32[$55 >> 2] | 0)) {
      __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($7, $11);
      $409 = HEAP32[$11 >> 2] | 0;
     } else {
      HEAP32[$385 >> 2] = 0;
      $388 = $385 + 4 | 0;
      HEAP32[$388 >> 2] = 0;
      HEAP32[$385 + 8 >> 2] = 0;
      $391 = HEAP32[$11 >> 2] | 0;
      $392 = (HEAP32[$53 >> 2] | 0) - $391 | 0;
      $393 = $392 >> 3;
      if (!$393) {
       $408 = $385;
       $821 = $391;
      } else {
       if ($393 >>> 0 > 536870911) {
        label = 62;
        break L3;
       }
       $397 = __Znwj($392) | 0;
       HEAP32[$388 >> 2] = $397;
       HEAP32[$385 >> 2] = $397;
       HEAP32[$385 + 8 >> 2] = $397 + ($393 << 3);
       $400 = HEAP32[$11 >> 2] | 0;
       $403 = (HEAP32[$53 >> 2] | 0) - $400 | 0;
       if (($403 | 0) > 0) {
        _memcpy($397 | 0, $400 | 0, $403 | 0) | 0;
        HEAP32[$388 >> 2] = $397 + ($403 >>> 3 << 3);
        $408 = HEAP32[$29 >> 2] | 0;
        $821 = $400;
       } else {
        $408 = $385;
        $821 = $400;
       }
      }
      HEAP32[$29 >> 2] = $408 + 12;
      $409 = $821;
     }
     if ($409 | 0) {
      $411 = HEAP32[$53 >> 2] | 0;
      if (($411 | 0) != ($409 | 0)) HEAP32[$53 >> 2] = $411 + (~(($411 + -8 - $409 | 0) >>> 3) << 3);
      __ZdlPv($409);
     }
     $418 = HEAP32[$10 >> 2] | 0;
     if ($418 | 0) {
      $420 = HEAP32[$48 >> 2] | 0;
      if (($420 | 0) != ($418 | 0)) HEAP32[$48 >> 2] = $420 + (~(($420 + -8 - $418 | 0) >>> 3) << 3);
      __ZdlPv($418);
     }
     $$0236842 = $$0236842 + 1 | 0;
     $429 = HEAP32[$40 >> 2] | 0;
     $432 = HEAP32[(HEAP32[$429 >> 2] | 0) + 44 >> 2] | 0;
     if (($$0236842 | 0) >= ($160 | 0)) {
      $$lcssa688 = $432;
      $$lcssa703 = $429;
      break;
     } else {
      $272 = $432;
      $273 = $429;
     }
    }
   } else {
    $$lcssa688 = $165;
    $$lcssa703 = $162;
   }
   $267 = FUNCTION_TABLE_iii[$$lcssa688 & 63]($$lcssa703, HEAP32[$56 >> 2] | 0) | 0;
   if (($267 | 0) > 0) {
    $269 = ($144 | 0) > 0;
    $270 = +($120 | 0);
    $271 = +($125 | 0);
    $$0239858 = 0;
    do {
     HEAP32[$10 >> 2] = 0;
     HEAP32[$57 >> 2] = 0;
     HEAP32[$58 >> 2] = 0;
     $435 = HEAP32[$40 >> 2] | 0;
     $438 = HEAP32[(HEAP32[$435 >> 2] | 0) + 44 >> 2] | 0;
     if ($269) {
      $445 = (FUNCTION_TABLE_iii[$438 & 63]($435, 2) | 0) == 0;
      $446 = HEAP32[$40 >> 2] | 0;
      $449 = HEAP32[(HEAP32[$446 >> 2] | 0) + 44 >> 2] | 0;
      if ($445) $storemerge241$us = (FUNCTION_TABLE_iii[$449 & 63]($446, $135) | 0) + 1 | 0; else $storemerge241$us = ~(FUNCTION_TABLE_iii[$449 & 63]($446, $144) | 0);
      HEAP32[$11 >> 2] = $storemerge863;
      HEAP32[$59 >> 2] = $storemerge241$us;
      $454 = HEAP32[$57 >> 2] | 0;
      if ($454 >>> 0 < (HEAP32[$60 >> 2] | 0) >>> 0) {
       $457 = $11;
       $462 = HEAP32[$457 + 4 >> 2] | 0;
       $463 = $454;
       HEAP32[$463 >> 2] = HEAP32[$457 >> 2];
       HEAP32[$463 + 4 >> 2] = $462;
       HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + 8;
      } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($10, $11);
      $469 = HEAP32[$40 >> 2] | 0;
      $474 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$469 >> 2] | 0) + 44 >> 2] & 63]($469, 2) | 0) == 0;
      $475 = HEAP32[$40 >> 2] | 0;
      $478 = HEAP32[(HEAP32[$475 >> 2] | 0) + 44 >> 2] | 0;
      if ($474) $storemerge241$us$1 = (FUNCTION_TABLE_iii[$478 & 63]($475, $135) | 0) + 1 | 0; else $storemerge241$us$1 = ~(FUNCTION_TABLE_iii[$478 & 63]($475, $144) | 0);
      HEAP32[$11 >> 2] = $storemerge863;
      HEAP32[$59 >> 2] = $storemerge241$us$1;
      $805 = HEAP32[$57 >> 2] | 0;
      if ($805 >>> 0 < (HEAP32[$60 >> 2] | 0) >>> 0) {
       $808 = $11;
       $813 = HEAP32[$808 + 4 >> 2] | 0;
       $814 = $805;
       HEAP32[$814 >> 2] = HEAP32[$808 >> 2];
       HEAP32[$814 + 4 >> 2] = $813;
       HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + 8;
      } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($10, $11);
     } else {
      $440 = (FUNCTION_TABLE_iii[$438 & 63]($435, $135) | 0) + 1 | 0;
      HEAP32[$11 >> 2] = $storemerge863;
      HEAP32[$59 >> 2] = $440;
      $441 = HEAP32[$57 >> 2] | 0;
      if ($441 >>> 0 < (HEAP32[$60 >> 2] | 0) >>> 0) {
       $502 = $11;
       $507 = HEAP32[$502 + 4 >> 2] | 0;
       $508 = $441;
       HEAP32[$508 >> 2] = HEAP32[$502 >> 2];
       HEAP32[$508 + 4 >> 2] = $507;
       HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + 8;
      } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($10, $11);
      $514 = HEAP32[$40 >> 2] | 0;
      $519 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$514 >> 2] | 0) + 44 >> 2] & 63]($514, $135) | 0) + 1 | 0;
      HEAP32[$11 >> 2] = $storemerge863;
      HEAP32[$59 >> 2] = $519;
      $520 = HEAP32[$57 >> 2] | 0;
      if ($520 >>> 0 < (HEAP32[$60 >> 2] | 0) >>> 0) {
       $789 = $11;
       $794 = HEAP32[$789 + 4 >> 2] | 0;
       $795 = $520;
       HEAP32[$795 >> 2] = HEAP32[$789 >> 2];
       HEAP32[$795 + 4 >> 2] = $794;
       HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + 8;
      } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($10, $11);
     }
     $479 = HEAP32[$31 >> 2] | 0;
     if (($479 | 0) == (HEAP32[$61 >> 2] | 0)) __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($8, $10); else {
      HEAP32[$479 >> 2] = 0;
      $482 = $479 + 4 | 0;
      HEAP32[$482 >> 2] = 0;
      HEAP32[$479 + 8 >> 2] = 0;
      $486 = (HEAP32[$57 >> 2] | 0) - (HEAP32[$10 >> 2] | 0) | 0;
      $487 = $486 >> 3;
      if (!$487) $501 = $479; else {
       if ($487 >>> 0 > 536870911) {
        label = 89;
        break L3;
       }
       $490 = __Znwj($486) | 0;
       HEAP32[$482 >> 2] = $490;
       HEAP32[$479 >> 2] = $490;
       HEAP32[$479 + 8 >> 2] = $490 + ($487 << 3);
       $493 = HEAP32[$10 >> 2] | 0;
       $496 = (HEAP32[$57 >> 2] | 0) - $493 | 0;
       if (($496 | 0) > 0) {
        _memcpy($490 | 0, $493 | 0, $496 | 0) | 0;
        HEAP32[$482 >> 2] = $490 + ($496 >>> 3 << 3);
        $501 = HEAP32[$31 >> 2] | 0;
       } else $501 = $479;
      }
      HEAP32[$31 >> 2] = $501 + 12;
     }
     $523 = HEAP32[$40 >> 2] | 0;
     $527 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$523 >> 2] | 0) + 68 >> 2] & 1]($523, $270, $271);
     $528 = HEAP32[$40 >> 2] | 0;
     $532 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$528 >> 2] | 0) + 68 >> 2] & 1]($528, $270, $271);
     $533 = HEAP32[$40 >> 2] | 0;
     $537 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$533 >> 2] | 0) + 68 >> 2] & 1]($533, $126, $127);
     $538 = HEAP32[$40 >> 2] | 0;
     $542 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$538 >> 2] | 0) + 68 >> 2] & 1]($538, $126, $127);
     $543 = HEAP32[$40 >> 2] | 0;
     $547 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$543 >> 2] | 0) + 44 >> 2] & 63]($543, 2) | 0;
     HEAP32[$11 >> 2] = 0;
     HEAP32[$62 >> 2] = 0;
     HEAP32[$63 >> 2] = 0;
     __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEj($11, 6);
     $$pre961 = HEAP32[$11 >> 2] | 0;
     HEAPF64[$$pre961 >> 3] = $527;
     HEAPF64[$$pre961 + 8 >> 3] = $537;
     HEAPF64[$$pre961 + 16 >> 3] = $532;
     HEAPF64[$$pre961 + 24 >> 3] = $542;
     HEAPF64[$$pre961 + 32 >> 3] = 1.0;
     HEAPF64[$$pre961 + 40 >> 3] = +($547 | 0);
     $554 = HEAP32[$33 >> 2] | 0;
     if (($554 | 0) == (HEAP32[$64 >> 2] | 0)) {
      __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($9, $11);
      $578 = HEAP32[$11 >> 2] | 0;
     } else {
      HEAP32[$554 >> 2] = 0;
      $557 = $554 + 4 | 0;
      HEAP32[$557 >> 2] = 0;
      HEAP32[$554 + 8 >> 2] = 0;
      $560 = HEAP32[$11 >> 2] | 0;
      $561 = (HEAP32[$62 >> 2] | 0) - $560 | 0;
      $562 = $561 >> 3;
      if (!$562) {
       $577 = $554;
       $822 = $560;
      } else {
       if ($562 >>> 0 > 536870911) {
        label = 100;
        break L3;
       }
       $566 = __Znwj($561) | 0;
       HEAP32[$557 >> 2] = $566;
       HEAP32[$554 >> 2] = $566;
       HEAP32[$554 + 8 >> 2] = $566 + ($562 << 3);
       $569 = HEAP32[$11 >> 2] | 0;
       $572 = (HEAP32[$62 >> 2] | 0) - $569 | 0;
       if (($572 | 0) > 0) {
        _memcpy($566 | 0, $569 | 0, $572 | 0) | 0;
        HEAP32[$557 >> 2] = $566 + ($572 >>> 3 << 3);
        $577 = HEAP32[$33 >> 2] | 0;
        $822 = $569;
       } else {
        $577 = $554;
        $822 = $569;
       }
      }
      HEAP32[$33 >> 2] = $577 + 12;
      $578 = $822;
     }
     if ($578 | 0) {
      $580 = HEAP32[$62 >> 2] | 0;
      if (($580 | 0) != ($578 | 0)) HEAP32[$62 >> 2] = $580 + (~(($580 + -8 - $578 | 0) >>> 3) << 3);
      __ZdlPv($578);
     }
     $587 = HEAP32[$10 >> 2] | 0;
     if ($587 | 0) {
      $589 = HEAP32[$57 >> 2] | 0;
      if (($589 | 0) != ($587 | 0)) HEAP32[$57 >> 2] = $589 + (~(($589 + -8 - $587 | 0) >>> 3) << 3);
      __ZdlPv($587);
     }
     $$0239858 = $$0239858 + 1 | 0;
    } while (($$0239858 | 0) < ($267 | 0));
   }
   $storemerge863 = $storemerge863 + 1 | 0;
   if (($storemerge863 | 0) >= ($22 | 0)) {
    label = 3;
    break;
   }
  }
  if ((label | 0) == 3) {
   $66 = HEAP32[$4 >> 2] | 0;
   $67 = HEAP32[$23 >> 2] | 0;
   break;
  } else if ((label | 0) == 6) ___assert_fail(15898, 15934, 149, 15973); else if ((label | 0) == 8) ___assert_fail(19230, 15934, 143, 19271); else if ((label | 0) == 10) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($38); else if ((label | 0) == 26) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($231); else if ((label | 0) == 50) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($308); else if ((label | 0) == 62) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($385); else if ((label | 0) == 89) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($479); else if ((label | 0) == 100) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($554);
 } else {
  $66 = 0;
  $67 = 0;
 } while (0);
 $65 = $10 + 88 | 0;
 dest = $10;
 stop = dest + 72 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $65;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($10, $66, $67);
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($10 + 12 | 0, HEAP32[$5 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($10 + 24 | 0, HEAP32[$6 >> 2] | 0, HEAP32[$27 >> 2] | 0);
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($10 + 36 | 0, HEAP32[$7 >> 2] | 0, HEAP32[$29 >> 2] | 0);
 __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($10 + 48 | 0, HEAP32[$8 >> 2] | 0, HEAP32[$31 >> 2] | 0);
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($10 + 60 | 0, HEAP32[$9 >> 2] | 0, HEAP32[$33 >> 2] | 0);
 $83 = $0 + 124 | 0;
 $84 = HEAP32[$83 >> 2] | 0;
 $88 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$84 >> 2] | 0) + 68 >> 2] & 1]($84, 0.0, .1);
 $89 = __Znwj(48) | 0;
 HEAPF64[$89 >> 3] = $88;
 HEAPF64[$89 + 8 >> 3] = $88;
 HEAPF64[$89 + 16 >> 3] = $88;
 HEAPF64[$89 + 24 >> 3] = $88;
 HEAPF64[$89 + 32 >> 3] = $88;
 HEAPF64[$89 + 40 >> 3] = $88;
 $95 = HEAP32[$83 >> 2] | 0;
 HEAPF64[$10 + 80 >> 3] = +(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$95 >> 2] | 0) + 44 >> 2] & 63]($95, 100) | 0) / 1.0e4;
 __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($10 + 88 | 0, $89, $89 + 48 | 0);
 HEAP32[$11 >> 2] = 0;
 $105 = $11 + 4 | 0;
 HEAP32[$105 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$12 >> 2] = 0;
 $107 = $12 + 4 | 0;
 HEAP32[$107 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $109 = HEAP32[$83 >> 2] | 0;
 $113 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$109 >> 2] | 0) + 44 >> 2] & 63]($109, 1) | 0;
 L168 : do if (($113 | 0) >= -1) {
  $598 = $0 + 108 | 0;
  $599 = $0 + 52 | 0;
  $600 = $0 + 56 | 0;
  $601 = $11 + 8 | 0;
  $602 = $12 + 8 | 0;
  $$0827 = 0;
  while (1) {
   $621 = HEAP32[$83 >> 2] | 0;
   $622 = HEAP32[$598 >> 2] | 0;
   $624 = HEAP32[$599 >> 2] | 0;
   if (((HEAP32[$600 >> 2] | 0) - $624 >> 2 | 0) <= ($622 | 0)) break;
   $634 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$621 >> 2] | 0) + 44 >> 2] & 63]($621, HEAP32[$624 + ($622 << 2) >> 2] | 0) | 0;
   HEAP32[$13 >> 2] = $634;
   $635 = HEAP32[$105 >> 2] | 0;
   if (($635 | 0) == (HEAP32[$601 >> 2] | 0)) __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_($11, $13); else {
    HEAP32[$635 >> 2] = $634;
    HEAP32[$105 >> 2] = $635 + 4;
   }
   $639 = HEAP32[$83 >> 2] | 0;
   $643 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$639 >> 2] | 0) + 68 >> 2] & 1]($639, 0.0, .1);
   HEAPF64[$14 >> 3] = $643;
   $644 = HEAP32[$107 >> 2] | 0;
   if ($644 >>> 0 < (HEAP32[$602 >> 2] | 0) >>> 0) {
    HEAPF64[$644 >> 3] = $643;
    HEAP32[$107 >> 2] = $644 + 8;
   } else __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($12, $14);
   if (($$0827 | 0) > ($113 | 0)) break L168; else $$0827 = $$0827 + 1 | 0;
  }
  ___assert_fail(15898, 15934, 149, 15973);
 } while (0);
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($10 + 100 | 0, HEAP32[$11 >> 2] | 0, HEAP32[$105 >> 2] | 0);
 __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($10 + 112 | 0, HEAP32[$12 >> 2] | 0, HEAP32[$107 >> 2] | 0);
 $609 = __Znwj(28) | 0;
 HEAP8[$609 + 16 >> 0] = 0;
 HEAP32[$609 + 8 >> 2] = 2;
 HEAP8[$609 + 15 >> 0] = 0;
 HEAP8[$609 + 12 >> 0] = 1;
 HEAP8[$609 + 13 >> 0] = 1;
 HEAP8[$609 + 14 >> 0] = 0;
 HEAP32[$609 >> 2] = 5136;
 $617 = __Znwj(128) | 0;
 __ZN6RepHFMC2ERKS_($617, $10);
 HEAP32[$609 + 20 >> 2] = $617;
 HEAP32[$609 + 24 >> 2] = 0;
 $619 = HEAP32[$12 >> 2] | 0;
 if ($619 | 0) {
  $650 = HEAP32[$107 >> 2] | 0;
  if (($650 | 0) != ($619 | 0)) HEAP32[$107 >> 2] = $650 + (~(($650 + -8 - $619 | 0) >>> 3) << 3);
  __ZdlPv($619);
 }
 $657 = HEAP32[$11 >> 2] | 0;
 if ($657 | 0) {
  $659 = HEAP32[$105 >> 2] | 0;
  if (($659 | 0) != ($657 | 0)) HEAP32[$105 >> 2] = $659 + (~(($659 + -4 - $657 | 0) >>> 2) << 2);
  __ZdlPv($657);
 }
 __ZdlPv($89);
 __ZN6RepHFMD2Ev($10);
 $666 = HEAP32[$9 >> 2] | 0;
 if ($666 | 0) {
  $668 = HEAP32[$33 >> 2] | 0;
  if (($668 | 0) == ($666 | 0)) $684 = $666; else {
   $671 = $668;
   while (1) {
    $670 = $671 + -12 | 0;
    HEAP32[$33 >> 2] = $670;
    $672 = HEAP32[$670 >> 2] | 0;
    if (!$672) $674 = $670; else {
     $676 = $671 + -8 | 0;
     $677 = HEAP32[$676 >> 2] | 0;
     if (($677 | 0) != ($672 | 0)) HEAP32[$676 >> 2] = $677 + (~(($677 + -8 - $672 | 0) >>> 3) << 3);
     __ZdlPv($672);
     $674 = HEAP32[$33 >> 2] | 0;
    }
    if (($674 | 0) == ($666 | 0)) break; else $671 = $674;
   }
   $684 = HEAP32[$9 >> 2] | 0;
  }
  __ZdlPv($684);
 }
 $685 = HEAP32[$8 >> 2] | 0;
 if ($685 | 0) {
  $687 = HEAP32[$31 >> 2] | 0;
  if (($687 | 0) == ($685 | 0)) $703 = $685; else {
   $690 = $687;
   while (1) {
    $689 = $690 + -12 | 0;
    HEAP32[$31 >> 2] = $689;
    $691 = HEAP32[$689 >> 2] | 0;
    if (!$691) $693 = $689; else {
     $695 = $690 + -8 | 0;
     $696 = HEAP32[$695 >> 2] | 0;
     if (($696 | 0) != ($691 | 0)) HEAP32[$695 >> 2] = $696 + (~(($696 + -8 - $691 | 0) >>> 3) << 3);
     __ZdlPv($691);
     $693 = HEAP32[$31 >> 2] | 0;
    }
    if (($693 | 0) == ($685 | 0)) break; else $690 = $693;
   }
   $703 = HEAP32[$8 >> 2] | 0;
  }
  __ZdlPv($703);
 }
 $704 = HEAP32[$7 >> 2] | 0;
 if ($704 | 0) {
  $706 = HEAP32[$29 >> 2] | 0;
  if (($706 | 0) == ($704 | 0)) $722 = $704; else {
   $709 = $706;
   while (1) {
    $708 = $709 + -12 | 0;
    HEAP32[$29 >> 2] = $708;
    $710 = HEAP32[$708 >> 2] | 0;
    if (!$710) $712 = $708; else {
     $714 = $709 + -8 | 0;
     $715 = HEAP32[$714 >> 2] | 0;
     if (($715 | 0) != ($710 | 0)) HEAP32[$714 >> 2] = $715 + (~(($715 + -8 - $710 | 0) >>> 3) << 3);
     __ZdlPv($710);
     $712 = HEAP32[$29 >> 2] | 0;
    }
    if (($712 | 0) == ($704 | 0)) break; else $709 = $712;
   }
   $722 = HEAP32[$7 >> 2] | 0;
  }
  __ZdlPv($722);
 }
 $723 = HEAP32[$6 >> 2] | 0;
 if ($723 | 0) {
  $725 = HEAP32[$27 >> 2] | 0;
  if (($725 | 0) == ($723 | 0)) $741 = $723; else {
   $728 = $725;
   while (1) {
    $727 = $728 + -12 | 0;
    HEAP32[$27 >> 2] = $727;
    $729 = HEAP32[$727 >> 2] | 0;
    if (!$729) $731 = $727; else {
     $733 = $728 + -8 | 0;
     $734 = HEAP32[$733 >> 2] | 0;
     if (($734 | 0) != ($729 | 0)) HEAP32[$733 >> 2] = $734 + (~(($734 + -8 - $729 | 0) >>> 3) << 3);
     __ZdlPv($729);
     $731 = HEAP32[$27 >> 2] | 0;
    }
    if (($731 | 0) == ($723 | 0)) break; else $728 = $731;
   }
   $741 = HEAP32[$6 >> 2] | 0;
  }
  __ZdlPv($741);
 }
 $742 = HEAP32[$5 >> 2] | 0;
 if ($742 | 0) {
  $744 = HEAP32[$25 >> 2] | 0;
  if (($744 | 0) == ($742 | 0)) $760 = $742; else {
   $747 = $744;
   while (1) {
    $746 = $747 + -12 | 0;
    HEAP32[$25 >> 2] = $746;
    $748 = HEAP32[$746 >> 2] | 0;
    if (!$748) $750 = $746; else {
     $752 = $747 + -8 | 0;
     $753 = HEAP32[$752 >> 2] | 0;
     if (($753 | 0) != ($748 | 0)) HEAP32[$752 >> 2] = $753 + (~(($753 + -8 - $748 | 0) >>> 3) << 3);
     __ZdlPv($748);
     $750 = HEAP32[$25 >> 2] | 0;
    }
    if (($750 | 0) == ($742 | 0)) break; else $747 = $750;
   }
   $760 = HEAP32[$5 >> 2] | 0;
  }
  __ZdlPv($760);
 }
 $761 = HEAP32[$4 >> 2] | 0;
 if ($761 | 0) {
  $763 = HEAP32[$23 >> 2] | 0;
  if (($763 | 0) != ($761 | 0)) HEAP32[$23 >> 2] = $763 + (~(($763 + -8 - $761 | 0) >>> 3) << 3);
  __ZdlPv($761);
 }
 $770 = HEAP32[$3 >> 2] | 0;
 if (!$770) {
  STACKTOP = sp;
  return $609 | 0;
 }
 $772 = HEAP32[$18 >> 2] | 0;
 if (($772 | 0) == ($770 | 0)) $788 = $770; else {
  $775 = $772;
  while (1) {
   $774 = $775 + -12 | 0;
   HEAP32[$18 >> 2] = $774;
   $776 = HEAP32[$774 >> 2] | 0;
   if (!$776) $778 = $774; else {
    $780 = $775 + -8 | 0;
    $781 = HEAP32[$780 >> 2] | 0;
    if (($781 | 0) != ($776 | 0)) HEAP32[$780 >> 2] = $781 + (~(($781 + -8 - $776 | 0) >>> 3) << 3);
    __ZdlPv($776);
    $778 = HEAP32[$18 >> 2] | 0;
   }
   if (($778 | 0) == ($770 | 0)) break; else $775 = $778;
  }
  $788 = HEAP32[$3 >> 2] | 0;
 }
 __ZdlPv($788);
 STACKTOP = sp;
 return $609 | 0;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i161 = 0, $$0$i$i$i$i206 = 0, $$0$i$i$i$i223 = 0, $$0$i$i$i$i240 = 0, $$0$i$i$i$i258 = 0, $$0$i$i$i$i274 = 0, $$0$i$i147 = 0, $$0$i$i150 = 0, $$0$i$i153 = 0, $$0$i$i156 = 0, $$0$i$i159 = 0, $$0$i$i160 = 0, $$0$i$i174 = 0, $$0$i$i177 = 0, $$0$i$i183 = 0, $$0$i$i190 = 0, $$0$i$i195 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i167 = 0, $$0$i$i2$i$i212 = 0, $$0$i$i2$i$i229 = 0, $$0$i$i2$i$i246 = 0, $$0$i$i2$i$i264 = 0, $$0$i$i2$i$i280 = 0, $$0$i$i203 = 0, $$0$i$i236 = 0, $$0$i$i253 = 0, $$0$i$i271 = 0, $$0$i$i287 = 0, $$0$i$i290 = 0, $$0124 = 0, $$0129 = 0, $$0131 = 0, $$10 = 0, $$1130 = 0, $$2126$ph = 0, $$lcssa = 0, $$pre$i4$i$i169 = 0, $$pre$i4$i$i169394 = 0, $$pre$i4$i$i169396 = 0, $$pre$i4$i$i231 = 0, $$pre$i4$i$i231391 = 0, $$pre$i4$i$i231392 = 0, $$pre$i4$i$i248 = 0, $$pre$i4$i$i248382 = 0, $$pre$i4$i$i248384 = 0, $$pre$i4$i$i266 = 0, $$pre$i4$i$i282 = 0, $$pre$i4$i$i282387$ph = 0, $$pre$i4$i$i282387399 = 0, $$sink = 0, $$sroa$0299$0 = 0, $$sroa$0319$0 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $126 = 0, $129 = 0, $13 = 0, $14 = 0, $141 = 0, $144 = 0, $15 = 0, $156 = 0, $157 = 0, $159 = 0, $16 = 0, $17 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $191 = 0, $195 = 0, $196 = 0, $20 = 0, $200 = 0, $203 = 0, $205 = 0, $207 = 0, $21 = 0, $210 = 0, $217 = 0, $22 = 0, $224 = 0, $225 = 0, $226 = 0, $23 = 0, $235 = 0, $24 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $258 = 0, $27 = 0, $277 = 0, $278 = 0, $279 = 0, $282 = 0, $288 = 0, $307 = 0, $308 = 0, $309 = 0, $318 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $343 = 0, $344 = 0, $346 = 0, $356 = 0, $357 = 0, $358 = 0, $361 = 0, $365 = 0, $368 = 0, $375 = 0, $376 = 0, $379 = 0, $382 = 0, $383 = 0, $385 = 0, $388 = 0, $40 = 0, $400 = 0, $403 = 0, $41 = 0, $415 = 0, $416 = 0, $418 = 0, $42 = 0, $43 = 0, $431 = 0, $432 = 0, $433 = 0, $44 = 0, $444 = 0, $445 = 0, $455 = 0, $458 = 0, $46 = 0, $47 = 0, $470 = 0, $473 = 0, $48 = 0, $485 = 0, $486 = 0, $488 = 0, $49 = 0, $498 = 0, $50 = 0, $506 = 0, $51 = 0, $510 = 0, $512 = 0, $52 = 0, $521 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $53 = 0, $538 = 0, $544 = 0, $547 = 0, $55 = 0, $550 = 0, $56 = 0, $564 = 0, $576 = 0, $578 = 0, $59 = 0, $591 = 0, $592 = 0, $593 = 0, $604 = 0, $607 = 0, $619 = 0, $622 = 0, $634 = 0, $635 = 0, $637 = 0, $658 = 0, $660 = 0, $671 = 0, $675 = 0, $676 = 0, $677 = 0, $692 = 0, $693 = 0, $694 = 0, $699 = 0, $700 = 0, $703 = 0, $71 = 0, $715 = 0, $718 = 0, $730 = 0, $732 = 0, $74 = 0, $747 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $764 = 0, $765 = 0, $771 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $780 = 0, $781 = 0, $782 = 0, $89 = 0, $90 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $11 = sp + 88 | 0;
 $12 = sp + 96 | 0;
 $13 = sp + 80 | 0;
 $14 = sp + 72 | 0;
 $15 = sp + 68 | 0;
 $16 = sp + 500 | 0;
 $17 = sp + 497 | 0;
 $18 = sp + 496 | 0;
 $19 = sp + 56 | 0;
 $20 = sp + 44 | 0;
 $21 = sp + 32 | 0;
 $22 = sp + 20 | 0;
 $23 = sp + 8 | 0;
 $24 = sp + 4 | 0;
 $25 = sp;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$13 >> 2] = $12;
 $27 = $13 + 4 | 0;
 HEAP32[$27 >> 2] = 266;
 HEAP32[$14 >> 2] = $12;
 HEAP32[$15 >> 2] = $12 + 400;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$19 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 $$0$i$i147 = 0;
 while (1) {
  if (($$0$i$i147 | 0) == 3) break;
  HEAP32[$20 + ($$0$i$i147 << 2) >> 2] = 0;
  $$0$i$i147 = $$0$i$i147 + 1 | 0;
 }
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 $$0$i$i150 = 0;
 while (1) {
  if (($$0$i$i150 | 0) == 3) break;
  HEAP32[$21 + ($$0$i$i150 << 2) >> 2] = 0;
  $$0$i$i150 = $$0$i$i150 + 1 | 0;
 }
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 $$0$i$i153 = 0;
 while (1) {
  if (($$0$i$i153 | 0) == 3) break;
  HEAP32[$22 + ($$0$i$i153 << 2) >> 2] = 0;
  $$0$i$i153 = $$0$i$i153 + 1 | 0;
 }
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = 0;
 $$0$i$i156 = 0;
 while (1) {
  if (($$0$i$i156 | 0) == 3) break;
  HEAP32[$23 + ($$0$i$i156 << 2) >> 2] = 0;
  $$0$i$i156 = $$0$i$i156 + 1 | 0;
 }
 __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($2, $3, $16, $17, $18, $19, $20, $21, $22, $24);
 HEAP32[$9 >> 2] = HEAP32[$8 >> 2];
 $40 = $7 + 8 | 0;
 $41 = $21 + 11 | 0;
 $42 = $21 + 4 | 0;
 $43 = $22 + 11 | 0;
 $44 = $22 + 4 | 0;
 $46 = ($4 & 512 | 0) != 0;
 $47 = $20 + 11 | 0;
 $48 = $20 + 4 | 0;
 $49 = $23 + 11 | 0;
 $50 = $23 + 4 | 0;
 $51 = $16 + 3 | 0;
 $52 = $19 + 11 | 0;
 $53 = $19 + 4 | 0;
 $$0129 = 0;
 $$0131 = 0;
 L21 : while (1) {
  $55 = ($$0129 | 0) != 0;
  if ($$0131 >>> 0 >= 4) {
   label = 234;
   break;
  }
  $56 = HEAP32[$0 >> 2] | 0;
  do if (!$56) $774 = 1; else {
   $59 = HEAP32[$56 + 12 >> 2] | 0;
   if (($59 | 0) == (HEAP32[$56 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 36 >> 2] & 127]($56) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$59 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $774 = 1;
    break;
   } else {
    $774 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $71 = HEAP32[$1 >> 2] | 0;
  do if (!$71) label = 31; else {
   $74 = HEAP32[$71 + 12 >> 2] | 0;
   if (($74 | 0) == (HEAP32[$71 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$71 >> 2] | 0) + 36 >> 2] & 127]($71) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$74 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    label = 31;
    break;
   } else if ($774) {
    $775 = $71;
    break;
   } else {
    label = 234;
    break L21;
   }
  } while (0);
  if ((label | 0) == 31) {
   label = 0;
   if ($774) {
    label = 234;
    break;
   } else $775 = 0;
  }
  $89 = ($$0131 | 0) != 3;
  L46 : do switch (HEAP8[$16 + $$0131 >> 0] | 0) {
  case 1:
   {
    if ($89) {
     $90 = HEAP32[$0 >> 2] | 0;
     $92 = HEAP32[$90 + 12 >> 2] | 0;
     if (($92 | 0) == (HEAP32[$90 + 16 >> 2] | 0)) $$0$i$i159 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$90 >> 2] | 0) + 36 >> 2] & 127]($90) | 0; else $$0$i$i159 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$92 >> 0] | 0) | 0;
     if (($$0$i$i159 & 255) << 24 >> 24 <= -1) {
      label = 44;
      break L21;
     }
     if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i159 << 24 >> 24 << 1) >> 1] & 8192)) {
      label = 44;
      break L21;
     }
     $110 = HEAP32[$0 >> 2] | 0;
     $111 = $110 + 12 | 0;
     $112 = HEAP32[$111 >> 2] | 0;
     if (($112 | 0) == (HEAP32[$110 + 16 >> 2] | 0)) $$0$i$i160 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$110 >> 2] | 0) + 40 >> 2] & 127]($110) | 0; else {
      HEAP32[$111 >> 2] = $112 + 1;
      $$0$i$i160 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$112 >> 0] | 0) | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($23, $$0$i$i160 & 255);
     $$pre$i4$i$i169 = $775;
     $141 = $775;
     label = 46;
    } else $$1130 = $$0129;
    break;
   }
  case 0:
   {
    if ($89) {
     $$pre$i4$i$i169 = $775;
     $141 = $775;
     label = 46;
    } else $$1130 = $$0129;
    break;
   }
  case 3:
   {
    $191 = HEAP8[$41 >> 0] | 0;
    $195 = $191 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $191 & 255;
    $196 = HEAP8[$43 >> 0] | 0;
    $200 = $196 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $196 & 255;
    if (($195 | 0) == (0 - $200 | 0)) $$1130 = $$0129; else {
     $203 = ($195 | 0) == 0;
     $205 = HEAP32[$0 >> 2] | 0;
     $207 = HEAP32[$205 + 12 >> 2] | 0;
     $210 = ($207 | 0) == (HEAP32[$205 + 16 >> 2] | 0);
     if ($203 | ($200 | 0) == 0) {
      if ($210) $$0$i$i183 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$205 >> 2] | 0) + 36 >> 2] & 127]($205) | 0; else $$0$i$i183 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$207 >> 0] | 0) | 0;
      $217 = $$0$i$i183 & 255;
      if ($203) {
       if ($217 << 24 >> 24 != (HEAP8[((HEAP8[$43 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 0] | 0)) {
        $$1130 = $$0129;
        break L46;
       }
       $247 = HEAP32[$0 >> 2] | 0;
       $248 = $247 + 12 | 0;
       $249 = HEAP32[$248 >> 2] | 0;
       if (($249 | 0) == (HEAP32[$247 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$247 >> 2] | 0) + 40 >> 2] & 127]($247) | 0; else {
        HEAP32[$248 >> 2] = $249 + 1;
        __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$249 >> 0] | 0) | 0;
       }
       HEAP8[$6 >> 0] = 1;
       $258 = HEAP8[$43 >> 0] | 0;
       $$1130 = ($258 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $258 & 255) >>> 0 > 1 ? $22 : $$0129;
       break L46;
      }
      if ($217 << 24 >> 24 != (HEAP8[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 0] | 0)) {
       HEAP8[$6 >> 0] = 1;
       $$1130 = $$0129;
       break L46;
      }
      $224 = HEAP32[$0 >> 2] | 0;
      $225 = $224 + 12 | 0;
      $226 = HEAP32[$225 >> 2] | 0;
      if (($226 | 0) == (HEAP32[$224 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$224 >> 2] | 0) + 40 >> 2] & 127]($224) | 0; else {
       HEAP32[$225 >> 2] = $226 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$226 >> 0] | 0) | 0;
      }
      $235 = HEAP8[$41 >> 0] | 0;
      $$1130 = ($235 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $235 & 255) >>> 0 > 1 ? $21 : $$0129;
      break L46;
     }
     if ($210) $$0$i$i190 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$205 >> 2] | 0) + 36 >> 2] & 127]($205) | 0; else $$0$i$i190 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$207 >> 0] | 0) | 0;
     $277 = HEAP32[$0 >> 2] | 0;
     $278 = $277 + 12 | 0;
     $279 = HEAP32[$278 >> 2] | 0;
     $282 = ($279 | 0) == (HEAP32[$277 + 16 >> 2] | 0);
     if (($$0$i$i190 & 255) << 24 >> 24 == (HEAP8[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 0] | 0)) {
      if ($282) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$277 >> 2] | 0) + 40 >> 2] & 127]($277) | 0; else {
       HEAP32[$278 >> 2] = $279 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$279 >> 0] | 0) | 0;
      }
      $288 = HEAP8[$41 >> 0] | 0;
      $$1130 = ($288 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $288 & 255) >>> 0 > 1 ? $21 : $$0129;
      break L46;
     }
     if ($282) $$0$i$i195 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$277 >> 2] | 0) + 36 >> 2] & 127]($277) | 0; else $$0$i$i195 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$279 >> 0] | 0) | 0;
     if (($$0$i$i195 & 255) << 24 >> 24 != (HEAP8[((HEAP8[$43 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 0] | 0)) {
      label = 103;
      break L21;
     }
     $307 = HEAP32[$0 >> 2] | 0;
     $308 = $307 + 12 | 0;
     $309 = HEAP32[$308 >> 2] | 0;
     if (($309 | 0) == (HEAP32[$307 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$307 >> 2] | 0) + 40 >> 2] & 127]($307) | 0; else {
      HEAP32[$308 >> 2] = $309 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$309 >> 0] | 0) | 0;
     }
     HEAP8[$6 >> 0] = 1;
     $318 = HEAP8[$43 >> 0] | 0;
     $$1130 = ($318 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $318 & 255) >>> 0 > 1 ? $22 : $$0129;
    }
    break;
   }
  case 2:
   {
    if (!($$0131 >>> 0 < 2 | $55)) if (!($46 | ($$0131 | 0) == 2 & (HEAP8[$51 >> 0] | 0) != 0)) {
     $$1130 = 0;
     break L46;
    }
    $331 = HEAP8[$47 >> 0] | 0;
    $332 = $331 << 24 >> 24 < 0;
    $333 = HEAP32[$20 >> 2] | 0;
    $334 = $332 ? $333 : $20;
    $335 = $334;
    L108 : do if (!$$0131) {
     $$pre$i4$i$i231 = $775;
     $$sroa$0299$0 = $335;
     $375 = $331;
     $379 = $333;
     $400 = $775;
    } else if ((HEAPU8[$16 + ($$0131 + -1) >> 0] | 0) < 2) {
     $343 = $334 + ($332 ? HEAP32[$48 >> 2] | 0 : $331 & 255) | 0;
     $$sroa$0319$0 = $335;
     while (1) {
      $344 = $$sroa$0319$0;
      if (($344 | 0) == ($343 | 0)) break;
      $346 = HEAP8[$344 >> 0] | 0;
      if ($346 << 24 >> 24 <= -1) break;
      if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($346 << 24 >> 24 << 1) >> 1] & 8192)) break;
      $$sroa$0319$0 = $344 + 1 | 0;
     }
     $356 = $$sroa$0319$0 - $335 | 0;
     $357 = HEAP8[$49 >> 0] | 0;
     $358 = $357 << 24 >> 24 < 0;
     $361 = $358 ? HEAP32[$50 >> 2] | 0 : $357 & 255;
     if ($356 >>> 0 > $361 >>> 0) {
      $$pre$i4$i$i231 = $775;
      $$sroa$0299$0 = $335;
      $375 = $331;
      $379 = $333;
      $400 = $775;
     } else {
      $365 = ($358 ? HEAP32[$23 >> 2] | 0 : $23) + $361 | 0;
      $$sink = $334;
      $368 = $365 + (0 - $356) | 0;
      while (1) {
       if (($368 | 0) == ($365 | 0)) {
        $$pre$i4$i$i231 = $775;
        $$sroa$0299$0 = $$sroa$0319$0;
        $375 = $331;
        $379 = $333;
        $400 = $775;
        break L108;
       }
       if ((HEAP8[$368 >> 0] | 0) != (HEAP8[$$sink >> 0] | 0)) {
        $$pre$i4$i$i231 = $775;
        $$sroa$0299$0 = $335;
        $375 = $331;
        $379 = $333;
        $400 = $775;
        break L108;
       }
       $$sink = $$sink + 1 | 0;
       $368 = $368 + 1 | 0;
      }
     }
    } else {
     $$pre$i4$i$i231 = $775;
     $$sroa$0299$0 = $335;
     $375 = $331;
     $379 = $333;
     $400 = $775;
    } while (0);
    L122 : while (1) {
     $376 = $375 << 24 >> 24 < 0;
     $382 = ($376 ? $379 : $20) + ($376 ? HEAP32[$48 >> 2] | 0 : $375 & 255) | 0;
     $383 = $$sroa$0299$0;
     if (($383 | 0) == ($382 | 0)) {
      $$lcssa = $382;
      break;
     }
     $385 = HEAP32[$0 >> 2] | 0;
     do if (!$385) $415 = 1; else {
      $388 = HEAP32[$385 + 12 >> 2] | 0;
      if (($388 | 0) == (HEAP32[$385 + 16 >> 2] | 0)) $$0$i$i$i$i223 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$385 >> 2] | 0) + 36 >> 2] & 127]($385) | 0; else $$0$i$i$i$i223 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$388 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i223, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $415 = 1;
       break;
      } else {
       $415 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$400) {
      $$pre$i4$i$i231392 = $$pre$i4$i$i231;
      label = 132;
     } else {
      $403 = HEAP32[$400 + 12 >> 2] | 0;
      if (($403 | 0) == (HEAP32[$400 + 16 >> 2] | 0)) $$0$i$i2$i$i229 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$400 >> 2] | 0) + 36 >> 2] & 127]($400) | 0; else $$0$i$i2$i$i229 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$403 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i229, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       $$pre$i4$i$i231392 = 0;
       label = 132;
       break;
      } else if ($415 ^ ($$pre$i4$i$i231 | 0) == 0) {
       $$pre$i4$i$i231391 = $$pre$i4$i$i231;
       $777 = $$pre$i4$i$i231;
       break;
      } else {
       $$lcssa = $383;
       break L122;
      }
     } while (0);
     if ((label | 0) == 132) {
      label = 0;
      if ($415) {
       $$lcssa = $383;
       break;
      } else {
       $$pre$i4$i$i231391 = $$pre$i4$i$i231392;
       $777 = 0;
      }
     }
     $416 = HEAP32[$0 >> 2] | 0;
     $418 = HEAP32[$416 + 12 >> 2] | 0;
     if (($418 | 0) == (HEAP32[$416 + 16 >> 2] | 0)) $$0$i$i236 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$416 >> 2] | 0) + 36 >> 2] & 127]($416) | 0; else $$0$i$i236 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$418 >> 0] | 0) | 0;
     if (($$0$i$i236 & 255) << 24 >> 24 != (HEAP8[$383 >> 0] | 0)) {
      $$lcssa = $383;
      break;
     }
     $431 = HEAP32[$0 >> 2] | 0;
     $432 = $431 + 12 | 0;
     $433 = HEAP32[$432 >> 2] | 0;
     if (($433 | 0) == (HEAP32[$431 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$431 >> 2] | 0) + 40 >> 2] & 127]($431) | 0; else {
      HEAP32[$432 >> 2] = $433 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$433 >> 0] | 0) | 0;
     }
     $$pre$i4$i$i231 = $$pre$i4$i$i231391;
     $$sroa$0299$0 = $383 + 1 | 0;
     $375 = HEAP8[$47 >> 0] | 0;
     $379 = HEAP32[$20 >> 2] | 0;
     $400 = $777;
    }
    if ($46) {
     $444 = HEAP8[$47 >> 0] | 0;
     $445 = $444 << 24 >> 24 < 0;
     if (($$lcssa | 0) == (($445 ? HEAP32[$20 >> 2] | 0 : $20) + ($445 ? HEAP32[$48 >> 2] | 0 : $444 & 255) | 0)) $$1130 = $$0129; else {
      label = 144;
      break L21;
     }
    } else $$1130 = $$0129;
    break;
   }
  case 4:
   {
    $$0124 = 0;
    $$pre$i4$i$i248 = $775;
    $470 = $775;
    L158 : while (1) {
     $455 = HEAP32[$0 >> 2] | 0;
     do if (!$455) $485 = 1; else {
      $458 = HEAP32[$455 + 12 >> 2] | 0;
      if (($458 | 0) == (HEAP32[$455 + 16 >> 2] | 0)) $$0$i$i$i$i240 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$455 >> 2] | 0) + 36 >> 2] & 127]($455) | 0; else $$0$i$i$i$i240 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$458 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i240, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $485 = 1;
       break;
      } else {
       $485 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$470) {
      $$pre$i4$i$i248382 = $$pre$i4$i$i248;
      label = 158;
     } else {
      $473 = HEAP32[$470 + 12 >> 2] | 0;
      if (($473 | 0) == (HEAP32[$470 + 16 >> 2] | 0)) $$0$i$i2$i$i246 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$470 >> 2] | 0) + 36 >> 2] & 127]($470) | 0; else $$0$i$i2$i$i246 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$473 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i246, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       $$pre$i4$i$i248382 = 0;
       label = 158;
       break;
      } else if ($485 ^ ($$pre$i4$i$i248 | 0) == 0) {
       $$pre$i4$i$i248384 = $$pre$i4$i$i248;
       $778 = $$pre$i4$i$i248;
       break;
      } else {
       $$pre$i4$i$i266 = $$pre$i4$i$i248;
       break L158;
      }
     } while (0);
     if ((label | 0) == 158) {
      label = 0;
      if ($485) {
       $$pre$i4$i$i266 = $$pre$i4$i$i248382;
       break;
      } else {
       $$pre$i4$i$i248384 = $$pre$i4$i$i248382;
       $778 = 0;
      }
     }
     $486 = HEAP32[$0 >> 2] | 0;
     $488 = HEAP32[$486 + 12 >> 2] | 0;
     if (($488 | 0) == (HEAP32[$486 + 16 >> 2] | 0)) $$0$i$i253 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$486 >> 2] | 0) + 36 >> 2] & 127]($486) | 0; else $$0$i$i253 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$488 >> 0] | 0) | 0;
     $498 = $$0$i$i253 & 255;
     if ($498 << 24 >> 24 > -1) if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i253 << 24 >> 24 << 1) >> 1] & 2048)) label = 168; else {
      $506 = HEAP32[$9 >> 2] | 0;
      if (($506 | 0) == (HEAP32[$11 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
       $510 = HEAP32[$9 >> 2] | 0;
      } else $510 = $506;
      HEAP32[$9 >> 2] = $510 + 1;
      HEAP8[$510 >> 0] = $498;
      $$2126$ph = $$0124 + 1 | 0;
     } else label = 168;
     if ((label | 0) == 168) {
      label = 0;
      $512 = HEAP8[$52 >> 0] | 0;
      if (!($498 << 24 >> 24 == (HEAP8[$18 >> 0] | 0) & ($$0124 | 0 ? (($512 << 24 >> 24 < 0 ? HEAP32[$53 >> 2] | 0 : $512 & 255) | 0) != 0 : 0))) {
       $$pre$i4$i$i266 = $$pre$i4$i$i248384;
       break;
      }
      $521 = HEAP32[$14 >> 2] | 0;
      if (($521 | 0) == (HEAP32[$15 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
       $525 = HEAP32[$14 >> 2] | 0;
      } else $525 = $521;
      HEAP32[$14 >> 2] = $525 + 4;
      HEAP32[$525 >> 2] = $$0124;
      $$2126$ph = 0;
     }
     $526 = HEAP32[$0 >> 2] | 0;
     $527 = $526 + 12 | 0;
     $528 = HEAP32[$527 >> 2] | 0;
     if (($528 | 0) == (HEAP32[$526 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$526 >> 2] | 0) + 40 >> 2] & 127]($526) | 0;
      $$0124 = $$2126$ph;
      $$pre$i4$i$i248 = $$pre$i4$i$i248384;
      $470 = $778;
      continue;
     } else {
      HEAP32[$527 >> 2] = $528 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$528 >> 0] | 0) | 0;
      $$0124 = $$2126$ph;
      $$pre$i4$i$i248 = $$pre$i4$i$i248384;
      $470 = $778;
      continue;
     }
    }
    $538 = HEAP32[$14 >> 2] | 0;
    if ($$0124 | 0 ? (HEAP32[$13 >> 2] | 0) != ($538 | 0) : 0) {
     if (($538 | 0) == (HEAP32[$15 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
      $544 = HEAP32[$14 >> 2] | 0;
     } else $544 = $538;
     HEAP32[$14 >> 2] = $544 + 4;
     HEAP32[$544 >> 2] = $$0124;
    }
    L209 : do if ((HEAP32[$24 >> 2] | 0) > 0) {
     $547 = HEAP32[$0 >> 2] | 0;
     do if (!$547) $779 = 1; else {
      $550 = HEAP32[$547 + 12 >> 2] | 0;
      if (($550 | 0) == (HEAP32[$547 + 16 >> 2] | 0)) $$0$i$i$i$i258 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$547 >> 2] | 0) + 36 >> 2] & 127]($547) | 0; else $$0$i$i$i$i258 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$550 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i258, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $779 = 1;
       break;
      } else {
       $779 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$$pre$i4$i$i266) label = 193; else {
      $564 = HEAP32[$$pre$i4$i$i266 + 12 >> 2] | 0;
      if (($564 | 0) == (HEAP32[$$pre$i4$i$i266 + 16 >> 2] | 0)) $$0$i$i2$i$i264 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i266 >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i266) | 0; else $$0$i$i2$i$i264 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$564 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i264, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       label = 193;
       break;
      } else if ($779) {
       $780 = $$pre$i4$i$i266;
       break;
      } else {
       label = 232;
       break L21;
      }
     } while (0);
     if ((label | 0) == 193) {
      label = 0;
      if ($779) {
       label = 232;
       break L21;
      } else $780 = 0;
     }
     $576 = HEAP32[$0 >> 2] | 0;
     $578 = HEAP32[$576 + 12 >> 2] | 0;
     if (($578 | 0) == (HEAP32[$576 + 16 >> 2] | 0)) $$0$i$i271 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$576 >> 2] | 0) + 36 >> 2] & 127]($576) | 0; else $$0$i$i271 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$578 >> 0] | 0) | 0;
     if (($$0$i$i271 & 255) << 24 >> 24 != (HEAP8[$17 >> 0] | 0)) {
      label = 232;
      break L21;
     }
     $591 = HEAP32[$0 >> 2] | 0;
     $592 = $591 + 12 | 0;
     $593 = HEAP32[$592 >> 2] | 0;
     if (($593 | 0) == (HEAP32[$591 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$591 >> 2] | 0) + 40 >> 2] & 127]($591) | 0;
      $$pre$i4$i$i282 = $780;
      $619 = $780;
     } else {
      HEAP32[$592 >> 2] = $593 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$593 >> 0] | 0) | 0;
      $$pre$i4$i$i282 = $780;
      $619 = $780;
     }
     while (1) {
      if ((HEAP32[$24 >> 2] | 0) <= 0) break L209;
      $604 = HEAP32[$0 >> 2] | 0;
      do if (!$604) $634 = 1; else {
       $607 = HEAP32[$604 + 12 >> 2] | 0;
       if (($607 | 0) == (HEAP32[$604 + 16 >> 2] | 0)) $$0$i$i$i$i274 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$604 >> 2] | 0) + 36 >> 2] & 127]($604) | 0; else $$0$i$i$i$i274 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$607 >> 0] | 0) | 0;
       if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i274, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
        HEAP32[$0 >> 2] = 0;
        $634 = 1;
        break;
       } else {
        $634 = (HEAP32[$0 >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$619) {
       $$pre$i4$i$i282387$ph = $$pre$i4$i$i282;
       label = 216;
      } else {
       $622 = HEAP32[$619 + 12 >> 2] | 0;
       if (($622 | 0) == (HEAP32[$619 + 16 >> 2] | 0)) $$0$i$i2$i$i280 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$619 >> 2] | 0) + 36 >> 2] & 127]($619) | 0; else $$0$i$i2$i$i280 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$622 >> 0] | 0) | 0;
       if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i280, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
        HEAP32[$1 >> 2] = 0;
        $$pre$i4$i$i282387$ph = 0;
        label = 216;
        break;
       } else if ($634 ^ ($$pre$i4$i$i282 | 0) == 0) {
        $$pre$i4$i$i282387399 = $$pre$i4$i$i282;
        $781 = $$pre$i4$i$i282;
        break;
       } else {
        label = 232;
        break L21;
       }
      } while (0);
      if ((label | 0) == 216) {
       label = 0;
       if ($634) {
        label = 232;
        break L21;
       } else {
        $$pre$i4$i$i282387399 = $$pre$i4$i$i282387$ph;
        $781 = 0;
       }
      }
      $635 = HEAP32[$0 >> 2] | 0;
      $637 = HEAP32[$635 + 12 >> 2] | 0;
      if (($637 | 0) == (HEAP32[$635 + 16 >> 2] | 0)) $$0$i$i287 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$635 >> 2] | 0) + 36 >> 2] & 127]($635) | 0; else $$0$i$i287 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$637 >> 0] | 0) | 0;
      if (($$0$i$i287 & 255) << 24 >> 24 <= -1) {
       label = 232;
       break L21;
      }
      if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i287 << 24 >> 24 << 1) >> 1] & 2048)) {
       label = 232;
       break L21;
      }
      if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$11 >> 2] | 0)) __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
      $658 = HEAP32[$0 >> 2] | 0;
      $660 = HEAP32[$658 + 12 >> 2] | 0;
      if (($660 | 0) == (HEAP32[$658 + 16 >> 2] | 0)) $$0$i$i290 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$658 >> 2] | 0) + 36 >> 2] & 127]($658) | 0; else $$0$i$i290 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$660 >> 0] | 0) | 0;
      $671 = HEAP32[$9 >> 2] | 0;
      HEAP32[$9 >> 2] = $671 + 1;
      HEAP8[$671 >> 0] = $$0$i$i290;
      HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -1;
      $675 = HEAP32[$0 >> 2] | 0;
      $676 = $675 + 12 | 0;
      $677 = HEAP32[$676 >> 2] | 0;
      if (($677 | 0) == (HEAP32[$675 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$675 >> 2] | 0) + 40 >> 2] & 127]($675) | 0;
       $$pre$i4$i$i282 = $$pre$i4$i$i282387399;
       $619 = $781;
       continue;
      } else {
       HEAP32[$676 >> 2] = $677 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$677 >> 0] | 0) | 0;
       $$pre$i4$i$i282 = $$pre$i4$i$i282387399;
       $619 = $781;
       continue;
      }
     }
    } while (0);
    if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$8 >> 2] | 0)) {
     label = 232;
     break L21;
    } else $$1130 = $$0129;
    break;
   }
  default:
   $$1130 = $$0129;
  } while (0);
  L283 : do if ((label | 0) == 46) while (1) {
   label = 0;
   $126 = HEAP32[$0 >> 2] | 0;
   do if (!$126) $156 = 1; else {
    $129 = HEAP32[$126 + 12 >> 2] | 0;
    if (($129 | 0) == (HEAP32[$126 + 16 >> 2] | 0)) $$0$i$i$i$i161 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$126 >> 2] | 0) + 36 >> 2] & 127]($126) | 0; else $$0$i$i$i$i161 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$129 >> 0] | 0) | 0;
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i161, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
     HEAP32[$0 >> 2] = 0;
     $156 = 1;
     break;
    } else {
     $156 = (HEAP32[$0 >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$141) {
    $$pre$i4$i$i169394 = $$pre$i4$i$i169;
    label = 59;
   } else {
    $144 = HEAP32[$141 + 12 >> 2] | 0;
    if (($144 | 0) == (HEAP32[$141 + 16 >> 2] | 0)) $$0$i$i2$i$i167 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 36 >> 2] & 127]($141) | 0; else $$0$i$i2$i$i167 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$144 >> 0] | 0) | 0;
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i167, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
     HEAP32[$1 >> 2] = 0;
     $$pre$i4$i$i169394 = 0;
     label = 59;
     break;
    } else if ($156 ^ ($$pre$i4$i$i169 | 0) == 0) {
     $$pre$i4$i$i169396 = $$pre$i4$i$i169;
     $776 = $$pre$i4$i$i169;
     break;
    } else {
     $$1130 = $$0129;
     break L283;
    }
   } while (0);
   if ((label | 0) == 59) {
    label = 0;
    if ($156) {
     $$1130 = $$0129;
     break L283;
    } else {
     $$pre$i4$i$i169396 = $$pre$i4$i$i169394;
     $776 = 0;
    }
   }
   $157 = HEAP32[$0 >> 2] | 0;
   $159 = HEAP32[$157 + 12 >> 2] | 0;
   if (($159 | 0) == (HEAP32[$157 + 16 >> 2] | 0)) $$0$i$i174 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$157 >> 2] | 0) + 36 >> 2] & 127]($157) | 0; else $$0$i$i174 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$159 >> 0] | 0) | 0;
   if (($$0$i$i174 & 255) << 24 >> 24 <= -1) {
    $$1130 = $$0129;
    break L283;
   }
   if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i174 << 24 >> 24 << 1) >> 1] & 8192)) {
    $$1130 = $$0129;
    break L283;
   }
   $177 = HEAP32[$0 >> 2] | 0;
   $178 = $177 + 12 | 0;
   $179 = HEAP32[$178 >> 2] | 0;
   if (($179 | 0) == (HEAP32[$177 + 16 >> 2] | 0)) $$0$i$i177 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$177 >> 2] | 0) + 40 >> 2] & 127]($177) | 0; else {
    HEAP32[$178 >> 2] = $179 + 1;
    $$0$i$i177 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$179 >> 0] | 0) | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($23, $$0$i$i177 & 255);
   $$pre$i4$i$i169 = $$pre$i4$i$i169396;
   $141 = $776;
   label = 46;
  } while (0);
  $$0129 = $$1130;
  $$0131 = $$0131 + 1 | 0;
 }
 L319 : do if ((label | 0) == 44) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 103) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 144) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 232) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 234) {
  L321 : do if ($55) {
   $692 = $$0129 + 11 | 0;
   $693 = $$0129 + 4 | 0;
   $$0 = 1;
   L323 : while (1) {
    $694 = HEAP8[$692 >> 0] | 0;
    if ($694 << 24 >> 24 < 0) $699 = HEAP32[$693 >> 2] | 0; else $699 = $694 & 255;
    if ($$0 >>> 0 >= $699 >>> 0) break L321;
    $700 = HEAP32[$0 >> 2] | 0;
    do if (!$700) $782 = 1; else {
     $703 = HEAP32[$700 + 12 >> 2] | 0;
     if (($703 | 0) == (HEAP32[$700 + 16 >> 2] | 0)) $$0$i$i$i$i206 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$700 >> 2] | 0) + 36 >> 2] & 127]($700) | 0; else $$0$i$i$i$i206 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$703 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i206, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $782 = 1;
      break;
     } else {
      $782 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $715 = HEAP32[$1 >> 2] | 0;
    do if (!$715) label = 253; else {
     $718 = HEAP32[$715 + 12 >> 2] | 0;
     if (($718 | 0) == (HEAP32[$715 + 16 >> 2] | 0)) $$0$i$i2$i$i212 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$715 >> 2] | 0) + 36 >> 2] & 127]($715) | 0; else $$0$i$i2$i$i212 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$718 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i212, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      label = 253;
      break;
     } else if ($782) break; else break L323;
    } while (0);
    if ((label | 0) == 253) {
     label = 0;
     if ($782) break;
    }
    $730 = HEAP32[$0 >> 2] | 0;
    $732 = HEAP32[$730 + 12 >> 2] | 0;
    if (($732 | 0) == (HEAP32[$730 + 16 >> 2] | 0)) $$0$i$i203 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$730 >> 2] | 0) + 36 >> 2] & 127]($730) | 0; else $$0$i$i203 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$732 >> 0] | 0) | 0;
    if ((HEAP8[$692 >> 0] | 0) < 0) $747 = HEAP32[$$0129 >> 2] | 0; else $747 = $$0129;
    if (($$0$i$i203 & 255) << 24 >> 24 != (HEAP8[$747 + $$0 >> 0] | 0)) break;
    $752 = $$0 + 1 | 0;
    $753 = HEAP32[$0 >> 2] | 0;
    $754 = $753 + 12 | 0;
    $755 = HEAP32[$754 >> 2] | 0;
    if (($755 | 0) == (HEAP32[$753 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$753 >> 2] | 0) + 40 >> 2] & 127]($753) | 0;
     $$0 = $752;
     continue;
    } else {
     HEAP32[$754 >> 2] = $755 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$755 >> 0] | 0) | 0;
     $$0 = $752;
     continue;
    }
   }
   HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
   $$10 = 0;
   break L319;
  } while (0);
  $764 = HEAP32[$13 >> 2] | 0;
  $765 = HEAP32[$14 >> 2] | 0;
  if (($764 | 0) == ($765 | 0)) $$10 = 1; else {
   HEAP32[$25 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($19, $764, $765, $25);
   if (!(HEAP32[$25 >> 2] | 0)) {
    $$10 = 1;
    break;
   } else {
    HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
    $$10 = 0;
    break;
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
 $771 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = 0;
 if ($771 | 0) FUNCTION_TABLE_vi[HEAP32[$27 >> 2] & 511]($771);
 STACKTOP = sp;
 return $$10 | 0;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i162 = 0, $$0$i$i$i$i208 = 0, $$0$i$i$i$i222 = 0, $$0$i$i$i$i239 = 0, $$0$i$i$i$i255 = 0, $$0$i$i$i$i271 = 0, $$0$i$i149 = 0, $$0$i$i151 = 0, $$0$i$i154 = 0, $$0$i$i157 = 0, $$0$i$i160 = 0, $$0$i$i161 = 0, $$0$i$i175 = 0, $$0$i$i177 = 0, $$0$i$i183 = 0, $$0$i$i190 = 0, $$0$i$i195 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i168 = 0, $$0$i$i2$i$i214 = 0, $$0$i$i2$i$i228 = 0, $$0$i$i2$i$i245 = 0, $$0$i$i2$i$i261 = 0, $$0$i$i2$i$i277 = 0, $$0$i$i204 = 0, $$0$i$i235 = 0, $$0$i$i252 = 0, $$0$i$i268 = 0, $$0$i$i284 = 0, $$0$i$i286 = 0, $$0126 = 0, $$0131 = 0, $$0133 = 0, $$10 = 0, $$1132 = 0, $$2128$ph = 0, $$lcssa = 0, $$pre$i4$i$i170 = 0, $$pre$i4$i$i170392 = 0, $$pre$i4$i$i170394 = 0, $$pre$i4$i$i230 = 0, $$pre$i4$i$i230389 = 0, $$pre$i4$i$i230390 = 0, $$pre$i4$i$i247 = 0, $$pre$i4$i$i247376 = 0, $$pre$i4$i$i247378 = 0, $$pre$i4$i$i263 = 0, $$pre$i4$i$i279 = 0, $$pre$i4$i$i279381$ph = 0, $$pre$i4$i$i279381397 = 0, $$sink = 0, $$sroa$0295$0 = 0, $$sroa$0315$0 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $124 = 0, $127 = 0, $13 = 0, $139 = 0, $14 = 0, $142 = 0, $15 = 0, $154 = 0, $155 = 0, $157 = 0, $16 = 0, $17 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $184 = 0, $188 = 0, $189 = 0, $19 = 0, $193 = 0, $196 = 0, $198 = 0, $20 = 0, $200 = 0, $203 = 0, $21 = 0, $216 = 0, $217 = 0, $218 = 0, $22 = 0, $227 = 0, $23 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $25 = 0, $250 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $273 = 0, $279 = 0, $297 = 0, $298 = 0, $299 = 0, $308 = 0, $321 = 0, $323 = 0, $325 = 0, $330 = 0, $331 = 0, $334 = 0, $338 = 0, $347 = 0, $349 = 0, $350 = 0, $351 = 0, $353 = 0, $354 = 0, $355 = 0, $358 = 0, $362 = 0, $365 = 0, $372 = 0, $373 = 0, $376 = 0, $379 = 0, $380 = 0, $382 = 0, $385 = 0, $397 = 0, $400 = 0, $41 = 0, $412 = 0, $413 = 0, $415 = 0, $42 = 0, $427 = 0, $428 = 0, $429 = 0, $44 = 0, $440 = 0, $441 = 0, $45 = 0, $451 = 0, $454 = 0, $466 = 0, $469 = 0, $47 = 0, $481 = 0, $482 = 0, $484 = 0, $49 = 0, $498 = 0, $50 = 0, $502 = 0, $504 = 0, $513 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $53 = 0, $530 = 0, $536 = 0, $539 = 0, $54 = 0, $542 = 0, $55 = 0, $556 = 0, $56 = 0, $568 = 0, $570 = 0, $58 = 0, $582 = 0, $583 = 0, $584 = 0, $59 = 0, $595 = 0, $598 = 0, $610 = 0, $613 = 0, $62 = 0, $625 = 0, $626 = 0, $628 = 0, $645 = 0, $647 = 0, $657 = 0, $661 = 0, $662 = 0, $663 = 0, $679 = 0, $680 = 0, $681 = 0, $686 = 0, $687 = 0, $690 = 0, $702 = 0, $705 = 0, $717 = 0, $719 = 0, $733 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $750 = 0, $751 = 0, $757 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $77 = 0, $92 = 0, $93 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $11 = sp + 96 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 88 | 0;
 $14 = sp + 80 | 0;
 $15 = sp + 76 | 0;
 $16 = sp + 504 | 0;
 $17 = sp + 72 | 0;
 $18 = sp + 68 | 0;
 $19 = sp + 56 | 0;
 $20 = sp + 44 | 0;
 $21 = sp + 32 | 0;
 $22 = sp + 20 | 0;
 $23 = sp + 8 | 0;
 $24 = sp + 4 | 0;
 $25 = sp;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$13 >> 2] = $12;
 $27 = $13 + 4 | 0;
 HEAP32[$27 >> 2] = 266;
 HEAP32[$14 >> 2] = $12;
 HEAP32[$15 >> 2] = $12 + 400;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$19 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 $$0$i$i149 = 0;
 while (1) {
  if (($$0$i$i149 | 0) == 3) break;
  HEAP32[$20 + ($$0$i$i149 << 2) >> 2] = 0;
  $$0$i$i149 = $$0$i$i149 + 1 | 0;
 }
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 $$0$i$i151 = 0;
 while (1) {
  if (($$0$i$i151 | 0) == 3) break;
  HEAP32[$21 + ($$0$i$i151 << 2) >> 2] = 0;
  $$0$i$i151 = $$0$i$i151 + 1 | 0;
 }
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 $$0$i$i154 = 0;
 while (1) {
  if (($$0$i$i154 | 0) == 3) break;
  HEAP32[$22 + ($$0$i$i154 << 2) >> 2] = 0;
  $$0$i$i154 = $$0$i$i154 + 1 | 0;
 }
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = 0;
 $$0$i$i157 = 0;
 while (1) {
  if (($$0$i$i157 | 0) == 3) break;
  HEAP32[$23 + ($$0$i$i157 << 2) >> 2] = 0;
  $$0$i$i157 = $$0$i$i157 + 1 | 0;
 }
 __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($2, $3, $16, $17, $18, $19, $20, $21, $22, $24);
 HEAP32[$9 >> 2] = HEAP32[$8 >> 2];
 $41 = $21 + 8 + 3 | 0;
 $42 = $21 + 4 | 0;
 $44 = $22 + 8 + 3 | 0;
 $45 = $22 + 4 | 0;
 $47 = ($4 & 512 | 0) != 0;
 $49 = $20 + 8 + 3 | 0;
 $50 = $20 + 4 | 0;
 $52 = $23 + 8 + 3 | 0;
 $53 = $23 + 4 | 0;
 $54 = $16 + 3 | 0;
 $55 = $19 + 11 | 0;
 $56 = $19 + 4 | 0;
 $$0131 = 0;
 $$0133 = 0;
 L21 : while (1) {
  $58 = ($$0131 | 0) != 0;
  if ($$0133 >>> 0 >= 4) {
   label = 229;
   break;
  }
  $59 = HEAP32[$0 >> 2] | 0;
  do if (!$59) $760 = 1; else {
   $62 = HEAP32[$59 + 12 >> 2] | 0;
   if (($62 | 0) == (HEAP32[$59 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$59 >> 2] | 0) + 36 >> 2] & 127]($59) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$62 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $760 = 1;
    break;
   } else {
    $760 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $74 = HEAP32[$1 >> 2] | 0;
  do if (!$74) label = 31; else {
   $77 = HEAP32[$74 + 12 >> 2] | 0;
   if (($77 | 0) == (HEAP32[$74 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$74 >> 2] | 0) + 36 >> 2] & 127]($74) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$77 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    label = 31;
    break;
   } else if ($760) {
    $761 = $74;
    break;
   } else {
    label = 229;
    break L21;
   }
  } while (0);
  if ((label | 0) == 31) {
   label = 0;
   if ($760) {
    label = 229;
    break;
   } else $761 = 0;
  }
  $92 = ($$0133 | 0) != 3;
  L46 : do switch (HEAP8[$16 + $$0133 >> 0] | 0) {
  case 1:
   {
    if ($92) {
     $93 = HEAP32[$0 >> 2] | 0;
     $95 = HEAP32[$93 + 12 >> 2] | 0;
     if (($95 | 0) == (HEAP32[$93 + 16 >> 2] | 0)) $$0$i$i160 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] & 127]($93) | 0; else $$0$i$i160 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$95 >> 2] | 0) | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, $$0$i$i160) | 0)) {
      label = 43;
      break L21;
     }
     $109 = HEAP32[$0 >> 2] | 0;
     $110 = $109 + 12 | 0;
     $111 = HEAP32[$110 >> 2] | 0;
     if (($111 | 0) == (HEAP32[$109 + 16 >> 2] | 0)) $$0$i$i161 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$109 >> 2] | 0) + 40 >> 2] & 127]($109) | 0; else {
      HEAP32[$110 >> 2] = $111 + 4;
      $$0$i$i161 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$111 >> 2] | 0) | 0;
     }
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($23, $$0$i$i161);
     $$pre$i4$i$i170 = $761;
     $139 = $761;
     label = 45;
    } else $$1132 = $$0131;
    break;
   }
  case 0:
   {
    if ($92) {
     $$pre$i4$i$i170 = $761;
     $139 = $761;
     label = 45;
    } else $$1132 = $$0131;
    break;
   }
  case 3:
   {
    $184 = HEAP8[$41 >> 0] | 0;
    $188 = $184 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $184 & 255;
    $189 = HEAP8[$44 >> 0] | 0;
    $193 = $189 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $189 & 255;
    if (($188 | 0) == (0 - $193 | 0)) $$1132 = $$0131; else {
     $196 = ($188 | 0) == 0;
     $198 = HEAP32[$0 >> 2] | 0;
     $200 = HEAP32[$198 + 12 >> 2] | 0;
     $203 = ($200 | 0) == (HEAP32[$198 + 16 >> 2] | 0);
     if ($196 | ($193 | 0) == 0) {
      if ($203) $$0$i$i183 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$198 >> 2] | 0) + 36 >> 2] & 127]($198) | 0; else $$0$i$i183 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$200 >> 2] | 0) | 0;
      if ($196) {
       if (($$0$i$i183 | 0) != (HEAP32[((HEAP8[$44 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 2] | 0)) {
        $$1132 = $$0131;
        break L46;
       }
       $239 = HEAP32[$0 >> 2] | 0;
       $240 = $239 + 12 | 0;
       $241 = HEAP32[$240 >> 2] | 0;
       if (($241 | 0) == (HEAP32[$239 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$239 >> 2] | 0) + 40 >> 2] & 127]($239) | 0; else {
        HEAP32[$240 >> 2] = $241 + 4;
        __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$241 >> 2] | 0) | 0;
       }
       HEAP8[$6 >> 0] = 1;
       $250 = HEAP8[$44 >> 0] | 0;
       $$1132 = ($250 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $250 & 255) >>> 0 > 1 ? $22 : $$0131;
       break L46;
      }
      if (($$0$i$i183 | 0) != (HEAP32[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 2] | 0)) {
       HEAP8[$6 >> 0] = 1;
       $$1132 = $$0131;
       break L46;
      }
      $216 = HEAP32[$0 >> 2] | 0;
      $217 = $216 + 12 | 0;
      $218 = HEAP32[$217 >> 2] | 0;
      if (($218 | 0) == (HEAP32[$216 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$216 >> 2] | 0) + 40 >> 2] & 127]($216) | 0; else {
       HEAP32[$217 >> 2] = $218 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$218 >> 2] | 0) | 0;
      }
      $227 = HEAP8[$41 >> 0] | 0;
      $$1132 = ($227 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $227 & 255) >>> 0 > 1 ? $21 : $$0131;
      break L46;
     }
     if ($203) $$0$i$i190 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$198 >> 2] | 0) + 36 >> 2] & 127]($198) | 0; else $$0$i$i190 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$200 >> 2] | 0) | 0;
     $268 = HEAP32[$0 >> 2] | 0;
     $269 = $268 + 12 | 0;
     $270 = HEAP32[$269 >> 2] | 0;
     $273 = ($270 | 0) == (HEAP32[$268 + 16 >> 2] | 0);
     if (($$0$i$i190 | 0) == (HEAP32[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 2] | 0)) {
      if ($273) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$268 >> 2] | 0) + 40 >> 2] & 127]($268) | 0; else {
       HEAP32[$269 >> 2] = $270 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$270 >> 2] | 0) | 0;
      }
      $279 = HEAP8[$41 >> 0] | 0;
      $$1132 = ($279 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $279 & 255) >>> 0 > 1 ? $21 : $$0131;
      break L46;
     }
     if ($273) $$0$i$i195 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$268 >> 2] | 0) + 36 >> 2] & 127]($268) | 0; else $$0$i$i195 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$270 >> 2] | 0) | 0;
     if (($$0$i$i195 | 0) != (HEAP32[((HEAP8[$44 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 2] | 0)) {
      label = 101;
      break L21;
     }
     $297 = HEAP32[$0 >> 2] | 0;
     $298 = $297 + 12 | 0;
     $299 = HEAP32[$298 >> 2] | 0;
     if (($299 | 0) == (HEAP32[$297 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$297 >> 2] | 0) + 40 >> 2] & 127]($297) | 0; else {
      HEAP32[$298 >> 2] = $299 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$299 >> 2] | 0) | 0;
     }
     HEAP8[$6 >> 0] = 1;
     $308 = HEAP8[$44 >> 0] | 0;
     $$1132 = ($308 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $308 & 255) >>> 0 > 1 ? $22 : $$0131;
    }
    break;
   }
  case 2:
   {
    if (!($$0133 >>> 0 < 2 | $58)) if (!($47 | ($$0133 | 0) == 2 & (HEAP8[$54 >> 0] | 0) != 0)) {
     $$1132 = 0;
     break L46;
    }
    $321 = HEAP8[$49 >> 0] | 0;
    $323 = HEAP32[$20 >> 2] | 0;
    $325 = $321 << 24 >> 24 < 0 ? $323 : $20;
    L107 : do if (!$$0133) {
     $$pre$i4$i$i230 = $761;
     $$sroa$0295$0 = $325;
     $372 = $321;
     $376 = $323;
     $397 = $761;
    } else if ((HEAPU8[$16 + ($$0133 + -1) >> 0] | 0) < 2) {
     $$sroa$0315$0 = $325;
     $330 = $321;
     $334 = $323;
     while (1) {
      $331 = $330 << 24 >> 24 < 0;
      $338 = $$sroa$0315$0;
      if (($338 | 0) == (($331 ? $334 : $20) + (($331 ? HEAP32[$50 >> 2] | 0 : $330 & 255) << 2) | 0)) {
       $347 = $330;
       $349 = $334;
       break;
      }
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, HEAP32[$338 >> 2] | 0) | 0)) {
       label = 108;
       break;
      }
      $$sroa$0315$0 = $338 + 4 | 0;
      $330 = HEAP8[$49 >> 0] | 0;
      $334 = HEAP32[$20 >> 2] | 0;
     }
     if ((label | 0) == 108) {
      label = 0;
      $347 = HEAP8[$49 >> 0] | 0;
      $349 = HEAP32[$20 >> 2] | 0;
     }
     $350 = $347 << 24 >> 24 < 0 ? $349 : $20;
     $351 = $350;
     $353 = $$sroa$0315$0 - $351 >> 2;
     $354 = HEAP8[$52 >> 0] | 0;
     $355 = $354 << 24 >> 24 < 0;
     $358 = $355 ? HEAP32[$53 >> 2] | 0 : $354 & 255;
     if ($353 >>> 0 > $358 >>> 0) {
      $$pre$i4$i$i230 = $761;
      $$sroa$0295$0 = $351;
      $372 = $347;
      $376 = $349;
      $397 = $761;
     } else {
      $362 = ($355 ? HEAP32[$23 >> 2] | 0 : $23) + ($358 << 2) | 0;
      $$sink = $350;
      $365 = $362 + (0 - $353 << 2) | 0;
      while (1) {
       if (($365 | 0) == ($362 | 0)) {
        $$pre$i4$i$i230 = $761;
        $$sroa$0295$0 = $$sroa$0315$0;
        $372 = $347;
        $376 = $349;
        $397 = $761;
        break L107;
       }
       if ((HEAP32[$365 >> 2] | 0) != (HEAP32[$$sink >> 2] | 0)) {
        $$pre$i4$i$i230 = $761;
        $$sroa$0295$0 = $351;
        $372 = $347;
        $376 = $349;
        $397 = $761;
        break L107;
       }
       $$sink = $$sink + 4 | 0;
       $365 = $365 + 4 | 0;
      }
     }
    } else {
     $$pre$i4$i$i230 = $761;
     $$sroa$0295$0 = $325;
     $372 = $321;
     $376 = $323;
     $397 = $761;
    } while (0);
    L121 : while (1) {
     $373 = $372 << 24 >> 24 < 0;
     $379 = ($373 ? $376 : $20) + (($373 ? HEAP32[$50 >> 2] | 0 : $372 & 255) << 2) | 0;
     $380 = $$sroa$0295$0;
     if (($380 | 0) == ($379 | 0)) {
      $$lcssa = $379;
      break;
     }
     $382 = HEAP32[$0 >> 2] | 0;
     do if (!$382) $412 = 1; else {
      $385 = HEAP32[$382 + 12 >> 2] | 0;
      if (($385 | 0) == (HEAP32[$382 + 16 >> 2] | 0)) $$0$i$i$i$i222 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$382 >> 2] | 0) + 36 >> 2] & 127]($382) | 0; else $$0$i$i$i$i222 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$385 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i222, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $412 = 1;
       break;
      } else {
       $412 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$397) {
      $$pre$i4$i$i230390 = $$pre$i4$i$i230;
      label = 129;
     } else {
      $400 = HEAP32[$397 + 12 >> 2] | 0;
      if (($400 | 0) == (HEAP32[$397 + 16 >> 2] | 0)) $$0$i$i2$i$i228 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$397 >> 2] | 0) + 36 >> 2] & 127]($397) | 0; else $$0$i$i2$i$i228 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$400 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i228, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       $$pre$i4$i$i230390 = 0;
       label = 129;
       break;
      } else if ($412 ^ ($$pre$i4$i$i230 | 0) == 0) {
       $$pre$i4$i$i230389 = $$pre$i4$i$i230;
       $763 = $$pre$i4$i$i230;
       break;
      } else {
       $$lcssa = $380;
       break L121;
      }
     } while (0);
     if ((label | 0) == 129) {
      label = 0;
      if ($412) {
       $$lcssa = $380;
       break;
      } else {
       $$pre$i4$i$i230389 = $$pre$i4$i$i230390;
       $763 = 0;
      }
     }
     $413 = HEAP32[$0 >> 2] | 0;
     $415 = HEAP32[$413 + 12 >> 2] | 0;
     if (($415 | 0) == (HEAP32[$413 + 16 >> 2] | 0)) $$0$i$i235 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$413 >> 2] | 0) + 36 >> 2] & 127]($413) | 0; else $$0$i$i235 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$415 >> 2] | 0) | 0;
     if (($$0$i$i235 | 0) != (HEAP32[$380 >> 2] | 0)) {
      $$lcssa = $380;
      break;
     }
     $427 = HEAP32[$0 >> 2] | 0;
     $428 = $427 + 12 | 0;
     $429 = HEAP32[$428 >> 2] | 0;
     if (($429 | 0) == (HEAP32[$427 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$427 >> 2] | 0) + 40 >> 2] & 127]($427) | 0; else {
      HEAP32[$428 >> 2] = $429 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$429 >> 2] | 0) | 0;
     }
     $$pre$i4$i$i230 = $$pre$i4$i$i230389;
     $$sroa$0295$0 = $380 + 4 | 0;
     $372 = HEAP8[$49 >> 0] | 0;
     $376 = HEAP32[$20 >> 2] | 0;
     $397 = $763;
    }
    if ($47) {
     $440 = HEAP8[$49 >> 0] | 0;
     $441 = $440 << 24 >> 24 < 0;
     if (($$lcssa | 0) == (($441 ? HEAP32[$20 >> 2] | 0 : $20) + (($441 ? HEAP32[$50 >> 2] | 0 : $440 & 255) << 2) | 0)) $$1132 = $$0131; else {
      label = 141;
      break L21;
     }
    } else $$1132 = $$0131;
    break;
   }
  case 4:
   {
    $$0126 = 0;
    $$pre$i4$i$i247 = $761;
    $466 = $761;
    L157 : while (1) {
     $451 = HEAP32[$0 >> 2] | 0;
     do if (!$451) $481 = 1; else {
      $454 = HEAP32[$451 + 12 >> 2] | 0;
      if (($454 | 0) == (HEAP32[$451 + 16 >> 2] | 0)) $$0$i$i$i$i239 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$451 >> 2] | 0) + 36 >> 2] & 127]($451) | 0; else $$0$i$i$i$i239 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$454 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i239, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $481 = 1;
       break;
      } else {
       $481 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$466) {
      $$pre$i4$i$i247376 = $$pre$i4$i$i247;
      label = 155;
     } else {
      $469 = HEAP32[$466 + 12 >> 2] | 0;
      if (($469 | 0) == (HEAP32[$466 + 16 >> 2] | 0)) $$0$i$i2$i$i245 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$466 >> 2] | 0) + 36 >> 2] & 127]($466) | 0; else $$0$i$i2$i$i245 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$469 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i245, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       $$pre$i4$i$i247376 = 0;
       label = 155;
       break;
      } else if ($481 ^ ($$pre$i4$i$i247 | 0) == 0) {
       $$pre$i4$i$i247378 = $$pre$i4$i$i247;
       $764 = $$pre$i4$i$i247;
       break;
      } else {
       $$pre$i4$i$i263 = $$pre$i4$i$i247;
       break L157;
      }
     } while (0);
     if ((label | 0) == 155) {
      label = 0;
      if ($481) {
       $$pre$i4$i$i263 = $$pre$i4$i$i247376;
       break;
      } else {
       $$pre$i4$i$i247378 = $$pre$i4$i$i247376;
       $764 = 0;
      }
     }
     $482 = HEAP32[$0 >> 2] | 0;
     $484 = HEAP32[$482 + 12 >> 2] | 0;
     if (($484 | 0) == (HEAP32[$482 + 16 >> 2] | 0)) $$0$i$i252 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$482 >> 2] | 0) + 36 >> 2] & 127]($482) | 0; else $$0$i$i252 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$484 >> 2] | 0) | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 2048, $$0$i$i252) | 0) {
      $498 = HEAP32[$9 >> 2] | 0;
      if (($498 | 0) == (HEAP32[$11 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
       $502 = HEAP32[$9 >> 2] | 0;
      } else $502 = $498;
      HEAP32[$9 >> 2] = $502 + 4;
      HEAP32[$502 >> 2] = $$0$i$i252;
      $$2128$ph = $$0126 + 1 | 0;
     } else {
      $504 = HEAP8[$55 >> 0] | 0;
      if (!(($$0$i$i252 | 0) == (HEAP32[$18 >> 2] | 0) & ($$0126 | 0 ? (($504 << 24 >> 24 < 0 ? HEAP32[$56 >> 2] | 0 : $504 & 255) | 0) != 0 : 0))) {
       $$pre$i4$i$i263 = $$pre$i4$i$i247378;
       break;
      }
      $513 = HEAP32[$14 >> 2] | 0;
      if (($513 | 0) == (HEAP32[$15 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
       $517 = HEAP32[$14 >> 2] | 0;
      } else $517 = $513;
      HEAP32[$14 >> 2] = $517 + 4;
      HEAP32[$517 >> 2] = $$0126;
      $$2128$ph = 0;
     }
     $518 = HEAP32[$0 >> 2] | 0;
     $519 = $518 + 12 | 0;
     $520 = HEAP32[$519 >> 2] | 0;
     if (($520 | 0) == (HEAP32[$518 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$518 >> 2] | 0) + 40 >> 2] & 127]($518) | 0;
      $$0126 = $$2128$ph;
      $$pre$i4$i$i247 = $$pre$i4$i$i247378;
      $466 = $764;
      continue;
     } else {
      HEAP32[$519 >> 2] = $520 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$520 >> 2] | 0) | 0;
      $$0126 = $$2128$ph;
      $$pre$i4$i$i247 = $$pre$i4$i$i247378;
      $466 = $764;
      continue;
     }
    }
    $530 = HEAP32[$14 >> 2] | 0;
    if ($$0126 | 0 ? (HEAP32[$13 >> 2] | 0) != ($530 | 0) : 0) {
     if (($530 | 0) == (HEAP32[$15 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
      $536 = HEAP32[$14 >> 2] | 0;
     } else $536 = $530;
     HEAP32[$14 >> 2] = $536 + 4;
     HEAP32[$536 >> 2] = $$0126;
    }
    L206 : do if ((HEAP32[$24 >> 2] | 0) > 0) {
     $539 = HEAP32[$0 >> 2] | 0;
     do if (!$539) $765 = 1; else {
      $542 = HEAP32[$539 + 12 >> 2] | 0;
      if (($542 | 0) == (HEAP32[$539 + 16 >> 2] | 0)) $$0$i$i$i$i255 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$539 >> 2] | 0) + 36 >> 2] & 127]($539) | 0; else $$0$i$i$i$i255 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$542 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i255, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $765 = 1;
       break;
      } else {
       $765 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$$pre$i4$i$i263) label = 189; else {
      $556 = HEAP32[$$pre$i4$i$i263 + 12 >> 2] | 0;
      if (($556 | 0) == (HEAP32[$$pre$i4$i$i263 + 16 >> 2] | 0)) $$0$i$i2$i$i261 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i263 >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i263) | 0; else $$0$i$i2$i$i261 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$556 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i261, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       label = 189;
       break;
      } else if ($765) {
       $766 = $$pre$i4$i$i263;
       break;
      } else {
       label = 227;
       break L21;
      }
     } while (0);
     if ((label | 0) == 189) {
      label = 0;
      if ($765) {
       label = 227;
       break L21;
      } else $766 = 0;
     }
     $568 = HEAP32[$0 >> 2] | 0;
     $570 = HEAP32[$568 + 12 >> 2] | 0;
     if (($570 | 0) == (HEAP32[$568 + 16 >> 2] | 0)) $$0$i$i268 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$568 >> 2] | 0) + 36 >> 2] & 127]($568) | 0; else $$0$i$i268 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$570 >> 2] | 0) | 0;
     if (($$0$i$i268 | 0) != (HEAP32[$17 >> 2] | 0)) {
      label = 227;
      break L21;
     }
     $582 = HEAP32[$0 >> 2] | 0;
     $583 = $582 + 12 | 0;
     $584 = HEAP32[$583 >> 2] | 0;
     if (($584 | 0) == (HEAP32[$582 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$582 >> 2] | 0) + 40 >> 2] & 127]($582) | 0;
      $$pre$i4$i$i279 = $766;
      $610 = $766;
     } else {
      HEAP32[$583 >> 2] = $584 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$584 >> 2] | 0) | 0;
      $$pre$i4$i$i279 = $766;
      $610 = $766;
     }
     while (1) {
      if ((HEAP32[$24 >> 2] | 0) <= 0) break L206;
      $595 = HEAP32[$0 >> 2] | 0;
      do if (!$595) $625 = 1; else {
       $598 = HEAP32[$595 + 12 >> 2] | 0;
       if (($598 | 0) == (HEAP32[$595 + 16 >> 2] | 0)) $$0$i$i$i$i271 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$595 >> 2] | 0) + 36 >> 2] & 127]($595) | 0; else $$0$i$i$i$i271 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$598 >> 2] | 0) | 0;
       if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i271, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
        HEAP32[$0 >> 2] = 0;
        $625 = 1;
        break;
       } else {
        $625 = (HEAP32[$0 >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$610) {
       $$pre$i4$i$i279381$ph = $$pre$i4$i$i279;
       label = 212;
      } else {
       $613 = HEAP32[$610 + 12 >> 2] | 0;
       if (($613 | 0) == (HEAP32[$610 + 16 >> 2] | 0)) $$0$i$i2$i$i277 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$610 >> 2] | 0) + 36 >> 2] & 127]($610) | 0; else $$0$i$i2$i$i277 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$613 >> 2] | 0) | 0;
       if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i277, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
        HEAP32[$1 >> 2] = 0;
        $$pre$i4$i$i279381$ph = 0;
        label = 212;
        break;
       } else if ($625 ^ ($$pre$i4$i$i279 | 0) == 0) {
        $$pre$i4$i$i279381397 = $$pre$i4$i$i279;
        $767 = $$pre$i4$i$i279;
        break;
       } else {
        label = 227;
        break L21;
       }
      } while (0);
      if ((label | 0) == 212) {
       label = 0;
       if ($625) {
        label = 227;
        break L21;
       } else {
        $$pre$i4$i$i279381397 = $$pre$i4$i$i279381$ph;
        $767 = 0;
       }
      }
      $626 = HEAP32[$0 >> 2] | 0;
      $628 = HEAP32[$626 + 12 >> 2] | 0;
      if (($628 | 0) == (HEAP32[$626 + 16 >> 2] | 0)) $$0$i$i284 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$626 >> 2] | 0) + 36 >> 2] & 127]($626) | 0; else $$0$i$i284 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$628 >> 2] | 0) | 0;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 2048, $$0$i$i284) | 0)) {
       label = 227;
       break L21;
      }
      if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$11 >> 2] | 0)) __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
      $645 = HEAP32[$0 >> 2] | 0;
      $647 = HEAP32[$645 + 12 >> 2] | 0;
      if (($647 | 0) == (HEAP32[$645 + 16 >> 2] | 0)) $$0$i$i286 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$645 >> 2] | 0) + 36 >> 2] & 127]($645) | 0; else $$0$i$i286 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$647 >> 2] | 0) | 0;
      $657 = HEAP32[$9 >> 2] | 0;
      HEAP32[$9 >> 2] = $657 + 4;
      HEAP32[$657 >> 2] = $$0$i$i286;
      HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -1;
      $661 = HEAP32[$0 >> 2] | 0;
      $662 = $661 + 12 | 0;
      $663 = HEAP32[$662 >> 2] | 0;
      if (($663 | 0) == (HEAP32[$661 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$661 >> 2] | 0) + 40 >> 2] & 127]($661) | 0;
       $$pre$i4$i$i279 = $$pre$i4$i$i279381397;
       $610 = $767;
       continue;
      } else {
       HEAP32[$662 >> 2] = $663 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$663 >> 2] | 0) | 0;
       $$pre$i4$i$i279 = $$pre$i4$i$i279381397;
       $610 = $767;
       continue;
      }
     }
    } while (0);
    if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$8 >> 2] | 0)) {
     label = 227;
     break L21;
    } else $$1132 = $$0131;
    break;
   }
  default:
   $$1132 = $$0131;
  } while (0);
  L279 : do if ((label | 0) == 45) while (1) {
   label = 0;
   $124 = HEAP32[$0 >> 2] | 0;
   do if (!$124) $154 = 1; else {
    $127 = HEAP32[$124 + 12 >> 2] | 0;
    if (($127 | 0) == (HEAP32[$124 + 16 >> 2] | 0)) $$0$i$i$i$i162 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$124 >> 2] | 0) + 36 >> 2] & 127]($124) | 0; else $$0$i$i$i$i162 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$127 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i162, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$0 >> 2] = 0;
     $154 = 1;
     break;
    } else {
     $154 = (HEAP32[$0 >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$139) {
    $$pre$i4$i$i170392 = $$pre$i4$i$i170;
    label = 58;
   } else {
    $142 = HEAP32[$139 + 12 >> 2] | 0;
    if (($142 | 0) == (HEAP32[$139 + 16 >> 2] | 0)) $$0$i$i2$i$i168 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$139 >> 2] | 0) + 36 >> 2] & 127]($139) | 0; else $$0$i$i2$i$i168 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$142 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i168, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$1 >> 2] = 0;
     $$pre$i4$i$i170392 = 0;
     label = 58;
     break;
    } else if ($154 ^ ($$pre$i4$i$i170 | 0) == 0) {
     $$pre$i4$i$i170394 = $$pre$i4$i$i170;
     $762 = $$pre$i4$i$i170;
     break;
    } else {
     $$1132 = $$0131;
     break L279;
    }
   } while (0);
   if ((label | 0) == 58) {
    label = 0;
    if ($154) {
     $$1132 = $$0131;
     break L279;
    } else {
     $$pre$i4$i$i170394 = $$pre$i4$i$i170392;
     $762 = 0;
    }
   }
   $155 = HEAP32[$0 >> 2] | 0;
   $157 = HEAP32[$155 + 12 >> 2] | 0;
   if (($157 | 0) == (HEAP32[$155 + 16 >> 2] | 0)) $$0$i$i175 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$155 >> 2] | 0) + 36 >> 2] & 127]($155) | 0; else $$0$i$i175 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$157 >> 2] | 0) | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, $$0$i$i175) | 0)) {
    $$1132 = $$0131;
    break L279;
   }
   $171 = HEAP32[$0 >> 2] | 0;
   $172 = $171 + 12 | 0;
   $173 = HEAP32[$172 >> 2] | 0;
   if (($173 | 0) == (HEAP32[$171 + 16 >> 2] | 0)) $$0$i$i177 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$171 >> 2] | 0) + 40 >> 2] & 127]($171) | 0; else {
    HEAP32[$172 >> 2] = $173 + 4;
    $$0$i$i177 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$173 >> 2] | 0) | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($23, $$0$i$i177);
   $$pre$i4$i$i170 = $$pre$i4$i$i170394;
   $139 = $762;
   label = 45;
  } while (0);
  $$0131 = $$1132;
  $$0133 = $$0133 + 1 | 0;
 }
 L314 : do if ((label | 0) == 43) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 101) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 141) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 227) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 229) {
  L316 : do if ($58) {
   $679 = $$0131 + 8 + 3 | 0;
   $680 = $$0131 + 4 | 0;
   $$0 = 1;
   L318 : while (1) {
    $681 = HEAP8[$679 >> 0] | 0;
    if ($681 << 24 >> 24 < 0) $686 = HEAP32[$680 >> 2] | 0; else $686 = $681 & 255;
    if ($$0 >>> 0 >= $686 >>> 0) break L316;
    $687 = HEAP32[$0 >> 2] | 0;
    do if (!$687) $768 = 1; else {
     $690 = HEAP32[$687 + 12 >> 2] | 0;
     if (($690 | 0) == (HEAP32[$687 + 16 >> 2] | 0)) $$0$i$i$i$i208 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$687 >> 2] | 0) + 36 >> 2] & 127]($687) | 0; else $$0$i$i$i$i208 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$690 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i208, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $768 = 1;
      break;
     } else {
      $768 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $702 = HEAP32[$1 >> 2] | 0;
    do if (!$702) label = 248; else {
     $705 = HEAP32[$702 + 12 >> 2] | 0;
     if (($705 | 0) == (HEAP32[$702 + 16 >> 2] | 0)) $$0$i$i2$i$i214 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$702 >> 2] | 0) + 36 >> 2] & 127]($702) | 0; else $$0$i$i2$i$i214 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$705 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i214, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      label = 248;
      break;
     } else if ($768) break; else break L318;
    } while (0);
    if ((label | 0) == 248) {
     label = 0;
     if ($768) break;
    }
    $717 = HEAP32[$0 >> 2] | 0;
    $719 = HEAP32[$717 + 12 >> 2] | 0;
    if (($719 | 0) == (HEAP32[$717 + 16 >> 2] | 0)) $$0$i$i204 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$717 >> 2] | 0) + 36 >> 2] & 127]($717) | 0; else $$0$i$i204 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$719 >> 2] | 0) | 0;
    if ((HEAP8[$679 >> 0] | 0) < 0) $733 = HEAP32[$$0131 >> 2] | 0; else $733 = $$0131;
    if (($$0$i$i204 | 0) != (HEAP32[$733 + ($$0 << 2) >> 2] | 0)) break;
    $738 = $$0 + 1 | 0;
    $739 = HEAP32[$0 >> 2] | 0;
    $740 = $739 + 12 | 0;
    $741 = HEAP32[$740 >> 2] | 0;
    if (($741 | 0) == (HEAP32[$739 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$739 >> 2] | 0) + 40 >> 2] & 127]($739) | 0;
     $$0 = $738;
     continue;
    } else {
     HEAP32[$740 >> 2] = $741 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$741 >> 2] | 0) | 0;
     $$0 = $738;
     continue;
    }
   }
   HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
   $$10 = 0;
   break L314;
  } while (0);
  $750 = HEAP32[$13 >> 2] | 0;
  $751 = HEAP32[$14 >> 2] | 0;
  if (($750 | 0) == ($751 | 0)) $$10 = 1; else {
   HEAP32[$25 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($19, $750, $751, $25);
   if (!(HEAP32[$25 >> 2] | 0)) {
    $$10 = 1;
    break;
   } else {
    HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
    $$10 = 0;
    break;
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($23);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($22);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($21);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
 $757 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = 0;
 if ($757 | 0) FUNCTION_TABLE_vi[HEAP32[$27 >> 2] & 511]($757);
 STACKTOP = sp;
 return $$10 | 0;
}

function __ZN3HFM13ForecastClassC2ERNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEERNS_17ProblemParametersERN8optframe7RandGenERNS_9HFMParamsE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$pre357 = 0, $$pre359 = 0, $$pre361 = 0, $$pre362 = 0, $$pre363 = 0, $10 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $115 = 0, $116 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $136 = 0, $137 = 0, $139 = 0, $14 = 0, $146 = 0, $15 = 0, $152 = 0, $154 = 0, $16 = 0, $161 = 0, $162 = 0, $17 = 0, $170 = 0, $171 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $193 = 0, $195 = 0, $20 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $21 = 0, $210 = 0, $211 = 0, $213 = 0, $220 = 0, $226 = 0, $228 = 0, $235 = 0, $239 = 0, $240 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $25 = 0, $251 = 0, $253 = 0, $254 = 0, $261 = 0, $262 = 0, $272 = 0, $282 = 0, $283 = 0, $288 = 0, $29 = 0, $290 = 0, $295 = 0, $296 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $310 = 0, $311 = 0, $313 = 0, $314 = 0, $316 = 0, $32 = 0, $323 = 0, $325 = 0, $33 = 0, $331 = 0, $332 = 0, $333 = 0, $341 = 0, $347 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $36 = 0, $367 = 0, $369 = 0, $371 = 0, $372 = 0, $373 = 0, $376 = 0, $377 = 0, $379 = 0, $382 = 0, $383 = 0, $384 = 0, $388 = 0, $391 = 0, $392 = 0, $393 = 0, $397 = 0, $400 = 0, $404 = 0, $405 = 0, $406 = 0, $410 = 0, $411 = 0, $413 = 0, $417 = 0, $419 = 0, $42 = 0, $422 = 0, $424 = 0, $427 = 0, $429 = 0, $433 = 0, $437 = 0, $438 = 0, $441 = 0, $442 = 0, $443 = 0, $446 = 0, $45 = 0, $453 = 0, $454 = 0, $456 = 0, $457 = 0, $458 = 0, $46 = 0, $461 = 0, $47 = 0, $474 = 0, $479 = 0, $48 = 0, $481 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $494 = 0, $495 = 0, $496 = 0, $499 = 0, $5 = 0, $503 = 0, $505 = 0, $508 = 0, $509 = 0, $51 = 0, $518 = 0, $519 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $527 = 0, $529 = 0, $53 = 0, $531 = 0, $533 = 0, $535 = 0, $536 = 0, $542 = 0, $543 = 0, $546 = 0, $548 = 0, $556 = 0, $559 = 0, $562 = 0, $563 = 0, $570 = 0, $572 = 0, $573 = 0, $575 = 0, $583 = 0, $589 = 0, $599 = 0, $6 = 0, $601 = 0, $608 = 0, $610 = 0, $67 = 0, $7 = 0, $8 = 0, $81 = 0, $9 = 0, $91 = 0, $92 = 0, $93 = 0, $95 = 0, $96 = 0, $97 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $5 = sp + 144 | 0;
 $6 = sp + 132 | 0;
 $7 = sp + 120 | 0;
 $8 = sp + 108 | 0;
 $9 = sp + 96 | 0;
 $10 = sp + 84 | 0;
 $11 = sp + 72 | 0;
 $12 = sp + 60 | 0;
 $13 = sp + 48 | 0;
 $14 = sp;
 $15 = sp + 36 | 0;
 $16 = sp + 24 | 0;
 $17 = sp + 12 | 0;
 HEAP32[$0 >> 2] = 3912;
 HEAP32[$0 + 4 >> 2] = $1;
 $19 = $0 + 8 | 0;
 HEAP32[$19 >> 2] = $2;
 $20 = $0 + 12 | 0;
 HEAP32[$20 >> 2] = $3;
 $21 = $0 + 16 | 0;
 HEAP32[$21 >> 2] = $4;
 HEAP32[$0 + 32 >> 2] = 0;
 HEAP32[$0 + 36 >> 2] = 0;
 HEAP32[$0 + 40 >> 2] = 0;
 $25 = $0 + 44 | 0;
 $29 = $0 + 56 | 0;
 HEAP8[$29 + 4 >> 0] = 0;
 HEAP32[$0 + 52 >> 2] = 2;
 HEAP8[$0 + 59 >> 0] = 0;
 HEAP8[$29 >> 0] = 1;
 HEAP8[$0 + 57 >> 0] = 1;
 HEAP8[$0 + 58 >> 0] = 0;
 HEAP32[$25 >> 2] = 3944;
 $32 = $0 + 76 | 0;
 HEAP32[$32 >> 2] = 0;
 $33 = $0 + 80 | 0;
 HEAP32[$33 >> 2] = 0;
 HEAP32[$0 + 84 >> 2] = 0;
 $35 = $0 + 96 | 0;
 $36 = $0 + 136 | 0;
 HEAP32[$35 >> 2] = 0;
 HEAP32[$35 + 4 >> 2] = 0;
 HEAP32[$35 + 8 >> 2] = 0;
 HEAP32[$35 + 12 >> 2] = 0;
 HEAP32[$35 + 16 >> 2] = 0;
 HEAP32[$35 + 20 >> 2] = 0;
 HEAP32[$36 >> 2] = 3928;
 HEAP8[$0 + 140 >> 0] = 0;
 HEAP32[$0 + 232 >> 2] = 0;
 HEAP32[$0 + 236 >> 2] = 0;
 HEAP32[$0 + 240 >> 2] = 0;
 $42 = $0 + 141 | 0;
 dest = $0 + 144 | 0;
 stop = dest + 84 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$42 >> 0] = 1;
 HEAP32[$0 + 228 >> 2] = 0;
 HEAP8[$0 + 142 >> 0] = 1;
 $45 = __Znwj(52) | 0;
 __ZN3HFM18HFMProblemInstanceC2ERKNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEE($45, $1);
 $46 = $0 + 20 | 0;
 HEAP32[$46 >> 2] = $45;
 $47 = __Znwj(160) | 0;
 $48 = HEAP32[$19 >> 2] | 0;
 $49 = HEAP32[$21 >> 2] | 0;
 $51 = HEAP32[$49 + 40 >> 2] | 0;
 $53 = HEAP32[$49 + 44 >> 2] | 0;
 HEAP8[$47 + 16 >> 0] = 0;
 HEAP32[$47 + 8 >> 2] = 2;
 HEAP8[$47 + 15 >> 0] = 0;
 HEAP8[$47 + 12 >> 0] = 1;
 HEAP8[$47 + 13 >> 0] = 1;
 HEAP8[$47 + 14 >> 0] = 0;
 HEAP8[$47 + 40 >> 0] = 0;
 HEAP32[$47 + 32 >> 2] = 2;
 HEAP8[$47 + 39 >> 0] = 0;
 HEAP8[$47 + 36 >> 0] = 1;
 HEAP8[$47 + 37 >> 0] = 1;
 HEAP8[$47 + 38 >> 0] = 0;
 HEAP32[$47 + 24 >> 2] = 4004;
 $67 = $47 + 48 | 0;
 HEAP32[$67 >> 2] = 0;
 HEAP32[$67 + 4 >> 2] = 0;
 HEAP32[$67 + 8 >> 2] = 0;
 HEAP32[$67 + 12 >> 2] = 0;
 HEAPF64[$47 + 64 >> 3] = 1.0;
 HEAP8[$47 + 72 >> 0] = 1;
 HEAP8[$47 + 73 >> 0] = 0;
 HEAP32[$47 + 76 >> 2] = 0;
 HEAP32[$47 + 80 >> 2] = 0;
 HEAP32[$47 + 84 >> 2] = 0;
 HEAP8[$47 + 88 >> 0] = 1;
 HEAPF64[$47 + 96 >> 3] = 1.0;
 HEAP32[$47 >> 2] = 4060;
 HEAP32[$47 + 104 >> 2] = $45;
 HEAP32[$47 + 108 >> 2] = $48;
 HEAP32[$47 + 116 >> 2] = $51;
 HEAP32[$47 + 120 >> 2] = $53;
 $81 = HEAP32[$45 + 4 >> 2] | 0;
 HEAP32[$47 + 112 >> 2] = (HEAP32[$81 + 4 >> 2] | 0) - (HEAP32[$81 >> 2] | 0) >> 3;
 HEAP32[$47 + 156 >> 2] = HEAP32[$48 + 84 >> 2];
 $91 = $47 + 124 | 0;
 HEAP32[$91 >> 2] = 0;
 HEAP32[$91 + 4 >> 2] = 0;
 HEAP32[$91 + 8 >> 2] = 0;
 HEAP32[$91 + 12 >> 2] = 0;
 HEAP32[$91 + 16 >> 2] = 0;
 HEAP32[$91 + 20 >> 2] = 0;
 HEAP32[$91 + 24 >> 2] = 0;
 HEAP32[$91 + 28 >> 2] = 0;
 $92 = $0 + 24 | 0;
 HEAP32[$92 >> 2] = $47;
 $93 = __Znwj(40) | 0;
 __ZN3HFM19NSSeqHFMModifyRulesC2ERNS_18HFMProblemInstanceERN8optframe7RandGenEPNSt3__26vectorIdNS6_9allocatorIdEEEE($93, $45, HEAP32[$20 >> 2] | 0, 0);
 $95 = __Znwj(52) | 0;
 $96 = HEAP32[$46 >> 2] | 0;
 $97 = HEAP32[$20 >> 2] | 0;
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($6, (HEAP32[$19 >> 2] | 0) + 28 | 0);
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($7, (HEAP32[$19 >> 2] | 0) + 40 | 0);
 HEAP8[$95 + 16 >> 0] = 0;
 HEAP32[$95 + 8 >> 2] = 2;
 HEAP8[$95 + 15 >> 0] = 0;
 HEAP8[$95 + 12 >> 0] = 1;
 HEAP8[$95 + 13 >> 0] = 1;
 HEAP8[$95 + 14 >> 0] = 0;
 HEAP32[$95 >> 2] = 4156;
 HEAP32[$95 + 20 >> 2] = $96;
 HEAP32[$95 + 24 >> 2] = $97;
 $110 = $95 + 28 | 0;
 HEAP32[$110 >> 2] = 0;
 $111 = $95 + 32 | 0;
 HEAP32[$111 >> 2] = 0;
 $112 = $95 + 36 | 0;
 HEAP32[$112 >> 2] = 0;
 $113 = $6 + 4 | 0;
 $115 = HEAP32[$6 >> 2] | 0;
 $116 = (HEAP32[$113 >> 2] | 0) - $115 | 0;
 $117 = $116 >> 2;
 $119 = $115;
 if ($117 | 0) {
  if ($117 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($110);
  $121 = __Znwj($116) | 0;
  HEAP32[$111 >> 2] = $121;
  HEAP32[$110 >> 2] = $121;
  HEAP32[$112 >> 2] = $121 + ($117 << 2);
  if (($116 | 0) > 0) {
   _memcpy($121 | 0, $115 | 0, $116 | 0) | 0;
   HEAP32[$111 >> 2] = $121 + ($116 >>> 2 << 2);
  }
 }
 $127 = $95 + 40 | 0;
 HEAP32[$127 >> 2] = 0;
 $128 = $95 + 44 | 0;
 HEAP32[$128 >> 2] = 0;
 $129 = $95 + 48 | 0;
 HEAP32[$129 >> 2] = 0;
 $130 = $7 + 4 | 0;
 $131 = HEAP32[$130 >> 2] | 0;
 $132 = HEAP32[$7 >> 2] | 0;
 $133 = $131 - $132 | 0;
 $134 = $133 >> 2;
 $136 = $132;
 $137 = $131;
 if ($134 | 0) {
  if ($134 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($127);
  $139 = __Znwj($133) | 0;
  HEAP32[$128 >> 2] = $139;
  HEAP32[$127 >> 2] = $139;
  HEAP32[$129 >> 2] = $139 + ($134 << 2);
  if (($133 | 0) > 0) {
   _memcpy($139 | 0, $132 | 0, $133 | 0) | 0;
   HEAP32[$128 >> 2] = $139 + ($133 >>> 2 << 2);
  }
 }
 $146 = $132;
 if (!$132) $152 = $119; else {
  if (($137 | 0) != ($136 | 0)) HEAP32[$130 >> 2] = $137 + (~(($137 + -4 - $132 | 0) >>> 2) << 2);
  __ZdlPv($146);
  $152 = HEAP32[$6 >> 2] | 0;
 }
 if ($152 | 0) {
  $154 = HEAP32[$113 >> 2] | 0;
  if (($154 | 0) != ($152 | 0)) HEAP32[$113 >> 2] = $154 + (~(($154 + -4 - $152 | 0) >>> 2) << 2);
  __ZdlPv($152);
 }
 $161 = __Znwj(24) | 0;
 $162 = HEAP32[$20 >> 2] | 0;
 HEAP8[$161 + 16 >> 0] = 0;
 HEAP32[$161 + 8 >> 2] = 2;
 HEAP8[$161 + 15 >> 0] = 0;
 HEAP8[$161 + 12 >> 0] = 1;
 HEAP8[$161 + 13 >> 0] = 1;
 HEAP8[$161 + 14 >> 0] = 0;
 HEAP32[$161 >> 2] = 4220;
 HEAP32[$161 + 20 >> 2] = $162;
 $170 = __Znwj(52) | 0;
 $171 = HEAP32[$46 >> 2] | 0;
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($8, (HEAP32[$19 >> 2] | 0) + 28 | 0);
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($9, (HEAP32[$19 >> 2] | 0) + 40 | 0);
 HEAP8[$170 + 16 >> 0] = 0;
 HEAP32[$170 + 8 >> 2] = 2;
 HEAP8[$170 + 15 >> 0] = 0;
 HEAP8[$170 + 12 >> 0] = 1;
 HEAP8[$170 + 13 >> 0] = 1;
 HEAP8[$170 + 14 >> 0] = 0;
 HEAP32[$170 >> 2] = 4284;
 HEAP32[$170 + 20 >> 2] = $171;
 HEAP32[$170 + 24 >> 2] = $162;
 $184 = $170 + 28 | 0;
 HEAP32[$184 >> 2] = 0;
 $185 = $170 + 32 | 0;
 HEAP32[$185 >> 2] = 0;
 $186 = $170 + 36 | 0;
 HEAP32[$186 >> 2] = 0;
 $187 = $8 + 4 | 0;
 $189 = HEAP32[$8 >> 2] | 0;
 $190 = (HEAP32[$187 >> 2] | 0) - $189 | 0;
 $191 = $190 >> 2;
 $193 = $189;
 if ($191 | 0) {
  if ($191 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($184);
  $195 = __Znwj($190) | 0;
  HEAP32[$185 >> 2] = $195;
  HEAP32[$184 >> 2] = $195;
  HEAP32[$186 >> 2] = $195 + ($191 << 2);
  if (($190 | 0) > 0) {
   _memcpy($195 | 0, $189 | 0, $190 | 0) | 0;
   HEAP32[$185 >> 2] = $195 + ($190 >>> 2 << 2);
  }
 }
 $201 = $170 + 40 | 0;
 HEAP32[$201 >> 2] = 0;
 $202 = $170 + 44 | 0;
 HEAP32[$202 >> 2] = 0;
 $203 = $170 + 48 | 0;
 HEAP32[$203 >> 2] = 0;
 $204 = $9 + 4 | 0;
 $205 = HEAP32[$204 >> 2] | 0;
 $206 = HEAP32[$9 >> 2] | 0;
 $207 = $205 - $206 | 0;
 $208 = $207 >> 2;
 $210 = $206;
 $211 = $205;
 if ($208 | 0) {
  if ($208 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($201);
  $213 = __Znwj($207) | 0;
  HEAP32[$202 >> 2] = $213;
  HEAP32[$201 >> 2] = $213;
  HEAP32[$203 >> 2] = $213 + ($208 << 2);
  if (($207 | 0) > 0) {
   _memcpy($213 | 0, $206 | 0, $207 | 0) | 0;
   HEAP32[$202 >> 2] = $213 + ($207 >>> 2 << 2);
  }
 }
 $220 = $206;
 if (!$206) $226 = $193; else {
  if (($211 | 0) != ($210 | 0)) HEAP32[$204 >> 2] = $211 + (~(($211 + -4 - $206 | 0) >>> 2) << 2);
  __ZdlPv($220);
  $226 = HEAP32[$8 >> 2] | 0;
 }
 if ($226 | 0) {
  $228 = HEAP32[$187 >> 2] | 0;
  if (($228 | 0) != ($226 | 0)) HEAP32[$187 >> 2] = $228 + (~(($228 + -4 - $226 | 0) >>> 2) << 2);
  __ZdlPv($226);
 }
 $235 = HEAP32[$21 >> 2] | 0;
 $239 = HEAP32[$235 + 24 >> 2] | 0;
 switch (HEAP32[$235 + 20 >> 2] | 0) {
 case 0:
  {
   $240 = __Znwj(144) | 0;
   __ZN3HFM18ConstructiveRandomC2ERNS_18HFMProblemInstanceERNS_17ProblemParametersERN8optframe7RandGenEi($240, HEAP32[$46 >> 2] | 0, HEAP32[$19 >> 2] | 0, HEAP32[$20 >> 2] | 0, $239);
   HEAP32[$0 + 28 >> 2] = $240;
   break;
  }
 case 2:
  {
   $245 = __Znwj(156) | 0;
   $246 = HEAP32[$46 >> 2] | 0;
   $247 = HEAP32[$19 >> 2] | 0;
   $248 = HEAP32[$20 >> 2] | 0;
   __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($10, $235 + 28 | 0);
   __ZN3HFM15ConstructiveACFC2ERNS_18HFMProblemInstanceERNS_17ProblemParametersERN8optframe7RandGenEiNSt3__26vectorIdNS8_9allocatorIdEEEE($245, $246, $247, $248, $239, $10);
   HEAP32[$0 + 28 >> 2] = $245;
   $251 = HEAP32[$10 >> 2] | 0;
   if ($251 | 0) {
    $253 = $10 + 4 | 0;
    $254 = HEAP32[$253 >> 2] | 0;
    if (($254 | 0) != ($251 | 0)) HEAP32[$253 >> 2] = $254 + (~(($254 + -8 - $251 | 0) >>> 3) << 3);
    __ZdlPv($251);
   }
   break;
  }
 default:
  {}
 }
 $261 = __Znwj(32) | 0;
 $262 = HEAP32[$92 >> 2] | 0;
 HEAP8[$261 + 16 >> 0] = 0;
 HEAP32[$261 + 8 >> 2] = 2;
 HEAP8[$261 + 15 >> 0] = 0;
 HEAP8[$261 + 12 >> 0] = 1;
 HEAP8[$261 + 13 >> 0] = 1;
 HEAP8[$261 + 14 >> 0] = 0;
 HEAP32[$261 >> 2] = 4348;
 HEAP32[$261 + 20 >> 2] = $262;
 HEAP32[$261 + 24 >> 2] = $161;
 HEAP32[$261 + 28 >> 2] = 500;
 $272 = __Znwj(32) | 0;
 HEAP8[$272 + 16 >> 0] = 0;
 HEAP32[$272 + 8 >> 2] = 2;
 HEAP8[$272 + 15 >> 0] = 0;
 HEAP8[$272 + 12 >> 0] = 1;
 HEAP8[$272 + 13 >> 0] = 1;
 HEAP8[$272 + 14 >> 0] = 0;
 HEAP32[$272 >> 2] = 4348;
 HEAP32[$272 + 20 >> 2] = $262;
 HEAP32[$272 + 24 >> 2] = $170;
 HEAP32[$272 + 28 >> 2] = 500;
 HEAP32[$5 >> 2] = $261;
 $282 = HEAP32[$33 >> 2] | 0;
 $283 = $0 + 84 | 0;
 if ($282 >>> 0 < (HEAP32[$283 >> 2] | 0) >>> 0) {
  HEAP32[$282 >> 2] = $261;
  $288 = (HEAP32[$33 >> 2] | 0) + 4 | 0;
  HEAP32[$33 >> 2] = $288;
  $290 = $288;
 } else {
  __ZNSt3__26vectorIPN8optframe11LocalSearchI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($32, $5);
  $290 = HEAP32[$33 >> 2] | 0;
 }
 HEAP32[$5 >> 2] = $272;
 if ($290 >>> 0 < (HEAP32[$283 >> 2] | 0) >>> 0) {
  HEAP32[$290 >> 2] = $272;
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPN8optframe11LocalSearchI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($32, $5);
 $295 = __Znwj(40) | 0;
 $296 = HEAP32[$92 >> 2] | 0;
 __ZNSt3__26vectorIPN8optframe11LocalSearchI6RepHFMiEENS_9allocatorIS5_EEEC2ERKS8_($11, $32);
 HEAP8[$295 + 16 >> 0] = 0;
 HEAP32[$295 + 8 >> 2] = 2;
 HEAP8[$295 + 15 >> 0] = 0;
 HEAP8[$295 + 12 >> 0] = 1;
 HEAP8[$295 + 13 >> 0] = 1;
 HEAP8[$295 + 14 >> 0] = 0;
 HEAP32[$295 >> 2] = 4408;
 HEAP32[$295 + 20 >> 2] = $296;
 $304 = $295 + 24 | 0;
 HEAP32[$304 >> 2] = 0;
 $305 = $295 + 28 | 0;
 HEAP32[$305 >> 2] = 0;
 $306 = $295 + 32 | 0;
 HEAP32[$306 >> 2] = 0;
 $307 = $11 + 4 | 0;
 $308 = HEAP32[$307 >> 2] | 0;
 $309 = HEAP32[$11 >> 2] | 0;
 $310 = $308 - $309 | 0;
 $311 = $310 >> 2;
 $313 = $309;
 $314 = $308;
 if ($311 | 0) {
  if ($311 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($304);
  $316 = __Znwj($310) | 0;
  HEAP32[$305 >> 2] = $316;
  HEAP32[$304 >> 2] = $316;
  HEAP32[$306 >> 2] = $316 + ($311 << 2);
  if (($310 | 0) > 0) {
   _memcpy($316 | 0, $309 | 0, $310 | 0) | 0;
   HEAP32[$305 >> 2] = $316 + ($310 >>> 2 << 2);
  }
 }
 HEAP32[$295 + 36 >> 2] = 0;
 $323 = $0 + 88 | 0;
 HEAP32[$323 >> 2] = $295;
 $325 = $309;
 if ($309 | 0) {
  if (($314 | 0) != ($313 | 0)) HEAP32[$307 >> 2] = $314 + (~(($314 + -4 - $309 | 0) >>> 2) << 2);
  __ZdlPv($325);
 }
 $331 = __Znwj(44) | 0;
 $332 = HEAP32[$92 >> 2] | 0;
 $333 = HEAP32[$20 >> 2] | 0;
 HEAP8[$331 + 16 >> 0] = 0;
 HEAP32[$331 + 8 >> 2] = 2;
 HEAP8[$331 + 15 >> 0] = 0;
 HEAP8[$331 + 12 >> 0] = 1;
 HEAP8[$331 + 13 >> 0] = 1;
 HEAP8[$331 + 14 >> 0] = 0;
 HEAP32[$331 >> 2] = 4468;
 HEAP32[$331 + 20 >> 2] = 4516;
 $341 = $331 + 24 | 0;
 HEAP32[$341 >> 2] = 0;
 HEAP32[$331 + 28 >> 2] = 0;
 HEAP32[$331 + 32 >> 2] = 0;
 HEAP32[$331 + 36 >> 2] = $332;
 HEAP32[$331 + 40 >> 2] = $333;
 HEAP32[$5 >> 2] = $93;
 __ZNSt3__26vectorIPN8optframe2NSI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($341, $5);
 HEAP32[$0 + 120 >> 2] = $331;
 $347 = __Znwj(48) | 0;
 $349 = HEAP32[$92 >> 2] | 0;
 $350 = $0 + 28 | 0;
 $351 = HEAP32[$350 >> 2] | 0;
 $352 = HEAP32[$323 >> 2] | 0;
 HEAP8[$347 + 20 >> 0] = 0;
 HEAP32[$347 + 12 >> 2] = 2;
 HEAP8[$347 + 19 >> 0] = 0;
 HEAP8[$347 + 16 >> 0] = 1;
 HEAP8[$347 + 17 >> 0] = 1;
 HEAP8[$347 + 18 >> 0] = 0;
 HEAP32[$347 + 24 >> 2] = $349;
 HEAP32[$347 + 28 >> 2] = $351;
 HEAP32[$347 >> 2] = 4532;
 HEAP32[$347 + 4 >> 2] = 4576;
 HEAP32[$347 + 32 >> 2] = $352;
 HEAP32[$347 + 36 >> 2] = $331;
 HEAP32[$347 + 40 >> 2] = 100;
 HEAP32[$347 + 44 >> 2] = 10;
 HEAP32[$0 + 92 >> 2] = $347;
 $367 = HEAP32[$21 >> 2] | 0;
 $369 = HEAP32[$367 + 4 >> 2] | 0;
 $371 = HEAP32[$367 + 8 >> 2] | 0;
 $372 = HEAP32[$367 >> 2] | 0;
 $373 = __Znwj(12) | 0;
 HEAP32[$373 >> 2] = 0;
 HEAP32[$373 + 4 >> 2] = 0;
 HEAP32[$373 + 8 >> 2] = 0;
 $376 = $0 + 64 | 0;
 HEAP32[$376 >> 2] = $373;
 HEAP32[$5 >> 2] = $93;
 __ZNSt3__26vectorIPN8optframe5NSSeqI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($373, $5);
 $$pre357 = HEAP32[$376 >> 2] | 0;
 $$pre359 = HEAP32[$$pre357 + 4 >> 2] | 0;
 $$pre361 = HEAP32[$$pre357 + 8 >> 2] | 0;
 HEAP32[$5 >> 2] = $95;
 $377 = $$pre357 + 4 | 0;
 $379 = $95;
 if ($$pre359 >>> 0 < $$pre361 >>> 0) {
  HEAP32[$$pre359 >> 2] = $379;
  HEAP32[$377 >> 2] = (HEAP32[$377 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPN8optframe5NSSeqI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($$pre357, $5);
 $382 = HEAP32[$376 >> 2] | 0;
 HEAP32[$5 >> 2] = $161;
 $383 = $382 + 4 | 0;
 $384 = HEAP32[$383 >> 2] | 0;
 $388 = $161;
 if ($384 >>> 0 < (HEAP32[$382 + 8 >> 2] | 0) >>> 0) {
  HEAP32[$384 >> 2] = $388;
  HEAP32[$383 >> 2] = (HEAP32[$383 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPN8optframe5NSSeqI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($382, $5);
 $391 = HEAP32[$376 >> 2] | 0;
 HEAP32[$5 >> 2] = $170;
 $392 = $391 + 4 | 0;
 $393 = HEAP32[$392 >> 2] | 0;
 $397 = $170;
 if ($393 >>> 0 < (HEAP32[$391 + 8 >> 2] | 0) >>> 0) {
  HEAP32[$393 >> 2] = $397;
  HEAP32[$392 >> 2] = (HEAP32[$392 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPN8optframe5NSSeqI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($391, $5);
 $400 = HEAP32[$376 >> 2] | 0;
 $404 = (HEAP32[$400 + 4 >> 2] | 0) - (HEAP32[$400 >> 2] | 0) | 0;
 $405 = $404 >> 2;
 HEAP32[$12 >> 2] = 0;
 $406 = $12 + 4 | 0;
 HEAP32[$406 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 if ($405 | 0) {
  if ($405 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($12);
  $410 = __Znwj($404) | 0;
  HEAP32[$406 >> 2] = $410;
  HEAP32[$12 >> 2] = $410;
  $411 = $410 + ($405 << 2) | 0;
  HEAP32[$12 + 8 >> 2] = $411;
  $$0$i$i = $405;
  $413 = $410;
  while (1) {
   HEAP32[$413 >> 2] = 1e3;
   $$0$i$i = $$0$i$i + -1 | 0;
   if (!$$0$i$i) break; else $413 = $413 + 4 | 0;
  }
  HEAP32[$406 >> 2] = $411;
 }
 HEAP32[$13 >> 2] = 0;
 $417 = $13 + 4 | 0;
 HEAP32[$417 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP32[$5 >> 2] = $93;
 $419 = $13 + 8 | 0;
 __ZNSt3__26vectorIPN8optframe2NSI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($13, $5);
 $$pre362 = HEAP32[$417 >> 2] | 0;
 $$pre363 = HEAP32[$419 >> 2] | 0;
 HEAP32[$5 >> 2] = $95;
 if ($$pre362 >>> 0 < $$pre363 >>> 0) {
  HEAP32[$$pre362 >> 2] = $379;
  $422 = (HEAP32[$417 >> 2] | 0) + 4 | 0;
  HEAP32[$417 >> 2] = $422;
  $424 = $422;
 } else {
  __ZNSt3__26vectorIPN8optframe2NSI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($13, $5);
  $424 = HEAP32[$417 >> 2] | 0;
 }
 HEAP32[$5 >> 2] = $161;
 if ($424 >>> 0 < (HEAP32[$419 >> 2] | 0) >>> 0) {
  HEAP32[$424 >> 2] = $388;
  $427 = (HEAP32[$417 >> 2] | 0) + 4 | 0;
  HEAP32[$417 >> 2] = $427;
  $429 = $427;
 } else {
  __ZNSt3__26vectorIPN8optframe2NSI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($13, $5);
  $429 = HEAP32[$417 >> 2] | 0;
 }
 HEAP32[$5 >> 2] = $170;
 if ($429 >>> 0 < (HEAP32[$419 >> 2] | 0) >>> 0) {
  HEAP32[$429 >> 2] = $397;
  HEAP32[$417 >> 2] = (HEAP32[$417 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPN8optframe2NSI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($13, $5);
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 $433 = __Znwj(16) | 0;
 HEAP32[$14 >> 2] = $433;
 HEAP32[$14 + 8 >> 2] = -2147483632;
 HEAP32[$14 + 4 >> 2] = 12;
 dest = $433;
 src = 16563;
 stop = dest + 12 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$433 + 12 >> 0] = 0;
 $437 = __Znwj(56) | 0;
 HEAP32[$15 >> 2] = 0;
 $438 = $15 + 4 | 0;
 HEAP32[$438 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 $441 = HEAP32[$12 >> 2] | 0;
 $442 = (HEAP32[$406 >> 2] | 0) - $441 | 0;
 $443 = $442 >> 2;
 do if ($443 | 0) {
  if ($443 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($15);
  $446 = __Znwj($442) | 0;
  HEAP32[$438 >> 2] = $446;
  HEAP32[$15 >> 2] = $446;
  HEAP32[$15 + 8 >> 2] = $446 + ($443 << 2);
  if (($442 | 0) <= 0) break;
  _memcpy($446 | 0, $441 | 0, $442 | 0) | 0;
  HEAP32[$438 >> 2] = $446 + ($442 >>> 2 << 2);
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($16, $14);
 HEAP32[$437 >> 2] = 0;
 $453 = $437 + 4 | 0;
 HEAP32[$453 >> 2] = 0;
 $454 = $437 + 8 | 0;
 HEAP32[$454 >> 2] = 0;
 $456 = HEAP32[$15 >> 2] | 0;
 $457 = (HEAP32[$438 >> 2] | 0) - $456 | 0;
 $458 = $457 >> 2;
 do if ($458 | 0) {
  if ($458 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($437);
  $461 = __Znwj($457) | 0;
  HEAP32[$453 >> 2] = $461;
  HEAP32[$437 >> 2] = $461;
  HEAP32[$454 >> 2] = $461 + ($458 << 2);
  if (($457 | 0) <= 0) break;
  _memcpy($461 | 0, $456 | 0, $457 | 0) | 0;
  HEAP32[$453 >> 2] = $461 + ($457 >>> 2 << 2);
 } while (0);
 HEAP32[$437 + 12 >> 2] = 1;
 HEAPF64[$437 + 16 >> 3] = .1;
 HEAP32[$437 + 24 >> 2] = $369;
 HEAP32[$437 + 28 >> 2] = $371;
 HEAP32[$437 + 32 >> 2] = $372;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($437 + 36 | 0, $16);
 HEAP32[$437 + 48 >> 2] = 0;
 $474 = $0 + 72 | 0;
 HEAP32[$474 >> 2] = $437;
 if ((HEAP8[$16 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$16 >> 2] | 0);
 $479 = HEAP32[$15 >> 2] | 0;
 if ($479 | 0) {
  $481 = HEAP32[$438 >> 2] | 0;
  if (($481 | 0) != ($479 | 0)) HEAP32[$438 >> 2] = $481 + (~(($481 + -4 - $479 | 0) >>> 2) << 2);
  __ZdlPv($479);
 }
 $488 = __Znwj(56) | 0;
 $489 = HEAP32[$92 >> 2] | 0;
 $490 = HEAP32[$350 >> 2] | 0;
 HEAP32[$17 >> 2] = 0;
 $491 = $17 + 4 | 0;
 HEAP32[$491 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 $494 = HEAP32[$13 >> 2] | 0;
 $495 = (HEAP32[$417 >> 2] | 0) - $494 | 0;
 $496 = $495 >> 2;
 do if (!$496) {
  $522 = 0;
  $523 = 0;
  $529 = 0;
  $536 = 0;
  $548 = 0;
 } else {
  if ($496 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($17);
  $499 = __Znwj($495) | 0;
  HEAP32[$491 >> 2] = $499;
  HEAP32[$17 >> 2] = $499;
  HEAP32[$17 + 8 >> 2] = $499 + ($496 << 2);
  $503 = $499;
  if (($495 | 0) <= 0) {
   $522 = $503;
   $523 = $503;
   $529 = $499;
   $536 = $499;
   $548 = $499;
   break;
  }
  $505 = $499 + ($495 >>> 2 << 2) | 0;
  _memcpy($499 | 0, $494 | 0, $495 | 0) | 0;
  HEAP32[$491 >> 2] = $505;
  $522 = $503;
  $523 = $505;
  $529 = $499;
  $536 = $499;
  $548 = $505;
 } while (0);
 $508 = HEAP32[$20 >> 2] | 0;
 $509 = HEAP32[$474 >> 2] | 0;
 HEAP8[$488 + 16 >> 0] = 0;
 HEAP32[$488 + 8 >> 2] = 2;
 HEAP8[$488 + 15 >> 0] = 0;
 HEAP8[$488 + 12 >> 0] = 1;
 HEAP8[$488 + 13 >> 0] = 1;
 HEAP8[$488 + 14 >> 0] = 0;
 HEAP32[$488 >> 2] = 4624;
 HEAP32[$488 + 20 >> 2] = $489;
 HEAP32[$488 + 24 >> 2] = $490;
 $518 = $488 + 28 | 0;
 HEAP32[$518 >> 2] = 0;
 $519 = $488 + 32 | 0;
 HEAP32[$519 >> 2] = 0;
 $520 = $488 + 36 | 0;
 HEAP32[$520 >> 2] = 0;
 $521 = $523 - $522 | 0;
 $524 = $521 >> 2;
 do if (!$524) {
  $542 = 0;
  $543 = 0;
 } else {
  if ($524 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($518);
  $527 = __Znwj($521) | 0;
  HEAP32[$519 >> 2] = $527;
  HEAP32[$518 >> 2] = $527;
  HEAP32[$520 >> 2] = $527 + ($524 << 2);
  $531 = $523 - $529 | 0;
  $533 = $527;
  if (($531 | 0) <= 0) {
   $542 = $533;
   $543 = $533;
   break;
  }
  $535 = $527 + ($531 >>> 2 << 2) | 0;
  _memcpy($527 | 0, $536 | 0, $531 | 0) | 0;
  HEAP32[$519 >> 2] = $535;
  $542 = $533;
  $543 = $535;
 } while (0);
 HEAP32[$488 + 40 >> 2] = $25;
 HEAP32[$488 + 44 >> 2] = $508;
 HEAP32[$488 + 48 >> 2] = $509;
 HEAP32[$488 + 52 >> 2] = $543 - $542 >> 2;
 $546 = $0 + 68 | 0;
 HEAP32[$546 >> 2] = $488;
 if (!$529) $556 = $488; else {
  if (($548 | 0) != ($529 | 0)) HEAP32[$491 >> 2] = $548 + (~(($548 + -4 - $529 | 0) >>> 2) << 2);
  __ZdlPv($536);
  $556 = HEAP32[$546 >> 2] | 0;
 }
 $559 = $556 + 12 | 0;
 HEAP8[$559 + 4 >> 0] = 0;
 HEAP32[$556 + 8 >> 2] = 3;
 HEAP8[$556 + 15 >> 0] = 0;
 HEAP8[$559 >> 0] = 1;
 HEAP8[$556 + 13 >> 0] = 1;
 HEAP8[$556 + 14 >> 0] = 1;
 $562 = __Znwj(56) | 0;
 $563 = HEAP32[$92 >> 2] | 0;
 HEAP8[$562 + 16 >> 0] = 0;
 HEAP32[$562 + 8 >> 2] = 2;
 HEAP8[$562 + 15 >> 0] = 0;
 HEAP8[$562 + 12 >> 0] = 1;
 HEAP8[$562 + 13 >> 0] = 1;
 HEAP8[$562 + 14 >> 0] = 0;
 $570 = $562 + 20 | 0;
 HEAP32[$570 >> 2] = 0;
 HEAP32[$570 + 4 >> 2] = 0;
 HEAP32[$570 + 8 >> 2] = 0;
 HEAP32[$570 + 12 >> 2] = 0;
 HEAP32[$570 + 16 >> 2] = 0;
 HEAP32[$570 + 20 >> 2] = 0;
 HEAP32[$570 + 24 >> 2] = 0;
 HEAP8[$570 + 28 >> 0] = 0;
 HEAP32[$562 >> 2] = 4672;
 HEAP32[$562 + 52 >> 2] = $563;
 $572 = $0 + 132 | 0;
 HEAP32[$572 >> 2] = $562;
 $573 = __Znwj(44) | 0;
 $575 = HEAP32[$20 >> 2] | 0;
 HEAP8[$573 + 16 >> 0] = 0;
 HEAP32[$573 + 8 >> 2] = 2;
 HEAP8[$573 + 15 >> 0] = 0;
 HEAP8[$573 + 12 >> 0] = 1;
 HEAP8[$573 + 13 >> 0] = 1;
 HEAP8[$573 + 14 >> 0] = 0;
 HEAP32[$573 >> 2] = 4740;
 HEAP32[$573 + 20 >> 2] = 4788;
 $583 = $573 + 24 | 0;
 HEAP32[$583 >> 2] = 0;
 HEAP32[$573 + 28 >> 2] = 0;
 HEAP32[$573 + 32 >> 2] = 0;
 HEAP32[$573 + 36 >> 2] = $562;
 HEAP32[$573 + 40 >> 2] = $575;
 HEAP32[$5 >> 2] = $93;
 __ZNSt3__26vectorIPN8optframe2NSI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($583, $5);
 HEAP32[$0 + 124 >> 2] = $573;
 $589 = __Znwj(52) | 0;
 __ZN8optframe22BasicMOILSPerturbationI6RepHFMiEC2ERNS_14MultiEvaluatorIS1_iEEiiRNS_2NSIS1_iEERNS_7RandGenE($589, HEAP32[$572 >> 2] | 0, 2, 10, $93, HEAP32[$20 >> 2] | 0);
 HEAP32[$0 + 128 >> 2] = $589;
 __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_12ConstructiveIS1_iEE($36, HEAP32[$350 >> 2] | 0);
 __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_9EvaluatorIS1_iEE($36, HEAP32[$92 >> 2] | 0);
 __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_5NSSeqIS1_iEE($36, $93);
 __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_5NSSeqIS1_iEE($36, $161);
 __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_5NSSeqIS1_iEE($36, $95);
 __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_5NSSeqIS1_iEE($36, $170);
 if ((HEAP8[$14 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$14 >> 2] | 0);
 $599 = HEAP32[$13 >> 2] | 0;
 if ($599 | 0) {
  $601 = HEAP32[$417 >> 2] | 0;
  if (($601 | 0) != ($599 | 0)) HEAP32[$417 >> 2] = $601 + (~(($601 + -4 - $599 | 0) >>> 2) << 2);
  __ZdlPv($599);
 }
 $608 = HEAP32[$12 >> 2] | 0;
 if (!$608) {
  STACKTOP = sp;
  return;
 }
 $610 = HEAP32[$406 >> 2] | 0;
 if (($610 | 0) != ($608 | 0)) HEAP32[$406 >> 2] = $610 + (~(($610 + -4 - $608 | 0) >>> 2) << 2);
 __ZdlPv($608);
 STACKTOP = sp;
 return;
}

function __ZN24GeneralParetoLocalSearchI6RepHFMiE24searchWithOptionalParetoERN8optframe4MOSCEPNS2_6ParetoIS0_iEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$010$i = 0, $$010$i219 = 0, $$077384 = 0, $$078383 = 0, $$080381 = 0, $$081373 = 0, $$082372 = 0, $$083386 = 0, $$085388 = 0, $$086392 = 0, $$179 = 0, $$184 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$cast$i = 0, $$cast$i220 = 0, $$cast$lcssa$i = 0, $$cast$lcssa$i209 = 0, $$cast11$i = 0, $$cast11$i218 = 0, $$cast9$i = 0, $$cast9$i205 = 0, $$in$i = 0, $$in$i207 = 0, $$in419 = 0, $$lcssa$i208 = 0, $$lcssa300 = 0, $$lcssa306 = 0, $100 = 0, $104 = 0, $110 = 0, $115 = 0, $119 = 0, $12 = 0, $120 = 0, $128 = 0, $133 = 0, $137 = 0, $138 = 0, $139 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $160 = 0, $165 = 0, $169 = 0, $17 = 0, $171 = 0, $176 = 0, $18 = 0, $180 = 0, $182 = 0, $185 = 0, $186 = 0, $187 = 0, $192 = 0, $195 = 0, $196 = 0, $202 = 0, $204 = 0, $205 = 0, $21 = 0, $210 = 0, $212 = 0, $215 = 0, $217 = 0, $218 = 0, $224 = 0, $226 = 0, $227 = 0, $233 = 0, $235 = 0, $238 = 0, $241 = 0, $246 = 0, $26 = 0, $261 = 0.0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $293 = 0.0, $299 = 0, $3 = 0, $30 = 0, $301 = 0, $304 = 0, $308 = 0, $31 = 0, $319 = 0, $324 = 0, $339 = 0.0, $340 = 0, $341 = 0, $345 = 0, $349 = 0, $35 = 0, $353 = 0, $354 = 0, $36 = 0, $361 = 0, $362 = 0, $366 = 0, $37 = 0, $373 = 0, $379 = 0, $380 = 0, $386 = 0, $388 = 0, $39 = 0, $4 = 0, $40 = 0, $402 = 0, $403 = 0, $407 = 0, $409 = 0, $410 = 0, $411 = 0, $42 = 0, $421 = 0, $432 = 0, $433 = 0, $436 = 0, $438 = 0, $439 = 0, $442 = 0, $444 = 0, $445 = 0, $453 = 0, $456 = 0, $463 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $473 = 0, $474 = 0, $477 = 0, $478 = 0, $486 = 0, $487 = 0, $488 = 0, $490 = 0, $491 = 0, $494 = 0, $495 = 0, $5 = 0, $505 = 0, $506 = 0, $509 = 0, $51 = 0, $514 = 0, $520 = 0, $525 = 0, $529 = 0, $531 = 0, $532 = 0, $533 = 0, $535 = 0, $536 = 0, $537 = 0, $540 = 0, $544 = 0, $546 = 0, $549 = 0, $550 = 0, $551 = 0, $552 = 0, $554 = 0, $555 = 0, $562 = 0, $563 = 0, $564 = 0, $572 = 0, $579 = 0, $585 = 0, $586 = 0, $59 = 0.0, $591 = 0, $597 = 0, $6 = 0, $602 = 0, $606 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $69 = 0.0, $7 = 0, $72 = 0, $75 = 0, $76 = 0, $8 = 0, $87 = 0, $95 = 0, $scevgep4$i$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $$byval_copy1 = sp + 192 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = sp + 160 | 0;
 $4 = sp + 152 | 0;
 $5 = sp + 120 | 0;
 $6 = sp + 88 | 0;
 $7 = sp + 56 | 0;
 $8 = sp + 40 | 0;
 $12 = $5 + 12 | 0;
 HEAP8[$12 + 4 >> 0] = 0;
 HEAP32[$5 + 8 >> 2] = 2;
 HEAP8[$5 + 15 >> 0] = 0;
 HEAP8[$12 >> 0] = 1;
 HEAP8[$5 + 13 >> 0] = 1;
 HEAP8[$5 + 14 >> 0] = 0;
 HEAP32[$5 >> 2] = 5092;
 $15 = $5 + 17 | 0;
 HEAP8[$15 >> 0] = 0;
 _gettimeofday($5 + 20 | 0, $$byval_copy1 | 0) | 0;
 $17 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22013, 24) | 0;
 $18 = $1 + 24 | 0;
 $21 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($17, +HEAPF64[$18 >> 3]) | 0, 15622, 1) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $21 + (HEAP32[(HEAP32[$21 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $26 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34536) | 0;
 $30 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$26 >> 2] | 0) + 28 >> 2] & 63]($26, 10) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($21, $30) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($21) | 0;
 $31 = $0 + 28 | 0;
 $35 = (HEAP32[$0 + 32 >> 2] | 0) - (HEAP32[$31 >> 2] | 0) | 0;
 $36 = $35 >> 2;
 HEAP32[$6 >> 2] = 6156;
 $37 = $6 + 4 | 0;
 HEAP32[$37 >> 2] = 0;
 HEAP32[$37 + 4 >> 2] = 0;
 HEAP32[$37 + 8 >> 2] = 0;
 HEAP32[$37 + 12 >> 2] = 0;
 HEAP32[$37 + 16 >> 2] = 0;
 HEAP32[$37 + 20 >> 2] = 0;
 HEAP8[$37 + 24 >> 0] = 0;
 do if (!$2) {
  $39 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22038, 58) | 0;
  $40 = $0 + 24 | 0;
  $42 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($39, HEAP32[$40 >> 2] | 0) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $42 + (HEAP32[(HEAP32[$42 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $47 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34536) | 0;
  $51 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$47 >> 2] | 0) + 28 >> 2] & 63]($47, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($42, $51) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($42) | 0;
  _gettimeofday($$byval_copy1 | 0, $$byval_copy | 0) | 0;
  $59 = +(HEAP32[$5 + 20 >> 2] | 0) * 1.0e6 + +(HEAP32[$5 + 24 >> 2] | 0);
  $69 = +HEAPF64[$18 >> 3];
  if ((+(HEAP32[$$byval_copy1 >> 2] | 0) * 1.0e6 + +(HEAP32[$$byval_copy1 + 4 >> 2] | 0) - $59) * 1.0e-06 < $69) {
   $72 = HEAP32[$0 + 20 >> 2] | 0;
   $75 = HEAP32[(HEAP32[$72 >> 2] | 0) + 36 >> 2] | 0;
   $76 = HEAP32[$40 >> 2] | 0;
   _gettimeofday($$byval_copy1 | 0, $$byval_copy | 0) | 0;
   FUNCTION_TABLE_viiid[$75 & 1]($3, $72, $76, $69 - (+(HEAP32[$$byval_copy1 >> 2] | 0) * 1.0e6 + +(HEAP32[$$byval_copy1 + 4 >> 2] | 0) - $59) * 1.0e-06);
   __ZN8optframe6ParetoI6RepHFMiEaSERKS2_($6, $3) | 0;
   __ZN8optframe6ParetoI6RepHFMiED2Ev($3);
  }
  $87 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22097, 26) | 0;
  $95 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($87, (HEAP32[$6 + 8 >> 2] | 0) - (HEAP32[$6 + 4 >> 2] | 0) >> 2) | 0, 22124, 13) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $95 + (HEAP32[(HEAP32[$95 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $100 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34536) | 0;
  $104 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$100 >> 2] | 0) + 28 >> 2] & 63]($100, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($95, $104) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($95) | 0;
 } else if ((HEAP32[$2 + 8 >> 2] | 0) == (HEAP32[$2 + 4 >> 2] | 0)) ___assert_fail(22138, 22154, 168, 22222); else {
  $110 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22247, 45) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $110 + (HEAP32[(HEAP32[$110 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $115 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34536) | 0;
  $119 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$115 >> 2] | 0) + 28 >> 2] & 63]($115, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($110, $119) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($110) | 0;
  __ZN8optframe6ParetoI6RepHFMiEaSERKS2_($6, $2) | 0;
  $120 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22293, 23) | 0;
  $128 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($120, (HEAP32[$6 + 8 >> 2] | 0) - (HEAP32[$6 + 4 >> 2] | 0) >> 2) | 0, 22317, 13) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $128 + (HEAP32[(HEAP32[$128 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $133 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34536) | 0;
  $137 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$133 >> 2] | 0) + 28 >> 2] & 63]($133, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($128, $137) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($128) | 0;
  break;
 } while (0);
 __ZN8optframe6ParetoI6RepHFMiEC2ERKS2_($7, $6);
 $138 = $6 + 4 | 0;
 $139 = $6 + 8 | 0;
 L11 : do if (((HEAP32[$139 >> 2] | 0) - (HEAP32[$138 >> 2] | 0) | 0) > 0) {
  $144 = $8 + 4 | 0;
  $145 = $8 + 8 | 0;
  $146 = ($35 | 0) > 0;
  $147 = $0 + 96 | 0;
  $148 = $0 + 100 | 0;
  $149 = $0 + 92 | 0;
  $150 = $0 + 104 | 0;
  $151 = $0 + 108 | 0;
  $152 = $0 + 112 | 0;
  $153 = $3 + 4 | 0;
  $154 = $4 + 4 | 0;
  $$086392 = 0;
  L13 : while (1) {
   HEAP32[$8 >> 2] = 0;
   HEAP32[$144 >> 2] = 0;
   HEAP32[$145 >> 2] = 0;
   L15 : do if ($146) {
    $$085388 = 0;
    $204 = 0;
    $205 = 0;
    $626 = 0;
    while (1) {
     if (($205 | 0) == ($204 << 5 | 0)) {
      if (($205 + 1 | 0) < 0) {
       label = 21;
       break L13;
      }
      $210 = $204 << 6;
      $212 = $205 + 32 & -32;
      __ZNSt3__26vectorIbNS_9allocatorIbEEE7reserveEj($8, $205 >>> 0 < 1073741823 ? ($210 >>> 0 < $212 >>> 0 ? $212 : $210) : 2147483647);
      $215 = HEAP32[$144 >> 2] | 0;
      $218 = HEAP32[$8 >> 2] | 0;
     } else {
      $215 = $205;
      $218 = $626;
     }
     HEAP32[$144 >> 2] = $215 + 1;
     $217 = $218 + ($215 >>> 5 << 2) | 0;
     HEAP32[$217 >> 2] = HEAP32[$217 >> 2] & ~(1 << ($215 & 31));
     $224 = $$085388 + 1 | 0;
     if (($224 | 0) >= ($36 | 0)) break L15;
     $$085388 = $224;
     $204 = HEAP32[$145 >> 2] | 0;
     $205 = HEAP32[$144 >> 2] | 0;
     $626 = $218;
    }
   } while (0);
   $182 = HEAP32[$147 >> 2] | 0;
   if (($182 | 0) == (HEAP32[$148 >> 2] | 0)) __ZNSt3__26vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($149, $8); else {
    HEAP32[$182 >> 2] = 0;
    $185 = $182 + 4 | 0;
    HEAP32[$185 >> 2] = 0;
    $186 = $182 + 8 | 0;
    HEAP32[$186 >> 2] = 0;
    $187 = HEAP32[$144 >> 2] | 0;
    if (!$187) $202 = $182; else {
     if (($187 | 0) < 0) {
      label = 15;
      break;
     }
     $192 = (($187 + -1 | 0) >>> 5) + 1 | 0;
     HEAP32[$182 >> 2] = __Znwj($192 << 2) | 0;
     HEAP32[$185 >> 2] = 0;
     HEAP32[$186 >> 2] = $192;
     $195 = HEAP32[$8 >> 2] | 0;
     HEAP32[$3 >> 2] = $195;
     HEAP32[$153 >> 2] = 0;
     $196 = HEAP32[$144 >> 2] | 0;
     HEAP32[$4 >> 2] = $195 + ($196 >>> 5 << 2);
     HEAP32[$154 >> 2] = $196 & 31;
     HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
     HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$$byval_copy1 >> 2] = HEAP32[$4 >> 2];
     HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
     __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb1ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($182, $$byval_copy, $$byval_copy1);
     $202 = HEAP32[$147 >> 2] | 0;
    }
    HEAP32[$147 >> 2] = $202 + 12;
   }
   $226 = HEAP32[$151 >> 2] | 0;
   $227 = HEAP32[$152 >> 2] | 0;
   if (($226 | 0) == ($227 << 5 | 0)) {
    if (($226 + 1 | 0) < 0) {
     label = 27;
     break;
    }
    $233 = $227 << 6;
    $235 = $226 + 32 & -32;
    __ZNSt3__26vectorIbNS_9allocatorIbEEE7reserveEj($150, $226 >>> 0 < 1073741823 ? ($233 >>> 0 < $235 >>> 0 ? $235 : $233) : 2147483647);
    $238 = HEAP32[$151 >> 2] | 0;
   } else $238 = $226;
   HEAP32[$151 >> 2] = $238 + 1;
   $241 = (HEAP32[$150 >> 2] | 0) + ($238 >>> 5 << 2) | 0;
   HEAP32[$241 >> 2] = HEAP32[$241 >> 2] | 1 << ($238 & 31);
   $246 = HEAP32[$8 >> 2] | 0;
   if ($246 | 0) __ZdlPv($246);
   $$086392 = $$086392 + 1 | 0;
   if (($$086392 | 0) >= ((HEAP32[$139 >> 2] | 0) - (HEAP32[$138 >> 2] | 0) >> 2 | 0)) break L11;
  }
  if ((label | 0) == 15) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($182); else if ((label | 0) == 21) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($8); else if ((label | 0) == 27) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($150);
 } while (0);
 $155 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22331, 48) | 0;
 $160 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($155, (HEAP32[$139 >> 2] | 0) - (HEAP32[$138 >> 2] | 0) >> 2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $160 + (HEAP32[(HEAP32[$160 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $165 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34536) | 0;
 $169 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$165 >> 2] | 0) + 28 >> 2] & 63]($165, 10) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($160, $169) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($160) | 0;
 $171 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22380, 25) | 0, 0) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $171 + (HEAP32[(HEAP32[$171 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $176 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34536) | 0;
 $180 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$176 >> 2] | 0) + 28 >> 2] & 63]($176, 10) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($171, $180) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($171) | 0;
 L44 : do if (($35 | 0) > 0) {
  $261 = +(HEAP32[$5 + 20 >> 2] | 0) * 1.0e6 + +(HEAP32[$5 + 24 >> 2] | 0);
  $262 = $$byval_copy1 + 4 | 0;
  $263 = $$byval_copy + 15 | 0;
  $264 = $$byval_copy + 14 | 0;
  $265 = $$byval_copy + 13 | 0;
  $266 = $$byval_copy + 12 | 0;
  $267 = $$byval_copy + 8 | 0;
  $268 = $266 + 4 | 0;
  $269 = $$byval_copy + 24 | 0;
  $270 = $7 + 4 | 0;
  $271 = $7 + 8 | 0;
  $272 = $7 + 16 | 0;
  $273 = $7 + 20 | 0;
  $274 = $0 + 92 | 0;
  $275 = $0 + 96 | 0;
  $276 = $7 + 4 | 0;
  $277 = $0 + 104 | 0;
  $278 = $6 + 16 | 0;
  $279 = $6 + 20 | 0;
  $280 = $7 + 16 | 0;
  $281 = $0 + 40 | 0;
  $282 = $$byval_copy1 + 11 | 0;
  $283 = $$byval_copy1 + 4 | 0;
  $284 = $0 + 92 | 0;
  $$083386 = 0;
  L46 : while (1) {
   _gettimeofday($$byval_copy1 | 0, $$byval_copy | 0) | 0;
   $293 = +HEAPF64[$18 >> 3];
   if (!((+(HEAP32[$$byval_copy1 >> 2] | 0) * 1.0e6 + +(HEAP32[$262 >> 2] | 0) - $261) * 1.0e-06 < $293)) break L44;
   if (((HEAP32[$139 >> 2] | 0) - (HEAP32[$138 >> 2] | 0) | 0) > 0) {
    $299 = $$083386 >>> 5;
    $301 = 1 << ($$083386 & 31);
    $$082372 = 0;
    do {
     $304 = HEAP32[(HEAP32[$31 >> 2] | 0) + ($$083386 << 2) >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$304 >> 2] | 0) + 8 >> 2] & 127]($$byval_copy1, $304);
     $308 = HEAP8[$282 >> 0] | 0;
     if ((($308 << 24 >> 24 < 0 ? HEAP32[$283 >> 2] | 0 : $308 & 255) | 0) == 28) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($$byval_copy1, 0, -1, 22406, 28) | 0)) {
      $319 = (HEAP32[(HEAP32[$284 >> 2] | 0) + ($$082372 * 12 | 0) >> 2] | 0) + ($299 << 2) | 0;
      HEAP32[$319 >> 2] = HEAP32[$319 >> 2] | $301;
     }
     $324 = (HEAP32[$277 >> 2] | 0) + ($$082372 >>> 5 << 2) | 0;
     HEAP32[$324 >> 2] = HEAP32[$324 >> 2] & ~(1 << ($$082372 & 31));
     if ((HEAP8[$282 >> 0] | 0) < 0) __ZdlPv(HEAP32[$$byval_copy1 >> 2] | 0);
     $$082372 = $$082372 + 1 | 0;
    } while (($$082372 | 0) < ((HEAP32[$139 >> 2] | 0) - (HEAP32[$138 >> 2] | 0) >> 2 | 0));
    $339 = +HEAPF64[$18 >> 3];
   } else $339 = $293;
   HEAP8[$268 >> 0] = 0;
   HEAP32[$267 >> 2] = 2;
   HEAP8[$263 >> 0] = 0;
   HEAP8[$266 >> 0] = 1;
   HEAP8[$265 >> 0] = 1;
   HEAP8[$264 >> 0] = 0;
   HEAP32[$$byval_copy >> 2] = 6432;
   HEAPF64[$269 >> 3] = $339;
   $340 = HEAP32[$271 >> 2] | 0;
   $341 = HEAP32[$270 >> 2] | 0;
   if (($340 - $341 | 0) > 0) {
    $$081373 = 0;
    $$in419 = $341;
    while (1) {
     $386 = HEAP32[(HEAP32[$31 >> 2] | 0) + ($$083386 << 2) >> 2] | 0;
     $388 = HEAP32[$280 >> 2] | 0;
     if ((HEAP32[$273 >> 2] | 0) - $388 >> 2 >>> 0 <= $$081373 >>> 0) {
      label = 56;
      break L46;
     }
     FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$386 >> 2] | 0) + 40 >> 2] & 15]($386, $6, HEAP32[$$in419 + ($$081373 << 2) >> 2] | 0, HEAP32[$388 + ($$081373 << 2) >> 2] | 0, $281, $$byval_copy);
     $$081373 = $$081373 + 1 | 0;
     $402 = HEAP32[$271 >> 2] | 0;
     $403 = HEAP32[$270 >> 2] | 0;
     if (($$081373 | 0) >= ($402 - $403 >> 2 | 0)) {
      $$lcssa300 = $403;
      $$lcssa306 = $402;
      break;
     } else $$in419 = $403;
    }
   } else {
    $$lcssa300 = $341;
    $$lcssa306 = $340;
   }
   $$cast9$i = $$lcssa300;
   if (($$lcssa306 | 0) == ($$lcssa300 | 0)) {
    $$cast$lcssa$i = $$cast9$i;
    $$in$i = $$lcssa306;
    $349 = $$lcssa306;
   } else {
    $$010$i = 0;
    $$cast11$i = $$cast9$i;
    while (1) {
     $366 = HEAP32[$$cast11$i + ($$010$i << 2) >> 2] | 0;
     if ($366 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$366 >> 2] | 0) + 4 >> 2] & 511]($366);
     $373 = HEAP32[(HEAP32[$272 >> 2] | 0) + ($$010$i << 2) >> 2] | 0;
     if ($373 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$373 >> 2] | 0) + 4 >> 2] & 511]($373);
     $$010$i = $$010$i + 1 | 0;
     $379 = HEAP32[$271 >> 2] | 0;
     $380 = HEAP32[$270 >> 2] | 0;
     $$cast$i = $380;
     if ($$010$i >>> 0 >= $379 - $380 >> 2 >>> 0) {
      $$cast$lcssa$i = $$cast$i;
      $$in$i = $379;
      $349 = $380;
      break;
     } else $$cast11$i = $$cast$i;
    }
   }
   $345 = $$in$i;
   if (($345 | 0) == ($$cast$lcssa$i | 0)) $627 = $$in$i; else {
    $scevgep4$i$i$i$i = $345 + (~(($345 + -4 - $349 | 0) >>> 2) << 2) | 0;
    HEAP32[$271 >> 2] = $scevgep4$i$i$i$i;
    $627 = $scevgep4$i$i$i$i;
   }
   $353 = HEAP32[$272 >> 2] | 0;
   $354 = HEAP32[$273 >> 2] | 0;
   if (($354 | 0) != ($353 | 0)) HEAP32[$273 >> 2] = $354 + (~(($354 + -4 - $353 | 0) >>> 2) << 2);
   $361 = HEAP32[$139 >> 2] | 0;
   $362 = HEAP32[$138 >> 2] | 0;
   if (($361 - $362 | 0) > 0) {
    $$080381 = 0;
    $410 = $362;
    $628 = $361;
    while (1) {
     $411 = $410;
     if (!(HEAP32[(HEAP32[$277 >> 2] | 0) + ($$080381 >>> 5 << 2) >> 2] & 1 << ($$080381 & 31))) {
      $432 = $410;
      $433 = $628;
     } else {
      $421 = HEAP32[$278 >> 2] | 0;
      if ((HEAP32[$279 >> 2] | 0) - $421 >> 2 >>> 0 <= $$080381 >>> 0) {
       label = 62;
       break L46;
      }
      __ZN8optframe6ParetoI6RepHFMiE14add_indWithMevERKNS_8SolutionIS1_iEERKNS_15MultiEvaluationE($7, HEAP32[$411 + ($$080381 << 2) >> 2] | 0, HEAP32[$421 + ($$080381 << 2) >> 2] | 0);
      $432 = HEAP32[$138 >> 2] | 0;
      $433 = HEAP32[$139 >> 2] | 0;
     }
     $$080381 = $$080381 + 1 | 0;
     if (($$080381 | 0) >= ($433 - $432 >> 2 | 0)) break; else {
      $410 = $432;
      $628 = $433;
     }
    }
    $407 = HEAP32[$271 >> 2] | 0;
    $409 = HEAP32[$270 >> 2] | 0;
   } else {
    $407 = $627;
    $409 = $349;
   }
   if (($407 | 0) == ($409 | 0)) {
    $436 = $$083386 + 1 | 0;
    __ZN8optframe6ParetoI6RepHFMiEaSERKS2_($7, $6) | 0;
    if (($436 | 0) < ($36 | 0)) {
     $438 = HEAP32[$275 >> 2] | 0;
     $439 = HEAP32[$274 >> 2] | 0;
     if (($438 - $439 | 0) > 0) {
      $442 = $$083386 >>> 5;
      $444 = 1 << ($$083386 & 31);
      $$077384 = 0;
      $$078383 = 0;
      $445 = $439;
      $629 = $438;
      while (1) {
       if (!(HEAP32[(HEAP32[$445 + ($$077384 * 12 | 0) >> 2] | 0) + ($442 << 2) >> 2] & $444)) {
        $$179 = $$078383;
        $505 = $445;
        $506 = $629;
       } else {
        $453 = $$077384 - $$078383 | 0;
        $456 = HEAP32[(HEAP32[$276 >> 2] | 0) + ($453 << 2) >> 2] | 0;
        if ($456 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$456 >> 2] | 0) + 4 >> 2] & 511]($456);
        $463 = HEAP32[(HEAP32[$272 >> 2] | 0) + ($453 << 2) >> 2] | 0;
        if ($463 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$463 >> 2] | 0) + 4 >> 2] & 511]($463);
        $469 = (HEAP32[$276 >> 2] | 0) + ($453 << 2) | 0;
        $470 = $469 + 4 | 0;
        $471 = HEAP32[$271 >> 2] | 0;
        $473 = $471 - $470 | 0;
        $474 = $473 >> 2;
        if (!$474) $478 = $471; else {
         _memmove($469 | 0, $470 | 0, $473 | 0) | 0;
         $478 = HEAP32[$271 >> 2] | 0;
        }
        $477 = $469 + ($474 << 2) | 0;
        if (($478 | 0) != ($477 | 0)) HEAP32[$271 >> 2] = $478 + (~(($478 + -4 - $477 | 0) >>> 2) << 2);
        $486 = (HEAP32[$272 >> 2] | 0) + ($453 << 2) | 0;
        $487 = $486 + 4 | 0;
        $488 = HEAP32[$273 >> 2] | 0;
        $490 = $488 - $487 | 0;
        $491 = $490 >> 2;
        if (!$491) $495 = $488; else {
         _memmove($486 | 0, $487 | 0, $490 | 0) | 0;
         $495 = HEAP32[$273 >> 2] | 0;
        }
        $494 = $486 + ($491 << 2) | 0;
        if (($495 | 0) != ($494 | 0)) HEAP32[$273 >> 2] = $495 + (~(($495 + -4 - $494 | 0) >>> 2) << 2);
        $$179 = $$078383 + 1 | 0;
        $505 = HEAP32[$274 >> 2] | 0;
        $506 = HEAP32[$275 >> 2] | 0;
       }
       $$077384 = $$077384 + 1 | 0;
       if (($$077384 | 0) >= (($506 - $505 | 0) / 12 | 0 | 0)) {
        $$184 = $436;
        break;
       } else {
        $$078383 = $$179;
        $445 = $505;
        $629 = $506;
       }
      }
     } else $$184 = $436;
    } else $$184 = $436;
   } else $$184 = 0;
   $509 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22435, 11) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($509, (HEAP32[$271 >> 2] | 0) - (HEAP32[$270 >> 2] | 0) >> 2) | 0;
   $514 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22447, 25) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($514, (HEAP32[$139 >> 2] | 0) - (HEAP32[$138 >> 2] | 0) >> 2) | 0;
   $520 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22473, 6) | 0, $$184) | 0;
   __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $520 + (HEAP32[(HEAP32[$520 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $525 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34536) | 0;
   $529 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$525 >> 2] | 0) + 28 >> 2] & 63]($525, 10) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($520, $529) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($520) | 0;
   if (($$184 | 0) < ($36 | 0)) $$083386 = $$184; else break L44;
  }
  if ((label | 0) == 56) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($280); else if ((label | 0) == 62) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($278);
 } while (0);
 $531 = __Znwj(32) | 0;
 HEAP32[$531 >> 2] = 6156;
 $532 = $531 + 4 | 0;
 $533 = $531 + 8 | 0;
 $535 = HEAP32[$138 >> 2] | 0;
 HEAP32[$532 >> 2] = $535;
 $536 = HEAP32[$139 >> 2] | 0;
 HEAP32[$533 >> 2] = $536;
 $537 = $6 + 12 | 0;
 HEAP32[$531 + 12 >> 2] = HEAP32[$537 >> 2];
 HEAP32[$537 >> 2] = 0;
 HEAP32[$139 >> 2] = 0;
 HEAP32[$138 >> 2] = 0;
 $540 = $6 + 16 | 0;
 HEAP32[$531 + 16 >> 2] = HEAP32[$540 >> 2];
 $544 = $6 + 20 | 0;
 HEAP32[$531 + 20 >> 2] = HEAP32[$544 >> 2];
 $546 = $6 + 24 | 0;
 HEAP32[$531 + 24 >> 2] = HEAP32[$546 >> 2];
 HEAP32[$546 >> 2] = 0;
 HEAP32[$544 >> 2] = 0;
 HEAP32[$540 >> 2] = 0;
 HEAP8[$531 + 28 >> 0] = ($536 | 0) != ($535 | 0) & 1;
 $549 = $7 + 4 | 0;
 $550 = $7 + 8 | 0;
 $551 = HEAP32[$550 >> 2] | 0;
 $552 = HEAP32[$549 >> 2] | 0;
 $$cast9$i205 = $552;
 if (($551 | 0) == ($552 | 0)) {
  $$cast$lcssa$i209 = $$cast9$i205;
  $$in$i207 = $551;
  $$lcssa$i208 = $551;
 } else {
  $554 = $7 + 16 | 0;
  $$010$i219 = 0;
  $$cast11$i218 = $$cast9$i205;
  while (1) {
   $572 = HEAP32[$$cast11$i218 + ($$010$i219 << 2) >> 2] | 0;
   if ($572 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$572 >> 2] | 0) + 4 >> 2] & 511]($572);
   $579 = HEAP32[(HEAP32[$554 >> 2] | 0) + ($$010$i219 << 2) >> 2] | 0;
   if ($579 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$579 >> 2] | 0) + 4 >> 2] & 511]($579);
   $$010$i219 = $$010$i219 + 1 | 0;
   $585 = HEAP32[$550 >> 2] | 0;
   $586 = HEAP32[$549 >> 2] | 0;
   $$cast$i220 = $586;
   if ($$010$i219 >>> 0 >= $585 - $586 >> 2 >>> 0) {
    $$cast$lcssa$i209 = $$cast$i220;
    $$in$i207 = $585;
    $$lcssa$i208 = $586;
    break;
   } else $$cast11$i218 = $$cast$i220;
  }
 }
 $555 = $$in$i207;
 if (($555 | 0) != ($$cast$lcssa$i209 | 0)) HEAP32[$550 >> 2] = $555 + (~(($555 + -4 - $$lcssa$i208 | 0) >>> 2) << 2);
 $562 = HEAP32[$7 + 16 >> 2] | 0;
 $563 = $7 + 20 | 0;
 $564 = HEAP32[$563 >> 2] | 0;
 if (($564 | 0) != ($562 | 0)) HEAP32[$563 >> 2] = $564 + (~(($564 + -4 - $562 | 0) >>> 2) << 2);
 __ZN8optframe13paretoManagerI6RepHFMiE14checkDominanceERKNS_6ParetoIS1_iEE($0 + 40 | 0, $531) | 0;
 $591 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22480, 52) | 0;
 $597 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($591, (HEAP32[$533 >> 2] | 0) - (HEAP32[$532 >> 2] | 0) >> 2) | 0, 22533, 25) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $597 + (HEAP32[(HEAP32[$597 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $602 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34536) | 0;
 $606 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$602 >> 2] | 0) + 28 >> 2] & 63]($602, 10) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($597, $606) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($597) | 0;
 __ZN8optframe6ParetoI6RepHFMiED2Ev($7);
 __ZN8optframe6ParetoI6RepHFMiED2Ev($6);
 HEAP32[$5 >> 2] = 5092;
 if (!(HEAP8[$15 >> 0] | 0)) {
  STACKTOP = sp;
  return $531 | 0;
 }
 _gettimeofday($$byval_copy1 | 0, $$byval_copy | 0) | 0;
 HEAPF64[$vararg_buffer >> 3] = (+(HEAP32[$$byval_copy1 >> 2] | 0) * 1.0e6 + +(HEAP32[$$byval_copy1 + 4 >> 2] | 0) - (+(HEAP32[$5 + 20 >> 2] | 0) * 1.0e6 + +(HEAP32[$5 + 24 >> 2] | 0))) * 1.0e-06;
 _printf(17801, $vararg_buffer) | 0;
 STACKTOP = sp;
 return $531 | 0;
}

function __ZlsRNSt3__213basic_ostreamIcNS_11char_traitsIcEEEERK6RepHFM($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0150417 = 0, $$0151420 = 0, $$0152423 = 0, $$0157428 = 0, $$0158$lcssa = 0.0, $$0158427 = 0.0, $$0415 = 0, $$1159$lcssa = 0.0, $$1159422 = 0.0, $$2160$lcssa = 0.0, $$2160416 = 0.0, $104 = 0, $110 = 0, $115 = 0, $119 = 0, $12 = 0, $124 = 0.0, $13 = 0, $131 = 0.0, $138 = 0, $139 = 0, $140 = 0, $145 = 0, $149 = 0, $150 = 0, $151 = 0, $156 = 0, $162 = 0, $169 = 0, $176 = 0, $18 = 0, $181 = 0, $185 = 0, $186 = 0, $192 = 0, $199 = 0, $2 = 0, $206 = 0, $213 = 0, $219 = 0, $22 = 0, $225 = 0, $23 = 0, $230 = 0, $234 = 0, $239 = 0.0, $24 = 0, $241 = 0, $248 = 0, $256 = 0, $269 = 0.0, $276 = 0, $277 = 0, $279 = 0, $28 = 0, $284 = 0, $288 = 0, $289 = 0, $294 = 0, $299 = 0, $3 = 0, $303 = 0, $304 = 0, $305 = 0, $310 = 0, $315 = 0, $319 = 0, $325 = 0, $33 = 0, $331 = 0, $338 = 0, $34 = 0, $345 = 0, $35 = 0, $350 = 0, $354 = 0, $355 = 0, $361 = 0, $368 = 0, $375 = 0, $382 = 0, $388 = 0, $394 = 0, $399 = 0, $40 = 0, $403 = 0, $408 = 0.0, $410 = 0, $417 = 0, $425 = 0, $438 = 0.0, $44 = 0, $445 = 0, $45 = 0, $450 = 0, $454 = 0, $46 = 0, $51 = 0, $56 = 0, $61 = 0, $66 = 0, $70 = 0, $71 = 0, $77 = 0, $8 = 0, $84 = 0, $91 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15540, 47) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $3 + (HEAP32[(HEAP32[$3 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($3, $12) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($3) | 0;
 $13 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15588, 13) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $13 + (HEAP32[(HEAP32[$13 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 28 >> 2] & 63]($18, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($13, $22) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($13) | 0;
 $23 = __Znwj(8) | 0;
 $24 = $23;
 HEAP32[$24 >> 2] = 0;
 HEAP32[$24 + 4 >> 2] = 0;
 $28 = $1 + 4 | 0;
 if (((HEAP32[$28 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0) > 0) {
  $33 = $1 + 12 | 0;
  $34 = $23 + 4 | 0;
  $$0157428 = 0;
  $$0158427 = 0.0;
  while (1) {
   $51 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15618, 1) | 0;
   $56 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($51, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0157428 << 3) >> 2] | 0) | 0, 15620, 1) | 0;
   $61 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($56, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0157428 << 3) + 4 >> 2] | 0) | 0, 15622, 1) | 0;
   __ZNKSt3__28ios_base6getlocEv($2, $61 + (HEAP32[(HEAP32[$61 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $66 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
   $70 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$66 >> 2] | 0) + 28 >> 2] & 63]($66, 10) | 0;
   __ZNSt3__26localeD2Ev($2);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($61, $70) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($61) | 0;
   $71 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15624, 3) | 0;
   $77 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($71, +HEAPF64[HEAP32[(HEAP32[$33 >> 2] | 0) + ($$0157428 * 12 | 0) >> 2] >> 3]) | 0, 15628, 2) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($77, +HEAPF64[(HEAP32[(HEAP32[$33 >> 2] | 0) + ($$0157428 * 12 | 0) >> 2] | 0) + 8 >> 3]) | 0, 15622, 1) | 0;
   $84 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15624, 3) | 0;
   $91 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($84, +HEAPF64[(HEAP32[(HEAP32[$33 >> 2] | 0) + ($$0157428 * 12 | 0) >> 2] | 0) + 16 >> 3]) | 0, 15628, 2) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($91, +HEAPF64[(HEAP32[(HEAP32[$33 >> 2] | 0) + ($$0157428 * 12 | 0) >> 2] | 0) + 24 >> 3]) | 0, 15622, 1) | 0;
   $98 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15631, 10) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($98, +HEAPF64[(HEAP32[(HEAP32[$33 >> 2] | 0) + ($$0157428 * 12 | 0) >> 2] | 0) + 32 >> 3]) | 0;
   $104 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15642, 16) | 0;
   $110 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($104, +HEAPF64[(HEAP32[(HEAP32[$33 >> 2] | 0) + ($$0157428 * 12 | 0) >> 2] | 0) + 40 >> 3]) | 0;
   __ZNKSt3__28ios_base6getlocEv($2, $110 + (HEAP32[(HEAP32[$110 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $115 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
   $119 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$115 >> 2] | 0) + 28 >> 2] & 63]($115, 10) | 0;
   __ZNSt3__26localeD2Ev($2);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($110, $119) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($110) | 0;
   $124 = +HEAPF64[(HEAP32[(HEAP32[$33 >> 2] | 0) + ($$0157428 * 12 | 0) >> 2] | 0) + 40 >> 3];
   if ($124 == 0.0) HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 1;
   if ($124 == 1.0) HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 1;
   $131 = $$0158427 + 1.0;
   $$0157428 = $$0157428 + 1 | 0;
   if (($$0157428 | 0) >= ((HEAP32[$28 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) >> 3 | 0)) {
    $$0158$lcssa = $131;
    break;
   } else $$0158427 = $131;
  }
 } else $$0158$lcssa = 0.0;
 $35 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15602, 15) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $35 + (HEAP32[(HEAP32[$35 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $40 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $44 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$40 >> 2] | 0) + 28 >> 2] & 63]($40, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($35, $44) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($35) | 0;
 $45 = $1 + 24 | 0;
 $46 = $1 + 28 | 0;
 if (((HEAP32[$46 >> 2] | 0) - (HEAP32[$45 >> 2] | 0) | 0) > 0) {
  $138 = $1 + 36 | 0;
  $139 = $23 + 4 | 0;
  $$0152423 = 0;
  $$1159422 = $$0158$lcssa;
  while (1) {
   $156 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15677, 2) | 0;
   $162 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($156, HEAP32[HEAP32[(HEAP32[$45 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] >> 2] | 0) | 0, 15620, 1) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($162, HEAP32[(HEAP32[(HEAP32[$45 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] | 0) + 4 >> 2] | 0) | 0, 15680, 1) | 0;
   $169 = HEAP32[$45 >> 2] | 0;
   if (((HEAP32[$169 + ($$0152423 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$169 + ($$0152423 * 12 | 0) >> 2] | 0) | 0) > 8) {
    $$0151420 = 1;
    do {
     $241 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15682, 3) | 0;
     $248 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($241, HEAP32[(HEAP32[(HEAP32[$45 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] | 0) + ($$0151420 << 3) >> 2] | 0) | 0, 15620, 1) | 0;
     __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($248, HEAP32[(HEAP32[(HEAP32[$45 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] | 0) + ($$0151420 << 3) + 4 >> 2] | 0) | 0, 15680, 1) | 0;
     $$0151420 = $$0151420 + 1 | 0;
     $256 = HEAP32[$45 >> 2] | 0;
    } while (($$0151420 | 0) < ((HEAP32[$256 + ($$0152423 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$256 + ($$0152423 * 12 | 0) >> 2] | 0) >> 3 | 0));
   }
   $176 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15622, 1) | 0;
   __ZNKSt3__28ios_base6getlocEv($2, $176 + (HEAP32[(HEAP32[$176 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $181 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
   $185 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$181 >> 2] | 0) + 28 >> 2] & 63]($181, 10) | 0;
   __ZNSt3__26localeD2Ev($2);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($176, $185) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($176) | 0;
   $186 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15624, 3) | 0;
   $192 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($186, +HEAPF64[HEAP32[(HEAP32[$138 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] >> 3]) | 0, 15628, 2) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($192, +HEAPF64[(HEAP32[(HEAP32[$138 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] | 0) + 8 >> 3]) | 0, 15622, 1) | 0;
   $199 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15624, 3) | 0;
   $206 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($199, +HEAPF64[(HEAP32[(HEAP32[$138 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] | 0) + 16 >> 3]) | 0, 15628, 2) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($206, +HEAPF64[(HEAP32[(HEAP32[$138 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] | 0) + 24 >> 3]) | 0, 15622, 1) | 0;
   $213 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15631, 10) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($213, +HEAPF64[(HEAP32[(HEAP32[$138 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] | 0) + 32 >> 3]) | 0;
   $219 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15642, 16) | 0;
   $225 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($219, +HEAPF64[(HEAP32[(HEAP32[$138 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] | 0) + 40 >> 3]) | 0;
   __ZNKSt3__28ios_base6getlocEv($2, $225 + (HEAP32[(HEAP32[$225 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $230 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
   $234 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$230 >> 2] | 0) + 28 >> 2] & 63]($230, 10) | 0;
   __ZNSt3__26localeD2Ev($2);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($225, $234) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($225) | 0;
   $239 = +HEAPF64[(HEAP32[(HEAP32[$138 >> 2] | 0) + ($$0152423 * 12 | 0) >> 2] | 0) + 40 >> 3];
   if ($239 == 0.0) HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 1;
   if ($239 == 1.0) HEAP32[$139 >> 2] = (HEAP32[$139 >> 2] | 0) + 1;
   $269 = $$1159422 + 1.0;
   $$0152423 = $$0152423 + 1 | 0;
   if (($$0152423 | 0) >= (((HEAP32[$46 >> 2] | 0) - (HEAP32[$45 >> 2] | 0) | 0) / 12 | 0 | 0)) {
    $$1159$lcssa = $269;
    break;
   } else $$1159422 = $269;
  }
 } else $$1159$lcssa = $$0158$lcssa;
 $140 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15659, 17) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $140 + (HEAP32[(HEAP32[$140 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $145 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $149 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$145 >> 2] | 0) + 28 >> 2] & 63]($145, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($140, $149) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($140) | 0;
 $150 = $1 + 48 | 0;
 $151 = $1 + 52 | 0;
 if (((HEAP32[$151 >> 2] | 0) - (HEAP32[$150 >> 2] | 0) | 0) > 0) {
  $276 = $1 + 60 | 0;
  $277 = $23 + 4 | 0;
  $$0150417 = 0;
  $$2160416 = $$1159$lcssa;
  while (1) {
   $325 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15677, 2) | 0;
   $331 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($325, HEAP32[HEAP32[(HEAP32[$150 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] >> 2] | 0) | 0, 15620, 1) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($331, HEAP32[(HEAP32[(HEAP32[$150 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] | 0) + 4 >> 2] | 0) | 0, 15680, 1) | 0;
   $338 = HEAP32[$150 >> 2] | 0;
   if (((HEAP32[$338 + ($$0150417 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$338 + ($$0150417 * 12 | 0) >> 2] | 0) | 0) > 8) {
    $$0415 = 1;
    do {
     $410 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15682, 3) | 0;
     $417 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($410, HEAP32[(HEAP32[(HEAP32[$150 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] | 0) + ($$0415 << 3) >> 2] | 0) | 0, 15620, 1) | 0;
     __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($417, HEAP32[(HEAP32[(HEAP32[$150 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] | 0) + ($$0415 << 3) + 4 >> 2] | 0) | 0, 15680, 1) | 0;
     $$0415 = $$0415 + 1 | 0;
     $425 = HEAP32[$150 >> 2] | 0;
    } while (($$0415 | 0) < ((HEAP32[$425 + ($$0150417 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$425 + ($$0150417 * 12 | 0) >> 2] | 0) >> 3 | 0));
   }
   $345 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15622, 1) | 0;
   __ZNKSt3__28ios_base6getlocEv($2, $345 + (HEAP32[(HEAP32[$345 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $350 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
   $354 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$350 >> 2] | 0) + 28 >> 2] & 63]($350, 10) | 0;
   __ZNSt3__26localeD2Ev($2);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($345, $354) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($345) | 0;
   $355 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15624, 3) | 0;
   $361 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($355, +HEAPF64[HEAP32[(HEAP32[$276 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] >> 3]) | 0, 15628, 2) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($361, +HEAPF64[(HEAP32[(HEAP32[$276 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] | 0) + 8 >> 3]) | 0, 15622, 1) | 0;
   $368 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15624, 3) | 0;
   $375 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($368, +HEAPF64[(HEAP32[(HEAP32[$276 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] | 0) + 16 >> 3]) | 0, 15628, 2) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($375, +HEAPF64[(HEAP32[(HEAP32[$276 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] | 0) + 24 >> 3]) | 0, 15622, 1) | 0;
   $382 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15631, 10) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($382, +HEAPF64[(HEAP32[(HEAP32[$276 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] | 0) + 32 >> 3]) | 0;
   $388 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15642, 16) | 0;
   $394 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($388, +HEAPF64[(HEAP32[(HEAP32[$276 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] | 0) + 40 >> 3]) | 0;
   __ZNKSt3__28ios_base6getlocEv($2, $394 + (HEAP32[(HEAP32[$394 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $399 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
   $403 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$399 >> 2] | 0) + 28 >> 2] & 63]($399, 10) | 0;
   __ZNSt3__26localeD2Ev($2);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($394, $403) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($394) | 0;
   $408 = +HEAPF64[(HEAP32[(HEAP32[$276 >> 2] | 0) + ($$0150417 * 12 | 0) >> 2] | 0) + 40 >> 3];
   if ($408 == 0.0) HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 1;
   if ($408 == 1.0) HEAP32[$277 >> 2] = (HEAP32[$277 >> 2] | 0) + 1;
   $438 = $$2160416 + 1.0;
   $$0150417 = $$0150417 + 1 | 0;
   if (($$0150417 | 0) >= (((HEAP32[$151 >> 2] | 0) - (HEAP32[$150 >> 2] | 0) | 0) / 12 | 0 | 0)) {
    $$2160$lcssa = $438;
    break;
   } else $$2160416 = $438;
  }
 } else $$2160$lcssa = $$1159$lcssa;
 $279 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15686, 9) | 0, $$2160$lcssa) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $279 + (HEAP32[(HEAP32[$279 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $284 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $288 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$284 >> 2] | 0) + 28 >> 2] & 63]($284, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($279, $288) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($279) | 0;
 $289 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15696, 30) | 0;
 $294 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($289, +(HEAP32[$23 >> 2] | 0) / $$2160$lcssa * 100.0) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $294 + (HEAP32[(HEAP32[$294 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $299 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $303 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$299 >> 2] | 0) + 28 >> 2] & 63]($299, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($294, $303) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($294) | 0;
 $304 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15727, 30) | 0;
 $305 = $23 + 4 | 0;
 $310 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($304, +(HEAP32[$305 >> 2] | 0) / $$2160$lcssa * 100.0) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $310 + (HEAP32[(HEAP32[$310 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $315 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $319 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$315 >> 2] | 0) + 28 >> 2] & 63]($315, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($310, $319) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($310) | 0;
 if (!(+((HEAP32[$305 >> 2] | 0) + (HEAP32[$23 >> 2] | 0) | 0) != $$2160$lcssa)) {
  __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15765, 44) | 0;
  __ZdlPv($23);
  STACKTOP = sp;
  return $0 | 0;
 }
 $445 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15758, 6) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $445 + (HEAP32[(HEAP32[$445 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $450 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $454 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$450 >> 2] | 0) + 28 >> 2] & 63]($450, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($445, $454) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($445) | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15765, 44) | 0;
 __ZdlPv($23);
 STACKTOP = sp;
 return $0 | 0;
}

function _vfscanf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$$0268 = 0, $$$0305 = 0, $$$3 = 0, $$0266$lcssa = 0, $$0266417 = 0, $$0268 = 0, $$0272 = 0, $$0273429 = 0, $$0276$ph = 0, $$0278$ph = 0, $$0278$ph$phi = 0, $$0278$ph336 = 0, $$0283428 = 0, $$0286420 = 0, $$0288425 = 0, $$0292 = 0, $$0293 = 0, $$0305423 = 0, $$10 = 0, $$11 = 0, $$1267 = 0, $$1271 = 0, $$1274 = 0, $$1277$ph = 0, $$1279 = 0, $$1284 = 0, $$1289 = 0, $$2 = 0, $$2275 = 0, $$2280 = 0, $$2280$ph = 0, $$2280$ph$phi = 0, $$2285 = 0, $$2290 = 0, $$2307$ph = 0, $$3$lcssa = 0, $$327 = 0, $$328$le441 = 0, $$3281 = 0, $$3291 = 0, $$3416 = 0, $$4282 = 0, $$4309 = 0, $$5 = 0, $$5299 = 0, $$5310 = 0, $$6 = 0, $$6311 = 0, $$7 = 0, $$7$ph = 0, $$7312 = 0, $$8 = 0, $$8313 = 0, $$9 = 0, $$9314 = 0, $$9314$ph = 0, $$lcssa355 = 0, $$ph = 0, $$ph353 = 0, $$pre$phi516Z2D = 0, $$sink443 = 0, $$sroa$2$0$$sroa_idx13 = 0, $100 = 0, $102 = 0, $103 = 0, $106 = 0, $109 = 0, $11 = 0, $112 = 0, $114 = 0, $119 = 0, $126 = 0, $13 = 0, $132 = 0, $138 = 0, $14 = 0, $140 = 0, $141 = 0, $146 = 0, $15 = 0, $150 = 0, $154 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $167 = 0, $17 = 0, $172 = 0, $176 = 0, $18 = 0, $181 = 0, $182 = 0, $184 = 0, $186 = 0, $187 = 0, $19 = 0, $195 = 0, $20 = 0, $205 = 0, $207 = 0, $21 = 0, $211 = 0, $213 = 0, $22 = 0, $221 = 0, $229 = 0, $230 = 0, $233 = 0, $235 = 0, $24 = 0, $241 = 0, $248 = 0, $250 = 0, $256 = 0, $263 = 0, $268 = 0, $269 = 0, $27 = 0, $276 = 0, $285 = 0.0, $3 = 0, $304 = 0, $305 = 0, $307 = 0, $308 = 0, $309 = 0, $310 = 0, $311 = 0, $312 = 0, $32 = 0, $39 = 0, $4 = 0, $45 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $55 = 0, $57 = 0, $58 = 0, $6 = 0, $67 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $99 = 0, $isdigittmp = 0, $narrow = 0, $narrow469 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 17 | 0;
 $5 = sp;
 $6 = sp + 16 | 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $305 = ___lockfile($0) | 0; else $305 = 0;
 $11 = HEAP8[$1 >> 0] | 0;
 L4 : do if (!($11 << 24 >> 24)) $$3291 = 0; else {
  $13 = $0 + 4 | 0;
  $14 = $0 + 100 | 0;
  $15 = $0 + 108 | 0;
  $16 = $0 + 8 | 0;
  $17 = $4 + 10 | 0;
  $18 = $4 + 33 | 0;
  $$sroa$2$0$$sroa_idx13 = $3 + 4 | 0;
  $19 = $4 + 46 | 0;
  $20 = $4 + 94 | 0;
  $21 = $4 + 1 | 0;
  $22 = $4 + 1 | 0;
  $$0273429 = $1;
  $$0283428 = 0;
  $$0288425 = 0;
  $$0305423 = 0;
  $102 = 0;
  $24 = $11;
  L6 : while (1) {
   L8 : do if (!(_isspace($24 & 255) | 0)) {
    $53 = $24 << 24 >> 24 == 37;
    L10 : do if ($53) {
     $54 = $$0273429 + 1 | 0;
     $55 = HEAP8[$54 >> 0] | 0;
     L12 : do switch ($55 << 24 >> 24) {
     case 37:
      {
       break L10;
       break;
      }
     case 42:
      {
       $$0293 = 0;
       $$2275 = $$0273429 + 2 | 0;
       break;
      }
     default:
      {
       $isdigittmp = ($55 & 255) + -48 | 0;
       if ($isdigittmp >>> 0 < 10) if ((HEAP8[$$0273429 + 2 >> 0] | 0) == 36) {
        $$0293 = _arg_n_143($2, $isdigittmp) | 0;
        $$2275 = $$0273429 + 3 | 0;
        break L12;
       }
       $88 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
       $89 = HEAP32[$88 >> 2] | 0;
       HEAP32[$2 >> 2] = $88 + 4;
       $$0293 = $89;
       $$2275 = $54;
      }
     } while (0);
     $90 = HEAP8[$$2275 >> 0] | 0;
     $91 = $90 & 255;
     if (($91 + -48 | 0) >>> 0 < 10) {
      $$0266417 = 0;
      $$3416 = $$2275;
      $95 = $91;
      while (1) {
       $94 = ($$0266417 * 10 | 0) + -48 + $95 | 0;
       $96 = $$3416 + 1 | 0;
       $97 = HEAP8[$96 >> 0] | 0;
       $95 = $97 & 255;
       if (($95 + -48 | 0) >>> 0 >= 10) {
        $$0266$lcssa = $94;
        $$3$lcssa = $96;
        $$lcssa355 = $97;
        break;
       } else {
        $$0266417 = $94;
        $$3416 = $96;
       }
      }
     } else {
      $$0266$lcssa = 0;
      $$3$lcssa = $$2275;
      $$lcssa355 = $90;
     }
     $99 = $$lcssa355 << 24 >> 24 == 109;
     $100 = ($$0293 | 0) != 0;
     $$$0305 = $99 ? 0 : $$0305423;
     $$327 = $99 ? 0 : $102;
     $$$3 = $99 ? $$3$lcssa + 1 | 0 : $$3$lcssa;
     $narrow = $100 & $99;
     $103 = $$$3 + 1 | 0;
     switch (HEAP8[$$$3 >> 0] | 0) {
     case 104:
      {
       $106 = (HEAP8[$103 >> 0] | 0) == 104;
       $$0268 = $106 ? -2 : -1;
       $$5 = $106 ? $$$3 + 2 | 0 : $103;
       break;
      }
     case 108:
      {
       $109 = (HEAP8[$103 >> 0] | 0) == 108;
       $$0268 = $109 ? 3 : 1;
       $$5 = $109 ? $$$3 + 2 | 0 : $103;
       break;
      }
     case 106:
      {
       $$0268 = 3;
       $$5 = $103;
       break;
      }
     case 116:
     case 122:
      {
       $$0268 = 1;
       $$5 = $103;
       break;
      }
     case 76:
      {
       $$0268 = 2;
       $$5 = $103;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       $$0268 = 0;
       $$5 = $$$3;
       break;
      }
     default:
      {
       $$7312 = $$$0305;
       $309 = $$327;
       $narrow469 = $narrow;
       label = 137;
       break L6;
      }
     }
     $112 = HEAPU8[$$5 >> 0] | 0;
     $114 = ($112 & 47 | 0) == 3;
     $$ = $114 ? $112 | 32 : $112;
     $$$0268 = $114 ? 1 : $$0268;
     $trunc = $$ & 255;
     switch ($trunc << 24 >> 24) {
     case 99:
      {
       $$1267 = ($$0266$lcssa | 0) > 1 ? $$0266$lcssa : 1;
       $$1284 = $$0283428;
       break;
      }
     case 91:
      {
       $$1267 = $$0266$lcssa;
       $$1284 = $$0283428;
       break;
      }
     case 110:
      {
       _store_int_144($$0293, $$$0268, $$0283428, (($$0283428 | 0) < 0) << 31 >> 31);
       $$11 = $$5;
       $$1289 = $$0288425;
       $$2285 = $$0283428;
       $$6311 = $$$0305;
       $307 = $$327;
       break L8;
       break;
      }
     default:
      {
       ___shlim($0, 0);
       do {
        $119 = HEAP32[$13 >> 2] | 0;
        if ($119 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
         HEAP32[$13 >> 2] = $119 + 1;
         $126 = HEAPU8[$119 >> 0] | 0;
        } else $126 = ___shgetc($0) | 0;
       } while ((_isspace($126) | 0) != 0);
       if (!(HEAP32[$14 >> 2] | 0)) $138 = HEAP32[$13 >> 2] | 0; else {
        $132 = (HEAP32[$13 >> 2] | 0) + -1 | 0;
        HEAP32[$13 >> 2] = $132;
        $138 = $132;
       }
       $$1267 = $$0266$lcssa;
       $$1284 = (HEAP32[$15 >> 2] | 0) + $$0283428 + $138 - (HEAP32[$16 >> 2] | 0) | 0;
      }
     }
     ___shlim($0, $$1267);
     $140 = HEAP32[$13 >> 2] | 0;
     $141 = HEAP32[$14 >> 2] | 0;
     if ($140 >>> 0 < $141 >>> 0) {
      HEAP32[$13 >> 2] = $140 + 1;
      $146 = $141;
     } else {
      if ((___shgetc($0) | 0) < 0) {
       $$7312 = $$$0305;
       $309 = $$327;
       $narrow469 = $narrow;
       label = 137;
       break L6;
      }
      $146 = HEAP32[$14 >> 2] | 0;
     }
     if ($146 | 0) HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + -1;
     L55 : do switch ($trunc << 24 >> 24) {
     case 91:
     case 99:
     case 115:
      {
       $150 = ($$ | 0) == 99;
       L57 : do if (($$ | 16 | 0) == 115) {
        _memset($21 | 0, -1, 256) | 0;
        HEAP8[$4 >> 0] = 0;
        if (($$ | 0) == 115) {
         HEAP8[$18 >> 0] = 0;
         HEAP8[$17 >> 0] = 0;
         HEAP8[$17 + 1 >> 0] = 0;
         HEAP8[$17 + 2 >> 0] = 0;
         HEAP8[$17 + 3 >> 0] = 0;
         HEAP8[$17 + 4 >> 0] = 0;
         $$9 = $$5;
        } else $$9 = $$5;
       } else {
        $154 = $$5 + 1 | 0;
        $156 = (HEAP8[$154 >> 0] | 0) == 94;
        $$0292 = $156 & 1;
        $$6 = $156 ? $$5 + 2 | 0 : $154;
        _memset($22 | 0, $156 & 1 | 0, 256) | 0;
        HEAP8[$4 >> 0] = 0;
        switch (HEAP8[$$6 >> 0] | 0) {
        case 45:
         {
          $$sink443 = $19;
          label = 64;
          break;
         }
        case 93:
         {
          $$sink443 = $20;
          label = 64;
          break;
         }
        default:
         {
          $$7$ph = $$6;
          $$pre$phi516Z2D = ($$0292 ^ 1) & 255;
         }
        }
        if ((label | 0) == 64) {
         label = 0;
         $162 = ($$0292 ^ 1) & 255;
         HEAP8[$$sink443 >> 0] = $162;
         $$7$ph = $$6 + 1 | 0;
         $$pre$phi516Z2D = $162;
        }
        $$7 = $$7$ph;
        while (1) {
         $163 = HEAP8[$$7 >> 0] | 0;
         L69 : do switch ($163 << 24 >> 24) {
         case 0:
          {
           $$7312 = $$$0305;
           $309 = $$327;
           $narrow469 = $narrow;
           label = 137;
           break L6;
           break;
          }
         case 93:
          {
           $$9 = $$7;
           break L57;
           break;
          }
         case 45:
          {
           $164 = $$7 + 1 | 0;
           $165 = HEAP8[$164 >> 0] | 0;
           switch ($165 << 24 >> 24) {
           case 93:
           case 0:
            {
             $$8 = $$7;
             $176 = 45;
             break L69;
             break;
            }
           default:
            {}
           }
           $167 = HEAP8[$$7 + -1 >> 0] | 0;
           if (($167 & 255) < ($165 & 255)) {
            $$0286420 = $167 & 255;
            do {
             $$0286420 = $$0286420 + 1 | 0;
             HEAP8[$4 + $$0286420 >> 0] = $$pre$phi516Z2D;
             $172 = HEAP8[$164 >> 0] | 0;
            } while (($$0286420 | 0) < ($172 & 255 | 0));
            $$8 = $164;
            $176 = $172;
           } else {
            $$8 = $164;
            $176 = $165;
           }
           break;
          }
         default:
          {
           $$8 = $$7;
           $176 = $163;
          }
         } while (0);
         HEAP8[$4 + (($176 & 255) + 1) >> 0] = $$pre$phi516Z2D;
         $$7 = $$8 + 1 | 0;
        }
       } while (0);
       $181 = $150 ? $$1267 + 1 | 0 : 31;
       $182 = ($$$0268 | 0) == 1;
       L77 : do if ($182) {
        if ($narrow) {
         $184 = _malloc($181 << 2) | 0;
         if (!$184) {
          $$7312 = 0;
          $309 = 0;
          $narrow469 = 1;
          label = 137;
          break L6;
         } else $311 = $184;
        } else $311 = $$0293;
        HEAP32[$3 >> 2] = 0;
        HEAP32[$$sroa$2$0$$sroa_idx13 >> 2] = 0;
        $$0276$ph = $181;
        $$0278$ph = 0;
        $$ph = $311;
        L82 : while (1) {
         $186 = ($$ph | 0) == 0;
         $$0278$ph336 = $$0278$ph;
         while (1) {
          L86 : while (1) {
           $187 = HEAP32[$13 >> 2] | 0;
           if ($187 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
            HEAP32[$13 >> 2] = $187 + 1;
            $195 = HEAPU8[$187 >> 0] | 0;
           } else $195 = ___shgetc($0) | 0;
           if (!(HEAP8[$4 + ($195 + 1) >> 0] | 0)) break L82;
           HEAP8[$6 >> 0] = $195;
           switch (_mbrtowc($5, $6, 1, $3) | 0) {
           case -1:
            {
             $$7312 = 0;
             $309 = $$ph;
             $narrow469 = $narrow;
             label = 137;
             break L6;
             break;
            }
           case -2:
            break;
           default:
            break L86;
           }
          }
          if ($186) $$1279 = $$0278$ph336; else {
           HEAP32[$$ph + ($$0278$ph336 << 2) >> 2] = HEAP32[$5 >> 2];
           $$1279 = $$0278$ph336 + 1 | 0;
          }
          if ($narrow & ($$1279 | 0) == ($$0276$ph | 0)) break; else $$0278$ph336 = $$1279;
         }
         $205 = $$0276$ph << 1 | 1;
         $207 = _realloc($$ph, $205 << 2) | 0;
         if (!$207) {
          $$7312 = 0;
          $309 = $$ph;
          $narrow469 = 1;
          label = 137;
          break L6;
         } else {
          $$0278$ph$phi = $$0276$ph;
          $$0276$ph = $205;
          $$ph = $207;
          $$0278$ph = $$0278$ph$phi;
         }
        }
        if (!(_mbsinit($3) | 0)) {
         $$7312 = 0;
         $309 = $$ph;
         $narrow469 = $narrow;
         label = 137;
         break L6;
        } else {
         $$4282 = $$0278$ph336;
         $$4309 = 0;
         $$5299 = $$ph;
         $312 = $$ph;
        }
       } else {
        if ($narrow) {
         $211 = _malloc($181) | 0;
         if (!$211) {
          $$7312 = 0;
          $309 = 0;
          $narrow469 = 1;
          label = 137;
          break L6;
         } else {
          $$1277$ph = $181;
          $$2280$ph = 0;
          $$2307$ph = $211;
         }
         while (1) {
          $$2280 = $$2280$ph;
          do {
           $213 = HEAP32[$13 >> 2] | 0;
           if ($213 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
            HEAP32[$13 >> 2] = $213 + 1;
            $221 = HEAPU8[$213 >> 0] | 0;
           } else $221 = ___shgetc($0) | 0;
           if (!(HEAP8[$4 + ($221 + 1) >> 0] | 0)) {
            $$4282 = $$2280;
            $$4309 = $$2307$ph;
            $$5299 = 0;
            $312 = 0;
            break L77;
           }
           HEAP8[$$2307$ph + $$2280 >> 0] = $221;
           $$2280 = $$2280 + 1 | 0;
          } while (($$2280 | 0) != ($$1277$ph | 0));
          $229 = $$1277$ph << 1 | 1;
          $230 = _realloc($$2307$ph, $229) | 0;
          if (!$230) {
           $$7312 = $$2307$ph;
           $309 = 0;
           $narrow469 = 1;
           label = 137;
           break L6;
          } else {
           $$2280$ph$phi = $$1277$ph;
           $$1277$ph = $229;
           $$2307$ph = $230;
           $$2280$ph = $$2280$ph$phi;
          }
         }
        }
        if (!$$0293) {
         $250 = $146;
         while (1) {
          $248 = HEAP32[$13 >> 2] | 0;
          if ($248 >>> 0 < $250 >>> 0) {
           HEAP32[$13 >> 2] = $248 + 1;
           $256 = HEAPU8[$248 >> 0] | 0;
          } else $256 = ___shgetc($0) | 0;
          if (!(HEAP8[$4 + ($256 + 1) >> 0] | 0)) {
           $$4282 = 0;
           $$4309 = 0;
           $$5299 = 0;
           $312 = 0;
           break L77;
          }
          $250 = HEAP32[$14 >> 2] | 0;
         }
        } else {
         $$3281 = 0;
         $235 = $146;
         while (1) {
          $233 = HEAP32[$13 >> 2] | 0;
          if ($233 >>> 0 < $235 >>> 0) {
           HEAP32[$13 >> 2] = $233 + 1;
           $241 = HEAPU8[$233 >> 0] | 0;
          } else $241 = ___shgetc($0) | 0;
          if (!(HEAP8[$4 + ($241 + 1) >> 0] | 0)) {
           $$4282 = $$3281;
           $$4309 = $$0293;
           $$5299 = 0;
           $312 = 0;
           break L77;
          }
          HEAP8[$$0293 + $$3281 >> 0] = $241;
          $$3281 = $$3281 + 1 | 0;
          $235 = HEAP32[$14 >> 2] | 0;
         }
        }
       } while (0);
       if (!(HEAP32[$14 >> 2] | 0)) $268 = HEAP32[$13 >> 2] | 0; else {
        $263 = (HEAP32[$13 >> 2] | 0) + -1 | 0;
        HEAP32[$13 >> 2] = $263;
        $268 = $263;
       }
       $269 = $268 - (HEAP32[$16 >> 2] | 0) + (HEAP32[$15 >> 2] | 0) | 0;
       if (!$269) {
        $$9314$ph = $$4309;
        $$ph353 = $312;
        label = 139;
        break L6;
       }
       if (!(($269 | 0) == ($$1267 | 0) | $150 ^ 1)) {
        $$9314$ph = $$4309;
        $$ph353 = $312;
        label = 139;
        break L6;
       }
       do if ($narrow) if ($182) {
        HEAP32[$$0293 >> 2] = $$5299;
        break;
       } else {
        HEAP32[$$0293 >> 2] = $$4309;
        break;
       } while (0);
       if ($150) {
        $$10 = $$9;
        $$5310 = $$4309;
        $310 = $312;
       } else {
        if ($$5299 | 0) HEAP32[$$5299 + ($$4282 << 2) >> 2] = 0;
        if (!$$4309) {
         $$10 = $$9;
         $$5310 = 0;
         $310 = $312;
         break L55;
        }
        HEAP8[$$4309 + $$4282 >> 0] = 0;
        $$10 = $$9;
        $$5310 = $$4309;
        $310 = $312;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       $$0272 = 16;
       label = 125;
       break;
      }
     case 111:
      {
       $$0272 = 8;
       label = 125;
       break;
      }
     case 117:
     case 100:
      {
       $$0272 = 10;
       label = 125;
       break;
      }
     case 105:
      {
       $$0272 = 0;
       label = 125;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       $285 = +___floatscan($0, $$$0268, 0);
       if ((HEAP32[$15 >> 2] | 0) == ((HEAP32[$16 >> 2] | 0) - (HEAP32[$13 >> 2] | 0) | 0)) {
        $$9314$ph = $$$0305;
        $$ph353 = $$327;
        label = 139;
        break L6;
       }
       if (!$$0293) {
        $$10 = $$5;
        $$5310 = $$$0305;
        $310 = $$327;
       } else switch ($$$0268 | 0) {
       case 0:
        {
         HEAPF32[$$0293 >> 2] = $285;
         $$10 = $$5;
         $$5310 = $$$0305;
         $310 = $$327;
         break L55;
         break;
        }
       case 1:
        {
         HEAPF64[$$0293 >> 3] = $285;
         $$10 = $$5;
         $$5310 = $$$0305;
         $310 = $$327;
         break L55;
         break;
        }
       case 2:
        {
         HEAPF64[$$0293 >> 3] = $285;
         $$10 = $$5;
         $$5310 = $$$0305;
         $310 = $$327;
         break L55;
         break;
        }
       default:
        {
         $$10 = $$5;
         $$5310 = $$$0305;
         $310 = $$327;
         break L55;
        }
       }
       break;
      }
     default:
      {
       $$10 = $$5;
       $$5310 = $$$0305;
       $310 = $$327;
      }
     } while (0);
     do if ((label | 0) == 125) {
      label = 0;
      $276 = ___intscan($0, $$0272, 0, -1, -1) | 0;
      if ((HEAP32[$15 >> 2] | 0) == ((HEAP32[$16 >> 2] | 0) - (HEAP32[$13 >> 2] | 0) | 0)) {
       $$9314$ph = $$$0305;
       $$ph353 = $$327;
       label = 139;
       break L6;
      }
      if ($100 & ($$ | 0) == 112) {
       HEAP32[$$0293 >> 2] = $276;
       $$10 = $$5;
       $$5310 = $$$0305;
       $310 = $$327;
       break;
      } else {
       _store_int_144($$0293, $$$0268, $276, tempRet0);
       $$10 = $$5;
       $$5310 = $$$0305;
       $310 = $$327;
       break;
      }
     } while (0);
     $$11 = $$10;
     $$1289 = ($100 & 1) + $$0288425 | 0;
     $$2285 = (HEAP32[$15 >> 2] | 0) + $$1284 + (HEAP32[$13 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) | 0;
     $$6311 = $$5310;
     $307 = $310;
     break L8;
    } while (0);
    $57 = $$0273429 + ($53 & 1) | 0;
    ___shlim($0, 0);
    $58 = HEAP32[$13 >> 2] | 0;
    if ($58 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
     HEAP32[$13 >> 2] = $58 + 1;
     $67 = HEAPU8[$58 >> 0] | 0;
    } else $67 = ___shgetc($0) | 0;
    if (($67 | 0) != (HEAPU8[$57 >> 0] | 0)) {
     label = 22;
     break L6;
    }
    $$11 = $57;
    $$1289 = $$0288425;
    $$2285 = $$0283428 + 1 | 0;
    $$6311 = $$0305423;
    $307 = $102;
   } else {
    $$1274 = $$0273429;
    while (1) {
     $27 = $$1274 + 1 | 0;
     if (!(_isspace(HEAPU8[$27 >> 0] | 0) | 0)) break; else $$1274 = $27;
    }
    ___shlim($0, 0);
    do {
     $32 = HEAP32[$13 >> 2] | 0;
     if ($32 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
      HEAP32[$13 >> 2] = $32 + 1;
      $39 = HEAPU8[$32 >> 0] | 0;
     } else $39 = ___shgetc($0) | 0;
    } while ((_isspace($39) | 0) != 0);
    if (!(HEAP32[$14 >> 2] | 0)) $51 = HEAP32[$13 >> 2] | 0; else {
     $45 = (HEAP32[$13 >> 2] | 0) + -1 | 0;
     HEAP32[$13 >> 2] = $45;
     $51 = $45;
    }
    $$11 = $$1274;
    $$1289 = $$0288425;
    $$2285 = (HEAP32[$15 >> 2] | 0) + $$0283428 + $51 - (HEAP32[$16 >> 2] | 0) | 0;
    $$6311 = $$0305423;
    $307 = $102;
   } while (0);
   $$0273429 = $$11 + 1 | 0;
   $24 = HEAP8[$$0273429 >> 0] | 0;
   if (!($24 << 24 >> 24)) {
    $$3291 = $$1289;
    break L4;
   } else {
    $$0283428 = $$2285;
    $$0288425 = $$1289;
    $$0305423 = $$6311;
    $102 = $307;
   }
  }
  if ((label | 0) == 22) {
   if (HEAP32[$14 >> 2] | 0) HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + -1;
   if (($$0288425 | 0) != 0 | ($67 | 0) > -1) {
    $$3291 = $$0288425;
    break;
   } else {
    $$1271 = 0;
    $$8313 = $$0305423;
    $308 = $102;
    label = 138;
   }
  } else if ((label | 0) == 137) {
   $$328$le441 = $narrow469 & 1;
   if (!$$0288425) {
    $$1271 = $$328$le441;
    $$8313 = $$7312;
    $308 = $309;
    label = 138;
   } else {
    $$2 = $$328$le441;
    $$2290 = $$0288425;
    $$9314 = $$7312;
    $304 = $309;
   }
  } else if ((label | 0) == 139) {
   $$2 = $narrow & 1;
   $$2290 = $$0288425;
   $$9314 = $$9314$ph;
   $304 = $$ph353;
  }
  if ((label | 0) == 138) {
   $$2 = $$1271;
   $$2290 = -1;
   $$9314 = $$8313;
   $304 = $308;
  }
  if (!$$2) $$3291 = $$2290; else {
   _free($$9314);
   _free($304);
   $$3291 = $$2290;
  }
 } while (0);
 if ($305 | 0) ___unlockfile($0);
 STACKTOP = sp;
 return $$3291 | 0;
}

function __ZN8optframe19IteratedLocalSearchINSt3__24pairINS2_IiiEES3_EE6RepHFMiE6searchERNS_4SOSCEPKNS_8SolutionIS5_iEEPKNS_10EvaluationE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$053 = 0, $10 = 0, $100 = 0, $103 = 0, $108 = 0, $11 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0, $120 = 0, $123 = 0.0, $13 = 0, $140 = 0, $145 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $232 = 0.0, $233 = 0, $234 = 0, $236 = 0, $238 = 0, $240 = 0, $25 = 0, $273 = 0, $287 = 0, $289 = 0, $29 = 0, $308 = 0, $310 = 0, $317 = 0, $319 = 0, $321 = 0, $324 = 0, $33 = 0, $330 = 0.0, $345 = 0, $346 = 0, $348 = 0, $355 = 0, $357 = 0, $36 = 0, $364 = 0, $366 = 0, $373 = 0, $375 = 0, $382 = 0, $384 = 0, $391 = 0, $393 = 0, $4 = 0, $400 = 0, $403 = 0, $408 = 0.0, $412 = 0, $416 = 0, $417 = 0, $427 = 0, $432 = 0, $433 = 0, $440 = 0, $441 = 0, $443 = 0, $450 = 0, $452 = 0, $459 = 0, $466 = 0, $468 = 0, $473 = 0, $477 = 0, $478 = 0, $5 = 0, $56 = 0, $58 = 0, $6 = 0, $63 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $84 = 0, $87 = 0, $9 = 0, $92 = 0, $96 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 448 | 0;
 $vararg_buffer = sp + 408 | 0;
 $4 = sp + 336 | 0;
 $5 = sp + 264 | 0;
 $6 = sp + 416 | 0;
 $7 = sp + 224 | 0;
 $8 = sp + 152 | 0;
 $9 = sp + 80 | 0;
 $10 = sp + 40 | 0;
 $11 = sp;
 $12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18137, 15) | 0;
 $13 = $1 + 32 | 0;
 $16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($12, +HEAPF64[$13 >> 3]) | 0, 15620, 1) | 0;
 $17 = $1 + 24 | 0;
 $20 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($16, +HEAPF64[$17 >> 3]) | 0, 15622, 1) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $20 + (HEAP32[(HEAP32[$20 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $25 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $29 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$25 >> 2] | 0) + 28 >> 2] & 63]($25, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($20, $29) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($20) | 0;
 $33 = $6 + 12 | 0;
 HEAP8[$33 + 4 >> 0] = 0;
 HEAP32[$6 + 8 >> 2] = 2;
 HEAP8[$6 + 15 >> 0] = 0;
 HEAP8[$33 >> 0] = 1;
 HEAP8[$6 + 13 >> 0] = 1;
 HEAP8[$6 + 14 >> 0] = 0;
 HEAP32[$6 >> 2] = 5092;
 $36 = $6 + 17 | 0;
 HEAP8[$36 >> 0] = 0;
 _gettimeofday($6 + 20 | 0, $4 | 0) | 0;
 if (!$2) {
  $56 = __Znwj(28) | 0;
  $58 = HEAP32[$0 + 28 >> 2] | 0;
  $63 = FUNCTION_TABLE_iid[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 3]($58, +HEAPF64[$17 >> 3]) | 0;
  HEAP8[$56 + 16 >> 0] = 0;
  HEAP32[$56 + 8 >> 2] = 2;
  HEAP8[$56 + 15 >> 0] = 0;
  HEAP8[$56 + 12 >> 0] = 1;
  HEAP8[$56 + 13 >> 0] = 1;
  HEAP8[$56 + 14 >> 0] = 0;
  HEAP32[$56 >> 2] = 5136;
  $70 = $56 + 20 | 0;
  $71 = $63 + 20 | 0;
  HEAP32[$70 >> 2] = HEAP32[$71 >> 2];
  $73 = $56 + 24 | 0;
  $74 = $63 + 24 | 0;
  HEAP32[$73 >> 2] = HEAP32[$74 >> 2];
  HEAP32[$71 >> 2] = 0;
  HEAP32[$74 >> 2] = 0;
  $76 = __Znwj(72) | 0;
  $78 = HEAP32[$0 + 24 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$78 >> 2] | 0) + 76 >> 2] & 31]($76, $78, HEAP32[$70 >> 2] | 0, HEAP32[$73 >> 2] | 0);
  $$0 = $56;
  $$053 = $76;
 } else {
  __ZN8optframe8SolutionI6RepHFMiEaSERKS2_(0, $2) | 0;
  if (!$3) {
   $$0 = 0;
   $$053 = 0;
  } else {
   HEAPF64[3] = +HEAPF64[$3 + 24 >> 3];
   HEAPF64[4] = +HEAPF64[$3 + 32 >> 3];
   HEAP8[56] = HEAP8[$3 + 56 >> 0] | 0;
   HEAP8[57] = HEAP8[$3 + 57 >> 0] | 0;
   HEAPF64[8] = +HEAPF64[$3 + 64 >> 3];
   __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(40, HEAP32[$3 + 40 >> 2] | 0, HEAP32[$3 + 44 >> 2] | 0);
   HEAP32[13] = HEAP32[$3 + 52 >> 2];
   $$0 = 0;
   $$053 = 0;
  }
 }
 $84 = $0 + 18 | 0;
 if (HEAP8[$84 >> 0] | 0) {
  $87 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18153, 22) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $87 + (HEAP32[(HEAP32[$87 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $92 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $96 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$92 >> 2] | 0) + 28 >> 2] & 63]($92, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($87, $96) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($87) | 0;
  __ZNK8optframe10Evaluation5printEv($$053);
 }
 $100 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] & 127]($0) | 0;
 if (HEAP8[$84 >> 0] | 0) {
  $103 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18176, 34) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $103 + (HEAP32[(HEAP32[$103 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $108 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $112 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$108 >> 2] | 0) + 28 >> 2] & 63]($108, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($103, $112) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($103) | 0;
 }
 $113 = $7 + 4 | 0;
 $114 = $1 + 4 | 0;
 HEAP32[$113 >> 2] = HEAP32[$114 >> 2];
 HEAP32[$113 + 4 >> 2] = HEAP32[$114 + 4 >> 2];
 HEAP32[$113 + 8 >> 2] = HEAP32[$114 + 8 >> 2];
 HEAP8[$113 + 12 >> 0] = HEAP8[$114 + 12 >> 0] | 0;
 HEAP32[$7 >> 2] = 3836;
 $115 = $7 + 24 | 0;
 HEAP32[$115 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$115 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
 HEAP32[$115 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
 HEAP32[$115 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
 _gettimeofday($4 | 0, $5 | 0) | 0;
 $116 = $6 + 20 | 0;
 $120 = $6 + 24 | 0;
 $123 = +(HEAP32[$116 >> 2] | 0) * 1.0e6 + +(HEAP32[$120 >> 2] | 0);
 HEAPF64[$115 >> 3] = +HEAPF64[$115 >> 3] - (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$4 + 4 >> 2] | 0) - $123) * 1.0e-06;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] & 31]($0, $$0, $$053, $7);
 if (HEAP8[$84 >> 0] | 0) {
  $140 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18211, 32) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $140 + (HEAP32[(HEAP32[$140 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $145 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $149 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$145 >> 2] | 0) + 28 >> 2] & 63]($145, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($140, $149) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($140) | 0;
 }
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18244, 22) | 0;
 __ZNK8optframe10Evaluation5printEv($$053);
 $150 = $8 + 15 | 0;
 $151 = $8 + 14 | 0;
 $152 = $8 + 13 | 0;
 $153 = $8 + 12 | 0;
 $154 = $8 + 8 | 0;
 $155 = $153 + 4 | 0;
 $156 = $8 + 20 | 0;
 $157 = $$0 + 20 | 0;
 $158 = $8 + 24 | 0;
 $159 = $$0 + 24 | 0;
 $160 = $9 + 15 | 0;
 $161 = $9 + 14 | 0;
 $162 = $9 + 13 | 0;
 $163 = $9 + 12 | 0;
 $164 = $9 + 8 | 0;
 $165 = $163 + 4 | 0;
 $166 = $9 + 24 | 0;
 $167 = $$053 + 24 | 0;
 $168 = $9 + 32 | 0;
 $169 = $$053 + 32 | 0;
 $170 = $9 + 40 | 0;
 $171 = $$053 + 40 | 0;
 $172 = $9 + 52 | 0;
 $173 = $$053 + 52 | 0;
 $174 = $9 + 56 | 0;
 $175 = $$053 + 56 | 0;
 $176 = $9 + 57 | 0;
 $177 = $$053 + 57 | 0;
 $178 = $9 + 64 | 0;
 $179 = $$053 + 64 | 0;
 $180 = $10 + 4 | 0;
 $181 = $10 + 24 | 0;
 $182 = $4 + 4 | 0;
 $183 = $11 + 4 | 0;
 $184 = $11 + 24 | 0;
 $185 = $4 + 4 | 0;
 $186 = $0 + 24 | 0;
 $187 = $4 + 24 | 0;
 $188 = $4 + 32 | 0;
 $189 = $4 + 56 | 0;
 $190 = $4 + 57 | 0;
 $191 = $4 + 64 | 0;
 $192 = $4 + 40 | 0;
 $193 = $4 + 44 | 0;
 $194 = $4 + 52 | 0;
 $195 = $9 + 40 | 0;
 $196 = $9 + 44 | 0;
 $197 = $8 + 15 | 0;
 $198 = $8 + 14 | 0;
 $199 = $8 + 13 | 0;
 $200 = $8 + 12 | 0;
 $201 = $8 + 8 | 0;
 $202 = $200 + 4 | 0;
 $203 = $8 + 24 | 0;
 $204 = $8 + 40 | 0;
 $205 = $8 + 44 | 0;
 $206 = $8 + 48 | 0;
 $207 = $8 + 64 | 0;
 $208 = $8 + 32 | 0;
 $209 = $8 + 52 | 0;
 $210 = $8 + 56 | 0;
 $211 = $8 + 57 | 0;
 $212 = $9 + 15 | 0;
 $213 = $9 + 14 | 0;
 $214 = $9 + 13 | 0;
 $215 = $9 + 12 | 0;
 $216 = $9 + 8 | 0;
 $217 = $215 + 4 | 0;
 $218 = $9 + 24 | 0;
 $219 = $9 + 40 | 0;
 $220 = $9 + 44 | 0;
 $221 = $9 + 48 | 0;
 $222 = $9 + 64 | 0;
 $223 = $9 + 32 | 0;
 $224 = $9 + 52 | 0;
 $225 = $9 + 56 | 0;
 $226 = $9 + 57 | 0;
 $232 = +(HEAP32[$116 >> 2] | 0) * 1.0e6 + +(HEAP32[$120 >> 2] | 0);
 $233 = $4 + 4 | 0;
 do {
  HEAP8[$155 >> 0] = 0;
  HEAP32[$154 >> 2] = 2;
  HEAP8[$150 >> 0] = 0;
  HEAP8[$153 >> 0] = 1;
  HEAP8[$152 >> 0] = 1;
  HEAP8[$151 >> 0] = 0;
  HEAP32[$8 >> 2] = 5136;
  $234 = __Znwj(128) | 0;
  __ZN6RepHFMC2ERKS_($234, HEAP32[$157 >> 2] | 0);
  HEAP32[$156 >> 2] = $234;
  $236 = HEAP32[$159 >> 2] | 0;
  if (!$236) $240 = 0; else {
   $238 = __Znwj(4) | 0;
   HEAP32[$238 >> 2] = HEAP32[$236 >> 2];
   $240 = $238;
  }
  HEAP32[$158 >> 2] = $240;
  HEAP8[$165 >> 0] = 0;
  HEAP32[$164 >> 2] = 2;
  HEAP8[$160 >> 0] = 0;
  HEAP8[$163 >> 0] = 1;
  HEAP8[$162 >> 0] = 1;
  HEAP8[$161 >> 0] = 0;
  HEAP32[$9 >> 2] = 4920;
  HEAPF64[$166 >> 3] = +HEAPF64[$167 >> 3];
  HEAPF64[$168 >> 3] = +HEAPF64[$169 >> 3];
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($170, $171);
  HEAP32[$172 >> 2] = HEAP32[$173 >> 2];
  HEAP8[$174 >> 0] = HEAP8[$175 >> 0] | 0;
  HEAP8[$176 >> 0] = HEAP8[$177 >> 0] | 0;
  HEAPF64[$178 >> 3] = +HEAPF64[$179 >> 3];
  HEAP32[$180 >> 2] = HEAP32[$114 >> 2];
  HEAP32[$180 + 4 >> 2] = HEAP32[$114 + 4 >> 2];
  HEAP32[$180 + 8 >> 2] = HEAP32[$114 + 8 >> 2];
  HEAP8[$180 + 12 >> 0] = HEAP8[$114 + 12 >> 0] | 0;
  HEAP32[$10 >> 2] = 3836;
  HEAP32[$181 >> 2] = HEAP32[$17 >> 2];
  HEAP32[$181 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
  HEAP32[$181 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
  HEAP32[$181 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
  _gettimeofday($4 | 0, $5 | 0) | 0;
  HEAPF64[$181 >> 3] = +HEAPF64[$181 >> 3] - (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$182 >> 2] | 0) - $123) * 1.0e-06;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 15]($0, $8, $9, $10, $100);
  HEAP32[$183 >> 2] = HEAP32[$114 >> 2];
  HEAP32[$183 + 4 >> 2] = HEAP32[$114 + 4 >> 2];
  HEAP32[$183 + 8 >> 2] = HEAP32[$114 + 8 >> 2];
  HEAP8[$183 + 12 >> 0] = HEAP8[$114 + 12 >> 0] | 0;
  HEAP32[$11 >> 2] = 3836;
  HEAP32[$184 >> 2] = HEAP32[$17 >> 2];
  HEAP32[$184 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
  HEAP32[$184 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
  HEAP32[$184 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
  _gettimeofday($4 | 0, $5 | 0) | 0;
  HEAPF64[$184 >> 3] = +HEAPF64[$184 >> 3] - (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$185 >> 2] | 0) - $123) * 1.0e-06;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] & 31]($0, $8, $9, $11);
  $273 = HEAP32[$186 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$273 >> 2] | 0) + 76 >> 2] & 31]($4, $273, HEAP32[$157 >> 2] | 0, HEAP32[$159 >> 2] | 0);
  HEAPF64[$167 >> 3] = +HEAPF64[$187 >> 3];
  HEAPF64[$169 >> 3] = +HEAPF64[$188 >> 3];
  HEAP8[$175 >> 0] = HEAP8[$189 >> 0] | 0;
  HEAP8[$177 >> 0] = HEAP8[$190 >> 0] | 0;
  HEAPF64[$179 >> 3] = +HEAPF64[$191 >> 3];
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($171, HEAP32[$192 >> 2] | 0, HEAP32[$193 >> 2] | 0);
  HEAP32[$173 >> 2] = HEAP32[$194 >> 2];
  HEAP32[$4 >> 2] = 4920;
  $287 = HEAP32[$192 >> 2] | 0;
  if ($287 | 0) {
   $289 = HEAP32[$193 >> 2] | 0;
   if (($289 | 0) != ($287 | 0)) HEAP32[$193 >> 2] = $289 + (~(($289 + -16 - $287 | 0) >>> 4) << 4);
   __ZdlPv($287);
  }
  if (FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] & 31]($0, $9, $$053, $100) | 0) {
   HEAPF64[$167 >> 3] = +HEAPF64[$166 >> 3];
   HEAPF64[$169 >> 3] = +HEAPF64[$168 >> 3];
   HEAP8[$175 >> 0] = HEAP8[$174 >> 0] | 0;
   HEAP8[$177 >> 0] = HEAP8[$176 >> 0] | 0;
   HEAPF64[$179 >> 3] = +HEAPF64[$178 >> 3];
   __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($171, HEAP32[$195 >> 2] | 0, HEAP32[$196 >> 2] | 0);
   HEAP32[$173 >> 2] = HEAP32[$172 >> 2];
   __ZN8optframe8SolutionI6RepHFMiEaSERKS2_($$0, $8) | 0;
  }
  HEAP32[$9 >> 2] = 4920;
  $308 = HEAP32[$195 >> 2] | 0;
  if ($308 | 0) {
   $310 = HEAP32[$196 >> 2] | 0;
   if (($310 | 0) != ($308 | 0)) HEAP32[$196 >> 2] = $310 + (~(($310 + -16 - $308 | 0) >>> 4) << 4);
   __ZdlPv($308);
  }
  HEAP32[$8 >> 2] = 5136;
  $317 = HEAP32[$156 >> 2] | 0;
  if ($317 | 0) {
   __ZN6RepHFMD2Ev($317);
   __ZdlPv($317);
  }
  $319 = HEAP32[$158 >> 2] | 0;
  if ($319 | 0) __ZdlPv($319);
  $321 = HEAP32[$186 >> 2] | 0;
  $324 = HEAP32[(HEAP32[$321 >> 2] | 0) + 40 >> 2] | 0;
  HEAP8[$202 >> 0] = 0;
  HEAP32[$201 >> 2] = 2;
  HEAP8[$197 >> 0] = 0;
  HEAP8[$200 >> 0] = 1;
  HEAP8[$199 >> 0] = 1;
  HEAP8[$198 >> 0] = 0;
  HEAP32[$8 >> 2] = 4920;
  HEAPF64[$203 >> 3] = +HEAPF64[$13 >> 3];
  HEAP32[$204 >> 2] = 0;
  HEAP32[$205 >> 2] = 0;
  HEAP32[$206 >> 2] = 0;
  HEAPF64[$207 >> 3] = 1.0;
  HEAPF64[$208 >> 3] = 0.0;
  HEAP32[$209 >> 2] = 2;
  HEAP8[$210 >> 0] = 0;
  HEAP8[$211 >> 0] = 0;
  $330 = +HEAPF64[$167 >> 3] + +HEAPF64[$179 >> 3] * +HEAPF64[$169 >> 3];
  HEAP8[$217 >> 0] = 0;
  HEAP32[$216 >> 2] = 2;
  HEAP8[$212 >> 0] = 0;
  HEAP8[$215 >> 0] = 1;
  HEAP8[$214 >> 0] = 1;
  HEAP8[$213 >> 0] = 0;
  HEAP32[$9 >> 2] = 4920;
  HEAPF64[$218 >> 3] = $330;
  HEAP32[$219 >> 2] = 0;
  HEAP32[$220 >> 2] = 0;
  HEAP32[$221 >> 2] = 0;
  HEAPF64[$222 >> 3] = 1.0;
  HEAPF64[$223 >> 3] = 0.0;
  HEAP32[$224 >> 2] = 2;
  HEAP8[$225 >> 0] = 0;
  HEAP8[$226 >> 0] = 0;
  if (!(FUNCTION_TABLE_iiii[$324 & 63]($321, $8, $9) | 0)) {
   label = 48;
   break;
  }
  if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 63]($0, $100) | 0) {
   label = 39;
   break;
  }
  _gettimeofday($4 | 0, $5 | 0) | 0;
  $345 = (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$233 >> 2] | 0) - $232) * 1.0e-06 < +HEAPF64[$17 >> 3];
  HEAP32[$9 >> 2] = 4920;
  $346 = HEAP32[$219 >> 2] | 0;
  if ($346 | 0) {
   $348 = HEAP32[$220 >> 2] | 0;
   if (($348 | 0) != ($346 | 0)) HEAP32[$220 >> 2] = $348 + (~(($348 + -16 - $346 | 0) >>> 4) << 4);
   __ZdlPv($346);
  }
  HEAP32[$8 >> 2] = 4920;
  $355 = HEAP32[$204 >> 2] | 0;
  if ($355 | 0) {
   $357 = HEAP32[$205 >> 2] | 0;
   if (($357 | 0) != ($355 | 0)) HEAP32[$205 >> 2] = $357 + (~(($357 + -16 - $355 | 0) >>> 4) << 4);
   __ZdlPv($355);
  }
 } while ($345);
 if ((label | 0) == 39) {
  HEAP32[$9 >> 2] = 4920;
  $364 = HEAP32[$219 >> 2] | 0;
  if ($364 | 0) {
   $366 = HEAP32[$220 >> 2] | 0;
   if (($366 | 0) != ($364 | 0)) HEAP32[$220 >> 2] = $366 + (~(($366 + -16 - $364 | 0) >>> 4) << 4);
   __ZdlPv($364);
  }
  HEAP32[$8 >> 2] = 4920;
  $373 = HEAP32[$204 >> 2] | 0;
  if ($373 | 0) {
   $375 = HEAP32[$205 >> 2] | 0;
   if (($375 | 0) != ($373 | 0)) HEAP32[$205 >> 2] = $375 + (~(($375 + -16 - $373 | 0) >>> 4) << 4);
   __ZdlPv($373);
  }
 } else if ((label | 0) == 48) {
  HEAP32[$9 >> 2] = 4920;
  $382 = HEAP32[$219 >> 2] | 0;
  if ($382 | 0) {
   $384 = HEAP32[$220 >> 2] | 0;
   if (($384 | 0) != ($382 | 0)) HEAP32[$220 >> 2] = $384 + (~(($384 + -16 - $382 | 0) >>> 4) << 4);
   __ZdlPv($382);
  }
  HEAP32[$8 >> 2] = 4920;
  $391 = HEAP32[$204 >> 2] | 0;
  if ($391 | 0) {
   $393 = HEAP32[$205 >> 2] | 0;
   if (($393 | 0) != ($391 | 0)) HEAP32[$205 >> 2] = $393 + (~(($393 + -16 - $391 | 0) >>> 4) << 4);
   __ZdlPv($391);
  }
 }
 $400 = HEAP32[$186 >> 2] | 0;
 $403 = HEAP32[(HEAP32[$400 >> 2] | 0) + 40 >> 2] | 0;
 $408 = +HEAPF64[$167 >> 3] + +HEAPF64[$179 >> 3] * +HEAPF64[$169 >> 3];
 $412 = $4 + 12 | 0;
 HEAP8[$412 + 4 >> 0] = 0;
 HEAP32[$4 + 8 >> 2] = 2;
 HEAP8[$4 + 15 >> 0] = 0;
 HEAP8[$412 >> 0] = 1;
 HEAP8[$4 + 13 >> 0] = 1;
 HEAP8[$4 + 14 >> 0] = 0;
 HEAP32[$4 >> 2] = 4920;
 HEAPF64[$4 + 24 >> 3] = $408;
 $416 = $4 + 40 | 0;
 HEAP32[$416 >> 2] = 0;
 $417 = $4 + 44 | 0;
 HEAP32[$417 >> 2] = 0;
 HEAP32[$4 + 48 >> 2] = 0;
 HEAPF64[$4 + 64 >> 3] = 1.0;
 HEAPF64[$4 + 32 >> 3] = 0.0;
 HEAP32[$4 + 52 >> 2] = 2;
 HEAP8[$4 + 56 >> 0] = 0;
 HEAP8[$4 + 57 >> 0] = 0;
 $427 = $5 + 12 | 0;
 HEAP8[$427 + 4 >> 0] = 0;
 HEAP32[$5 + 8 >> 2] = 2;
 HEAP8[$5 + 15 >> 0] = 0;
 HEAP8[$427 >> 0] = 1;
 HEAP8[$5 + 13 >> 0] = 1;
 HEAP8[$5 + 14 >> 0] = 0;
 HEAP32[$5 >> 2] = 4920;
 HEAPF64[$5 + 24 >> 3] = +HEAPF64[$13 >> 3];
 $432 = $5 + 40 | 0;
 HEAP32[$432 >> 2] = 0;
 $433 = $5 + 44 | 0;
 HEAP32[$433 >> 2] = 0;
 HEAP32[$5 + 48 >> 2] = 0;
 HEAPF64[$5 + 64 >> 3] = 1.0;
 HEAPF64[$5 + 32 >> 3] = 0.0;
 HEAP32[$5 + 52 >> 2] = 2;
 HEAP8[$5 + 56 >> 0] = 0;
 HEAP8[$5 + 57 >> 0] = 0;
 $440 = FUNCTION_TABLE_iiii[$403 & 63]($400, $4, $5) | 0;
 HEAP32[$5 >> 2] = 4920;
 $441 = HEAP32[$432 >> 2] | 0;
 if ($441 | 0) {
  $443 = HEAP32[$433 >> 2] | 0;
  if (($443 | 0) != ($441 | 0)) HEAP32[$433 >> 2] = $443 + (~(($443 + -16 - $441 | 0) >>> 4) << 4);
  __ZdlPv($441);
 }
 HEAP32[$4 >> 2] = 4920;
 $450 = HEAP32[$416 >> 2] | 0;
 if ($450 | 0) {
  $452 = HEAP32[$417 >> 2] | 0;
  if (($452 | 0) != ($450 | 0)) HEAP32[$417 >> 2] = $452 + (~(($452 + -16 - $450 | 0) >>> 4) << 4);
  __ZdlPv($450);
 }
 if ($440) {
  $459 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18267, 22) | 0;
  $466 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($459, +HEAPF64[$167 >> 3] + +HEAPF64[$179 >> 3] * +HEAPF64[$169 >> 3]) | 0, 18290, 13) | 0;
  $468 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($466, +HEAPF64[$13 >> 3]) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $468 + (HEAP32[(HEAP32[$468 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $473 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $477 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$473 >> 2] | 0) + 28 >> 2] & 63]($473, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($468, $477) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($468) | 0;
 }
 $478 = __Znwj(104) | 0;
 HEAP8[$478 + 16 >> 0] = 0;
 HEAP32[$478 + 8 >> 2] = 2;
 HEAP8[$478 + 15 >> 0] = 0;
 HEAP8[$478 + 12 >> 0] = 1;
 HEAP8[$478 + 13 >> 0] = 1;
 HEAP8[$478 + 14 >> 0] = 0;
 HEAP32[$478 >> 2] = 5136;
 HEAP32[$478 + 20 >> 2] = HEAP32[$157 >> 2];
 HEAP32[$478 + 24 >> 2] = HEAP32[$159 >> 2];
 HEAP32[$157 >> 2] = 0;
 HEAP32[$159 >> 2] = 0;
 HEAP8[$478 + 48 >> 0] = 0;
 HEAP32[$478 + 40 >> 2] = 2;
 HEAP8[$478 + 47 >> 0] = 0;
 HEAP8[$478 + 44 >> 0] = 1;
 HEAP8[$478 + 45 >> 0] = 1;
 HEAP8[$478 + 46 >> 0] = 0;
 HEAP32[$478 + 32 >> 2] = 4920;
 HEAPF64[$478 + 56 >> 3] = +HEAPF64[$167 >> 3];
 HEAPF64[$478 + 64 >> 3] = +HEAPF64[$169 >> 3];
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($478 + 72 | 0, $171);
 HEAP32[$478 + 84 >> 2] = HEAP32[$173 >> 2];
 HEAP8[$478 + 88 >> 0] = HEAP8[$175 >> 0] | 0;
 HEAP8[$478 + 89 >> 0] = HEAP8[$177 >> 0] | 0;
 HEAPF64[$478 + 96 >> 3] = +HEAPF64[$179 >> 3];
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$053 >> 2] | 0) + 4 >> 2] & 511]($$053);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$0 >> 2] | 0) + 4 >> 2] & 511]($$0);
 __ZdlPv($100);
 HEAP32[$6 >> 2] = 5092;
 if (!(HEAP8[$36 >> 0] | 0)) {
  STACKTOP = sp;
  return $478 | 0;
 }
 _gettimeofday($4 | 0, $5 | 0) | 0;
 HEAPF64[$vararg_buffer >> 3] = (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$4 + 4 >> 2] | 0) - $232) * 1.0e-06;
 _printf(17801, $vararg_buffer) | 0;
 STACKTOP = sp;
 return $478 | 0;
}

function _decfloat($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0329 = 0, $$0332490 = 0, $$0333 = 0, $$0334 = 0, $$0336486 = 0, $$0340496 = 0, $$0341$lcssa = 0, $$0341463 = 0, $$0341464 = 0, $$0341465 = 0, $$0341513 = 0, $$0345$lcssa = 0, $$0345467 = 0, $$0345468 = 0, $$0345469 = 0, $$0345512 = 0, $$0350$lcssa554 = 0, $$0350494 = 0, $$0360 = 0.0, $$0361 = 0.0, $$0365484 = 0.0, $$0372 = 0, $$0380 = 0, $$0380$ph = 0, $$0385$lcssa553 = 0, $$0385493 = 0, $$0393 = 0, $$0396 = 0, $$0401$lcssa = 0, $$0401473 = 0, $$0401474 = 0, $$0401475 = 0, $$0401509 = 0, $$1 = 0.0, $$10 = 0, $$1330$be = 0, $$1330$ph = 0, $$1335 = 0, $$1337 = 0, $$1362 = 0.0, $$1366 = 0.0, $$1373 = 0, $$1373$ph448 = 0, $$1381 = 0, $$1381$ph = 0, $$1381$ph558 = 0, $$1394$lcssa = 0, $$1394511 = 0, $$2 = 0, $$2343 = 0, $$2347 = 0, $$2352$ph449 = 0, $$2367 = 0.0, $$2374 = 0, $$2387$ph447 = 0, $$2395 = 0, $$2398 = 0, $$2403 = 0, $$3$be = 0, $$3$lcssa = 0, $$3344503 = 0, $$3348 = 0, $$3364 = 0.0, $$3368 = 0.0, $$3383 = 0, $$3399$lcssa = 0, $$3399510 = 0, $$3514 = 0, $$425 = 0, $$4349495 = 0, $$4354 = 0, $$4354$ph = 0, $$4354$ph559 = 0, $$4376 = 0, $$4384 = 0, $$4389$ph = 0, $$4389$ph445 = 0, $$4400 = 0, $$4485 = 0, $$5 = 0, $$5$in = 0, $$5355488 = 0, $$5390487 = 0, $$6378$ph = 0, $$6489 = 0, $$9483 = 0, $$pre = 0, $$sink = 0, $$sink421$off0 = 0, $10 = 0, $100 = 0, $104 = 0, $106 = 0, $107 = 0, $109 = 0, $122 = 0, $124 = 0, $134 = 0, $136 = 0, $148 = 0, $150 = 0, $157 = 0, $17 = 0, $170 = 0, $182 = 0, $186 = 0, $189 = 0, $191 = 0, $192 = 0, $193 = 0, $196 = 0, $210 = 0, $211 = 0, $212 = 0, $216 = 0, $218 = 0, $220 = 0, $221 = 0, $227 = 0, $229 = 0, $234 = 0, $241 = 0, $244 = 0, $247 = 0, $25 = 0, $254 = 0, $257 = 0, $259 = 0, $26 = 0, $262 = 0, $265 = 0, $266 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $275 = 0, $28 = 0, $286 = 0, $29 = 0, $292 = 0, $297 = 0, $300 = 0, $309 = 0.0, $310 = 0.0, $311 = 0, $312 = 0, $313 = 0, $318 = 0.0, $321 = 0.0, $325 = 0, $328 = 0, $352 = 0.0, $357 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $39 = 0, $41 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $54 = 0, $55 = 0, $59 = 0, $6 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $or$cond420 = 0, $or$cond426 = 0, $sum = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $6 = sp;
 $sum = $3 + $2 | 0;
 $7 = 0 - $sum | 0;
 $8 = $0 + 4 | 0;
 $9 = $0 + 100 | 0;
 $$0329 = $1;
 $$0396 = 0;
 L1 : while (1) {
  switch ($$0329 | 0) {
  case 46:
   {
    label = 6;
    break L1;
    break;
   }
  case 48:
   break;
  default:
   {
    $$0393 = 0;
    $$2 = $$0329;
    $$2398 = $$0396;
    $366 = 0;
    $367 = 0;
    break L1;
   }
  }
  $10 = HEAP32[$8 >> 2] | 0;
  if ($10 >>> 0 < (HEAP32[$9 >> 2] | 0) >>> 0) {
   HEAP32[$8 >> 2] = $10 + 1;
   $$0329 = HEAPU8[$10 >> 0] | 0;
   $$0396 = 1;
   continue;
  } else {
   $$0329 = ___shgetc($0) | 0;
   $$0396 = 1;
   continue;
  }
 }
 if ((label | 0) == 6) {
  $17 = HEAP32[$8 >> 2] | 0;
  if ($17 >>> 0 < (HEAP32[$9 >> 2] | 0) >>> 0) {
   HEAP32[$8 >> 2] = $17 + 1;
   $$1330$ph = HEAPU8[$17 >> 0] | 0;
  } else $$1330$ph = ___shgetc($0) | 0;
  if (($$1330$ph | 0) == 48) {
   $25 = 0;
   $26 = 0;
   while (1) {
    $27 = _i64Add($25 | 0, $26 | 0, -1, -1) | 0;
    $28 = tempRet0;
    $29 = HEAP32[$8 >> 2] | 0;
    if ($29 >>> 0 < (HEAP32[$9 >> 2] | 0) >>> 0) {
     HEAP32[$8 >> 2] = $29 + 1;
     $$1330$be = HEAPU8[$29 >> 0] | 0;
    } else $$1330$be = ___shgetc($0) | 0;
    if (($$1330$be | 0) == 48) {
     $25 = $27;
     $26 = $28;
    } else {
     $$0393 = 1;
     $$2 = $$1330$be;
     $$2398 = 1;
     $366 = $27;
     $367 = $28;
     break;
    }
   }
  } else {
   $$0393 = 1;
   $$2 = $$1330$ph;
   $$2398 = $$0396;
   $366 = 0;
   $367 = 0;
  }
 }
 HEAP32[$6 >> 2] = 0;
 $37 = $$2 + -48 | 0;
 $39 = ($$2 | 0) == 46;
 L20 : do if ($39 | $37 >>> 0 < 10) {
  $41 = $6 + 496 | 0;
  $$0341513 = 0;
  $$0345512 = 0;
  $$0401509 = 0;
  $$1394511 = $$0393;
  $$3399510 = $$2398;
  $$3514 = $$2;
  $368 = $39;
  $369 = $37;
  $370 = $366;
  $371 = $367;
  $44 = 0;
  $45 = 0;
  L22 : while (1) {
   do if ($368) if (!$$1394511) {
    $$2343 = $$0341513;
    $$2347 = $$0345512;
    $$2395 = 1;
    $$2403 = $$0401509;
    $$4400 = $$3399510;
    $372 = $44;
    $373 = $45;
    $374 = $44;
    $375 = $45;
   } else break L22; else {
    $46 = _i64Add($44 | 0, $45 | 0, 1, 0) | 0;
    $47 = tempRet0;
    $48 = ($$3514 | 0) != 48;
    if (($$0345512 | 0) >= 125) {
     if (!$48) {
      $$2343 = $$0341513;
      $$2347 = $$0345512;
      $$2395 = $$1394511;
      $$2403 = $$0401509;
      $$4400 = $$3399510;
      $372 = $370;
      $373 = $371;
      $374 = $46;
      $375 = $47;
      break;
     }
     HEAP32[$41 >> 2] = HEAP32[$41 >> 2] | 1;
     $$2343 = $$0341513;
     $$2347 = $$0345512;
     $$2395 = $$1394511;
     $$2403 = $$0401509;
     $$4400 = $$3399510;
     $372 = $370;
     $373 = $371;
     $374 = $46;
     $375 = $47;
     break;
    }
    $$pre = $6 + ($$0345512 << 2) | 0;
    if (!$$0341513) $$sink = $369; else $$sink = $$3514 + -48 + ((HEAP32[$$pre >> 2] | 0) * 10 | 0) | 0;
    HEAP32[$$pre >> 2] = $$sink;
    $54 = $$0341513 + 1 | 0;
    $55 = ($54 | 0) == 9;
    $$2343 = $55 ? 0 : $54;
    $$2347 = ($55 & 1) + $$0345512 | 0;
    $$2395 = $$1394511;
    $$2403 = $48 ? $46 : $$0401509;
    $$4400 = 1;
    $372 = $370;
    $373 = $371;
    $374 = $46;
    $375 = $47;
   } while (0);
   $59 = HEAP32[$8 >> 2] | 0;
   if ($59 >>> 0 < (HEAP32[$9 >> 2] | 0) >>> 0) {
    HEAP32[$8 >> 2] = $59 + 1;
    $$3$be = HEAPU8[$59 >> 0] | 0;
   } else $$3$be = ___shgetc($0) | 0;
   $369 = $$3$be + -48 | 0;
   $368 = ($$3$be | 0) == 46;
   if (!($368 | $369 >>> 0 < 10)) {
    $$0341$lcssa = $$2343;
    $$0345$lcssa = $$2347;
    $$0401$lcssa = $$2403;
    $$1394$lcssa = $$2395;
    $$3$lcssa = $$3$be;
    $$3399$lcssa = $$4400;
    $71 = $372;
    $72 = $374;
    $74 = $373;
    $75 = $375;
    label = 29;
    break L20;
   } else {
    $$0341513 = $$2343;
    $$0345512 = $$2347;
    $$0401509 = $$2403;
    $$1394511 = $$2395;
    $$3399510 = $$4400;
    $$3514 = $$3$be;
    $370 = $372;
    $371 = $373;
    $44 = $374;
    $45 = $375;
   }
  }
  $$0341465 = $$0341513;
  $$0345469 = $$0345512;
  $$0401475 = $$0401509;
  $376 = $44;
  $377 = $45;
  $378 = $370;
  $379 = $371;
  $380 = ($$3399510 | 0) != 0;
  label = 37;
 } else {
  $$0341$lcssa = 0;
  $$0345$lcssa = 0;
  $$0401$lcssa = 0;
  $$1394$lcssa = $$0393;
  $$3$lcssa = $$2;
  $$3399$lcssa = $$2398;
  $71 = $366;
  $72 = 0;
  $74 = $367;
  $75 = 0;
  label = 29;
 } while (0);
 do if ((label | 0) == 29) {
  $70 = ($$1394$lcssa | 0) == 0;
  $73 = $70 ? $72 : $71;
  $76 = $70 ? $75 : $74;
  $77 = ($$3399$lcssa | 0) != 0;
  if (!($77 & ($$3$lcssa | 32 | 0) == 101)) if (($$3$lcssa | 0) > -1) {
   $$0341465 = $$0341$lcssa;
   $$0345469 = $$0345$lcssa;
   $$0401475 = $$0401$lcssa;
   $376 = $72;
   $377 = $75;
   $378 = $73;
   $379 = $76;
   $380 = $77;
   label = 37;
   break;
  } else {
   $$0341464 = $$0341$lcssa;
   $$0345468 = $$0345$lcssa;
   $$0401474 = $$0401$lcssa;
   $381 = $72;
   $382 = $75;
   $383 = $77;
   $384 = $73;
   $385 = $76;
   label = 39;
   break;
  }
  $80 = _scanexp($0, $5) | 0;
  $81 = tempRet0;
  if (($80 | 0) == 0 & ($81 | 0) == -2147483648) {
   if (!$5) {
    ___shlim($0, 0);
    $$1 = 0.0;
    break;
   }
   if (!(HEAP32[$9 >> 2] | 0)) {
    $90 = 0;
    $91 = 0;
   } else {
    HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + -1;
    $90 = 0;
    $91 = 0;
   }
  } else {
   $90 = $80;
   $91 = $81;
  }
  $92 = _i64Add($90 | 0, $91 | 0, $73 | 0, $76 | 0) | 0;
  $$0341463 = $$0341$lcssa;
  $$0345467 = $$0345$lcssa;
  $$0401473 = $$0401$lcssa;
  $104 = $92;
  $106 = $72;
  $107 = tempRet0;
  $109 = $75;
  label = 41;
 } while (0);
 if ((label | 0) == 37) if (!(HEAP32[$9 >> 2] | 0)) {
  $$0341464 = $$0341465;
  $$0345468 = $$0345469;
  $$0401474 = $$0401475;
  $381 = $376;
  $382 = $377;
  $383 = $380;
  $384 = $378;
  $385 = $379;
  label = 39;
 } else {
  HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + -1;
  if ($380) {
   $$0341463 = $$0341465;
   $$0345467 = $$0345469;
   $$0401473 = $$0401475;
   $104 = $378;
   $106 = $376;
   $107 = $379;
   $109 = $377;
   label = 41;
  } else label = 40;
 }
 if ((label | 0) == 39) if ($383) {
  $$0341463 = $$0341464;
  $$0345467 = $$0345468;
  $$0401473 = $$0401474;
  $104 = $384;
  $106 = $381;
  $107 = $385;
  $109 = $382;
  label = 41;
 } else label = 40;
 do if ((label | 0) == 40) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  ___shlim($0, 0);
  $$1 = 0.0;
 } else if ((label | 0) == 41) {
  $100 = HEAP32[$6 >> 2] | 0;
  if (!$100) {
   $$1 = +($4 | 0) * 0.0;
   break;
  }
  if ((($109 | 0) < 0 | ($109 | 0) == 0 & $106 >>> 0 < 10) & (($104 | 0) == ($106 | 0) & ($107 | 0) == ($109 | 0))) if (($2 | 0) > 30 | ($100 >>> $2 | 0) == 0) {
   $$1 = +($4 | 0) * +($100 >>> 0);
   break;
  }
  $122 = ($3 | 0) / -2 | 0;
  $124 = (($122 | 0) < 0) << 31 >> 31;
  if (($107 | 0) > ($124 | 0) | ($107 | 0) == ($124 | 0) & $104 >>> 0 > $122 >>> 0) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $$1 = +($4 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  $134 = $3 + -106 | 0;
  $136 = (($134 | 0) < 0) << 31 >> 31;
  if (($107 | 0) < ($136 | 0) | ($107 | 0) == ($136 | 0) & $104 >>> 0 < $134 >>> 0) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $$1 = +($4 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if (!$$0341463) $$3348 = $$0345467; else {
   if (($$0341463 | 0) < 9) {
    $148 = $6 + ($$0345467 << 2) | 0;
    $$3344503 = $$0341463;
    $150 = HEAP32[$148 >> 2] | 0;
    do {
     $150 = $150 * 10 | 0;
     $$3344503 = $$3344503 + 1 | 0;
    } while (($$3344503 | 0) != 9);
    HEAP32[$148 >> 2] = $150;
   }
   $$3348 = $$0345467 + 1 | 0;
  }
  if (($$0401473 | 0) < 9) if (($$0401473 | 0) <= ($104 | 0) & ($104 | 0) < 18) {
   $157 = HEAP32[$6 >> 2] | 0;
   if (($104 | 0) == 9) {
    $$1 = +($4 | 0) * +($157 >>> 0);
    break;
   }
   if (($104 | 0) < 9) {
    $$1 = +($4 | 0) * +($157 >>> 0) / +(HEAP32[7500 + (8 - $104 << 2) >> 2] | 0);
    break;
   }
   $170 = $2 + 27 + (Math_imul($104, -3) | 0) | 0;
   if (($170 | 0) > 30 | ($157 >>> $170 | 0) == 0) {
    $$1 = +($4 | 0) * +($157 >>> 0) * +(HEAP32[7500 + ($104 + -10 << 2) >> 2] | 0);
    break;
   }
  }
  $182 = ($104 | 0) % 9 | 0;
  if (!$182) {
   $$0380$ph = 0;
   $$1373$ph448 = $$3348;
   $$2352$ph449 = 0;
   $$2387$ph447 = $104;
  } else {
   $186 = ($104 | 0) > -1 ? $182 : $182 + 9 | 0;
   $189 = HEAP32[7500 + (8 - $186 << 2) >> 2] | 0;
   if (!$$3348) {
    $$0350$lcssa554 = 0;
    $$0372 = 0;
    $$0385$lcssa553 = $104;
   } else {
    $191 = 1e9 / ($189 | 0) | 0;
    $$0340496 = 0;
    $$0350494 = 0;
    $$0385493 = $104;
    $$4349495 = 0;
    do {
     $192 = $6 + ($$4349495 << 2) | 0;
     $193 = HEAP32[$192 >> 2] | 0;
     $196 = (($193 >>> 0) / ($189 >>> 0) | 0) + $$0340496 | 0;
     HEAP32[$192 >> 2] = $196;
     $$0340496 = Math_imul($191, ($193 >>> 0) % ($189 >>> 0) | 0) | 0;
     $or$cond420 = ($$4349495 | 0) == ($$0350494 | 0) & ($196 | 0) == 0;
     $$0385493 = $or$cond420 ? $$0385493 + -9 | 0 : $$0385493;
     $$0350494 = $or$cond420 ? $$0350494 + 1 & 127 : $$0350494;
     $$4349495 = $$4349495 + 1 | 0;
    } while (($$4349495 | 0) != ($$3348 | 0));
    if (!$$0340496) {
     $$0350$lcssa554 = $$0350494;
     $$0372 = $$3348;
     $$0385$lcssa553 = $$0385493;
    } else {
     HEAP32[$6 + ($$3348 << 2) >> 2] = $$0340496;
     $$0350$lcssa554 = $$0350494;
     $$0372 = $$3348 + 1 | 0;
     $$0385$lcssa553 = $$0385493;
    }
   }
   $$0380$ph = 0;
   $$1373$ph448 = $$0372;
   $$2352$ph449 = $$0350$lcssa554;
   $$2387$ph447 = 9 - $186 + $$0385$lcssa553 | 0;
  }
  L101 : while (1) {
   $210 = ($$2387$ph447 | 0) < 18;
   $211 = ($$2387$ph447 | 0) == 18;
   $212 = $6 + ($$2352$ph449 << 2) | 0;
   $$0380 = $$0380$ph;
   $$1373 = $$1373$ph448;
   while (1) {
    if (!$210) {
     if (!$211) {
      $$1381$ph = $$0380;
      $$4354$ph = $$2352$ph449;
      $$4389$ph445 = $$2387$ph447;
      $$6378$ph = $$1373;
      break L101;
     }
     if ((HEAP32[$212 >> 2] | 0) >>> 0 >= 9007199) {
      $$1381$ph = $$0380;
      $$4354$ph = $$2352$ph449;
      $$4389$ph445 = 18;
      $$6378$ph = $$1373;
      break L101;
     }
    }
    $$0334 = 0;
    $$2374 = $$1373;
    $$5$in = $$1373 + 127 | 0;
    while (1) {
     $$5 = $$5$in & 127;
     $216 = $6 + ($$5 << 2) | 0;
     $218 = _bitshift64Shl(HEAP32[$216 >> 2] | 0, 0, 29) | 0;
     $220 = _i64Add($218 | 0, tempRet0 | 0, $$0334 | 0, 0) | 0;
     $221 = tempRet0;
     if ($221 >>> 0 > 0 | ($221 | 0) == 0 & $220 >>> 0 > 1e9) {
      $227 = ___udivdi3($220 | 0, $221 | 0, 1e9, 0) | 0;
      $229 = ___uremdi3($220 | 0, $221 | 0, 1e9, 0) | 0;
      $$1335 = $227;
      $$sink421$off0 = $229;
     } else {
      $$1335 = 0;
      $$sink421$off0 = $220;
     }
     HEAP32[$216 >> 2] = $$sink421$off0;
     $234 = ($$5 | 0) == ($$2352$ph449 | 0);
     $$2374 = ($$sink421$off0 | 0) == 0 & ((($$5 | 0) != ($$2374 + 127 & 127 | 0) | $234) ^ 1) ? $$5 : $$2374;
     if ($234) break; else {
      $$0334 = $$1335;
      $$5$in = $$5 + -1 | 0;
     }
    }
    $$0380 = $$0380 + -29 | 0;
    if ($$1335 | 0) break; else $$1373 = $$2374;
   }
   $241 = $$2352$ph449 + 127 & 127;
   $244 = $$2374 + 127 & 127;
   $247 = $6 + (($$2374 + 126 & 127) << 2) | 0;
   if (($241 | 0) == ($$2374 | 0)) {
    HEAP32[$247 >> 2] = HEAP32[$247 >> 2] | HEAP32[$6 + ($244 << 2) >> 2];
    $$4376 = $244;
   } else $$4376 = $$2374;
   HEAP32[$6 + ($241 << 2) >> 2] = $$1335;
   $$0380$ph = $$0380;
   $$1373$ph448 = $$4376;
   $$2352$ph449 = $241;
   $$2387$ph447 = $$2387$ph447 + 9 | 0;
  }
  L119 : while (1) {
   $286 = $$6378$ph + 1 & 127;
   $292 = $6 + (($$6378$ph + 127 & 127) << 2) | 0;
   $$1381$ph558 = $$1381$ph;
   $$4354$ph559 = $$4354$ph;
   $$4389$ph = $$4389$ph445;
   while (1) {
    $265 = ($$4389$ph | 0) == 18;
    $$425 = ($$4389$ph | 0) > 27 ? 9 : 1;
    $$1381 = $$1381$ph558;
    $$4354 = $$4354$ph559;
    while (1) {
     $$0336486 = 0;
     while (1) {
      $254 = $$0336486 + $$4354 & 127;
      if (($254 | 0) == ($$6378$ph | 0)) {
       $$1337 = 2;
       label = 88;
       break;
      }
      $257 = HEAP32[$6 + ($254 << 2) >> 2] | 0;
      $259 = HEAP32[7532 + ($$0336486 << 2) >> 2] | 0;
      if ($257 >>> 0 < $259 >>> 0) {
       $$1337 = 2;
       label = 88;
       break;
      }
      if ($257 >>> 0 > $259 >>> 0) break;
      $262 = $$0336486 + 1 | 0;
      if (($262 | 0) < 2) $$0336486 = $262; else {
       $$1337 = $262;
       label = 88;
       break;
      }
     }
     if ((label | 0) == 88) {
      label = 0;
      if ($265 & ($$1337 | 0) == 2) {
       $$0365484 = 0.0;
       $$4485 = 0;
       $$9483 = $$6378$ph;
       break L119;
      }
     }
     $266 = $$425 + $$1381 | 0;
     if (($$4354 | 0) == ($$6378$ph | 0)) {
      $$1381 = $266;
      $$4354 = $$6378$ph;
     } else break;
    }
    $269 = (1 << $$425) + -1 | 0;
    $270 = 1e9 >>> $$425;
    $$0332490 = 0;
    $$5355488 = $$4354;
    $$5390487 = $$4389$ph;
    $$6489 = $$4354;
    do {
     $271 = $6 + ($$6489 << 2) | 0;
     $272 = HEAP32[$271 >> 2] | 0;
     $275 = ($272 >>> $$425) + $$0332490 | 0;
     HEAP32[$271 >> 2] = $275;
     $$0332490 = Math_imul($272 & $269, $270) | 0;
     $or$cond426 = ($$6489 | 0) == ($$5355488 | 0) & ($275 | 0) == 0;
     $$5390487 = $or$cond426 ? $$5390487 + -9 | 0 : $$5390487;
     $$5355488 = $or$cond426 ? $$5355488 + 1 & 127 : $$5355488;
     $$6489 = $$6489 + 1 & 127;
    } while (($$6489 | 0) != ($$6378$ph | 0));
    if (!$$0332490) {
     $$1381$ph558 = $266;
     $$4354$ph559 = $$5355488;
     $$4389$ph = $$5390487;
     continue;
    }
    if (($286 | 0) != ($$5355488 | 0)) break;
    HEAP32[$292 >> 2] = HEAP32[$292 >> 2] | 1;
    $$1381$ph558 = $266;
    $$4354$ph559 = $$5355488;
    $$4389$ph = $$5390487;
   }
   HEAP32[$6 + ($$6378$ph << 2) >> 2] = $$0332490;
   $$1381$ph = $266;
   $$4354$ph = $$5355488;
   $$4389$ph445 = $$5390487;
   $$6378$ph = $286;
  }
  while (1) {
   $297 = $$4485 + $$4354 & 127;
   $300 = $$9483 + 1 & 127;
   if (($297 | 0) == ($$9483 | 0)) {
    HEAP32[$6 + ($300 + -1 << 2) >> 2] = 0;
    $$10 = $300;
   } else $$10 = $$9483;
   $$0365484 = $$0365484 * 1.0e9 + +((HEAP32[$6 + ($297 << 2) >> 2] | 0) >>> 0);
   $$4485 = $$4485 + 1 | 0;
   if (($$4485 | 0) == 2) break; else $$9483 = $$10;
  }
  $309 = +($4 | 0);
  $310 = $309 * $$0365484;
  $311 = $$1381 + 53 | 0;
  $312 = $311 - $3 | 0;
  $313 = ($312 | 0) < ($2 | 0);
  $$0333 = $313 ? (($312 | 0) > 0 ? $312 : 0) : $2;
  if (($$0333 | 0) < 53) {
   $318 = +_copysignl(+_scalbn(1.0, 105 - $$0333 | 0), $310);
   $321 = +_fmodl($310, +_scalbn(1.0, 53 - $$0333 | 0));
   $$0360 = $318;
   $$0361 = $321;
   $$1366 = $318 + ($310 - $321);
  } else {
   $$0360 = 0.0;
   $$0361 = 0.0;
   $$1366 = $310;
  }
  $325 = $$4354 + 2 & 127;
  if (($325 | 0) == ($$10 | 0)) $$3364 = $$0361; else {
   $328 = HEAP32[$6 + ($325 << 2) >> 2] | 0;
   do if ($328 >>> 0 < 5e8) {
    if (!$328) if (($$4354 + 3 & 127 | 0) == ($$10 | 0)) {
     $$1362 = $$0361;
     break;
    }
    $$1362 = $309 * .25 + $$0361;
   } else {
    if (($328 | 0) != 5e8) {
     $$1362 = $309 * .75 + $$0361;
     break;
    }
    if (($$4354 + 3 & 127 | 0) == ($$10 | 0)) {
     $$1362 = $309 * .5 + $$0361;
     break;
    } else {
     $$1362 = $309 * .75 + $$0361;
     break;
    }
   } while (0);
   if ((53 - $$0333 | 0) > 1) if (+_fmodl($$1362, 1.0) != 0.0) $$3364 = $$1362; else $$3364 = $$1362 + 1.0; else $$3364 = $$1362;
  }
  $352 = $$1366 + $$3364 - $$0360;
  do if (($311 & 2147483647 | 0) > (-2 - $sum | 0)) {
   $357 = !(+Math_abs(+$352) >= 9007199254740992.0);
   $$3383 = (($357 ^ 1) & 1) + $$1381 | 0;
   $$2367 = $357 ? $352 : $352 * .5;
   if (($$3383 + 50 | 0) <= ($7 | 0)) if (!($$3364 != 0.0 & ($313 & (($$0333 | 0) != ($312 | 0) | $357)))) {
    $$3368 = $$2367;
    $$4384 = $$3383;
    break;
   }
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $$3368 = $$2367;
   $$4384 = $$3383;
  } else {
   $$3368 = $352;
   $$4384 = $$1381;
  } while (0);
  $$1 = +_scalbnl($$3368, $$4384);
 } while (0);
 STACKTOP = sp;
 return +$$1;
}

function _fmt_fp($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$$3484 = 0, $$$3484692 = 0, $$$4502 = 0, $$$559 = 0.0, $$0 = 0, $$0463$lcssa = 0, $$0463584 = 0, $$0464594 = 0, $$0471 = 0.0, $$0479 = 0, $$0487642 = 0, $$0488653 = 0, $$0488655 = 0, $$0496$$9 = 0, $$0497654 = 0, $$0498 = 0, $$0509582 = 0.0, $$0511 = 0, $$0514637 = 0, $$0520 = 0, $$0521 = 0, $$0521$ = 0, $$0523 = 0, $$0527629 = 0, $$0527631 = 0, $$0530636 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0, $$1482661 = 0, $$1489641 = 0, $$1499$lcssa = 0, $$1499660 = 0, $$1508583 = 0, $$1512$lcssa = 0, $$1512607 = 0, $$1515 = 0, $$1524 = 0, $$1528614 = 0, $$1531$lcssa = 0, $$1531630 = 0, $$1598 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2483$ph = 0, $$2500 = 0, $$2513 = 0, $$2516618 = 0, $$2529 = 0, $$2532617 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484648 = 0, $$3501$lcssa = 0, $$3501647 = 0, $$3533613 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478590 = 0, $$4492 = 0, $$4502 = 0, $$4518 = 0, $$5$lcssa = 0, $$539 = 0, $$539$ = 0, $$542 = 0.0, $$546 = 0, $$548 = 0, $$5486$lcssa = 0, $$5486623 = 0, $$5493597 = 0, $$5519$ph = 0, $$556 = 0, $$5602 = 0, $$6 = 0, $$6494589 = 0, $$7495601 = 0, $$7505 = 0, $$7505$ = 0, $$7505$ph = 0, $$8 = 0, $$9$ph = 0, $$lcssa673 = 0, $$pn = 0, $$pn566 = 0, $$pr = 0, $$pr564 = 0, $$pre$phi690Z2D = 0, $$sink545$lcssa = 0, $$sink545622 = 0, $$sink562 = 0, $10 = 0, $100 = 0, $104 = 0, $11 = 0, $111 = 0, $114 = 0, $121 = 0, $123 = 0, $126 = 0, $128 = 0, $129 = 0, $130 = 0, $136 = 0, $138 = 0, $142 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $152 = 0, $158 = 0, $159 = 0, $160 = 0, $172 = 0, $183 = 0, $187 = 0, $188 = 0, $191 = 0, $196 = 0, $197 = 0, $199 = 0, $207 = 0, $21 = 0, $210 = 0, $213 = 0, $214 = 0, $215 = 0, $218 = 0, $222 = 0, $227 = 0, $230 = 0, $233 = 0, $235 = 0, $237 = 0, $239 = 0, $244 = 0, $245 = 0, $248 = 0, $250 = 0, $253 = 0, $256 = 0, $264 = 0, $267 = 0, $272 = 0, $28 = 0, $281 = 0, $282 = 0, $286 = 0, $289 = 0, $291 = 0, $293 = 0, $297 = 0, $300 = 0, $301 = 0, $305 = 0, $315 = 0, $32 = 0, $320 = 0, $323 = 0, $324 = 0, $325 = 0, $327 = 0, $332 = 0, $344 = 0, $348 = 0, $353 = 0, $36 = 0.0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $366 = 0, $37 = 0, $370 = 0, $372 = 0, $375 = 0, $378 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $6 = 0, $61 = 0, $64 = 0, $67 = 0, $69 = 0, $7 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $86 = 0, $9 = 0, $99 = 0, $notrhs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 $8 = sp + 524 | 0;
 $9 = $8;
 $10 = sp + 512 | 0;
 HEAP32[$7 >> 2] = 0;
 $11 = $10 + 12 | 0;
 ___DOUBLE_BITS_63($1) | 0;
 if ((tempRet0 | 0) < 0) {
  $$0471 = -$1;
  $$0520 = 1;
  $$0521 = 23831;
 } else {
  $$0471 = $1;
  $$0520 = ($4 & 2049 | 0) != 0 & 1;
  $$0521 = ($4 & 2048 | 0) == 0 ? (($4 & 1 | 0) == 0 ? 23832 : 23837) : 23834;
 }
 ___DOUBLE_BITS_63($$0471) | 0;
 $21 = tempRet0 & 2146435072;
 do if ($21 >>> 0 < 2146435072 | ($21 | 0) == 2146435072 & 0 < 0) {
  $36 = +_frexpl($$0471, $7) * 2.0;
  $37 = $36 != 0.0;
  if ($37) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
  $40 = $5 | 32;
  if (($40 | 0) == 97) {
   $42 = $5 & 32;
   $$0521$ = ($42 | 0) == 0 ? $$0521 : $$0521 + 9 | 0;
   $45 = $$0520 | 2;
   $47 = 12 - $3 | 0;
   do if ($3 >>> 0 > 11 | ($47 | 0) == 0) $$1472 = $36; else {
    $$0509582 = 8.0;
    $$1508583 = $47;
    do {
     $$1508583 = $$1508583 + -1 | 0;
     $$0509582 = $$0509582 * 16.0;
    } while (($$1508583 | 0) != 0);
    if ((HEAP8[$$0521$ >> 0] | 0) == 45) {
     $$1472 = -($$0509582 + (-$36 - $$0509582));
     break;
    } else {
     $$1472 = $36 + $$0509582 - $$0509582;
     break;
    }
   } while (0);
   $61 = HEAP32[$7 >> 2] | 0;
   $64 = ($61 | 0) < 0 ? 0 - $61 | 0 : $61;
   $67 = _fmt_u($64, (($64 | 0) < 0) << 31 >> 31, $11) | 0;
   if (($67 | 0) == ($11 | 0)) {
    $69 = $10 + 11 | 0;
    HEAP8[$69 >> 0] = 48;
    $$0511 = $69;
   } else $$0511 = $67;
   HEAP8[$$0511 + -1 >> 0] = ($61 >> 31 & 2) + 43;
   $77 = $$0511 + -2 | 0;
   HEAP8[$77 >> 0] = $5 + 15;
   $notrhs = ($3 | 0) < 1;
   $79 = ($4 & 8 | 0) == 0;
   $$0523 = $8;
   $$2473 = $$1472;
   while (1) {
    $80 = ~~$$2473;
    $86 = $$0523 + 1 | 0;
    HEAP8[$$0523 >> 0] = HEAPU8[23862 + $80 >> 0] | $42;
    $$2473 = ($$2473 - +($80 | 0)) * 16.0;
    if (($86 - $9 | 0) == 1) if ($79 & ($notrhs & $$2473 == 0.0)) $$1524 = $86; else {
     HEAP8[$86 >> 0] = 46;
     $$1524 = $$0523 + 2 | 0;
    } else $$1524 = $86;
    if (!($$2473 != 0.0)) break; else $$0523 = $$1524;
   }
   $99 = $$1524 - $9 | 0;
   $100 = $11 - $77 | 0;
   $$pn = ($3 | 0) != 0 & ($99 + -2 | 0) < ($3 | 0) ? $3 + 2 | 0 : $99;
   $104 = $100 + $45 + $$pn | 0;
   _pad($0, 32, $2, $104, $4);
   _out_57($0, $$0521$, $45);
   _pad($0, 48, $2, $104, $4 ^ 65536);
   _out_57($0, $8, $99);
   _pad($0, 48, $$pn - $99 | 0, 0, 0);
   _out_57($0, $77, $100);
   _pad($0, 32, $2, $104, $4 ^ 8192);
   $$sink562 = $104;
   break;
  }
  $$539 = ($3 | 0) < 0 ? 6 : $3;
  if ($37) {
   $111 = (HEAP32[$7 >> 2] | 0) + -28 | 0;
   HEAP32[$7 >> 2] = $111;
   $$3 = $36 * 268435456.0;
   $$pr = $111;
  } else {
   $$3 = $36;
   $$pr = HEAP32[$7 >> 2] | 0;
  }
  $$556 = ($$pr | 0) < 0 ? $6 : $6 + 288 | 0;
  $$0498 = $$556;
  $$4 = $$3;
  do {
   $114 = ~~$$4 >>> 0;
   HEAP32[$$0498 >> 2] = $114;
   $$0498 = $$0498 + 4 | 0;
   $$4 = ($$4 - +($114 >>> 0)) * 1.0e9;
  } while ($$4 != 0.0);
  if (($$pr | 0) > 0) {
   $$1482661 = $$556;
   $$1499660 = $$0498;
   $121 = $$pr;
   while (1) {
    $123 = ($121 | 0) < 29 ? $121 : 29;
    $$0488653 = $$1499660 + -4 | 0;
    if ($$0488653 >>> 0 < $$1482661 >>> 0) $$2483$ph = $$1482661; else {
     $$0488655 = $$0488653;
     $$0497654 = 0;
     do {
      $126 = _bitshift64Shl(HEAP32[$$0488655 >> 2] | 0, 0, $123 | 0) | 0;
      $128 = _i64Add($126 | 0, tempRet0 | 0, $$0497654 | 0, 0) | 0;
      $129 = tempRet0;
      $130 = ___uremdi3($128 | 0, $129 | 0, 1e9, 0) | 0;
      HEAP32[$$0488655 >> 2] = $130;
      $$0497654 = ___udivdi3($128 | 0, $129 | 0, 1e9, 0) | 0;
      $$0488655 = $$0488655 + -4 | 0;
     } while ($$0488655 >>> 0 >= $$1482661 >>> 0);
     if (!$$0497654) $$2483$ph = $$1482661; else {
      $136 = $$1482661 + -4 | 0;
      HEAP32[$136 >> 2] = $$0497654;
      $$2483$ph = $136;
     }
    }
    $$2500 = $$1499660;
    while (1) {
     if ($$2500 >>> 0 <= $$2483$ph >>> 0) break;
     $138 = $$2500 + -4 | 0;
     if (!(HEAP32[$138 >> 2] | 0)) $$2500 = $138; else break;
    }
    $142 = (HEAP32[$7 >> 2] | 0) - $123 | 0;
    HEAP32[$7 >> 2] = $142;
    if (($142 | 0) > 0) {
     $$1482661 = $$2483$ph;
     $$1499660 = $$2500;
     $121 = $142;
    } else {
     $$1482$lcssa = $$2483$ph;
     $$1499$lcssa = $$2500;
     $$pr564 = $142;
     break;
    }
   }
  } else {
   $$1482$lcssa = $$556;
   $$1499$lcssa = $$0498;
   $$pr564 = $$pr;
  }
  if (($$pr564 | 0) < 0) {
   $147 = (($$539 + 25 | 0) / 9 | 0) + 1 | 0;
   $148 = ($40 | 0) == 102;
   $$3484648 = $$1482$lcssa;
   $$3501647 = $$1499$lcssa;
   $150 = $$pr564;
   while (1) {
    $149 = 0 - $150 | 0;
    $152 = ($149 | 0) < 9 ? $149 : 9;
    if ($$3484648 >>> 0 < $$3501647 >>> 0) {
     $158 = (1 << $152) + -1 | 0;
     $159 = 1e9 >>> $152;
     $$0487642 = 0;
     $$1489641 = $$3484648;
     do {
      $160 = HEAP32[$$1489641 >> 2] | 0;
      HEAP32[$$1489641 >> 2] = ($160 >>> $152) + $$0487642;
      $$0487642 = Math_imul($160 & $158, $159) | 0;
      $$1489641 = $$1489641 + 4 | 0;
     } while ($$1489641 >>> 0 < $$3501647 >>> 0);
     $$$3484 = (HEAP32[$$3484648 >> 2] | 0) == 0 ? $$3484648 + 4 | 0 : $$3484648;
     if (!$$0487642) {
      $$$3484692 = $$$3484;
      $$4502 = $$3501647;
     } else {
      HEAP32[$$3501647 >> 2] = $$0487642;
      $$$3484692 = $$$3484;
      $$4502 = $$3501647 + 4 | 0;
     }
    } else {
     $$$3484692 = (HEAP32[$$3484648 >> 2] | 0) == 0 ? $$3484648 + 4 | 0 : $$3484648;
     $$4502 = $$3501647;
    }
    $172 = $148 ? $$556 : $$$3484692;
    $$$4502 = ($$4502 - $172 >> 2 | 0) > ($147 | 0) ? $172 + ($147 << 2) | 0 : $$4502;
    $150 = (HEAP32[$7 >> 2] | 0) + $152 | 0;
    HEAP32[$7 >> 2] = $150;
    if (($150 | 0) >= 0) {
     $$3484$lcssa = $$$3484692;
     $$3501$lcssa = $$$4502;
     break;
    } else {
     $$3484648 = $$$3484692;
     $$3501647 = $$$4502;
    }
   }
  } else {
   $$3484$lcssa = $$1482$lcssa;
   $$3501$lcssa = $$1499$lcssa;
  }
  $183 = $$556;
  if ($$3484$lcssa >>> 0 < $$3501$lcssa >>> 0) {
   $187 = ($183 - $$3484$lcssa >> 2) * 9 | 0;
   $188 = HEAP32[$$3484$lcssa >> 2] | 0;
   if ($188 >>> 0 < 10) $$1515 = $187; else {
    $$0514637 = $187;
    $$0530636 = 10;
    while (1) {
     $$0530636 = $$0530636 * 10 | 0;
     $191 = $$0514637 + 1 | 0;
     if ($188 >>> 0 < $$0530636 >>> 0) {
      $$1515 = $191;
      break;
     } else $$0514637 = $191;
    }
   }
  } else $$1515 = 0;
  $196 = ($40 | 0) == 103;
  $197 = ($$539 | 0) != 0;
  $199 = $$539 - (($40 | 0) != 102 ? $$1515 : 0) + (($197 & $196) << 31 >> 31) | 0;
  if (($199 | 0) < ((($$3501$lcssa - $183 >> 2) * 9 | 0) + -9 | 0)) {
   $207 = $199 + 9216 | 0;
   $210 = $$556 + 4 + ((($207 | 0) / 9 | 0) + -1024 << 2) | 0;
   $$0527629 = (($207 | 0) % 9 | 0) + 1 | 0;
   if (($$0527629 | 0) < 9) {
    $$0527631 = $$0527629;
    $$1531630 = 10;
    while (1) {
     $213 = $$1531630 * 10 | 0;
     $$0527631 = $$0527631 + 1 | 0;
     if (($$0527631 | 0) == 9) {
      $$1531$lcssa = $213;
      break;
     } else $$1531630 = $213;
    }
   } else $$1531$lcssa = 10;
   $214 = HEAP32[$210 >> 2] | 0;
   $215 = ($214 >>> 0) % ($$1531$lcssa >>> 0) | 0;
   $218 = ($210 + 4 | 0) == ($$3501$lcssa | 0);
   if ($218 & ($215 | 0) == 0) {
    $$4492 = $210;
    $$4518 = $$1515;
    $$8 = $$3484$lcssa;
   } else {
    $$542 = ((($214 >>> 0) / ($$1531$lcssa >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
    $222 = ($$1531$lcssa | 0) / 2 | 0;
    $$$559 = $215 >>> 0 < $222 >>> 0 ? .5 : $218 & ($215 | 0) == ($222 | 0) ? 1.0 : 1.5;
    if (!$$0520) {
     $$1467 = $$$559;
     $$1469 = $$542;
    } else {
     $227 = (HEAP8[$$0521 >> 0] | 0) == 45;
     $$1467 = $227 ? -$$$559 : $$$559;
     $$1469 = $227 ? -$$542 : $$542;
    }
    $230 = $214 - $215 | 0;
    HEAP32[$210 >> 2] = $230;
    if ($$1469 + $$1467 != $$1469) {
     $233 = $230 + $$1531$lcssa | 0;
     HEAP32[$210 >> 2] = $233;
     if ($233 >>> 0 > 999999999) {
      $$5486623 = $$3484$lcssa;
      $$sink545622 = $210;
      while (1) {
       $235 = $$sink545622 + -4 | 0;
       HEAP32[$$sink545622 >> 2] = 0;
       if ($235 >>> 0 < $$5486623 >>> 0) {
        $237 = $$5486623 + -4 | 0;
        HEAP32[$237 >> 2] = 0;
        $$6 = $237;
       } else $$6 = $$5486623;
       $239 = (HEAP32[$235 >> 2] | 0) + 1 | 0;
       HEAP32[$235 >> 2] = $239;
       if ($239 >>> 0 > 999999999) {
        $$5486623 = $$6;
        $$sink545622 = $235;
       } else {
        $$5486$lcssa = $$6;
        $$sink545$lcssa = $235;
        break;
       }
      }
     } else {
      $$5486$lcssa = $$3484$lcssa;
      $$sink545$lcssa = $210;
     }
     $244 = ($183 - $$5486$lcssa >> 2) * 9 | 0;
     $245 = HEAP32[$$5486$lcssa >> 2] | 0;
     if ($245 >>> 0 < 10) {
      $$4492 = $$sink545$lcssa;
      $$4518 = $244;
      $$8 = $$5486$lcssa;
     } else {
      $$2516618 = $244;
      $$2532617 = 10;
      while (1) {
       $$2532617 = $$2532617 * 10 | 0;
       $248 = $$2516618 + 1 | 0;
       if ($245 >>> 0 < $$2532617 >>> 0) {
        $$4492 = $$sink545$lcssa;
        $$4518 = $248;
        $$8 = $$5486$lcssa;
        break;
       } else $$2516618 = $248;
      }
     }
    } else {
     $$4492 = $210;
     $$4518 = $$1515;
     $$8 = $$3484$lcssa;
    }
   }
   $250 = $$4492 + 4 | 0;
   $$5519$ph = $$4518;
   $$7505$ph = $$3501$lcssa >>> 0 > $250 >>> 0 ? $250 : $$3501$lcssa;
   $$9$ph = $$8;
  } else {
   $$5519$ph = $$1515;
   $$7505$ph = $$3501$lcssa;
   $$9$ph = $$3484$lcssa;
  }
  $$7505 = $$7505$ph;
  while (1) {
   if ($$7505 >>> 0 <= $$9$ph >>> 0) {
    $$lcssa673 = 0;
    break;
   }
   $253 = $$7505 + -4 | 0;
   if (!(HEAP32[$253 >> 2] | 0)) $$7505 = $253; else {
    $$lcssa673 = 1;
    break;
   }
  }
  $256 = 0 - $$5519$ph | 0;
  do if ($196) {
   $$539$ = (($197 ^ 1) & 1) + $$539 | 0;
   if (($$539$ | 0) > ($$5519$ph | 0) & ($$5519$ph | 0) > -5) {
    $$0479 = $5 + -1 | 0;
    $$2476 = $$539$ + -1 - $$5519$ph | 0;
   } else {
    $$0479 = $5 + -2 | 0;
    $$2476 = $$539$ + -1 | 0;
   }
   $264 = $4 & 8;
   if (!$264) {
    if ($$lcssa673) {
     $267 = HEAP32[$$7505 + -4 >> 2] | 0;
     if (!$267) $$2529 = 9; else if (!(($267 >>> 0) % 10 | 0)) {
      $$1528614 = 0;
      $$3533613 = 10;
      while (1) {
       $$3533613 = $$3533613 * 10 | 0;
       $272 = $$1528614 + 1 | 0;
       if (($267 >>> 0) % ($$3533613 >>> 0) | 0 | 0) {
        $$2529 = $272;
        break;
       } else $$1528614 = $272;
      }
     } else $$2529 = 0;
    } else $$2529 = 9;
    $281 = (($$7505 - $183 >> 2) * 9 | 0) + -9 | 0;
    if (($$0479 | 32 | 0) == 102) {
     $282 = $281 - $$2529 | 0;
     $$546 = ($282 | 0) > 0 ? $282 : 0;
     $$1480 = $$0479;
     $$3477 = ($$2476 | 0) < ($$546 | 0) ? $$2476 : $$546;
     $$pre$phi690Z2D = 0;
     break;
    } else {
     $286 = $281 + $$5519$ph - $$2529 | 0;
     $$548 = ($286 | 0) > 0 ? $286 : 0;
     $$1480 = $$0479;
     $$3477 = ($$2476 | 0) < ($$548 | 0) ? $$2476 : $$548;
     $$pre$phi690Z2D = 0;
     break;
    }
   } else {
    $$1480 = $$0479;
    $$3477 = $$2476;
    $$pre$phi690Z2D = $264;
   }
  } else {
   $$1480 = $5;
   $$3477 = $$539;
   $$pre$phi690Z2D = $4 & 8;
  } while (0);
  $289 = $$3477 | $$pre$phi690Z2D;
  $291 = ($289 | 0) != 0 & 1;
  $293 = ($$1480 | 32 | 0) == 102;
  if ($293) {
   $$2513 = 0;
   $$pn566 = ($$5519$ph | 0) > 0 ? $$5519$ph : 0;
  } else {
   $297 = ($$5519$ph | 0) < 0 ? $256 : $$5519$ph;
   $300 = _fmt_u($297, (($297 | 0) < 0) << 31 >> 31, $11) | 0;
   $301 = $11;
   if (($301 - $300 | 0) < 2) {
    $$1512607 = $300;
    while (1) {
     $305 = $$1512607 + -1 | 0;
     HEAP8[$305 >> 0] = 48;
     if (($301 - $305 | 0) < 2) $$1512607 = $305; else {
      $$1512$lcssa = $305;
      break;
     }
    }
   } else $$1512$lcssa = $300;
   HEAP8[$$1512$lcssa + -1 >> 0] = ($$5519$ph >> 31 & 2) + 43;
   $315 = $$1512$lcssa + -2 | 0;
   HEAP8[$315 >> 0] = $$1480;
   $$2513 = $315;
   $$pn566 = $301 - $315 | 0;
  }
  $320 = $$0520 + 1 + $$3477 + $291 + $$pn566 | 0;
  _pad($0, 32, $2, $320, $4);
  _out_57($0, $$0521, $$0520);
  _pad($0, 48, $2, $320, $4 ^ 65536);
  if ($293) {
   $$0496$$9 = $$9$ph >>> 0 > $$556 >>> 0 ? $$556 : $$9$ph;
   $323 = $8 + 9 | 0;
   $324 = $323;
   $325 = $8 + 8 | 0;
   $$5493597 = $$0496$$9;
   do {
    $327 = _fmt_u(HEAP32[$$5493597 >> 2] | 0, 0, $323) | 0;
    if (($$5493597 | 0) == ($$0496$$9 | 0)) if (($327 | 0) == ($323 | 0)) {
     HEAP8[$325 >> 0] = 48;
     $$1465 = $325;
    } else $$1465 = $327; else if ($327 >>> 0 > $8 >>> 0) {
     _memset($8 | 0, 48, $327 - $9 | 0) | 0;
     $$0464594 = $327;
     while (1) {
      $332 = $$0464594 + -1 | 0;
      if ($332 >>> 0 > $8 >>> 0) $$0464594 = $332; else {
       $$1465 = $332;
       break;
      }
     }
    } else $$1465 = $327;
    _out_57($0, $$1465, $324 - $$1465 | 0);
    $$5493597 = $$5493597 + 4 | 0;
   } while ($$5493597 >>> 0 <= $$556 >>> 0);
   if ($289 | 0) _out_57($0, 23878, 1);
   if ($$5493597 >>> 0 < $$7505 >>> 0 & ($$3477 | 0) > 0) {
    $$4478590 = $$3477;
    $$6494589 = $$5493597;
    while (1) {
     $344 = _fmt_u(HEAP32[$$6494589 >> 2] | 0, 0, $323) | 0;
     if ($344 >>> 0 > $8 >>> 0) {
      _memset($8 | 0, 48, $344 - $9 | 0) | 0;
      $$0463584 = $344;
      while (1) {
       $348 = $$0463584 + -1 | 0;
       if ($348 >>> 0 > $8 >>> 0) $$0463584 = $348; else {
        $$0463$lcssa = $348;
        break;
       }
      }
     } else $$0463$lcssa = $344;
     _out_57($0, $$0463$lcssa, ($$4478590 | 0) < 9 ? $$4478590 : 9);
     $$6494589 = $$6494589 + 4 | 0;
     $353 = $$4478590 + -9 | 0;
     if (!($$6494589 >>> 0 < $$7505 >>> 0 & ($$4478590 | 0) > 9)) {
      $$4478$lcssa = $353;
      break;
     } else $$4478590 = $353;
    }
   } else $$4478$lcssa = $$3477;
   _pad($0, 48, $$4478$lcssa + 9 | 0, 9, 0);
  } else {
   $$7505$ = $$lcssa673 ? $$7505 : $$9$ph + 4 | 0;
   if (($$3477 | 0) > -1) {
    $360 = $8 + 9 | 0;
    $361 = ($$pre$phi690Z2D | 0) == 0;
    $362 = $360;
    $363 = 0 - $9 | 0;
    $364 = $8 + 8 | 0;
    $$5602 = $$3477;
    $$7495601 = $$9$ph;
    while (1) {
     $366 = _fmt_u(HEAP32[$$7495601 >> 2] | 0, 0, $360) | 0;
     if (($366 | 0) == ($360 | 0)) {
      HEAP8[$364 >> 0] = 48;
      $$0 = $364;
     } else $$0 = $366;
     do if (($$7495601 | 0) == ($$9$ph | 0)) {
      $372 = $$0 + 1 | 0;
      _out_57($0, $$0, 1);
      if ($361 & ($$5602 | 0) < 1) {
       $$2 = $372;
       break;
      }
      _out_57($0, 23878, 1);
      $$2 = $372;
     } else {
      if ($$0 >>> 0 <= $8 >>> 0) {
       $$2 = $$0;
       break;
      }
      _memset($8 | 0, 48, $$0 + $363 | 0) | 0;
      $$1598 = $$0;
      while (1) {
       $370 = $$1598 + -1 | 0;
       if ($370 >>> 0 > $8 >>> 0) $$1598 = $370; else {
        $$2 = $370;
        break;
       }
      }
     } while (0);
     $375 = $362 - $$2 | 0;
     _out_57($0, $$2, ($$5602 | 0) > ($375 | 0) ? $375 : $$5602);
     $378 = $$5602 - $375 | 0;
     $$7495601 = $$7495601 + 4 | 0;
     if (!($$7495601 >>> 0 < $$7505$ >>> 0 & ($378 | 0) > -1)) {
      $$5$lcssa = $378;
      break;
     } else $$5602 = $378;
    }
   } else $$5$lcssa = $$3477;
   _pad($0, 48, $$5$lcssa + 18 | 0, 18, 0);
   _out_57($0, $$2513, $11 - $$2513 | 0);
  }
  _pad($0, 32, $2, $320, $4 ^ 8192);
  $$sink562 = $320;
 } else {
  $28 = ($5 & 32 | 0) != 0;
  $32 = $$0520 + 3 | 0;
  _pad($0, 32, $2, $32, $4 & -65537);
  _out_57($0, $$0521, $$0520);
  _out_57($0, $$0471 != $$0471 | 0.0 != 0.0 ? ($28 ? 25781 : 23858) : $28 ? 23850 : 23854, 3);
  _pad($0, 32, $2, $32, $4 ^ 8192);
  $$sink562 = $32;
 } while (0);
 STACKTOP = sp;
 return (($$sink562 | 0) < ($2 | 0) ? $2 : $$sink562) | 0;
}

function __ZN3HFM12HFMEvaluator24approximationsEnayatifarERKiRKdRKNSt3__26vectorIdNS5_9allocatorIdEEEESB_RKNS6_IiNS7_IiEEEERdiiRKNS6_IS9_NS7_IS9_EEEESB_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 var $$0181$lcssa = 0.0, $$0181329 = 0.0, $$0182308 = 0, $$0183$lcssa = 0.0, $$0183307 = 0.0, $$0188311 = 0, $$0189$lcssa = 0.0, $$0189310 = 0.0, $$0197328 = 0, $$0198317 = 0, $$0199$lcssa = 0.0, $$0199316 = 0.0, $$0203323 = 0, $$0204$lcssa = 0.0, $$0204322 = 0.0, $$1 = 0.0, $$1184 = 0.0, $$1190 = 0.0, $$1200 = 0.0, $$1205 = 0.0, $$pr303 = 0, $$pre = 0, $$pre337 = 0, $$pre348 = 0, $$pre350 = 0, $$pre351 = 0, $$pre361 = 0, $$pre367 = 0, $$pre368 = 0, $$pre378 = 0, $$pre381 = 0, $$pre382 = 0, $$pre392 = 0, $$sink = 0, $$sink207 = 0, $$sink208 = 0, $$sink210 = 0, $$sink214 = 0, $$sink216 = 0, $$sink217 = 0, $$sink219 = 0, $100 = 0, $103 = 0, $105 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0.0, $116 = 0.0, $118 = 0, $119 = 0, $12 = 0, $126 = 0, $13 = 0, $143 = 0, $144 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0.0, $154 = 0.0, $157 = 0, $159 = 0, $160 = 0, $163 = 0, $167 = 0, $17 = 0, $186 = 0, $188 = 0, $19 = 0, $190 = 0, $191 = 0, $193 = 0, $194 = 0, $195 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $201 = 0, $202 = 0, $203 = 0, $205 = 0, $206 = 0, $209 = 0, $211 = 0, $213 = 0, $214 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0.0, $222 = 0.0, $224 = 0, $225 = 0, $23 = 0, $232 = 0, $24 = 0, $247 = 0, $249 = 0, $251 = 0, $253 = 0, $254 = 0, $256 = 0, $257 = 0, $258 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $264 = 0, $265 = 0, $266 = 0, $268 = 0, $269 = 0, $27 = 0, $272 = 0, $274 = 0, $276 = 0, $277 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0.0, $285 = 0.0, $287 = 0, $288 = 0, $295 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0.0, $55 = 0.0, $57 = 0, $58 = 0, $65 = 0, $78 = 0, $80 = 0, $82 = 0, $84 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $93 = 0, $95 = 0, $96 = 0, $97 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $11 = sp + 4 | 0;
 $12 = sp;
 $13 = HEAP32[$1 >> 2] | 0;
 if (($13 | 0) == 1) {
  HEAP32[$11 >> 2] = 0;
  $15 = $11 + 4 | 0;
  HEAP32[$15 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  HEAP32[$12 >> 2] = 1;
  $17 = $11 + 8 | 0;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
  $$pre = HEAP32[$15 >> 2] | 0;
  $$pre337 = HEAP32[$17 >> 2] | 0;
  HEAP32[$12 >> 2] = 2;
  if ($$pre >>> 0 < $$pre337 >>> 0) {
   HEAP32[$$pre >> 2] = 2;
   $19 = $$pre + 4 | 0;
   HEAP32[$15 >> 2] = $19;
   $20 = $19;
   $22 = $$pre337;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $20 = HEAP32[$15 >> 2] | 0;
   $22 = HEAP32[$17 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 24;
  if ($20 >>> 0 < $22 >>> 0) {
   HEAP32[$20 >> 2] = 24;
   $23 = $20 + 4 | 0;
   HEAP32[$15 >> 2] = $23;
   $24 = $23;
   $26 = $22;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $24 = HEAP32[$15 >> 2] | 0;
   $26 = HEAP32[$17 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 25;
  if ($24 >>> 0 < $26 >>> 0) {
   HEAP32[$24 >> 2] = 25;
   $27 = $24 + 4 | 0;
   HEAP32[$15 >> 2] = $27;
   $28 = $27;
   $30 = $26;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $28 = HEAP32[$15 >> 2] | 0;
   $30 = HEAP32[$17 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 167;
  if ($28 >>> 0 < $30 >>> 0) {
   HEAP32[$28 >> 2] = 167;
   $31 = $28 + 4 | 0;
   HEAP32[$15 >> 2] = $31;
   $32 = $31;
   $34 = $30;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $32 = HEAP32[$15 >> 2] | 0;
   $34 = HEAP32[$17 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 168;
  if ($32 >>> 0 < $34 >>> 0) {
   HEAP32[$32 >> 2] = 168;
   $35 = $32 + 4 | 0;
   HEAP32[$15 >> 2] = $35;
   $36 = $35;
   $38 = $34;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $36 = HEAP32[$15 >> 2] | 0;
   $38 = HEAP32[$17 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 169;
  if ($36 >>> 0 < $38 >>> 0) {
   HEAP32[$36 >> 2] = 169;
   $39 = $36 + 4 | 0;
   HEAP32[$15 >> 2] = $39;
   $44 = $39;
   $58 = $39;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $$pre348 = HEAP32[$15 >> 2] | 0;
   $44 = $$pre348;
   $58 = $$pre348;
  }
  $42 = HEAP32[$11 >> 2] | 0;
  $46 = $42;
  if (($44 - $42 | 0) > 0) {
   $48 = $44 - $42 >> 2;
   $49 = $8 + $7 | 0;
   $50 = $0 + 156 | 0;
   $51 = HEAP32[$9 >> 2] | 0;
   $52 = +HEAPF64[$2 >> 3];
   $53 = +HEAPF64[$6 >> 3];
   $$0181329 = 0.0;
   $$0197328 = 0;
   while (1) {
    $65 = HEAP32[$46 + ($$0197328 << 2) >> 2] | 0;
    if (($65 | 0) > ($7 | 0)) $$1 = $$0181329; else {
     if (($65 | 0) > ($8 | 0)) {
      $$sink = $51 + ((HEAP32[$50 >> 2] | 0) * 12 | 0) | 0;
      $$sink207 = $49;
     } else {
      $$sink = $10;
      $$sink207 = $8;
     }
     $$1 = $$0181329 + $52 * ($53 - (+HEAPF64[(HEAP32[$$sink >> 2] | 0) + ($$sink207 - $65 << 3) >> 3] + 0.0));
    }
    $$0197328 = $$0197328 + 1 | 0;
    if (($$0197328 | 0) >= ($48 | 0)) {
     $$0181$lcssa = $$1;
     $55 = $53;
     break;
    } else $$0181329 = $$1;
   }
  } else {
   $$0181$lcssa = 0.0;
   $55 = +HEAPF64[$6 >> 3];
  }
  HEAPF64[$6 >> 3] = $$0181$lcssa + $55;
  $57 = $42;
  if ($42 | 0) {
   if (($58 | 0) != ($46 | 0)) HEAP32[$15 >> 2] = $58 + (~(($58 + -4 - $42 | 0) >>> 2) << 2);
   __ZdlPv($57);
  }
  $78 = HEAP32[$1 >> 2] | 0;
 } else $78 = $13;
 if (($78 | 0) == 2) {
  HEAP32[$11 >> 2] = 0;
  $80 = $11 + 4 | 0;
  HEAP32[$80 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  HEAP32[$12 >> 2] = 1;
  $82 = $11 + 8 | 0;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
  $$pre350 = HEAP32[$80 >> 2] | 0;
  $$pre351 = HEAP32[$82 >> 2] | 0;
  HEAP32[$12 >> 2] = 2;
  if ($$pre350 >>> 0 < $$pre351 >>> 0) {
   HEAP32[$$pre350 >> 2] = 2;
   $84 = $$pre350 + 4 | 0;
   HEAP32[$80 >> 2] = $84;
   $85 = $84;
   $87 = $$pre351;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $85 = HEAP32[$80 >> 2] | 0;
   $87 = HEAP32[$82 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 3;
  if ($85 >>> 0 < $87 >>> 0) {
   HEAP32[$85 >> 2] = 3;
   $88 = $85 + 4 | 0;
   HEAP32[$80 >> 2] = $88;
   $89 = $88;
   $91 = $87;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $89 = HEAP32[$80 >> 2] | 0;
   $91 = HEAP32[$82 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 23;
  if ($89 >>> 0 < $91 >>> 0) {
   HEAP32[$89 >> 2] = 23;
   $92 = $89 + 4 | 0;
   HEAP32[$80 >> 2] = $92;
   $93 = $92;
   $95 = $91;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $93 = HEAP32[$80 >> 2] | 0;
   $95 = HEAP32[$82 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 24;
  if ($93 >>> 0 < $95 >>> 0) {
   HEAP32[$93 >> 2] = 24;
   $96 = $93 + 4 | 0;
   HEAP32[$80 >> 2] = $96;
   $97 = $96;
   $99 = $95;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $97 = HEAP32[$80 >> 2] | 0;
   $99 = HEAP32[$82 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 25;
  if ($97 >>> 0 < $99 >>> 0) {
   HEAP32[$97 >> 2] = 25;
   $100 = $97 + 4 | 0;
   HEAP32[$80 >> 2] = $100;
   $105 = $100;
   $119 = $100;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $$pre361 = HEAP32[$80 >> 2] | 0;
   $105 = $$pre361;
   $119 = $$pre361;
  }
  $103 = HEAP32[$11 >> 2] | 0;
  $107 = $103;
  if (($105 - $103 | 0) > 0) {
   $108 = $8 + $7 | 0;
   $110 = $105 - $103 >> 2;
   $111 = $0 + 156 | 0;
   $112 = HEAP32[$9 >> 2] | 0;
   $113 = HEAP32[$3 >> 2] | 0;
   $114 = +HEAPF64[$6 >> 3];
   $$0203323 = 0;
   $$0204322 = 0.0;
   while (1) {
    $126 = HEAP32[$107 + ($$0203323 << 2) >> 2] | 0;
    if (($108 | 0) < ($126 | 0)) $$1205 = $$0204322; else {
     if (($126 | 0) > ($8 | 0)) {
      $$sink208 = $112 + ((HEAP32[$111 >> 2] | 0) * 12 | 0) | 0;
      $$sink210 = $108;
     } else {
      $$sink208 = $10;
      $$sink210 = $8;
     }
     $$1205 = $$0204322 + +HEAPF64[$113 + ($$0203323 << 3) >> 3] * ($114 - (+HEAPF64[(HEAP32[$$sink208 >> 2] | 0) + ($$sink210 - $126 << 3) >> 3] + 0.0));
    }
    $$0203323 = $$0203323 + 1 | 0;
    if (($$0203323 | 0) >= ($110 | 0)) {
     $$0204$lcssa = $$1205;
     $116 = $114;
     break;
    } else $$0204322 = $$1205;
   }
  } else {
   $$0204$lcssa = 0.0;
   $116 = +HEAPF64[$6 >> 3];
  }
  HEAPF64[$6 >> 3] = $$0204$lcssa + $116;
  $118 = $103;
  if ($103 | 0) {
   if (($119 | 0) != ($107 | 0)) HEAP32[$80 >> 2] = $119 + (~(($119 + -4 - $103 | 0) >>> 2) << 2);
   __ZdlPv($118);
  }
  $$pr303 = HEAP32[$1 >> 2] | 0;
 } else $$pr303 = $78;
 switch ($$pr303 | 0) {
 case 3:
  {
   $143 = HEAP32[$5 >> 2] | 0;
   $144 = (HEAP32[$5 + 4 >> 2] | 0) - $143 | 0;
   $146 = $143;
   L89 : do if (($144 | 0) > 0) {
    $147 = $144 >>> 2;
    $148 = $0 + 156 | 0;
    $149 = HEAP32[$9 >> 2] | 0;
    $150 = $0 + 108 | 0;
    $151 = HEAP32[$4 >> 2] | 0;
    $152 = +HEAPF64[$6 >> 3];
    $$0198317 = 0;
    $$0199316 = 0.0;
    while (1) {
     $157 = HEAP32[$146 + ($$0198317 << 2) >> 2] | 0;
     if (($157 | 0) > ($7 | 0)) $$1200 = $$0199316; else {
      $159 = ($157 | 0) > ($8 | 0);
      $160 = HEAP32[$148 >> 2] | 0;
      $163 = HEAP32[$150 >> 2] | 0;
      $167 = HEAP32[$163 + 28 >> 2] | 0;
      if (((HEAP32[$163 + 32 >> 2] | 0) - $167 >> 2 | 0) <= ($160 | 0)) {
       label = 69;
       break;
      }
      if (($157 | 0) <= 0) {
       label = 71;
       break;
      }
      if (($157 | 0) > (HEAP32[$167 + ($160 << 2) >> 2] | 0)) {
       label = 73;
       break;
      } else $$1200 = $$0199316 + +HEAPF64[$151 + ($$0198317 << 3) >> 3] * ($152 - (+HEAPF64[(HEAP32[($159 ? $149 + ($160 * 12 | 0) | 0 : $10) >> 2] | 0) + (($159 ? $7 : 0) + $8 - $157 << 3) >> 3] + 0.0));
     }
     $$0198317 = $$0198317 + 1 | 0;
     if (($$0198317 | 0) >= ($147 | 0)) {
      $$0199$lcssa = $$1200;
      $154 = $152;
      break L89;
     } else $$0199316 = $$1200;
    }
    if ((label | 0) == 69) ___assert_fail(15898, 15934, 149, 15973); else if ((label | 0) == 71) ___assert_fail(16090, 16106, 399, 16137); else if ((label | 0) == 73) ___assert_fail(16162, 16106, 400, 16137);
   } else {
    $$0199$lcssa = 0.0;
    $154 = +HEAPF64[$6 >> 3];
   } while (0);
   HEAPF64[$6 >> 3] = $$0199$lcssa + $154;
   if (($$pr303 | 0) == 4) label = 75; else $247 = $$pr303;
   break;
  }
 case 4:
  {
   label = 75;
   break;
  }
 default:
  $247 = $$pr303;
 }
 if ((label | 0) == 75) {
  HEAP32[$11 >> 2] = 0;
  $186 = $11 + 4 | 0;
  HEAP32[$186 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  HEAP32[$12 >> 2] = 10;
  $188 = $11 + 8 | 0;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
  $$pre367 = HEAP32[$186 >> 2] | 0;
  $$pre368 = HEAP32[$188 >> 2] | 0;
  HEAP32[$12 >> 2] = 50;
  if ($$pre367 >>> 0 < $$pre368 >>> 0) {
   HEAP32[$$pre367 >> 2] = 50;
   $190 = $$pre367 + 4 | 0;
   HEAP32[$186 >> 2] = $190;
   $191 = $190;
   $193 = $$pre368;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $191 = HEAP32[$186 >> 2] | 0;
   $193 = HEAP32[$188 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 15;
  if ($191 >>> 0 < $193 >>> 0) {
   HEAP32[$191 >> 2] = 15;
   $194 = $191 + 4 | 0;
   HEAP32[$186 >> 2] = $194;
   $195 = $194;
   $197 = $193;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $195 = HEAP32[$186 >> 2] | 0;
   $197 = HEAP32[$188 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 25;
  if ($195 >>> 0 < $197 >>> 0) {
   HEAP32[$195 >> 2] = 25;
   $198 = $195 + 4 | 0;
   HEAP32[$186 >> 2] = $198;
   $199 = $198;
   $201 = $197;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $199 = HEAP32[$186 >> 2] | 0;
   $201 = HEAP32[$188 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 38;
  if ($199 >>> 0 < $201 >>> 0) {
   HEAP32[$199 >> 2] = 38;
   $202 = $199 + 4 | 0;
   HEAP32[$186 >> 2] = $202;
   $203 = $202;
   $205 = $201;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $203 = HEAP32[$186 >> 2] | 0;
   $205 = HEAP32[$188 >> 2] | 0;
  }
  HEAP32[$12 >> 2] = 100;
  if ($203 >>> 0 < $205 >>> 0) {
   HEAP32[$203 >> 2] = 100;
   $206 = $203 + 4 | 0;
   HEAP32[$186 >> 2] = $206;
   $211 = $206;
   $225 = $206;
  } else {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
   $$pre378 = HEAP32[$186 >> 2] | 0;
   $211 = $$pre378;
   $225 = $$pre378;
  }
  $209 = HEAP32[$11 >> 2] | 0;
  $213 = $209;
  if (($211 - $209 | 0) > 0) {
   $214 = $8 + $7 | 0;
   $216 = $211 - $209 >> 2;
   $217 = $0 + 156 | 0;
   $218 = HEAP32[$9 >> 2] | 0;
   $219 = HEAP32[$3 >> 2] | 0;
   $220 = +HEAPF64[$6 >> 3];
   $$0188311 = 0;
   $$0189310 = 0.0;
   while (1) {
    $232 = HEAP32[$213 + ($$0188311 << 2) >> 2] | 0;
    if (($214 | 0) < ($232 | 0)) $$1190 = $$0189310; else {
     if (($232 | 0) > ($8 | 0)) {
      $$sink214 = $218 + ((HEAP32[$217 >> 2] | 0) * 12 | 0) | 0;
      $$sink216 = $214;
     } else {
      $$sink214 = $10;
      $$sink216 = $8;
     }
     $$1190 = $$0189310 + +HEAPF64[$219 + ($$0188311 << 3) >> 3] * ($220 - (+HEAPF64[(HEAP32[$$sink214 >> 2] | 0) + ($$sink216 - $232 << 3) >> 3] + 0.0));
    }
    $$0188311 = $$0188311 + 1 | 0;
    if (($$0188311 | 0) >= ($216 | 0)) {
     $$0189$lcssa = $$1190;
     $222 = $220;
     break;
    } else $$0189310 = $$1190;
   }
  } else {
   $$0189$lcssa = 0.0;
   $222 = +HEAPF64[$6 >> 3];
  }
  HEAPF64[$6 >> 3] = $$0189$lcssa + $222;
  $224 = $209;
  if ($209 | 0) {
   if (($225 | 0) != ($213 | 0)) HEAP32[$186 >> 2] = $225 + (~(($225 + -4 - $209 | 0) >>> 2) << 2);
   __ZdlPv($224);
  }
  $247 = HEAP32[$1 >> 2] | 0;
 }
 if (($247 | 0) != 5) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$11 >> 2] = 0;
 $249 = $11 + 4 | 0;
 HEAP32[$249 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$12 >> 2] = 1;
 $251 = $11 + 8 | 0;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
 $$pre381 = HEAP32[$249 >> 2] | 0;
 $$pre382 = HEAP32[$251 >> 2] | 0;
 HEAP32[$12 >> 2] = 24;
 if ($$pre381 >>> 0 < $$pre382 >>> 0) {
  HEAP32[$$pre381 >> 2] = 24;
  $253 = $$pre381 + 4 | 0;
  HEAP32[$249 >> 2] = $253;
  $254 = $253;
  $256 = $$pre382;
 } else {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
  $254 = HEAP32[$249 >> 2] | 0;
  $256 = HEAP32[$251 >> 2] | 0;
 }
 HEAP32[$12 >> 2] = 48;
 if ($254 >>> 0 < $256 >>> 0) {
  HEAP32[$254 >> 2] = 48;
  $257 = $254 + 4 | 0;
  HEAP32[$249 >> 2] = $257;
  $258 = $257;
  $260 = $256;
 } else {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
  $258 = HEAP32[$249 >> 2] | 0;
  $260 = HEAP32[$251 >> 2] | 0;
 }
 HEAP32[$12 >> 2] = 168;
 if ($258 >>> 0 < $260 >>> 0) {
  HEAP32[$258 >> 2] = 168;
  $261 = $258 + 4 | 0;
  HEAP32[$249 >> 2] = $261;
  $262 = $261;
  $264 = $260;
 } else {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
  $262 = HEAP32[$249 >> 2] | 0;
  $264 = HEAP32[$251 >> 2] | 0;
 }
 HEAP32[$12 >> 2] = 336;
 if ($262 >>> 0 < $264 >>> 0) {
  HEAP32[$262 >> 2] = 336;
  $265 = $262 + 4 | 0;
  HEAP32[$249 >> 2] = $265;
  $266 = $265;
  $268 = $264;
 } else {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
  $266 = HEAP32[$249 >> 2] | 0;
  $268 = HEAP32[$251 >> 2] | 0;
 }
 HEAP32[$12 >> 2] = 504;
 if ($266 >>> 0 < $268 >>> 0) {
  HEAP32[$266 >> 2] = 504;
  $269 = $266 + 4 | 0;
  HEAP32[$249 >> 2] = $269;
  $274 = $269;
  $288 = $269;
 } else {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($11, $12);
  $$pre392 = HEAP32[$249 >> 2] | 0;
  $274 = $$pre392;
  $288 = $$pre392;
 }
 $272 = HEAP32[$11 >> 2] | 0;
 $276 = $272;
 if (($274 - $272 | 0) > 0) {
  $277 = $8 + $7 | 0;
  $279 = $274 - $272 >> 2;
  $280 = $0 + 156 | 0;
  $281 = HEAP32[$9 >> 2] | 0;
  $282 = HEAP32[$3 >> 2] | 0;
  $283 = +HEAPF64[$6 >> 3];
  $$0182308 = 0;
  $$0183307 = 0.0;
  while (1) {
   $295 = HEAP32[$276 + ($$0182308 << 2) >> 2] | 0;
   if (($277 | 0) < ($295 | 0)) $$1184 = $$0183307; else {
    if (($295 | 0) > ($8 | 0)) {
     $$sink217 = $281 + ((HEAP32[$280 >> 2] | 0) * 12 | 0) | 0;
     $$sink219 = $277;
    } else {
     $$sink217 = $10;
     $$sink219 = $8;
    }
    $$1184 = $$0183307 + +HEAPF64[$282 + ($$0182308 << 3) >> 3] * ($283 - (+HEAPF64[(HEAP32[$$sink217 >> 2] | 0) + ($$sink219 - $295 << 3) >> 3] + 0.0));
   }
   $$0182308 = $$0182308 + 1 | 0;
   if (($$0182308 | 0) >= ($279 | 0)) {
    $$0183$lcssa = $$1184;
    $285 = $283;
    break;
   } else $$0183307 = $$1184;
  }
 } else {
  $$0183$lcssa = 0.0;
  $285 = +HEAPF64[$6 >> 3];
 }
 HEAPF64[$6 >> 3] = $$0183$lcssa + $285;
 $287 = $272;
 if ($272 | 0) {
  if (($288 | 0) != ($276 | 0)) HEAP32[$249 >> 2] = $288 + (~(($288 + -4 - $272 | 0) >>> 2) << 2);
  __ZdlPv($287);
 }
 STACKTOP = sp;
 return;
}

function _printf_core($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$$5 = 0, $$0 = 0, $$0228 = 0, $$0229322 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0, $$0240$lcssa = 0, $$0240$lcssa357 = 0, $$0240321 = 0, $$0243 = 0, $$0247 = 0, $$0249$lcssa = 0, $$0249306 = 0, $$0252 = 0, $$0253 = 0, $$0254 = 0, $$0259 = 0, $$0262$lcssa = 0, $$0262311 = 0, $$0269 = 0, $$1 = 0, $$1230333 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241332 = 0, $$1244320 = 0, $$1248 = 0, $$1255 = 0, $$1260 = 0, $$1263 = 0, $$1263$ = 0, $$1270 = 0, $$2 = 0, $$2234 = 0, $$2239 = 0, $$2242305 = 0, $$2245 = 0, $$2251 = 0, $$2256 = 0, $$2261 = 0, $$2271 = 0, $$3265 = 0, $$3272 = 0, $$3303 = 0, $$4258355 = 0, $$4266 = 0, $$5 = 0, $$6268 = 0, $$lcssa295 = 0, $$pre347 = 0, $$pre349 = 0, $10 = 0, $11 = 0, $112 = 0, $116 = 0, $12 = 0, $123 = 0, $124 = 0, $126 = 0, $128 = 0, $13 = 0, $132 = 0, $137 = 0, $138 = 0, $14 = 0, $143 = 0, $146 = 0, $151 = 0, $152 = 0, $157 = 0, $164 = 0, $165 = 0, $176 = 0, $188 = 0, $195 = 0, $197 = 0, $20 = 0, $200 = 0, $202 = 0, $21 = 0, $210 = 0, $212 = 0, $215 = 0, $216 = 0, $220 = 0, $224 = 0, $226 = 0, $229 = 0, $23 = 0, $231 = 0, $232 = 0, $233 = 0, $24 = 0, $242 = 0, $243 = 0, $247 = 0, $249 = 0, $25 = 0, $251 = 0, $257 = 0, $269 = 0, $27 = 0, $272 = 0, $273 = 0, $285 = 0, $287 = 0, $292 = 0, $296 = 0, $298 = 0, $30 = 0, $31 = 0, $310 = 0, $312 = 0, $319 = 0, $329 = 0, $330 = 0, $331 = 0, $36 = 0, $38 = 0, $39 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $91 = 0, $94 = 0, $99 = 0, $isdigittmp = 0, $isdigittmp274 = 0, $isdigittmp276 = 0, $or$cond = 0, $or$cond283 = 0, $storemerge = 0, $storemerge273310 = 0, $storemerge278 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $5 = sp + 16 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 8 | 0;
 $9 = sp + 20 | 0;
 HEAP32[$5 >> 2] = $1;
 $10 = ($0 | 0) != 0;
 $11 = $7 + 40 | 0;
 $12 = $11;
 $13 = $7 + 39 | 0;
 $14 = $8 + 4 | 0;
 $$0243 = 0;
 $$0247 = 0;
 $$0269 = 0;
 $21 = $1;
 L1 : while (1) {
  do if (($$0247 | 0) > -1) if (($$0243 | 0) > (2147483647 - $$0247 | 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 75;
   $$1248 = -1;
   break;
  } else {
   $$1248 = $$0243 + $$0247 | 0;
   break;
  } else $$1248 = $$0247; while (0);
  $20 = HEAP8[$21 >> 0] | 0;
  if (!($20 << 24 >> 24)) {
   label = 87;
   break;
  } else {
   $23 = $20;
   $25 = $21;
  }
  L9 : while (1) {
   switch ($23 << 24 >> 24) {
   case 37:
    {
     $$0249306 = $25;
     $27 = $25;
     label = 9;
     break L9;
     break;
    }
   case 0:
    {
     $$0249$lcssa = $25;
     $39 = $25;
     break L9;
     break;
    }
   default:
    {}
   }
   $24 = $25 + 1 | 0;
   HEAP32[$5 >> 2] = $24;
   $23 = HEAP8[$24 >> 0] | 0;
   $25 = $24;
  }
  L12 : do if ((label | 0) == 9) while (1) {
   label = 0;
   if ((HEAP8[$27 + 1 >> 0] | 0) != 37) {
    $$0249$lcssa = $$0249306;
    $39 = $27;
    break L12;
   }
   $30 = $$0249306 + 1 | 0;
   $31 = $27 + 2 | 0;
   HEAP32[$5 >> 2] = $31;
   if ((HEAP8[$31 >> 0] | 0) == 37) {
    $$0249306 = $30;
    $27 = $31;
    label = 9;
   } else {
    $$0249$lcssa = $30;
    $39 = $31;
    break;
   }
  } while (0);
  $36 = $$0249$lcssa - $21 | 0;
  if ($10) _out_57($0, $21, $36);
  if ($36 | 0) {
   $$0243 = $36;
   $$0247 = $$1248;
   $21 = $39;
   continue;
  }
  $38 = $39 + 1 | 0;
  $isdigittmp = (HEAP8[$38 >> 0] | 0) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $44 = (HEAP8[$39 + 2 >> 0] | 0) == 36;
   $$0253 = $44 ? $isdigittmp : -1;
   $$1270 = $44 ? 1 : $$0269;
   $storemerge = $44 ? $39 + 3 | 0 : $38;
  } else {
   $$0253 = -1;
   $$1270 = $$0269;
   $storemerge = $38;
  }
  HEAP32[$5 >> 2] = $storemerge;
  $46 = HEAP8[$storemerge >> 0] | 0;
  $48 = ($46 << 24 >> 24) + -32 | 0;
  L24 : do if ($48 >>> 0 < 32) {
   $$0262311 = 0;
   $329 = $46;
   $51 = $48;
   $storemerge273310 = $storemerge;
   while (1) {
    $50 = 1 << $51;
    if (!($50 & 75913)) {
     $$0262$lcssa = $$0262311;
     $$lcssa295 = $329;
     $62 = $storemerge273310;
     break L24;
    }
    $54 = $50 | $$0262311;
    $55 = $storemerge273310 + 1 | 0;
    HEAP32[$5 >> 2] = $55;
    $56 = HEAP8[$55 >> 0] | 0;
    $51 = ($56 << 24 >> 24) + -32 | 0;
    if ($51 >>> 0 >= 32) {
     $$0262$lcssa = $54;
     $$lcssa295 = $56;
     $62 = $55;
     break;
    } else {
     $$0262311 = $54;
     $329 = $56;
     $storemerge273310 = $55;
    }
   }
  } else {
   $$0262$lcssa = 0;
   $$lcssa295 = $46;
   $62 = $storemerge;
  } while (0);
  if ($$lcssa295 << 24 >> 24 == 42) {
   $61 = $62 + 1 | 0;
   $isdigittmp276 = (HEAP8[$61 >> 0] | 0) + -48 | 0;
   if ($isdigittmp276 >>> 0 < 10) if ((HEAP8[$62 + 2 >> 0] | 0) == 36) {
    HEAP32[$4 + ($isdigittmp276 << 2) >> 2] = 10;
    $$0259 = HEAP32[$3 + ((HEAP8[$61 >> 0] | 0) + -48 << 3) >> 2] | 0;
    $$2271 = 1;
    $storemerge278 = $62 + 3 | 0;
   } else label = 23; else label = 23;
   if ((label | 0) == 23) {
    label = 0;
    if ($$1270 | 0) {
     $$0 = -1;
     break;
    }
    if ($10) {
     $86 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $87 = HEAP32[$86 >> 2] | 0;
     HEAP32[$2 >> 2] = $86 + 4;
     $$0259 = $87;
     $$2271 = 0;
     $storemerge278 = $61;
    } else {
     $$0259 = 0;
     $$2271 = 0;
     $storemerge278 = $61;
    }
   }
   HEAP32[$5 >> 2] = $storemerge278;
   $88 = ($$0259 | 0) < 0;
   $$1260 = $88 ? 0 - $$0259 | 0 : $$0259;
   $$1263 = $88 ? $$0262$lcssa | 8192 : $$0262$lcssa;
   $$3272 = $$2271;
   $94 = $storemerge278;
  } else {
   $91 = _getint_58($5) | 0;
   if (($91 | 0) < 0) {
    $$0 = -1;
    break;
   }
   $$1260 = $91;
   $$1263 = $$0262$lcssa;
   $$3272 = $$1270;
   $94 = HEAP32[$5 >> 2] | 0;
  }
  do if ((HEAP8[$94 >> 0] | 0) == 46) {
   if ((HEAP8[$94 + 1 >> 0] | 0) != 42) {
    HEAP32[$5 >> 2] = $94 + 1;
    $126 = _getint_58($5) | 0;
    $$0254 = $126;
    $$pre347 = HEAP32[$5 >> 2] | 0;
    break;
   }
   $99 = $94 + 2 | 0;
   $isdigittmp274 = (HEAP8[$99 >> 0] | 0) + -48 | 0;
   if ($isdigittmp274 >>> 0 < 10) if ((HEAP8[$94 + 3 >> 0] | 0) == 36) {
    HEAP32[$4 + ($isdigittmp274 << 2) >> 2] = 10;
    $112 = HEAP32[$3 + ((HEAP8[$99 >> 0] | 0) + -48 << 3) >> 2] | 0;
    $116 = $94 + 4 | 0;
    HEAP32[$5 >> 2] = $116;
    $$0254 = $112;
    $$pre347 = $116;
    break;
   }
   if ($$3272 | 0) {
    $$0 = -1;
    break L1;
   }
   if ($10) {
    $123 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $124 = HEAP32[$123 >> 2] | 0;
    HEAP32[$2 >> 2] = $123 + 4;
    $330 = $124;
   } else $330 = 0;
   HEAP32[$5 >> 2] = $99;
   $$0254 = $330;
   $$pre347 = $99;
  } else {
   $$0254 = -1;
   $$pre347 = $94;
  } while (0);
  $$0252 = 0;
  $128 = $$pre347;
  while (1) {
   if (((HEAP8[$128 >> 0] | 0) + -65 | 0) >>> 0 > 57) {
    $$0 = -1;
    break L1;
   }
   $132 = $128 + 1 | 0;
   HEAP32[$5 >> 2] = $132;
   $137 = HEAP8[(HEAP8[$128 >> 0] | 0) + -65 + (23350 + ($$0252 * 58 | 0)) >> 0] | 0;
   $138 = $137 & 255;
   if (($138 + -1 | 0) >>> 0 < 8) {
    $$0252 = $138;
    $128 = $132;
   } else break;
  }
  if (!($137 << 24 >> 24)) {
   $$0 = -1;
   break;
  }
  $143 = ($$0253 | 0) > -1;
  do if ($137 << 24 >> 24 == 19) if ($143) {
   $$0 = -1;
   break L1;
  } else label = 49; else {
   if ($143) {
    HEAP32[$4 + ($$0253 << 2) >> 2] = $138;
    $146 = $3 + ($$0253 << 3) | 0;
    $151 = HEAP32[$146 + 4 >> 2] | 0;
    $152 = $6;
    HEAP32[$152 >> 2] = HEAP32[$146 >> 2];
    HEAP32[$152 + 4 >> 2] = $151;
    label = 49;
    break;
   }
   if (!$10) {
    $$0 = 0;
    break L1;
   }
   _pop_arg_60($6, $138, $2);
  } while (0);
  if ((label | 0) == 49) {
   label = 0;
   if (!$10) {
    $$0243 = 0;
    $$0247 = $$1248;
    $$0269 = $$3272;
    $21 = $132;
    continue;
   }
  }
  $157 = HEAP8[$128 >> 0] | 0;
  $$0235 = ($$0252 | 0) != 0 & ($157 & 15 | 0) == 3 ? $157 & -33 : $157;
  $164 = $$1263 & -65537;
  $$1263$ = ($$1263 & 8192 | 0) == 0 ? $$1263 : $164;
  L71 : do switch ($$0235 | 0) {
  case 110:
   {
    switch (($$0252 & 255) << 24 >> 24) {
    case 0:
     {
      HEAP32[HEAP32[$6 >> 2] >> 2] = $$1248;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $21 = $132;
      continue L1;
      break;
     }
    case 1:
     {
      HEAP32[HEAP32[$6 >> 2] >> 2] = $$1248;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $21 = $132;
      continue L1;
      break;
     }
    case 2:
     {
      $176 = HEAP32[$6 >> 2] | 0;
      HEAP32[$176 >> 2] = $$1248;
      HEAP32[$176 + 4 >> 2] = (($$1248 | 0) < 0) << 31 >> 31;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $21 = $132;
      continue L1;
      break;
     }
    case 3:
     {
      HEAP16[HEAP32[$6 >> 2] >> 1] = $$1248;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $21 = $132;
      continue L1;
      break;
     }
    case 4:
     {
      HEAP8[HEAP32[$6 >> 2] >> 0] = $$1248;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $21 = $132;
      continue L1;
      break;
     }
    case 6:
     {
      HEAP32[HEAP32[$6 >> 2] >> 2] = $$1248;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $21 = $132;
      continue L1;
      break;
     }
    case 7:
     {
      $188 = HEAP32[$6 >> 2] | 0;
      HEAP32[$188 >> 2] = $$1248;
      HEAP32[$188 + 4 >> 2] = (($$1248 | 0) < 0) << 31 >> 31;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $21 = $132;
      continue L1;
      break;
     }
    default:
     {
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $21 = $132;
      continue L1;
     }
    }
    break;
   }
  case 112:
   {
    $$1236 = 120;
    $$1255 = $$0254 >>> 0 > 8 ? $$0254 : 8;
    $$3265 = $$1263$ | 8;
    label = 61;
    break;
   }
  case 88:
  case 120:
   {
    $$1236 = $$0235;
    $$1255 = $$0254;
    $$3265 = $$1263$;
    label = 61;
    break;
   }
  case 111:
   {
    $210 = $6;
    $212 = HEAP32[$210 >> 2] | 0;
    $215 = HEAP32[$210 + 4 >> 2] | 0;
    $216 = _fmt_o($212, $215, $11) | 0;
    $220 = $12 - $216 | 0;
    $$0228 = $216;
    $$1233 = 0;
    $$1238 = 23814;
    $$2256 = ($$1263$ & 8 | 0) == 0 | ($$0254 | 0) > ($220 | 0) ? $$0254 : $220 + 1 | 0;
    $$4266 = $$1263$;
    $247 = $212;
    $249 = $215;
    label = 67;
    break;
   }
  case 105:
  case 100:
   {
    $224 = $6;
    $226 = HEAP32[$224 >> 2] | 0;
    $229 = HEAP32[$224 + 4 >> 2] | 0;
    if (($229 | 0) < 0) {
     $231 = _i64Subtract(0, 0, $226 | 0, $229 | 0) | 0;
     $232 = tempRet0;
     $233 = $6;
     HEAP32[$233 >> 2] = $231;
     HEAP32[$233 + 4 >> 2] = $232;
     $$0232 = 1;
     $$0237 = 23814;
     $242 = $231;
     $243 = $232;
     label = 66;
     break L71;
    } else {
     $$0232 = ($$1263$ & 2049 | 0) != 0 & 1;
     $$0237 = ($$1263$ & 2048 | 0) == 0 ? (($$1263$ & 1 | 0) == 0 ? 23814 : 23816) : 23815;
     $242 = $226;
     $243 = $229;
     label = 66;
     break L71;
    }
    break;
   }
  case 117:
   {
    $165 = $6;
    $$0232 = 0;
    $$0237 = 23814;
    $242 = HEAP32[$165 >> 2] | 0;
    $243 = HEAP32[$165 + 4 >> 2] | 0;
    label = 66;
    break;
   }
  case 99:
   {
    HEAP8[$13 >> 0] = HEAP32[$6 >> 2];
    $$2 = $13;
    $$2234 = 0;
    $$2239 = 23814;
    $$2251 = $11;
    $$5 = 1;
    $$6268 = $164;
    break;
   }
  case 109:
   {
    $$1 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    label = 71;
    break;
   }
  case 115:
   {
    $269 = HEAP32[$6 >> 2] | 0;
    $$1 = $269 | 0 ? $269 : 23824;
    label = 71;
    break;
   }
  case 67:
   {
    HEAP32[$8 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$14 >> 2] = 0;
    HEAP32[$6 >> 2] = $8;
    $$4258355 = -1;
    $331 = $8;
    label = 75;
    break;
   }
  case 83:
   {
    $$pre349 = HEAP32[$6 >> 2] | 0;
    if (!$$0254) {
     _pad($0, 32, $$1260, 0, $$1263$);
     $$0240$lcssa357 = 0;
     label = 84;
    } else {
     $$4258355 = $$0254;
     $331 = $$pre349;
     label = 75;
    }
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    $$0243 = _fmt_fp($0, +HEAPF64[$6 >> 3], $$1260, $$0254, $$1263$, $$0235) | 0;
    $$0247 = $$1248;
    $$0269 = $$3272;
    $21 = $132;
    continue L1;
    break;
   }
  default:
   {
    $$2 = $21;
    $$2234 = 0;
    $$2239 = 23814;
    $$2251 = $11;
    $$5 = $$0254;
    $$6268 = $$1263$;
   }
  } while (0);
  L95 : do if ((label | 0) == 61) {
   label = 0;
   $195 = $6;
   $197 = HEAP32[$195 >> 2] | 0;
   $200 = HEAP32[$195 + 4 >> 2] | 0;
   $202 = _fmt_x($197, $200, $11, $$1236 & 32) | 0;
   $or$cond283 = ($$3265 & 8 | 0) == 0 | ($197 | 0) == 0 & ($200 | 0) == 0;
   $$0228 = $202;
   $$1233 = $or$cond283 ? 0 : 2;
   $$1238 = $or$cond283 ? 23814 : 23814 + ($$1236 >> 4) | 0;
   $$2256 = $$1255;
   $$4266 = $$3265;
   $247 = $197;
   $249 = $200;
   label = 67;
  } else if ((label | 0) == 66) {
   label = 0;
   $$0228 = _fmt_u($242, $243, $11) | 0;
   $$1233 = $$0232;
   $$1238 = $$0237;
   $$2256 = $$0254;
   $$4266 = $$1263$;
   $247 = $242;
   $249 = $243;
   label = 67;
  } else if ((label | 0) == 71) {
   label = 0;
   $272 = _memchr($$1, 0, $$0254) | 0;
   $273 = ($272 | 0) == 0;
   $$2 = $$1;
   $$2234 = 0;
   $$2239 = 23814;
   $$2251 = $273 ? $$1 + $$0254 | 0 : $272;
   $$5 = $273 ? $$0254 : $272 - $$1 | 0;
   $$6268 = $164;
  } else if ((label | 0) == 75) {
   label = 0;
   $$0229322 = $331;
   $$0240321 = 0;
   $$1244320 = 0;
   while (1) {
    $285 = HEAP32[$$0229322 >> 2] | 0;
    if (!$285) {
     $$0240$lcssa = $$0240321;
     $$2245 = $$1244320;
     break;
    }
    $287 = _wctomb($9, $285) | 0;
    if (($287 | 0) < 0 | $287 >>> 0 > ($$4258355 - $$0240321 | 0) >>> 0) {
     $$0240$lcssa = $$0240321;
     $$2245 = $287;
     break;
    }
    $292 = $287 + $$0240321 | 0;
    if ($$4258355 >>> 0 > $292 >>> 0) {
     $$0229322 = $$0229322 + 4 | 0;
     $$0240321 = $292;
     $$1244320 = $287;
    } else {
     $$0240$lcssa = $292;
     $$2245 = $287;
     break;
    }
   }
   if (($$2245 | 0) < 0) {
    $$0 = -1;
    break L1;
   }
   _pad($0, 32, $$1260, $$0240$lcssa, $$1263$);
   if (!$$0240$lcssa) {
    $$0240$lcssa357 = 0;
    label = 84;
   } else {
    $$1230333 = $331;
    $$1241332 = 0;
    while (1) {
     $296 = HEAP32[$$1230333 >> 2] | 0;
     if (!$296) {
      $$0240$lcssa357 = $$0240$lcssa;
      label = 84;
      break L95;
     }
     $298 = _wctomb($9, $296) | 0;
     $$1241332 = $298 + $$1241332 | 0;
     if (($$1241332 | 0) > ($$0240$lcssa | 0)) {
      $$0240$lcssa357 = $$0240$lcssa;
      label = 84;
      break L95;
     }
     _out_57($0, $9, $298);
     if ($$1241332 >>> 0 >= $$0240$lcssa >>> 0) {
      $$0240$lcssa357 = $$0240$lcssa;
      label = 84;
      break;
     } else $$1230333 = $$1230333 + 4 | 0;
    }
   }
  } while (0);
  if ((label | 0) == 67) {
   label = 0;
   $251 = ($247 | 0) != 0 | ($249 | 0) != 0;
   $or$cond = ($$2256 | 0) != 0 | $251;
   $257 = (($251 ^ 1) & 1) + ($12 - $$0228) | 0;
   $$2 = $or$cond ? $$0228 : $11;
   $$2234 = $$1233;
   $$2239 = $$1238;
   $$2251 = $11;
   $$5 = $or$cond ? (($$2256 | 0) > ($257 | 0) ? $$2256 : $257) : $$2256;
   $$6268 = ($$2256 | 0) > -1 ? $$4266 & -65537 : $$4266;
  } else if ((label | 0) == 84) {
   label = 0;
   _pad($0, 32, $$1260, $$0240$lcssa357, $$1263$ ^ 8192);
   $$0243 = ($$1260 | 0) > ($$0240$lcssa357 | 0) ? $$1260 : $$0240$lcssa357;
   $$0247 = $$1248;
   $$0269 = $$3272;
   $21 = $132;
   continue;
  }
  $310 = $$2251 - $$2 | 0;
  $$$5 = ($$5 | 0) < ($310 | 0) ? $310 : $$5;
  $312 = $$$5 + $$2234 | 0;
  $$2261 = ($$1260 | 0) < ($312 | 0) ? $312 : $$1260;
  _pad($0, 32, $$2261, $312, $$6268);
  _out_57($0, $$2239, $$2234);
  _pad($0, 48, $$2261, $312, $$6268 ^ 65536);
  _pad($0, 48, $$$5, $310, 0);
  _out_57($0, $$2, $310);
  _pad($0, 32, $$2261, $312, $$6268 ^ 8192);
  $$0243 = $$2261;
  $$0247 = $$1248;
  $$0269 = $$3272;
  $21 = $132;
 }
 L114 : do if ((label | 0) == 87) if (!$0) if (!$$0269) $$0 = 0; else {
  $$2242305 = 1;
  while (1) {
   $319 = HEAP32[$4 + ($$2242305 << 2) >> 2] | 0;
   if (!$319) {
    $$3303 = $$2242305;
    break;
   }
   _pop_arg_60($3 + ($$2242305 << 3) | 0, $319, $2);
   $$2242305 = $$2242305 + 1 | 0;
   if (($$2242305 | 0) >= 10) {
    $$0 = 1;
    break L114;
   }
  }
  while (1) {
   if (HEAP32[$4 + ($$3303 << 2) >> 2] | 0) {
    $$0 = -1;
    break L114;
   }
   $$3303 = $$3303 + 1 | 0;
   if (($$3303 | 0) >= 10) {
    $$0 = 1;
    break;
   }
  }
 } else $$0 = $$1248; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN8optframe4NGESI6RepHFMiE11competitionERNSt3__26vectorIPNS_7NGESIndIS1_iEENS3_9allocatorIS7_EEEESB_RNS_8SolutionIS1_iEERNS_10EvaluationERiRKii($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0174 = 0, $$093172 = 0, $$094166 = 0, $$095169 = 0, $$096167 = 0, $$in = 0, $$pre$phi182Z2D = 0, $10 = 0, $100 = 0, $104 = 0, $105 = 0, $11 = 0, $113 = 0, $119 = 0, $124 = 0, $128 = 0, $13 = 0, $132 = 0, $158 = 0, $162 = 0, $165 = 0, $167 = 0, $177 = 0, $18 = 0, $183 = 0, $188 = 0, $192 = 0, $193 = 0, $196 = 0, $215 = 0, $220 = 0, $224 = 0, $227 = 0, $228 = 0, $229 = 0, $234 = 0, $240 = 0, $241 = 0, $242 = 0, $244 = 0, $245 = 0, $254 = 0, $259 = 0, $261 = 0, $266 = 0, $27 = 0, $270 = 0, $274 = 0, $275 = 0, $276 = 0, $282 = 0, $284 = 0.0, $286 = 0, $29 = 0, $30 = 0, $301 = 0, $303 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $53 = 0, $56 = 0, $58 = 0, $62 = 0, $69 = 0, $74 = 0, $8 = 0, $83 = 0, $88 = 0, $9 = 0, $96 = 0.0, $scevgep4$i$i$i = 0, $storemerge = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 $vararg_buffer3 = sp + 104 | 0;
 $vararg_buffer = sp + 88 | 0;
 $8 = sp + 72 | 0;
 $9 = sp;
 $10 = sp + 144 | 0;
 $11 = sp + 128 | 0;
 $13 = $2 + 4 | 0;
 if (($7 | 0) == 1) {
  $18 = $0 + 48 | 0;
  __ZNSt3__26vectorIPN8optframe7NGESIndI6RepHFMiEENS_9allocatorIS5_EEE7reserveEj($2, ((HEAP32[$13 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) >> 2) + (HEAP32[(HEAP32[$18 >> 2] | 0) + 24 >> 2] | 0) | 0);
  if ((HEAP32[(HEAP32[$18 >> 2] | 0) + 24 >> 2] | 0) > 0) {
   $27 = $2 + 8 | 0;
   $$0174 = 0;
   do {
    $29 = (HEAP32[$1 >> 2] | 0) + ($$0174 << 2) | 0;
    $30 = HEAP32[$13 >> 2] | 0;
    if (($30 | 0) == (HEAP32[$27 >> 2] | 0)) __ZNSt3__26vectorIPN8optframe7NGESIndI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($2, $29); else {
     HEAP32[$30 >> 2] = HEAP32[$29 >> 2];
     HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 4;
    }
    $$0174 = $$0174 + 1 | 0;
   } while (($$0174 | 0) < (HEAP32[(HEAP32[$18 >> 2] | 0) + 24 >> 2] | 0));
  }
 }
 $41 = HEAP32[$2 >> 2] | 0;
 $42 = HEAP32[$13 >> 2] | 0;
 HEAP32[$8 >> 2] = $0;
 __ZNSt3__26__sortIRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEvT0_SO_T_($41, $42, $8);
 $43 = HEAP32[$1 >> 2] | 0;
 $44 = $1 + 4 | 0;
 $45 = HEAP32[$44 >> 2] | 0;
 $47 = $43;
 if (($45 | 0) == ($43 | 0)) $$in = $45; else {
  $scevgep4$i$i$i = $45 + (~(($45 + -4 - $47 | 0) >>> 2) << 2) | 0;
  HEAP32[$44 >> 2] = $scevgep4$i$i$i;
  $$in = $scevgep4$i$i$i;
 }
 $53 = $0 + 48 | 0;
 $56 = HEAP32[(HEAP32[$53 >> 2] | 0) + 24 >> 2] | 0;
 $58 = $$in - $47 >> 2;
 if ($56 >>> 0 > $58 >>> 0) __ZNSt3__26vectorIPN8optframe7NGESIndI6RepHFMiEENS_9allocatorIS5_EEE8__appendEj($1, $56 - $58 | 0); else if ($56 >>> 0 < $58 >>> 0) {
  $62 = $43 + ($56 << 2) | 0;
  if (($$in | 0) != ($62 | 0)) HEAP32[$44 >> 2] = $$in + (~(($$in + -4 - $62 | 0) >>> 2) << 2);
 }
 $69 = HEAP32[$53 >> 2] | 0;
 if ((HEAP32[$69 + 24 >> 2] | 0) > 0) {
  $$093172 = 0;
  do {
   HEAP32[(HEAP32[$1 >> 2] | 0) + ($$093172 << 2) >> 2] = HEAP32[(HEAP32[$2 >> 2] | 0) + ($$093172 << 2) >> 2];
   $$093172 = $$093172 + 1 | 0;
   $83 = HEAP32[$53 >> 2] | 0;
  } while (($$093172 | 0) < (HEAP32[$83 + 24 >> 2] | 0));
  $74 = $83;
 } else $74 = $69;
 if ((HEAP32[$74 + 28 >> 2] | 0) > 0) {
  $$095169 = 0;
  $119 = $74;
  while (1) {
   $124 = HEAP32[(HEAP32[$2 >> 2] | 0) + ((HEAP32[$119 + 24 >> 2] | 0) + $$095169 << 2) >> 2] | 0;
   if (!$124) $128 = $119; else {
    __ZN8optframe7NGESIndI6RepHFMiED2Ev($124);
    __ZdlPv($124);
    $128 = HEAP32[$53 >> 2] | 0;
   }
   $$095169 = $$095169 + 1 | 0;
   if (($$095169 | 0) >= (HEAP32[$128 + 28 >> 2] | 0)) break; else $119 = $128;
  }
 }
 $88 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
 $96 = +HEAPF64[$88 + 56 >> 3] + +HEAPF64[$88 + 96 >> 3] * +HEAPF64[$88 + 64 >> 3];
 $100 = $9 + 12 | 0;
 HEAP8[$100 + 4 >> 0] = 0;
 HEAP32[$9 + 8 >> 2] = 2;
 HEAP8[$9 + 15 >> 0] = 0;
 HEAP8[$100 >> 0] = 1;
 HEAP8[$9 + 13 >> 0] = 1;
 HEAP8[$9 + 14 >> 0] = 0;
 HEAP32[$9 >> 2] = 4920;
 HEAPF64[$9 + 24 >> 3] = $96;
 $104 = $9 + 40 | 0;
 HEAP32[$104 >> 2] = 0;
 $105 = $9 + 44 | 0;
 HEAP32[$105 >> 2] = 0;
 HEAP32[$9 + 48 >> 2] = 0;
 HEAPF64[$9 + 64 >> 3] = 1.0;
 HEAPF64[$9 + 32 >> 3] = 0.0;
 HEAP32[$9 + 52 >> 2] = 2;
 HEAP8[$9 + 56 >> 0] = 0;
 HEAP8[$9 + 57 >> 0] = 0;
 $113 = HEAP32[$0 + 20 >> 2] | 0;
 if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$113 >> 2] | 0) + 40 >> 2] & 63]($113, $9, $4) | 0) {
  $132 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
  if (($132 + 32 | 0) == ($4 | 0)) $158 = $132; else {
   HEAPF64[$4 + 24 >> 3] = +HEAPF64[$132 + 56 >> 3];
   HEAPF64[$4 + 32 >> 3] = +HEAPF64[$132 + 64 >> 3];
   HEAP8[$4 + 56 >> 0] = HEAP8[$132 + 88 >> 0] | 0;
   HEAP8[$4 + 57 >> 0] = HEAP8[$132 + 89 >> 0] | 0;
   HEAPF64[$4 + 64 >> 3] = +HEAPF64[$132 + 96 >> 3];
   __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($4 + 40 | 0, HEAP32[$132 + 72 >> 2] | 0, HEAP32[$132 + 76 >> 2] | 0);
   HEAP32[$4 + 52 >> 2] = HEAP32[$132 + 84 >> 2];
   $158 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
  }
  __ZN8optframe8SolutionI6RepHFMiEaSERKS2_($3, $158) | 0;
  if (!(HEAP8[$0 + 14 >> 0] | 0)) $$pre$phi182Z2D = $0 + 15 | 0; else {
   $162 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17822, 4) | 0;
   $165 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($162, HEAP32[$6 >> 2] | 0) | 0, 17827, 10) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($165, HEAP32[$5 >> 2] | 0) | 0;
   $167 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17838, 9) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($167, +HEAPF64[$4 + 24 >> 3] + +HEAPF64[$4 + 64 >> 3] * +HEAPF64[$4 + 32 >> 3]) | 0, 15682, 3) | 0;
   $177 = $0 + 52 | 0;
   if ((HEAP32[$177 >> 2] | 0) > 0) {
    $$096167 = 0;
    do {
     $196 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 15618, 1) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($196, +HEAPF64[(HEAP32[(HEAP32[HEAP32[$1 >> 2] >> 2] | 0) + 104 >> 2] | 0) + ($$096167 << 5) >> 3]) | 0;
     __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 15620, 1) | 0;
     __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(33664, HEAP32[(HEAP32[(HEAP32[HEAP32[$1 >> 2] >> 2] | 0) + 104 >> 2] | 0) + ($$096167 << 5) + 8 >> 2] | 0) | 0, 17133, 2) | 0;
     $$096167 = $$096167 + 1 | 0;
    } while (($$096167 | 0) < (HEAP32[$177 >> 2] | 0));
   }
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17848, 2) | 0;
   $183 = __ZN8optframelsIiEERNSt3__213basic_ostreamIcNS1_11char_traitsIcEEEES6_RKNS1_6vectorIT_NS1_9allocatorIS8_EEEE(33664, (HEAP32[HEAP32[$1 >> 2] >> 2] | 0) + 116 | 0) | 0;
   __ZNKSt3__28ios_base6getlocEv($8, $183 + (HEAP32[(HEAP32[$183 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $188 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 34536) | 0;
   $192 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$188 >> 2] | 0) + 28 >> 2] & 63]($188, 10) | 0;
   __ZNSt3__26localeD2Ev($8);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($183, $192) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($183) | 0;
   $193 = $0 + 15 | 0;
   if (!(HEAP8[$193 >> 0] | 0)) $$pre$phi182Z2D = $193; else {
    $215 = __ZlsRNSt3__213basic_ostreamIcNS_11char_traitsIcEEEERK6RepHFM(33664, HEAP32[$3 + 20 >> 2] | 0) | 0;
    __ZNKSt3__28ios_base6getlocEv($8, 33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) | 0);
    $220 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 34536) | 0;
    $224 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$220 >> 2] | 0) + 28 >> 2] & 63]($220, 10) | 0;
    __ZNSt3__26localeD2Ev($8);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($215, $224) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($215) | 0;
    $$pre$phi182Z2D = $193;
   }
  }
  if (!(HEAP8[$$pre$phi182Z2D >> 0] | 0)) $storemerge = 0; else {
   $227 = $10 + 64 | 0;
   $228 = $10 + 8 | 0;
   HEAP32[$228 >> 2] = 3472;
   $229 = $10 + 12 | 0;
   HEAP32[$10 >> 2] = 404;
   HEAP32[$227 >> 2] = 424;
   HEAP32[$10 + 4 >> 2] = 0;
   __ZNSt3__28ios_base4initEPv($10 + 64 | 0, $229);
   HEAP32[$10 + 136 >> 2] = 0;
   HEAP32[$10 + 140 >> 2] = -1;
   HEAP32[$10 >> 2] = 3452;
   HEAP32[$227 >> 2] = 3492;
   HEAP32[$228 >> 2] = 3472;
   __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($229);
   HEAP32[$229 >> 2] = 3548;
   $234 = $10 + 44 | 0;
   HEAP32[$234 >> 2] = 0;
   HEAP32[$234 + 4 >> 2] = 0;
   HEAP32[$234 + 8 >> 2] = 0;
   HEAP32[$234 + 12 >> 2] = 0;
   HEAP32[$10 + 60 >> 2] = 24;
   HEAP32[$8 >> 2] = 0;
   HEAP32[$8 + 4 >> 2] = 0;
   HEAP32[$8 + 8 >> 2] = 0;
   __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($229, $8);
   if ((HEAP8[$8 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$8 >> 2] | 0);
   $240 = $10 + 8 | 0;
   $241 = HEAP32[$53 >> 2] | 0;
   $242 = $241 + 36 | 0;
   $244 = HEAP8[$242 + 11 >> 0] | 0;
   $245 = $244 << 24 >> 24 < 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($240, $245 ? HEAP32[$242 >> 2] | 0 : $242, $245 ? HEAP32[$241 + 40 >> 2] | 0 : $244 & 255) | 0, 17851, 1) | 0, 17853, 4) | 0;
   __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($11, $229);
   $254 = $11 + 11 | 0;
   $259 = _fopen((HEAP8[$254 >> 0] | 0) < 0 ? HEAP32[$11 >> 2] | 0 : $11, 17580) | 0;
   if (!$259) {
    $261 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17858, 45) | 0;
    __ZNKSt3__28ios_base6getlocEv($8, $261 + (HEAP32[(HEAP32[$261 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $266 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 34536) | 0;
    $270 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$266 >> 2] | 0) + 28 >> 2] & 63]($266, 10) | 0;
    __ZNSt3__26localeD2Ev($8);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($261, $270) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($261) | 0;
   } else {
    $274 = HEAP32[$6 >> 2] | 0;
    $275 = HEAP32[$5 >> 2] | 0;
    HEAP32[$vararg_buffer >> 2] = HEAP32[(HEAP32[$53 >> 2] | 0) + 48 >> 2];
    HEAP32[$vararg_buffer + 4 >> 2] = $274;
    HEAP32[$vararg_buffer + 8 >> 2] = $275;
    _fprintf($259, 17904, $vararg_buffer) | 0;
    $276 = $0 + 52 | 0;
    if ((HEAP32[$276 >> 2] | 0) > 0) {
     $$094166 = 0;
     do {
      $282 = HEAP32[(HEAP32[HEAP32[$1 >> 2] >> 2] | 0) + 104 >> 2] | 0;
      $284 = +HEAPF64[$282 + ($$094166 << 5) >> 3];
      $286 = HEAP32[$282 + ($$094166 << 5) + 8 >> 2] | 0;
      HEAPF64[$vararg_buffer3 >> 3] = $284;
      HEAP32[$vararg_buffer3 + 8 >> 2] = $286;
      HEAPF64[$vararg_buffer3 + 16 >> 3] = $284 * +($286 | 0);
      _fprintf($259, 17914, $vararg_buffer3) | 0;
      $$094166 = $$094166 + 1 | 0;
     } while (($$094166 | 0) < (HEAP32[$276 >> 2] | 0));
    }
    _fputc(10, $259) | 0;
    _fclose($259) | 0;
   }
   if ((HEAP8[$254 >> 0] | 0) < 0) __ZdlPv(HEAP32[$11 >> 2] | 0);
   HEAP32[$10 >> 2] = 3452;
   HEAP32[$227 >> 2] = 3492;
   HEAP32[$240 >> 2] = 3472;
   HEAP32[$229 >> 2] = 3548;
   if ((HEAP8[$234 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$234 >> 2] | 0);
   __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($229);
   __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($10, 3504);
   __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($227);
   $storemerge = 0;
  }
 } else $storemerge = (HEAP32[$5 >> 2] | 0) + 1 | 0;
 HEAP32[$5 >> 2] = $storemerge;
 HEAP32[$9 >> 2] = 4920;
 $301 = HEAP32[$104 >> 2] | 0;
 if (!$301) {
  STACKTOP = sp;
  return;
 }
 $303 = HEAP32[$105 >> 2] | 0;
 if (($303 | 0) != ($301 | 0)) HEAP32[$105 >> 2] = $303 + (~(($303 + -16 - $301 | 0) >>> 4) << 4);
 __ZdlPv($301);
 STACKTOP = sp;
 return;
}

function __ZN17paretoManagerGPLSI6RepHFMiE18addSolutionWithMEVERN8optframe6ParetoIS0_iEERKNS2_8SolutionIS0_iEERKNS2_15MultiEvaluationE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$i = 0, $$0$lcssa$i$i10$i = 0, $$03486 = 0, $$03687 = 0, $$078$i$i$i = 0, $$09$i$i$i = 0, $$238$ph = 0, $$3 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$idx = 0, $$pre$i43 = 0, $$pre$phi$i$i$i$i$iZ2D = 0, $$pre$phi9$i$i$i$i$iZ2D = 0, $$sink3$i$i = 0, $$sink3$i$i$i$i = 0, $$sroa$7$0$i$i = 0, $$sroa$7$1$i$i = 0, $$sroa$speculated$i$i$i = 0, $$sroa_raw_idx$i = 0, $106 = 0, $107 = 0, $108 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $117 = 0, $123 = 0, $124 = 0, $125 = 0, $127 = 0, $129 = 0, $13 = 0, $135 = 0, $136 = 0, $14 = 0, $141 = 0, $142 = 0, $143 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $151 = 0, $152 = 0, $153 = 0, $158 = 0, $16 = 0, $161 = 0, $167 = 0, $17 = 0, $179 = 0, $18 = 0, $181 = 0, $182 = 0, $184 = 0, $185 = 0, $187 = 0, $19 = 0, $190 = 0, $197 = 0, $198 = 0, $20 = 0, $21 = 0, $211 = 0, $212 = 0, $213 = 0, $216 = 0, $217 = 0, $22 = 0, $221 = 0, $222 = 0, $223 = 0, $228 = 0, $23 = 0, $231 = 0, $233 = 0, $24 = 0, $240 = 0, $243 = 0, $244 = 0, $249 = 0, $25 = 0, $251 = 0, $254 = 0, $256 = 0, $257 = 0, $26 = 0, $263 = 0, $266 = 0, $267 = 0, $268 = 0, $27 = 0, $270 = 0, $276 = 0, $278 = 0, $28 = 0, $281 = 0, $284 = 0, $289 = 0, $291 = 0, $292 = 0, $30 = 0, $36 = 0, $4 = 0, $47 = 0, $5 = 0, $59 = 0, $6 = 0, $66 = 0, $7 = 0, $72 = 0, $73 = 0, $74 = 0, $76 = 0, $77 = 0, $8 = 0, $80 = 0, $81 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $93 = 0, $94 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy1 = sp + 48 | 0;
 $$byval_copy = sp + 40 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 $6 = sp + 24 | 0;
 $7 = sp + 16 | 0;
 $8 = $1 + 4 | 0;
 $9 = $1 + 8 | 0;
 L1 : do if ((HEAP32[$9 >> 2] | 0) != (HEAP32[$8 >> 2] | 0)) {
  $13 = $1 + 16 | 0;
  $14 = $1 + 20 | 0;
  $15 = $0 + 28 | 0;
  $16 = $$byval_copy1 + 4 | 0;
  $17 = $0 + 8 | 0;
  $18 = $$byval_copy1 + 4 | 0;
  $19 = $3 + 20 | 0;
  $20 = $3 + 24 | 0;
  $21 = $1 + 4 | 0;
  $22 = $1 + 16 | 0;
  $23 = $0 + 52 | 0;
  $24 = $0 + 56 | 0;
  $25 = $0 + 64 | 0;
  $26 = $0 + 68 | 0;
  $27 = $7 + 4 | 0;
  $$sroa_raw_idx$i = $5 + 4 | 0;
  $28 = $6 + 4 | 0;
  $$03687 = 0;
  while (1) {
   $30 = HEAP32[$13 >> 2] | 0;
   if ((HEAP32[$14 >> 2] | 0) - $30 >> 2 >>> 0 <= $$03687 >>> 0) {
    label = 4;
    break;
   }
   $36 = HEAP32[$30 + ($$03687 << 2) >> 2] | 0;
   __ZN8optframe15ParetoDominanceI6RepHFMiE14checkDominatesERKNS_15MultiEvaluationES5_($$byval_copy1, $15, $36, $3);
   if (((HEAP32[$16 >> 2] | 0) + (HEAP32[$$byval_copy1 >> 2] | 0) | 0) == (((HEAP32[$36 + 24 >> 2] | 0) - (HEAP32[$36 + 20 >> 2] | 0) | 0) / 72 | 0 | 0)) {
    $$3 = 0;
    label = 66;
    break;
   }
   __ZN8optframe15ParetoDominanceI6RepHFMiE14checkDominatesERKNS_15MultiEvaluationES5_($$byval_copy1, $17, $3, $36);
   $47 = HEAP32[$$byval_copy1 >> 2] | 0;
   if (($47 | 0) > 0 ? ((HEAP32[$18 >> 2] | 0) + $47 | 0) == (((HEAP32[$20 >> 2] | 0) - (HEAP32[$19 >> 2] | 0) | 0) / 72 | 0 | 0) : 0) {
    $59 = HEAP32[(HEAP32[$21 >> 2] | 0) + ($$03687 << 2) >> 2] | 0;
    if ($59 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$59 >> 2] | 0) + 4 >> 2] & 511]($59);
    $66 = HEAP32[(HEAP32[$22 >> 2] | 0) + ($$03687 << 2) >> 2] | 0;
    if ($66 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$66 >> 2] | 0) + 4 >> 2] & 511]($66);
    $72 = (HEAP32[$21 >> 2] | 0) + ($$03687 << 2) | 0;
    $73 = $72 + 4 | 0;
    $74 = HEAP32[$9 >> 2] | 0;
    $76 = $74 - $73 | 0;
    $77 = $76 >> 2;
    if (!$77) $81 = $74; else {
     _memmove($72 | 0, $73 | 0, $76 | 0) | 0;
     $81 = HEAP32[$9 >> 2] | 0;
    }
    $80 = $72 + ($77 << 2) | 0;
    if (($81 | 0) != ($80 | 0)) HEAP32[$9 >> 2] = $81 + (~(($81 + -4 - $80 | 0) >>> 2) << 2);
    $89 = (HEAP32[$22 >> 2] | 0) + ($$03687 << 2) | 0;
    $90 = $89 + 4 | 0;
    $91 = HEAP32[$14 >> 2] | 0;
    $93 = $91 - $90 | 0;
    $94 = $93 >> 2;
    if (!$94) $98 = $91; else {
     _memmove($89 | 0, $90 | 0, $93 | 0) | 0;
     $98 = HEAP32[$14 >> 2] | 0;
    }
    $97 = $89 + ($94 << 2) | 0;
    if (($98 | 0) != ($97 | 0)) HEAP32[$14 >> 2] = $98 + (~(($98 + -4 - $97 | 0) >>> 2) << 2);
    $106 = (HEAP32[$23 >> 2] | 0) + ($$03687 * 12 | 0) | 0;
    $107 = $106 + 12 | 0;
    $108 = HEAP32[$24 >> 2] | 0;
    if (($107 | 0) == ($108 | 0)) {
     $$0$lcssa$i$i10$i = $106;
     $291 = $107;
     label = 25;
    } else {
     $$078$i$i$i = $107;
     $$09$i$i$i = $106;
     do {
      $110 = HEAP32[$$09$i$i$i >> 2] | 0;
      if (!$110) {
       $$pre$phi$i$i$i$i$iZ2D = $$09$i$i$i + 4 | 0;
       $$pre$phi9$i$i$i$i$iZ2D = $$09$i$i$i + 8 | 0;
      } else {
       $112 = $$09$i$i$i + 8 | 0;
       __ZdlPv($110);
       HEAP32[$$09$i$i$i >> 2] = 0;
       HEAP32[$112 >> 2] = 0;
       $113 = $$09$i$i$i + 4 | 0;
       HEAP32[$113 >> 2] = 0;
       $$pre$phi$i$i$i$i$iZ2D = $113;
       $$pre$phi9$i$i$i$i$iZ2D = $112;
      }
      HEAP32[$$09$i$i$i >> 2] = HEAP32[$$078$i$i$i >> 2];
      $115 = $$078$i$i$i + 4 | 0;
      HEAP32[$$pre$phi$i$i$i$i$iZ2D >> 2] = HEAP32[$115 >> 2];
      $117 = $$078$i$i$i + 8 | 0;
      HEAP32[$$pre$phi9$i$i$i$i$iZ2D >> 2] = HEAP32[$117 >> 2];
      HEAP32[$$078$i$i$i >> 2] = 0;
      HEAP32[$115 >> 2] = 0;
      HEAP32[$117 >> 2] = 0;
      $$078$i$i$i = $$078$i$i$i + 12 | 0;
      $$09$i$i$i = $$09$i$i$i + 12 | 0;
     } while (($$078$i$i$i | 0) != ($108 | 0));
     $$pre$i43 = HEAP32[$24 >> 2] | 0;
     if (($$pre$i43 | 0) != ($$09$i$i$i | 0)) {
      $$0$lcssa$i$i10$i = $$09$i$i$i;
      $291 = $$pre$i43;
      label = 25;
     }
    }
    if ((label | 0) == 25) {
     label = 0;
     $124 = $291;
     while (1) {
      $123 = $124 + -12 | 0;
      HEAP32[$24 >> 2] = $123;
      $125 = HEAP32[$123 >> 2] | 0;
      if (!$125) $127 = $123; else {
       __ZdlPv($125);
       $127 = HEAP32[$24 >> 2] | 0;
      }
      if (($127 | 0) == ($$0$lcssa$i$i10$i | 0)) break; else $124 = $127;
     }
    }
    $129 = HEAP32[$25 >> 2] | 0;
    if (($$03687 | 0) > -1) $$sink3$i$i = $$03687 >>> 5; else $$sink3$i$i = ($$03687 + -31 | 0) / 32 | 0;
    $135 = $$03687 & 31;
    $$idx = $$sink3$i$i << 5;
    $136 = $$idx | $135;
    if (($136 | 0) > -1) $$sink3$i$i$i$i = $$sink3$i$i & 134217727; else $$sink3$i$i$i$i = ($136 + -31 | 0) / 32 | 0;
    $141 = $129 + ($$sink3$i$i$i$i << 2) | 0;
    $142 = $$idx + $$03687 & 31;
    $143 = $135 + 1 | 0;
    $145 = $129 + ($$sink3$i$i << 2) + ($143 >>> 5 << 2) | 0;
    $146 = $145;
    $147 = $$03687 + 1 & 31;
    $148 = HEAP32[$26 >> 2] | 0;
    $151 = $148 & 31;
    $152 = $141;
    $153 = $129 + ($148 >>> 5 << 2) | 0;
    if (($147 | 0) == ($142 | 0)) {
     $158 = ($153 - $146 << 3) + ($151 - $142) | 0;
     do if (($158 | 0) > 0) {
      if (!$142) {
       $$0$i$i$i = $158;
       $$sroa$7$0$i$i = 0;
       $181 = $141;
       $182 = $145;
      } else {
       $161 = 32 - $142 | 0;
       $$sroa$speculated$i$i$i = ($158 | 0) < ($161 | 0) ? $158 : $161;
       $167 = -1 >>> ($161 - $$sroa$speculated$i$i$i | 0) & -1 << $142;
       HEAP32[$141 >> 2] = HEAP32[$141 >> 2] & ~$167 | HEAP32[$145 >> 2] & $167;
       $$0$i$i$i = $158 - $$sroa$speculated$i$i$i | 0;
       $$sroa$7$0$i$i = $$sroa$speculated$i$i$i + $143 & 31;
       $181 = $141 + (($$sroa$speculated$i$i$i + $142 | 0) >>> 5 << 2) | 0;
       $182 = $145 + 4 | 0;
      }
      $179 = ($$0$i$i$i | 0) / 32 | 0;
      _memmove($181 | 0, $182 | 0, $179 << 2 | 0) | 0;
      $184 = $$0$i$i$i - ($179 << 5) | 0;
      $185 = $181 + ($179 << 2) | 0;
      $187 = $185;
      if (($184 | 0) <= 0) {
       $$sroa$7$1$i$i = $$sroa$7$0$i$i;
       $197 = $187;
       break;
      }
      $190 = -1 >>> (32 - $184 | 0);
      HEAP32[$185 >> 2] = HEAP32[$185 >> 2] & ~$190 | HEAP32[$182 + ($179 << 2) >> 2] & $190;
      $$sroa$7$1$i$i = $184;
      $197 = $187;
     } else {
      $$sroa$7$1$i$i = $142;
      $197 = $152;
     } while (0);
     HEAP32[$7 >> 2] = $197;
     HEAP32[$27 >> 2] = $$sroa$7$1$i$i;
    } else {
     $198 = $4;
     HEAP32[$198 >> 2] = $146;
     HEAP32[$198 + 4 >> 2] = $147;
     HEAP32[$5 >> 2] = $153;
     HEAP32[$$sroa_raw_idx$i >> 2] = $151;
     HEAP32[$6 >> 2] = $152;
     HEAP32[$28 >> 2] = $142;
     HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
     HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
     HEAP32[$$byval_copy1 >> 2] = HEAP32[$5 >> 2];
     HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     __ZNSt3__216__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_($7, $$byval_copy, $$byval_copy1, $6);
    }
    HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + -1;
    $$238$ph = $$03687 + -1 | 0;
   } else $$238$ph = $$03687;
   $$03687 = $$238$ph + 1 | 0;
   if ($$03687 >>> 0 >= (HEAP32[$9 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 2 >>> 0) break L1;
  }
  if ((label | 0) == 4) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($13); else if ((label | 0) == 66) {
   STACKTOP = sp;
   return $$3 | 0;
  }
 } while (0);
 __ZN8optframe6ParetoI6RepHFMiE14add_indWithMevERKNS_8SolutionIS1_iEERKNS_15MultiEvaluationE($1, $2, $3);
 HEAP32[$6 >> 2] = 0;
 $211 = $6 + 4 | 0;
 HEAP32[$211 >> 2] = 0;
 $212 = $6 + 8 | 0;
 HEAP32[$212 >> 2] = 0;
 $213 = $0 + 48 | 0;
 L67 : do if ((HEAP32[$213 >> 2] | 0) > 0) {
  $$03486 = 0;
  $243 = 0;
  $244 = 0;
  $292 = 0;
  while (1) {
   if (($244 | 0) == ($243 << 5 | 0)) {
    if (($244 + 1 | 0) < 0) break;
    $249 = $243 << 6;
    $251 = $244 + 32 & -32;
    __ZNSt3__26vectorIbNS_9allocatorIbEEE7reserveEj($6, $244 >>> 0 < 1073741823 ? ($249 >>> 0 < $251 >>> 0 ? $251 : $249) : 2147483647);
    $254 = HEAP32[$211 >> 2] | 0;
    $257 = HEAP32[$6 >> 2] | 0;
   } else {
    $254 = $244;
    $257 = $292;
   }
   HEAP32[$211 >> 2] = $254 + 1;
   $256 = $257 + ($254 >>> 5 << 2) | 0;
   HEAP32[$256 >> 2] = HEAP32[$256 >> 2] & ~(1 << ($254 & 31));
   $263 = $$03486 + 1 | 0;
   if (($263 | 0) >= (HEAP32[$213 >> 2] | 0)) break L67;
   $$03486 = $263;
   $243 = HEAP32[$212 >> 2] | 0;
   $244 = HEAP32[$211 >> 2] | 0;
   $292 = $257;
  }
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($6);
 } while (0);
 $216 = $0 + 56 | 0;
 $217 = HEAP32[$216 >> 2] | 0;
 if (($217 | 0) == (HEAP32[$0 + 60 >> 2] | 0)) __ZNSt3__26vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0 + 52 | 0, $6); else {
  HEAP32[$217 >> 2] = 0;
  $221 = $217 + 4 | 0;
  HEAP32[$221 >> 2] = 0;
  $222 = $217 + 8 | 0;
  HEAP32[$222 >> 2] = 0;
  $223 = HEAP32[$211 >> 2] | 0;
  do if (!$223) $240 = $217; else if (($223 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($217); else {
   $228 = (($223 + -1 | 0) >>> 5) + 1 | 0;
   HEAP32[$217 >> 2] = __Znwj($228 << 2) | 0;
   HEAP32[$221 >> 2] = 0;
   HEAP32[$222 >> 2] = $228;
   $231 = HEAP32[$6 >> 2] | 0;
   HEAP32[$4 >> 2] = $231;
   HEAP32[$4 + 4 >> 2] = 0;
   $233 = HEAP32[$211 >> 2] | 0;
   HEAP32[$5 >> 2] = $231 + ($233 >>> 5 << 2);
   HEAP32[$5 + 4 >> 2] = $233 & 31;
   HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb1ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($217, $$byval_copy, $$byval_copy1);
   $240 = HEAP32[$216 >> 2] | 0;
   break;
  } while (0);
  HEAP32[$216 >> 2] = $240 + 12;
 }
 $266 = $0 + 64 | 0;
 $267 = $0 + 68 | 0;
 $268 = HEAP32[$267 >> 2] | 0;
 $270 = HEAP32[$0 + 72 >> 2] | 0;
 do if (($268 | 0) == ($270 << 5 | 0)) if (($268 + 1 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($266); else {
  $276 = $270 << 6;
  $278 = $268 + 32 & -32;
  __ZNSt3__26vectorIbNS_9allocatorIbEEE7reserveEj($266, $268 >>> 0 < 1073741823 ? ($276 >>> 0 < $278 >>> 0 ? $278 : $276) : 2147483647);
  $281 = HEAP32[$267 >> 2] | 0;
  break;
 } else $281 = $268; while (0);
 HEAP32[$267 >> 2] = $281 + 1;
 $284 = (HEAP32[$266 >> 2] | 0) + ($281 >>> 5 << 2) | 0;
 HEAP32[$284 >> 2] = HEAP32[$284 >> 2] | 1 << ($281 & 31);
 $289 = HEAP32[$6 >> 2] | 0;
 if ($289 | 0) __ZdlPv($289);
 $$3 = 1;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNSt3__26__sortIRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEvT0_SO_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i188 = 0, $$0$ph = 0, $$0154 = 0, $$0160240 = 0, $$0167 = 0, $$0174 = 0, $$0180$ph = 0, $$02933$i = 0, $$03032$i = 0, $$03032$i$phi = 0, $$1 = 0, $$1$i = 0, $$1$i$phi = 0, $$1155 = 0, $$1161 = 0, $$2156 = 0, $$2162 = 0, $$2176 = 0, $$3157 = 0, $$3163 = 0, $$3170 = 0, $$4158 = 0, $$4164 = 0, $$4171 = 0, $$5159 = 0, $$5165 = 0, $$5172 = 0, $$6166 = 0, $$6173 = 0, $100 = 0, $101 = 0, $110 = 0, $119 = 0, $12 = 0, $124 = 0, $136 = 0, $143 = 0, $146 = 0, $153 = 0, $160 = 0, $166 = 0, $174 = 0, $180 = 0, $187 = 0, $19 = 0, $190 = 0, $196 = 0, $203 = 0, $209 = 0, $217 = 0, $22 = 0, $226 = 0, $23 = 0, $234 = 0, $237 = 0, $238 = 0, $240 = 0, $28 = 0, $3 = 0, $35 = 0, $4 = 0, $41 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $6 = 0, $60 = 0, $66 = 0, $68 = 0, $7 = 0, $74 = 0, $81 = 0, $83 = 0, $86 = 0, $90 = 0, $96 = 0, label = 0;
 $$0$ph = $0;
 $$0180$ph = $1;
 L1 : while (1) {
  $3 = $$0180$ph;
  $4 = $$0180$ph + -4 | 0;
  $$0 = $$0$ph;
  while (1) {
   $$1 = $$0;
   L5 : while (1) {
    $5 = $$1;
    $6 = $3 - $5 | 0;
    $7 = $6 >> 2;
    switch ($7 | 0) {
    case 2:
     {
      label = 5;
      break L1;
      break;
     }
    case 3:
     {
      label = 7;
      break L1;
      break;
     }
    case 4:
     {
      label = 8;
      break L1;
      break;
     }
    case 5:
     {
      label = 12;
      break L1;
      break;
     }
    case 1:
    case 0:
     {
      label = 55;
      break L1;
      break;
     }
    default:
     {}
    }
    if (($6 | 0) < 124) {
     label = 14;
     break L1;
    }
    $100 = $$1 + ((($7 | 0) / 2 | 0) << 2) | 0;
    if (($6 | 0) > 3996) {
     $101 = ($7 | 0) / 4 | 0;
     $$0167 = __ZNSt3__27__sort5IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_SO_SO_T_($$1, $$1 + ($101 << 2) | 0, $100, $100 + ($101 << 2) | 0, $4, $2) | 0;
    } else $$0167 = __ZNSt3__27__sort3IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_T_($$1, $100, $4, $2) | 0;
    $110 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$110 >> 2] | 0) + 40 >> 2] & 63]($110, (HEAP32[$$1 >> 2] | 0) + 32 | 0, (HEAP32[$100 >> 2] | 0) + 32 | 0) | 0) {
     $$3157 = $4;
     $$3170 = $$0167;
     break;
    } else $$0154 = $4;
    while (1) {
     $$0154 = $$0154 + -4 | 0;
     if (($$1 | 0) == ($$0154 | 0)) break;
     $180 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$180 >> 2] | 0) + 40 >> 2] & 63]($180, (HEAP32[$$0154 >> 2] | 0) + 32 | 0, (HEAP32[$100 >> 2] | 0) + 32 | 0) | 0) {
      label = 38;
      break L5;
     }
    }
    $119 = $$1 + 4 | 0;
    $124 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$124 >> 2] | 0) + 40 >> 2] & 63]($124, (HEAP32[$$1 >> 2] | 0) + 32 | 0, (HEAP32[$4 >> 2] | 0) + 32 | 0) | 0) $$1161 = $119; else {
     if (($119 | 0) == ($4 | 0)) {
      label = 55;
      break L1;
     } else $$0160240 = $119;
     while (1) {
      $136 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
      if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$136 >> 2] | 0) + 40 >> 2] & 63]($136, (HEAP32[$$1 >> 2] | 0) + 32 | 0, (HEAP32[$$0160240 >> 2] | 0) + 32 | 0) | 0) break;
      $146 = $$0160240 + 4 | 0;
      if (($146 | 0) == ($4 | 0)) {
       label = 55;
       break L1;
      } else $$0160240 = $146;
     }
     $143 = HEAP32[$$0160240 >> 2] | 0;
     HEAP32[$$0160240 >> 2] = HEAP32[$4 >> 2];
     HEAP32[$4 >> 2] = $143;
     $$1161 = $$0160240 + 4 | 0;
    }
    if (($$1161 | 0) == ($4 | 0)) {
     label = 55;
     break L1;
    } else {
     $$1155 = $4;
     $$2162 = $$1161;
    }
    while (1) {
     $$3163 = $$2162;
     while (1) {
      $153 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
      $160 = $$3163 + 4 | 0;
      if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$153 >> 2] | 0) + 40 >> 2] & 63]($153, (HEAP32[$$1 >> 2] | 0) + 32 | 0, (HEAP32[$$3163 >> 2] | 0) + 32 | 0) | 0) {
       $$2156 = $$1155;
       break;
      } else $$3163 = $160;
     }
     do {
      $$2156 = $$2156 + -4 | 0;
      $166 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
     } while (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$166 >> 2] | 0) + 40 >> 2] & 63]($166, (HEAP32[$$1 >> 2] | 0) + 32 | 0, (HEAP32[$$2156 >> 2] | 0) + 32 | 0) | 0);
     if ($$3163 >>> 0 >= $$2156 >>> 0) {
      $$1 = $$3163;
      continue L5;
     }
     $174 = HEAP32[$$3163 >> 2] | 0;
     HEAP32[$$3163 >> 2] = HEAP32[$$2156 >> 2];
     HEAP32[$$2156 >> 2] = $174;
     $$1155 = $$2156;
     $$2162 = $160;
    }
   }
   if ((label | 0) == 38) {
    label = 0;
    $187 = HEAP32[$$1 >> 2] | 0;
    HEAP32[$$1 >> 2] = HEAP32[$$0154 >> 2];
    HEAP32[$$0154 >> 2] = $187;
    $$3157 = $$0154;
    $$3170 = $$0167 + 1 | 0;
   }
   $190 = $$1 + 4 | 0;
   L35 : do if ($190 >>> 0 < $$3157 >>> 0) {
    $$0174 = $100;
    $$4158 = $$3157;
    $$4164 = $190;
    $$4171 = $$3170;
    while (1) {
     $$5165 = $$4164;
     while (1) {
      $196 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
      $203 = $$5165 + 4 | 0;
      if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$196 >> 2] | 0) + 40 >> 2] & 63]($196, (HEAP32[$$5165 >> 2] | 0) + 32 | 0, (HEAP32[$$0174 >> 2] | 0) + 32 | 0) | 0) $$5165 = $203; else {
       $$5159 = $$4158;
       break;
      }
     }
     do {
      $$5159 = $$5159 + -4 | 0;
      $209 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
     } while (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$209 >> 2] | 0) + 40 >> 2] & 63]($209, (HEAP32[$$5159 >> 2] | 0) + 32 | 0, (HEAP32[$$0174 >> 2] | 0) + 32 | 0) | 0));
     if ($$5165 >>> 0 > $$5159 >>> 0) {
      $$2176 = $$0174;
      $$5172 = $$4171;
      $$6166 = $$5165;
      break L35;
     }
     $217 = HEAP32[$$5165 >> 2] | 0;
     HEAP32[$$5165 >> 2] = HEAP32[$$5159 >> 2];
     HEAP32[$$5159 >> 2] = $217;
     $$0174 = ($$0174 | 0) == ($$5165 | 0) ? $$5159 : $$0174;
     $$4158 = $$5159;
     $$4164 = $203;
     $$4171 = $$4171 + 1 | 0;
    }
   } else {
    $$2176 = $100;
    $$5172 = $$3170;
    $$6166 = $190;
   } while (0);
   if (($$6166 | 0) == ($$2176 | 0)) $$6173 = $$5172; else {
    $226 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$226 >> 2] | 0) + 40 >> 2] & 63]($226, (HEAP32[$$2176 >> 2] | 0) + 32 | 0, (HEAP32[$$6166 >> 2] | 0) + 32 | 0) | 0) {
     $234 = HEAP32[$$6166 >> 2] | 0;
     HEAP32[$$6166 >> 2] = HEAP32[$$2176 >> 2];
     HEAP32[$$2176 >> 2] = $234;
     $$6173 = $$5172 + 1 | 0;
    } else $$6173 = $$5172;
   }
   if (!$$6173) {
    $237 = __ZNSt3__227__insertion_sort_incompleteIRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEbT0_SO_T_($$1, $$6166, $2) | 0;
    $238 = $$6166 + 4 | 0;
    if (__ZNSt3__227__insertion_sort_incompleteIRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEbT0_SO_T_($238, $$0180$ph, $2) | 0) {
     label = 54;
     break;
    }
    if ($237) {
     $$0 = $238;
     continue;
    }
   }
   $240 = $$6166;
   if (($240 - $5 | 0) >= ($3 - $240 | 0)) {
    label = 53;
    break;
   }
   __ZNSt3__26__sortIRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEvT0_SO_T_($$1, $$6166, $2);
   $$0 = $$6166 + 4 | 0;
  }
  if ((label | 0) == 53) {
   label = 0;
   __ZNSt3__26__sortIRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEvT0_SO_T_($$6166 + 4 | 0, $$0180$ph, $2);
   $$0$ph = $$1;
   $$0180$ph = $$6166;
   continue;
  } else if ((label | 0) == 54) {
   label = 0;
   if ($237) {
    label = 55;
    break;
   } else {
    $$0$ph = $$1;
    $$0180$ph = $$6166;
    continue;
   }
  }
 }
 if ((label | 0) == 5) {
  $12 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 40 >> 2] & 63]($12, (HEAP32[$4 >> 2] | 0) + 32 | 0, (HEAP32[$$1 >> 2] | 0) + 32 | 0) | 0)) return;
  $19 = HEAP32[$$1 >> 2] | 0;
  HEAP32[$$1 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$4 >> 2] = $19;
  return;
 } else if ((label | 0) == 7) {
  __ZNSt3__27__sort3IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_T_($$1, $$1 + 4 | 0, $4, $2) | 0;
  return;
 } else if ((label | 0) == 8) {
  $22 = $$1 + 4 | 0;
  $23 = $$1 + 8 | 0;
  __ZNSt3__27__sort3IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_T_($$1, $22, $23, $2) | 0;
  $28 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$28 >> 2] | 0) + 40 >> 2] & 63]($28, (HEAP32[$4 >> 2] | 0) + 32 | 0, (HEAP32[$23 >> 2] | 0) + 32 | 0) | 0)) return;
  $35 = HEAP32[$23 >> 2] | 0;
  HEAP32[$23 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$4 >> 2] = $35;
  $41 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$41 >> 2] | 0) + 40 >> 2] & 63]($41, (HEAP32[$23 >> 2] | 0) + 32 | 0, (HEAP32[$22 >> 2] | 0) + 32 | 0) | 0)) return;
  $48 = HEAP32[$22 >> 2] | 0;
  $49 = HEAP32[$23 >> 2] | 0;
  HEAP32[$22 >> 2] = $49;
  HEAP32[$23 >> 2] = $48;
  $53 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$53 >> 2] | 0) + 40 >> 2] & 63]($53, $49 + 32 | 0, (HEAP32[$$1 >> 2] | 0) + 32 | 0) | 0)) return;
  $60 = HEAP32[$$1 >> 2] | 0;
  HEAP32[$$1 >> 2] = HEAP32[$22 >> 2];
  HEAP32[$22 >> 2] = $60;
  return;
 } else if ((label | 0) == 12) {
  __ZNSt3__27__sort5IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_SO_SO_T_($$1, $$1 + 4 | 0, $$1 + 8 | 0, $$1 + 12 | 0, $4, $2) | 0;
  return;
 } else if ((label | 0) == 14) {
  $66 = $$1 + 8 | 0;
  __ZNSt3__27__sort3IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_T_($$1, $$1 + 4 | 0, $66, $2) | 0;
  $68 = $$1 + 12 | 0;
  if (($68 | 0) == ($$0180$ph | 0)) return; else {
   $$02933$i = $68;
   $$03032$i = $66;
  }
  while (1) {
   $74 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$74 >> 2] | 0) + 40 >> 2] & 63]($74, (HEAP32[$$02933$i >> 2] | 0) + 32 | 0, (HEAP32[$$03032$i >> 2] | 0) + 32 | 0) | 0) {
    $81 = HEAP32[$$02933$i >> 2] | 0;
    $83 = $81 + 32 | 0;
    $$0$i188 = $$03032$i;
    $$1$i = $$02933$i;
    while (1) {
     HEAP32[$$1$i >> 2] = HEAP32[$$0$i188 >> 2];
     if (($$0$i188 | 0) == ($$1 | 0)) break;
     $86 = $$0$i188 + -4 | 0;
     $90 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$90 >> 2] | 0) + 40 >> 2] & 63]($90, $83, (HEAP32[$86 >> 2] | 0) + 32 | 0) | 0) {
      $$1$i$phi = $$0$i188;
      $$0$i188 = $86;
      $$1$i = $$1$i$phi;
     } else break;
    }
    HEAP32[$$0$i188 >> 2] = $81;
   }
   $96 = $$02933$i + 4 | 0;
   if (($96 | 0) == ($$0180$ph | 0)) break; else {
    $$03032$i$phi = $$02933$i;
    $$02933$i = $96;
    $$03032$i = $$03032$i$phi;
   }
  }
  return;
 } else if ((label | 0) == 55) return;
}

function _free($0) {
 $0 = $0 | 0;
 var $$0212$i = 0, $$0212$in$i = 0, $$0383 = 0, $$0384 = 0, $$0396 = 0, $$0403 = 0, $$1 = 0, $$1382 = 0, $$1387 = 0, $$1390 = 0, $$1398 = 0, $$1402 = 0, $$2 = 0, $$3 = 0, $$3400 = 0, $$pre$phi443Z2D = 0, $$pre$phi445Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $104 = 0, $105 = 0, $112 = 0, $114 = 0, $115 = 0, $122 = 0, $124 = 0, $13 = 0, $130 = 0, $135 = 0, $136 = 0, $139 = 0, $141 = 0, $143 = 0, $158 = 0, $16 = 0, $163 = 0, $165 = 0, $168 = 0, $17 = 0, $171 = 0, $174 = 0, $177 = 0, $178 = 0, $179 = 0, $181 = 0, $183 = 0, $184 = 0, $186 = 0, $187 = 0, $193 = 0, $194 = 0, $2 = 0, $207 = 0, $21 = 0, $210 = 0, $211 = 0, $217 = 0, $232 = 0, $235 = 0, $236 = 0, $237 = 0, $24 = 0, $241 = 0, $242 = 0, $248 = 0, $253 = 0, $254 = 0, $257 = 0, $259 = 0, $26 = 0, $262 = 0, $267 = 0, $273 = 0, $277 = 0, $278 = 0, $28 = 0, $296 = 0, $298 = 0, $3 = 0, $305 = 0, $306 = 0, $307 = 0, $315 = 0, $41 = 0, $46 = 0, $48 = 0, $51 = 0, $53 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $69 = 0, $7 = 0, $74 = 0, $75 = 0, $88 = 0, $9 = 0, $91 = 0, $92 = 0, $98 = 0, label = 0;
 if (!$0) return;
 $2 = $0 + -8 | 0;
 $3 = HEAP32[7588] | 0;
 if ($2 >>> 0 < $3 >>> 0) _abort();
 $6 = HEAP32[$0 + -4 >> 2] | 0;
 $7 = $6 & 3;
 if (($7 | 0) == 1) _abort();
 $9 = $6 & -8;
 $10 = $2 + $9 | 0;
 L10 : do if (!($6 & 1)) {
  $13 = HEAP32[$2 >> 2] | 0;
  if (!$7) return;
  $16 = $2 + (0 - $13) | 0;
  $17 = $13 + $9 | 0;
  if ($16 >>> 0 < $3 >>> 0) _abort();
  if (($16 | 0) == (HEAP32[7589] | 0)) {
   $104 = $10 + 4 | 0;
   $105 = HEAP32[$104 >> 2] | 0;
   if (($105 & 3 | 0) != 3) {
    $$1 = $16;
    $$1382 = $17;
    $112 = $16;
    break;
   }
   HEAP32[7586] = $17;
   HEAP32[$104 >> 2] = $105 & -2;
   HEAP32[$16 + 4 >> 2] = $17 | 1;
   HEAP32[$16 + $17 >> 2] = $17;
   return;
  }
  $21 = $13 >>> 3;
  if ($13 >>> 0 < 256) {
   $24 = HEAP32[$16 + 8 >> 2] | 0;
   $26 = HEAP32[$16 + 12 >> 2] | 0;
   $28 = 30376 + ($21 << 1 << 2) | 0;
   if (($24 | 0) != ($28 | 0)) {
    if ($24 >>> 0 < $3 >>> 0) _abort();
    if ((HEAP32[$24 + 12 >> 2] | 0) != ($16 | 0)) _abort();
   }
   if (($26 | 0) == ($24 | 0)) {
    HEAP32[7584] = HEAP32[7584] & ~(1 << $21);
    $$1 = $16;
    $$1382 = $17;
    $112 = $16;
    break;
   }
   if (($26 | 0) == ($28 | 0)) $$pre$phi445Z2D = $26 + 8 | 0; else {
    if ($26 >>> 0 < $3 >>> 0) _abort();
    $41 = $26 + 8 | 0;
    if ((HEAP32[$41 >> 2] | 0) == ($16 | 0)) $$pre$phi445Z2D = $41; else _abort();
   }
   HEAP32[$24 + 12 >> 2] = $26;
   HEAP32[$$pre$phi445Z2D >> 2] = $24;
   $$1 = $16;
   $$1382 = $17;
   $112 = $16;
   break;
  }
  $46 = HEAP32[$16 + 24 >> 2] | 0;
  $48 = HEAP32[$16 + 12 >> 2] | 0;
  do if (($48 | 0) == ($16 | 0)) {
   $59 = $16 + 16 | 0;
   $60 = $59 + 4 | 0;
   $61 = HEAP32[$60 >> 2] | 0;
   if (!$61) {
    $63 = HEAP32[$59 >> 2] | 0;
    if (!$63) {
     $$3 = 0;
     break;
    } else {
     $$1387 = $63;
     $$1390 = $59;
    }
   } else {
    $$1387 = $61;
    $$1390 = $60;
   }
   while (1) {
    $65 = $$1387 + 20 | 0;
    $66 = HEAP32[$65 >> 2] | 0;
    if ($66 | 0) {
     $$1387 = $66;
     $$1390 = $65;
     continue;
    }
    $68 = $$1387 + 16 | 0;
    $69 = HEAP32[$68 >> 2] | 0;
    if (!$69) break; else {
     $$1387 = $69;
     $$1390 = $68;
    }
   }
   if ($$1390 >>> 0 < $3 >>> 0) _abort(); else {
    HEAP32[$$1390 >> 2] = 0;
    $$3 = $$1387;
    break;
   }
  } else {
   $51 = HEAP32[$16 + 8 >> 2] | 0;
   if ($51 >>> 0 < $3 >>> 0) _abort();
   $53 = $51 + 12 | 0;
   if ((HEAP32[$53 >> 2] | 0) != ($16 | 0)) _abort();
   $56 = $48 + 8 | 0;
   if ((HEAP32[$56 >> 2] | 0) == ($16 | 0)) {
    HEAP32[$53 >> 2] = $48;
    HEAP32[$56 >> 2] = $51;
    $$3 = $48;
    break;
   } else _abort();
  } while (0);
  if (!$46) {
   $$1 = $16;
   $$1382 = $17;
   $112 = $16;
  } else {
   $74 = HEAP32[$16 + 28 >> 2] | 0;
   $75 = 30640 + ($74 << 2) | 0;
   do if (($16 | 0) == (HEAP32[$75 >> 2] | 0)) {
    HEAP32[$75 >> 2] = $$3;
    if (!$$3) {
     HEAP32[7585] = HEAP32[7585] & ~(1 << $74);
     $$1 = $16;
     $$1382 = $17;
     $112 = $16;
     break L10;
    }
   } else if ($46 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
    HEAP32[$46 + 16 + (((HEAP32[$46 + 16 >> 2] | 0) != ($16 | 0) & 1) << 2) >> 2] = $$3;
    if (!$$3) {
     $$1 = $16;
     $$1382 = $17;
     $112 = $16;
     break L10;
    } else break;
   } while (0);
   $88 = HEAP32[7588] | 0;
   if ($$3 >>> 0 < $88 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $46;
   $91 = $16 + 16 | 0;
   $92 = HEAP32[$91 >> 2] | 0;
   do if ($92 | 0) if ($92 >>> 0 < $88 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $92;
    HEAP32[$92 + 24 >> 2] = $$3;
    break;
   } while (0);
   $98 = HEAP32[$91 + 4 >> 2] | 0;
   if (!$98) {
    $$1 = $16;
    $$1382 = $17;
    $112 = $16;
   } else if ($98 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $98;
    HEAP32[$98 + 24 >> 2] = $$3;
    $$1 = $16;
    $$1382 = $17;
    $112 = $16;
    break;
   }
  }
 } else {
  $$1 = $2;
  $$1382 = $9;
  $112 = $2;
 } while (0);
 if ($112 >>> 0 >= $10 >>> 0) _abort();
 $114 = $10 + 4 | 0;
 $115 = HEAP32[$114 >> 2] | 0;
 if (!($115 & 1)) _abort();
 if (!($115 & 2)) {
  $122 = HEAP32[7589] | 0;
  if (($10 | 0) == (HEAP32[7590] | 0)) {
   $124 = (HEAP32[7587] | 0) + $$1382 | 0;
   HEAP32[7587] = $124;
   HEAP32[7590] = $$1;
   HEAP32[$$1 + 4 >> 2] = $124 | 1;
   if (($$1 | 0) != ($122 | 0)) return;
   HEAP32[7589] = 0;
   HEAP32[7586] = 0;
   return;
  }
  if (($10 | 0) == ($122 | 0)) {
   $130 = (HEAP32[7586] | 0) + $$1382 | 0;
   HEAP32[7586] = $130;
   HEAP32[7589] = $112;
   HEAP32[$$1 + 4 >> 2] = $130 | 1;
   HEAP32[$112 + $130 >> 2] = $130;
   return;
  }
  $135 = ($115 & -8) + $$1382 | 0;
  $136 = $115 >>> 3;
  L108 : do if ($115 >>> 0 < 256) {
   $139 = HEAP32[$10 + 8 >> 2] | 0;
   $141 = HEAP32[$10 + 12 >> 2] | 0;
   $143 = 30376 + ($136 << 1 << 2) | 0;
   if (($139 | 0) != ($143 | 0)) {
    if ($139 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort();
    if ((HEAP32[$139 + 12 >> 2] | 0) != ($10 | 0)) _abort();
   }
   if (($141 | 0) == ($139 | 0)) {
    HEAP32[7584] = HEAP32[7584] & ~(1 << $136);
    break;
   }
   if (($141 | 0) == ($143 | 0)) $$pre$phi443Z2D = $141 + 8 | 0; else {
    if ($141 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort();
    $158 = $141 + 8 | 0;
    if ((HEAP32[$158 >> 2] | 0) == ($10 | 0)) $$pre$phi443Z2D = $158; else _abort();
   }
   HEAP32[$139 + 12 >> 2] = $141;
   HEAP32[$$pre$phi443Z2D >> 2] = $139;
  } else {
   $163 = HEAP32[$10 + 24 >> 2] | 0;
   $165 = HEAP32[$10 + 12 >> 2] | 0;
   do if (($165 | 0) == ($10 | 0)) {
    $177 = $10 + 16 | 0;
    $178 = $177 + 4 | 0;
    $179 = HEAP32[$178 >> 2] | 0;
    if (!$179) {
     $181 = HEAP32[$177 >> 2] | 0;
     if (!$181) {
      $$3400 = 0;
      break;
     } else {
      $$1398 = $181;
      $$1402 = $177;
     }
    } else {
     $$1398 = $179;
     $$1402 = $178;
    }
    while (1) {
     $183 = $$1398 + 20 | 0;
     $184 = HEAP32[$183 >> 2] | 0;
     if ($184 | 0) {
      $$1398 = $184;
      $$1402 = $183;
      continue;
     }
     $186 = $$1398 + 16 | 0;
     $187 = HEAP32[$186 >> 2] | 0;
     if (!$187) break; else {
      $$1398 = $187;
      $$1402 = $186;
     }
    }
    if ($$1402 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
     HEAP32[$$1402 >> 2] = 0;
     $$3400 = $$1398;
     break;
    }
   } else {
    $168 = HEAP32[$10 + 8 >> 2] | 0;
    if ($168 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort();
    $171 = $168 + 12 | 0;
    if ((HEAP32[$171 >> 2] | 0) != ($10 | 0)) _abort();
    $174 = $165 + 8 | 0;
    if ((HEAP32[$174 >> 2] | 0) == ($10 | 0)) {
     HEAP32[$171 >> 2] = $165;
     HEAP32[$174 >> 2] = $168;
     $$3400 = $165;
     break;
    } else _abort();
   } while (0);
   if ($163 | 0) {
    $193 = HEAP32[$10 + 28 >> 2] | 0;
    $194 = 30640 + ($193 << 2) | 0;
    do if (($10 | 0) == (HEAP32[$194 >> 2] | 0)) {
     HEAP32[$194 >> 2] = $$3400;
     if (!$$3400) {
      HEAP32[7585] = HEAP32[7585] & ~(1 << $193);
      break L108;
     }
    } else if ($163 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
     HEAP32[$163 + 16 + (((HEAP32[$163 + 16 >> 2] | 0) != ($10 | 0) & 1) << 2) >> 2] = $$3400;
     if (!$$3400) break L108; else break;
    } while (0);
    $207 = HEAP32[7588] | 0;
    if ($$3400 >>> 0 < $207 >>> 0) _abort();
    HEAP32[$$3400 + 24 >> 2] = $163;
    $210 = $10 + 16 | 0;
    $211 = HEAP32[$210 >> 2] | 0;
    do if ($211 | 0) if ($211 >>> 0 < $207 >>> 0) _abort(); else {
     HEAP32[$$3400 + 16 >> 2] = $211;
     HEAP32[$211 + 24 >> 2] = $$3400;
     break;
    } while (0);
    $217 = HEAP32[$210 + 4 >> 2] | 0;
    if ($217 | 0) if ($217 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
     HEAP32[$$3400 + 20 >> 2] = $217;
     HEAP32[$217 + 24 >> 2] = $$3400;
     break;
    }
   }
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $135 | 1;
  HEAP32[$112 + $135 >> 2] = $135;
  if (($$1 | 0) == (HEAP32[7589] | 0)) {
   HEAP32[7586] = $135;
   return;
  } else $$2 = $135;
 } else {
  HEAP32[$114 >> 2] = $115 & -2;
  HEAP32[$$1 + 4 >> 2] = $$1382 | 1;
  HEAP32[$112 + $$1382 >> 2] = $$1382;
  $$2 = $$1382;
 }
 $232 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $235 = 30376 + ($232 << 1 << 2) | 0;
  $236 = HEAP32[7584] | 0;
  $237 = 1 << $232;
  if (!($236 & $237)) {
   HEAP32[7584] = $236 | $237;
   $$0403 = $235;
   $$pre$phiZ2D = $235 + 8 | 0;
  } else {
   $241 = $235 + 8 | 0;
   $242 = HEAP32[$241 >> 2] | 0;
   if ($242 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
    $$0403 = $242;
    $$pre$phiZ2D = $241;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$0403 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$0403;
  HEAP32[$$1 + 12 >> 2] = $235;
  return;
 }
 $248 = $$2 >>> 8;
 if (!$248) $$0396 = 0; else if ($$2 >>> 0 > 16777215) $$0396 = 31; else {
  $253 = ($248 + 1048320 | 0) >>> 16 & 8;
  $254 = $248 << $253;
  $257 = ($254 + 520192 | 0) >>> 16 & 4;
  $259 = $254 << $257;
  $262 = ($259 + 245760 | 0) >>> 16 & 2;
  $267 = 14 - ($257 | $253 | $262) + ($259 << $262 >>> 15) | 0;
  $$0396 = $$2 >>> ($267 + 7 | 0) & 1 | $267 << 1;
 }
 $273 = 30640 + ($$0396 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $$0396;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $277 = HEAP32[7585] | 0;
 $278 = 1 << $$0396;
 do if (!($277 & $278)) {
  HEAP32[7585] = $277 | $278;
  HEAP32[$273 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $273;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
 } else {
  $$0383 = $$2 << (($$0396 | 0) == 31 ? 0 : 25 - ($$0396 >>> 1) | 0);
  $$0384 = HEAP32[$273 >> 2] | 0;
  while (1) {
   if ((HEAP32[$$0384 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
    label = 124;
    break;
   }
   $296 = $$0384 + 16 + ($$0383 >>> 31 << 2) | 0;
   $298 = HEAP32[$296 >> 2] | 0;
   if (!$298) {
    label = 121;
    break;
   } else {
    $$0383 = $$0383 << 1;
    $$0384 = $298;
   }
  }
  if ((label | 0) == 121) if ($296 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
   HEAP32[$296 >> 2] = $$1;
   HEAP32[$$1 + 24 >> 2] = $$0384;
   HEAP32[$$1 + 12 >> 2] = $$1;
   HEAP32[$$1 + 8 >> 2] = $$1;
   break;
  } else if ((label | 0) == 124) {
   $305 = $$0384 + 8 | 0;
   $306 = HEAP32[$305 >> 2] | 0;
   $307 = HEAP32[7588] | 0;
   if ($306 >>> 0 >= $307 >>> 0 & $$0384 >>> 0 >= $307 >>> 0) {
    HEAP32[$306 + 12 >> 2] = $$1;
    HEAP32[$305 >> 2] = $$1;
    HEAP32[$$1 + 8 >> 2] = $306;
    HEAP32[$$1 + 12 >> 2] = $$0384;
    HEAP32[$$1 + 24 >> 2] = 0;
    break;
   } else _abort();
  }
 } while (0);
 $315 = (HEAP32[7592] | 0) + -1 | 0;
 HEAP32[7592] = $315;
 if (!$315) $$0212$in$i = 30792; else return;
 while (1) {
  $$0212$i = HEAP32[$$0212$in$i >> 2] | 0;
  if (!$$0212$i) break; else $$0212$in$i = $$0212$i + 8 | 0;
 }
 HEAP32[7592] = -1;
 return;
}

function __ZN3HFM12HFMEvaluator11getAccuracyERKNSt3__26vectorIdNS1_9allocatorIdEEEES7_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$lcssa = 0.0, $$0216252 = 0, $$0217251 = 0.0, $$0219 = 0.0, $$0221254 = 0, $$0223253 = 0, $$0255 = 0.0, $$1 = 0.0, $$1218 = 0.0, $$2 = 0.0, $$pre = 0, $$pre258 = 0, $10 = 0, $101 = 0.0, $112 = 0.0, $114 = 0.0, $131 = 0.0, $139 = 0.0, $16 = 0, $160 = 0, $165 = 0, $170 = 0, $175 = 0, $180 = 0, $185 = 0, $191 = 0, $195 = 0, $198 = 0, $204 = 0, $208 = 0, $21 = 0, $212 = 0, $216 = 0, $218 = 0.0, $25 = 0, $26 = 0, $32 = 0, $37 = 0, $4 = 0, $42 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $58 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $81 = 0.0, $83 = 0.0, $85 = 0.0, $9 = 0, $96 = 0.0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $5 = $1 + 4 | 0;
 $8 = (HEAP32[$5 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $9 = $8 >> 3;
 $10 = $2 + 4 | 0;
 if (($9 | 0) != ((HEAP32[$10 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) >> 3 | 0)) {
  $16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17222, 38) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $16 + (HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($16, $25) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($16) | 0;
  $26 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17261, 22) | 0;
  __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($26, (HEAP32[$5 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) >> 3) | 0, 17284, 1) | 0;
  $32 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17286, 25) | 0;
  $37 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($32, (HEAP32[$10 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) >> 3) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $37 + (HEAP32[(HEAP32[$37 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $42 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $46 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$42 >> 2] | 0) + 28 >> 2] & 63]($42, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($37, $46) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($37) | 0;
 }
 $47 = __Znwj(12) | 0;
 HEAP32[$47 >> 2] = 0;
 $48 = $47 + 4 | 0;
 HEAP32[$48 >> 2] = 0;
 $49 = $47 + 8 | 0;
 HEAP32[$49 >> 2] = 0;
 $50 = __Znwj(80) | 0;
 HEAP32[$47 >> 2] = $50;
 $51 = $50 + 80 | 0;
 HEAP32[$49 >> 2] = $51;
 dest = $50;
 stop = dest + 80 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$48 >> 2] = $51;
 switch ($3 | 0) {
 case 6:
 case 7:
 case 11:
  {
   if (($8 | 0) > 0) {
    $53 = HEAP32[$1 >> 2] | 0;
    $$0221254 = 0;
    $$0255 = 0.0;
    while (1) {
     $58 = $$0255 + +HEAPF64[$53 + ($$0221254 << 3) >> 3];
     $$0221254 = $$0221254 + 1 | 0;
     if (($$0221254 | 0) >= ($9 | 0)) {
      $$0$lcssa = $58;
      break;
     } else $$0255 = $58;
    }
   } else $$0$lcssa = 0.0;
   $$0219 = $$0$lcssa / +($9 | 0);
   $$1 = $$0$lcssa;
   break;
  }
 default:
  {
   $$0219 = 0.0;
   $$1 = 0.0;
  }
 }
 L12 : do if (($8 | 0) > 0) {
  $62 = $0 + 104 | 0;
  $63 = $0 + 156 | 0;
  $$pre = HEAP32[$2 >> 2] | 0;
  $$pre258 = HEAP32[$1 >> 2] | 0;
  $64 = $50 + 32 | 0;
  $65 = $50 + 8 | 0;
  $66 = $50 + 16 | 0;
  $67 = $50 + 40 | 0;
  $68 = $50 + 56 | 0;
  $69 = $50 + 48 | 0;
  $70 = $50 + 64 | 0;
  $71 = $50 + 48 | 0;
  $72 = $50 + 56 | 0;
  $73 = $50 + 8 | 0;
  $74 = $50 + 16 | 0;
  $$0223253 = 0;
  while (1) {
   $81 = +HEAPF64[$$pre + ($$0223253 << 3) >> 3];
   $83 = +HEAPF64[$$pre258 + ($$0223253 << 3) >> 3];
   $85 = +Math_abs(+($81 - $83));
   switch ($3 | 0) {
   case 0:
   case 11:
    {
     HEAPF64[$50 >> 3] = $85 / +Math_abs(+($83 == 0.0 ? .0001 : $83)) + +HEAPF64[$50 >> 3];
     switch ($3 | 0) {
     case 4:
     case 11:
      {
       label = 14;
       break;
      }
     case 1:
      {
       label = 16;
       break;
      }
     case 2:
     case 3:
      {
       label = 17;
       break;
      }
     case 5:
      {
       label = 18;
       break;
      }
     case 7:
      {
       label = 19;
       break;
      }
     case 6:
      {
       label = 22;
       break;
      }
     case 8:
      {
       label = 23;
       break;
      }
     default:
      {}
     }
     break;
    }
   case 4:
    {
     label = 14;
     break;
    }
   case 1:
    {
     label = 16;
     break;
    }
   case 2:
   case 3:
    {
     label = 17;
     break;
    }
   case 5:
    {
     label = 18;
     break;
    }
   case 7:
    {
     label = 19;
     break;
    }
   case 6:
    {
     label = 22;
     break;
    }
   case 8:
    {
     label = 23;
     break;
    }
   default:
    {}
   }
   L18 : do if ((label | 0) == 14) {
    label = 0;
    $96 = +HEAPF64[(HEAP32[(HEAP32[$62 >> 2] | 0) + 28 >> 2] | 0) + (HEAP32[$63 >> 2] << 3) >> 3];
    $101 = $85 / +Math_abs(+($96 - ($83 == $96 ? $96 + -.0001 : $83)));
    HEAPF64[$64 >> 3] = +HEAPF64[$64 >> 3] + $101;
    switch ($3 | 0) {
    case 7:
     {
      label = 19;
      break L18;
      break;
     }
    case 6:
     {
      label = 22;
      break L18;
      break;
     }
    case 8:
     {
      label = 23;
      break L18;
      break;
     }
    case 5:
     {
      label = 18;
      break L18;
      break;
     }
    case 11:
     break;
    default:
     break L18;
    }
    HEAPF64[$65 >> 3] = $85 + +HEAPF64[$65 >> 3];
    HEAPF64[$66 >> 3] = $85 * $85 + +HEAPF64[$66 >> 3];
    label = 18;
   } else if ((label | 0) == 16) {
    label = 0;
    HEAPF64[$73 >> 3] = $85 + +HEAPF64[$73 >> 3];
   } else if ((label | 0) == 17) {
    label = 0;
    HEAPF64[$74 >> 3] = $85 * $85 + +HEAPF64[$74 >> 3];
   } while (0);
   L23 : do if ((label | 0) == 18) {
    label = 0;
    $112 = $81 + $83;
    $114 = +Math_abs(+$112);
    HEAPF64[$67 >> 3] = +HEAPF64[$67 >> 3] + $85 / ($112 == 0.0 ? .0001 : $114) * .5;
    switch ($3 | 0) {
    case 6:
     {
      label = 22;
      break L23;
      break;
     }
    case 8:
     {
      label = 23;
      break L23;
      break;
     }
    case 7:
    case 11:
     break;
    default:
     break L23;
    }
    HEAPF64[$68 >> 3] = $85 / $$1 + +HEAPF64[$68 >> 3];
    switch ($3 | 0) {
    case 8:
     {
      label = 23;
      break L23;
      break;
     }
    case 11:
     break;
    default:
     break L23;
    }
    HEAPF64[$69 >> 3] = $85 / $$0219 + +HEAPF64[$69 >> 3];
    label = 23;
   } else if ((label | 0) == 19) {
    label = 0;
    HEAPF64[$72 >> 3] = $85 / $$1 + +HEAPF64[$72 >> 3];
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    HEAPF64[$71 >> 3] = $85 / $$0219 + +HEAPF64[$71 >> 3];
   } else if ((label | 0) == 23) {
    label = 0;
    $131 = $81 * .5;
    $$0216252 = 1;
    $$0217251 = 0.0;
    while (1) {
     $139 = $81 - $131 * (+(50 - $$0216252 | 0) / 100.0);
     if ($83 < $139) $$1218 = $$0217251 + (1.0 - +($$0216252 | 0) / 100.0) * ($139 - $83); else $$1218 = $$0217251;
     if (!($83 >= $139)) $$2 = $$1218; else $$2 = +($$0216252 | 0) / 100.0 * ($83 - $139) + $$1218;
     $$0216252 = $$0216252 + 1 | 0;
     if (($$0216252 | 0) == 100) break; else $$0217251 = $$2;
    }
    HEAPF64[$70 >> 3] = $$2 / 99.0 + +HEAPF64[$70 >> 3];
   }
   $$0223253 = $$0223253 + 1 | 0;
   if (($$0223253 | 0) >= ($9 | 0)) break L12;
  }
 } while (0);
 L42 : do switch ($3 | 0) {
 case 0:
 case 11:
  {
   HEAPF64[$50 >> 3] = +HEAPF64[$50 >> 3] * 100.0 / +($9 | 0);
   switch ($3 | 0) {
   case 5:
    {
     label = 33;
     break L42;
     break;
    }
   case 7:
    {
     label = 35;
     break L42;
     break;
    }
   case 6:
    {
     label = 37;
     break L42;
     break;
    }
   case 8:
    {
     label = 38;
     break L42;
     break;
    }
   case 1:
    {
     label = 39;
     break L42;
     break;
    }
   case 2:
   case 3:
    {
     label = 41;
     break L42;
     break;
    }
   case 4:
   case 11:
    break;
   default:
    {
     STACKTOP = sp;
     return $47 | 0;
    }
   }
   $160 = $50 + 32 | 0;
   HEAPF64[$160 >> 3] = +HEAPF64[$160 >> 3] * 100.0 / +($9 | 0);
   switch ($3 | 0) {
   case 7:
    {
     label = 35;
     break L42;
     break;
    }
   case 6:
    {
     label = 37;
     break L42;
     break;
    }
   case 8:
    {
     label = 38;
     break L42;
     break;
    }
   case 5:
   case 11:
    break;
   default:
    {
     STACKTOP = sp;
     return $47 | 0;
    }
   }
   $170 = $50 + 40 | 0;
   HEAPF64[$170 >> 3] = +HEAPF64[$170 >> 3] * 100.0 / +($9 | 0);
   switch ($3 | 0) {
   case 6:
    {
     label = 37;
     break L42;
     break;
    }
   case 8:
    {
     label = 38;
     break L42;
     break;
    }
   case 7:
   case 11:
    break;
   default:
    {
     STACKTOP = sp;
     return $47 | 0;
    }
   }
   $180 = $50 + 56 | 0;
   HEAPF64[$180 >> 3] = +HEAPF64[$180 >> 3] * 100.0 / +($9 | 0);
   switch ($3 | 0) {
   case 8:
    {
     label = 38;
     break L42;
     break;
    }
   case 11:
    break;
   default:
    {
     STACKTOP = sp;
     return $47 | 0;
    }
   }
   $198 = $50 + 48 | 0;
   HEAPF64[$198 >> 3] = +HEAPF64[$198 >> 3] * 100.0 / +($9 | 0);
   $204 = $50 + 64 | 0;
   HEAPF64[$204 >> 3] = +HEAPF64[$204 >> 3] / +($9 | 0);
   $208 = $50 + 8 | 0;
   HEAPF64[$208 >> 3] = +HEAPF64[$208 >> 3] / +($9 | 0);
   $212 = $50 + 16 | 0;
   HEAPF64[$212 >> 3] = +HEAPF64[$212 >> 3] / +($9 | 0);
   STACKTOP = sp;
   return $47 | 0;
  }
 case 4:
  {
   $75 = $50 + 32 | 0;
   HEAPF64[$75 >> 3] = +HEAPF64[$75 >> 3] * 100.0 / +($9 | 0);
   STACKTOP = sp;
   return $47 | 0;
  }
 case 5:
  {
   label = 33;
   break;
  }
 case 7:
  {
   label = 35;
   break;
  }
 case 6:
  {
   label = 37;
   break;
  }
 case 8:
  {
   label = 38;
   break;
  }
 case 1:
  {
   label = 39;
   break;
  }
 case 2:
 case 3:
  {
   label = 41;
   break;
  }
 default:
  {
   STACKTOP = sp;
   return $47 | 0;
  }
 } while (0);
 if ((label | 0) == 33) {
  $165 = $50 + 40 | 0;
  HEAPF64[$165 >> 3] = +HEAPF64[$165 >> 3] * 100.0 / +($9 | 0);
  STACKTOP = sp;
  return $47 | 0;
 } else if ((label | 0) == 35) {
  $175 = $50 + 56 | 0;
  HEAPF64[$175 >> 3] = +HEAPF64[$175 >> 3] * 100.0 / +($9 | 0);
  STACKTOP = sp;
  return $47 | 0;
 } else if ((label | 0) == 37) {
  $185 = $50 + 48 | 0;
  HEAPF64[$185 >> 3] = +HEAPF64[$185 >> 3] * 100.0 / +($9 | 0);
  STACKTOP = sp;
  return $47 | 0;
 } else if ((label | 0) == 38) {
  $191 = $50 + 64 | 0;
  HEAPF64[$191 >> 3] = +HEAPF64[$191 >> 3] / +($9 | 0);
  STACKTOP = sp;
  return $47 | 0;
 } else if ((label | 0) == 39) {
  $195 = $50 + 8 | 0;
  HEAPF64[$195 >> 3] = +HEAPF64[$195 >> 3] / +($9 | 0);
  STACKTOP = sp;
  return $47 | 0;
 } else if ((label | 0) == 41) {
  $216 = $50 + 16 | 0;
  $218 = +HEAPF64[$216 >> 3] / +($9 | 0);
  HEAPF64[$216 >> 3] = $218;
  if (($3 | 0) != 3) {
   STACKTOP = sp;
   return $47 | 0;
  }
  HEAPF64[$50 + 24 >> 3] = +Math_sqrt(+$218);
  STACKTOP = sp;
  return $47 | 0;
 }
 return 0;
}

function __ZN3HFM12HFMEvaluator15returnForecastsERK6RepHFMRKNSt3__26vectorINS5_IdNS4_9allocatorIdEEEENS6_IS8_EEEEii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0222304 = 0, $$0223284 = 0, $$0224290 = 0, $$0225$lcssa = 0.0, $$0225286 = 0.0, $$0226285 = 0, $$0227300 = 0, $$0228294 = 0, $$0229$lcssa = 0.0, $$0229293 = 0.0, $$0272$lcssa = 0, $$0272283 = 0, $$1230 = 0.0, $$1273 = 0, $$2 = 0, $$2$i = 0.0, $$2$i249 = 0.0, $$2$i256 = 0.0, $$279$i = 0.0, $$279$i252 = 0.0, $$279$i259 = 0.0, $$3$lcssa = 0, $$3289 = 0, $$4 = 0, $$5 = 0, $$6$lcssa = 0, $$6299 = 0, $$7 = 0, $$8 = 0, $$in = 0, $10 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $114 = 0.0, $117 = 0, $118 = 0.0, $12 = 0, $120 = 0.0, $122 = 0.0, $124 = 0.0, $126 = 0.0, $144 = 0.0, $152 = 0.0, $157 = 0.0, $16 = 0, $166 = 0, $168 = 0, $17 = 0, $178 = 0, $18 = 0, $183 = 0.0, $184 = 0, $189 = 0, $190 = 0, $193 = 0, $194 = 0, $197 = 0, $198 = 0.0, $200 = 0.0, $202 = 0.0, $204 = 0.0, $206 = 0.0, $22 = 0, $224 = 0.0, $23 = 0, $232 = 0.0, $237 = 0.0, $24 = 0, $246 = 0, $25 = 0, $257 = 0, $26 = 0, $261 = 0.0, $265 = 0, $266 = 0, $270 = 0, $276 = 0, $280 = 0.0, $285 = 0.0, $286 = 0.0, $29 = 0, $290 = 0.0, $291 = 0.0, $295 = 0, $30 = 0, $301 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $51 = 0.0, $54 = 0, $55 = 0.0, $57 = 0.0, $59 = 0.0, $6 = 0, $61 = 0.0, $63 = 0.0, $81 = 0.0, $89 = 0.0, $94 = 0.0, $storemerge$i = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $5 = sp;
 $6 = sp + 8 | 0;
 $10 = (HEAP32[$1 + 4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $11 = $10 >> 3;
 $12 = $1 + 24 | 0;
 $16 = (HEAP32[$1 + 28 >> 2] | 0) - (HEAP32[$12 >> 2] | 0) | 0;
 $17 = ($16 | 0) / 12 | 0;
 $18 = $1 + 48 | 0;
 $22 = (HEAP32[$1 + 52 >> 2] | 0) - (HEAP32[$18 >> 2] | 0) | 0;
 $23 = ($22 | 0) / 12 | 0;
 $24 = __Znwj(12) | 0;
 HEAP32[$24 >> 2] = 0;
 $25 = $24 + 4 | 0;
 HEAP32[$25 >> 2] = 0;
 $26 = $24 + 8 | 0;
 HEAP32[$26 >> 2] = 0;
 if (!$4) {
  STACKTOP = sp;
  return $24 | 0;
 }
 if ($4 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($24);
 $29 = $4 << 3;
 $30 = __Znwj($29) | 0;
 HEAP32[$24 >> 2] = $30;
 $31 = $30 + ($4 << 3) | 0;
 HEAP32[$26 >> 2] = $31;
 _memset($30 | 0, 0, $29 | 0) | 0;
 HEAP32[$25 >> 2] = $31;
 $32 = ($10 | 0) > 0;
 $33 = ($16 | 0) > 0;
 $34 = ($22 | 0) > 0;
 $35 = $0 + 120 | 0;
 $36 = $0 + 108 | 0;
 $37 = $1 + 80 | 0;
 $38 = $1 + 88 | 0;
 $39 = $1 + 112 | 0;
 $40 = $1 + 100 | 0;
 $41 = $6 + 4 | 0;
 $42 = $1 + 60 | 0;
 $43 = $6 + 4 | 0;
 $44 = $1 + 36 | 0;
 $45 = $1 + 12 | 0;
 $$0222304 = 0;
 while (1) {
  HEAPF64[$5 >> 3] = 0.0;
  L9 : do if ($32) {
   $$0223284 = 0;
   $$0272283 = 0;
   while (1) {
    $46 = HEAP32[$1 >> 2] | 0;
    $51 = +__ZN3HFM12HFMEvaluator9getKValueEiiiiRKNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEERKS5_($0, HEAP32[$46 + ($$0223284 << 3) + 4 >> 2] | 0, HEAP32[$46 + ($$0223284 << 3) >> 2] | 0, $3, $$0222304, $2, $24);
    $54 = HEAP32[(HEAP32[$45 >> 2] | 0) + ($$0223284 * 12 | 0) >> 2] | 0;
    $55 = +HEAPF64[$54 >> 3];
    $57 = +HEAPF64[$54 + 8 >> 3];
    $59 = +HEAPF64[$54 + 16 >> 3];
    $61 = +HEAPF64[$54 + 24 >> 3];
    $63 = +HEAPF64[$54 + 32 >> 3];
    switch (~~+HEAPF64[$54 + 40 >> 3] >>> 0 | 0) {
    case 0:
     {
      if (!($51 >= $55)) $$1273 = $$0272283; else {
       HEAPF64[$5 >> 3] = $51 + $57 + +HEAPF64[$5 >> 3];
       $$1273 = $$0272283 + 1 | 0;
      }
      if (!($51 <= $59)) $$2 = $$1273; else {
       HEAPF64[$5 >> 3] = $51 + $61 + +HEAPF64[$5 >> 3];
       $$2 = $$1273 + 1 | 0;
      }
      break;
     }
    case 1:
     {
      if (!($51 <= $55) | !($55 - $63 < $51)) $$2$i256 = $51 > $55 ? 1.0 : 0.0; else {
       $81 = 1.0 / $63;
       $$2$i256 = $51 * $81 + (1.0 - $55 * $81);
      }
      $89 = +HEAPF64[$5 >> 3] + ($51 + $57 * $$2$i256);
      HEAPF64[$5 >> 3] = $89;
      if ($51 >= $59 & $59 + $63 > $51) {
       $94 = 1.0 / $63;
       $$279$i259 = $51 * $94 + (1.0 - $59 * $94);
      } else $$279$i259 = $51 < $59 ? 1.0 : 0.0;
      HEAPF64[$5 >> 3] = $89 + ($51 + $61 * $$279$i259);
      $$2 = $$0272283 + 2 | 0;
      break;
     }
    default:
     $$2 = $$0272283;
    }
    $$0223284 = $$0223284 + 1 | 0;
    if (($$0223284 | 0) >= ($11 | 0)) {
     $$0272$lcssa = $$2;
     break L9;
    } else $$0272283 = $$2;
   }
  } else $$0272$lcssa = 0; while (0);
  L27 : do if ($33) {
   $$0224290 = 0;
   $$3289 = $$0272$lcssa;
   while (1) {
    __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEEC2ERKS5_($6, (HEAP32[$12 >> 2] | 0) + ($$0224290 * 12 | 0) | 0);
    $108 = HEAP32[$6 >> 2] | 0;
    $109 = (HEAP32[$43 >> 2] | 0) - $108 | 0;
    $110 = $109 >> 3;
    L30 : do if (($109 | 0) > 0) {
     $$0225286 = 0.0;
     $$0226285 = 0;
     $178 = $108;
     while (1) {
      $183 = $$0225286 + +__ZN3HFM12HFMEvaluator9getKValueEiiiiRKNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEERKS5_($0, HEAP32[$178 + ($$0226285 << 3) + 4 >> 2] | 0, HEAP32[$178 + ($$0226285 << 3) >> 2] | 0, $3, $$0222304, $2, $24);
      $184 = $$0226285 + 1 | 0;
      if (($184 | 0) >= ($110 | 0)) {
       $$0225$lcssa = $183;
       break L30;
      }
      $$0225286 = $183;
      $$0226285 = $184;
      $178 = HEAP32[$6 >> 2] | 0;
     }
    } else $$0225$lcssa = 0.0; while (0);
    $114 = $$0225$lcssa / +($110 | 0);
    $117 = HEAP32[(HEAP32[$44 >> 2] | 0) + ($$0224290 * 12 | 0) >> 2] | 0;
    $118 = +HEAPF64[$117 >> 3];
    $120 = +HEAPF64[$117 + 8 >> 3];
    $122 = +HEAPF64[$117 + 16 >> 3];
    $124 = +HEAPF64[$117 + 24 >> 3];
    $126 = +HEAPF64[$117 + 32 >> 3];
    switch (~~+HEAPF64[$117 + 40 >> 3] >>> 0 | 0) {
    case 0:
     {
      if (!($114 >= $118)) $$4 = $$3289; else {
       HEAPF64[$5 >> 3] = $114 + $120 + +HEAPF64[$5 >> 3];
       $$4 = $$3289 + 1 | 0;
      }
      if (!($114 <= $122)) $$5 = $$4; else {
       HEAPF64[$5 >> 3] = $114 + $124 + +HEAPF64[$5 >> 3];
       $$5 = $$4 + 1 | 0;
      }
      break;
     }
    case 1:
     {
      if (!($114 <= $118) | !($118 - $126 < $114)) $$2$i249 = $114 > $118 ? 1.0 : 0.0; else {
       $144 = 1.0 / $126;
       $$2$i249 = $114 * $144 + (1.0 - $118 * $144);
      }
      $152 = +HEAPF64[$5 >> 3] + ($114 + $120 * $$2$i249);
      HEAPF64[$5 >> 3] = $152;
      if ($114 >= $122 & $122 + $126 > $114) {
       $157 = 1.0 / $126;
       $$279$i252 = $114 * $157 + (1.0 - $122 * $157);
      } else $$279$i252 = $114 < $122 ? 1.0 : 0.0;
      HEAPF64[$5 >> 3] = $152 + ($114 + $124 * $$279$i252);
      $$5 = $$3289 + 2 | 0;
      break;
     }
    default:
     $$5 = $$3289;
    }
    $166 = HEAP32[$6 >> 2] | 0;
    if ($166 | 0) {
     $168 = HEAP32[$43 >> 2] | 0;
     if (($168 | 0) != ($166 | 0)) HEAP32[$43 >> 2] = $168 + (~(($168 + -8 - $166 | 0) >>> 3) << 3);
     __ZdlPv($166);
    }
    $$0224290 = $$0224290 + 1 | 0;
    if (($$0224290 | 0) >= ($17 | 0)) {
     $$3$lcssa = $$5;
     break L27;
    } else $$3289 = $$5;
   }
  } else $$3$lcssa = $$0272$lcssa; while (0);
  L57 : do if ($34) {
   $$0227300 = 0;
   $$6299 = $$3$lcssa;
   while (1) {
    __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEEC2ERKS5_($6, (HEAP32[$18 >> 2] | 0) + ($$0227300 * 12 | 0) | 0);
    $189 = HEAP32[$41 >> 2] | 0;
    $190 = HEAP32[$6 >> 2] | 0;
    $193 = $190;
    if (($189 - $190 | 0) > 0) {
     $$0228294 = 0;
     $$0229293 = 0.0;
     $257 = $193;
     while (1) {
      $261 = +__ZN3HFM12HFMEvaluator9getKValueEiiiiRKNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEERKS5_($0, HEAP32[$257 + ($$0228294 << 3) + 4 >> 2] | 0, HEAP32[$257 + ($$0228294 << 3) >> 2] | 0, $3, $$0222304, $2, $24);
      $$1230 = $$0229293 + (($$0228294 | 0) == 0 ? $261 : -$261);
      $$0228294 = $$0228294 + 1 | 0;
      $265 = HEAP32[$41 >> 2] | 0;
      $266 = HEAP32[$6 >> 2] | 0;
      $270 = $266;
      if (($$0228294 | 0) >= ($265 - $266 >> 3 | 0)) {
       $$0229$lcssa = $$1230;
       $$in = $265;
       $246 = $270;
       break;
      } else {
       $$0229293 = $$1230;
       $257 = $270;
      }
     }
    } else {
     $$0229$lcssa = 0.0;
     $$in = $189;
     $246 = $193;
    }
    $194 = $$in;
    $197 = HEAP32[(HEAP32[$42 >> 2] | 0) + ($$0227300 * 12 | 0) >> 2] | 0;
    $198 = +HEAPF64[$197 >> 3];
    $200 = +HEAPF64[$197 + 8 >> 3];
    $202 = +HEAPF64[$197 + 16 >> 3];
    $204 = +HEAPF64[$197 + 24 >> 3];
    $206 = +HEAPF64[$197 + 32 >> 3];
    switch (~~+HEAPF64[$197 + 40 >> 3] >>> 0 | 0) {
    case 0:
     {
      if (!($$0229$lcssa >= $198)) $$7 = $$6299; else {
       HEAPF64[$5 >> 3] = $$0229$lcssa + $200 + +HEAPF64[$5 >> 3];
       $$7 = $$6299 + 1 | 0;
      }
      if (!($$0229$lcssa <= $202)) $$8 = $$7; else {
       HEAPF64[$5 >> 3] = $$0229$lcssa + $204 + +HEAPF64[$5 >> 3];
       $$8 = $$7 + 1 | 0;
      }
      break;
     }
    case 1:
     {
      if (!($$0229$lcssa <= $198) | !($198 - $206 < $$0229$lcssa)) $$2$i = $$0229$lcssa > $198 ? 1.0 : 0.0; else {
       $224 = 1.0 / $206;
       $$2$i = $$0229$lcssa * $224 + (1.0 - $198 * $224);
      }
      $232 = +HEAPF64[$5 >> 3] + ($$0229$lcssa + $200 * $$2$i);
      HEAPF64[$5 >> 3] = $232;
      if ($$0229$lcssa >= $202 & $202 + $206 > $$0229$lcssa) {
       $237 = 1.0 / $206;
       $$279$i = $$0229$lcssa * $237 + (1.0 - $202 * $237);
      } else $$279$i = $$0229$lcssa < $202 ? 1.0 : 0.0;
      HEAPF64[$5 >> 3] = $232 + ($$0229$lcssa + $204 * $$279$i);
      $$8 = $$6299 + 2 | 0;
      break;
     }
    default:
     $$8 = $$6299;
    }
    if ($246 | 0) {
     if (($194 | 0) != ($246 | 0)) HEAP32[$41 >> 2] = $194 + (~(($194 + -8 - $246 | 0) >>> 3) << 3);
     __ZdlPv($246);
    }
    $$0227300 = $$0227300 + 1 | 0;
    if (($$0227300 | 0) >= ($23 | 0)) {
     $$6$lcssa = $$8;
     break L57;
    } else $$6299 = $$8;
   }
  } else $$6$lcssa = $$3$lcssa; while (0);
  if (($$6$lcssa | 0) > 0) HEAPF64[$5 >> 3] = +HEAPF64[$5 >> 3] / +($$6$lcssa | 0);
  if (HEAP32[$35 >> 2] | 0) __ZN3HFM12HFMEvaluator24approximationsEnayatifarERKiRKdRKNSt3__26vectorIdNS5_9allocatorIdEEEESB_RKNS6_IiNS7_IiEEEERdiiRKNS6_IS9_NS7_IS9_EEEESB_($0, $35, $37, $38, $39, $40, $5, $3, $$0222304, $2, $24);
  $276 = HEAP32[$36 >> 2] | 0;
  $280 = +HEAPF64[$5 >> 3];
  if ((HEAP8[$276 + 80 >> 0] | 0) != 0 & $280 < 0.0) {
   HEAPF64[$5 >> 3] = 0.0;
   $285 = 0.0;
  } else $285 = $280;
  if (!(HEAP8[$276 + 81 >> 0] | 0)) $290 = $285; else {
   $286 = +_round(+$285);
   HEAPF64[$5 >> 3] = $286;
   $290 = $286;
  }
  if (!(HEAP8[$276 + 82 >> 0] | 0)) $301 = $290; else {
   $291 = +_round(+$290);
   $storemerge$i = $291 < 0.0 ? 0.0 : $291;
   HEAPF64[$5 >> 3] = $storemerge$i;
   if ($storemerge$i > 1.0) {
    HEAPF64[$5 >> 3] = 1.0;
    $301 = 1.0;
   } else $301 = $storemerge$i;
  }
  $295 = HEAP32[$24 >> 2] | 0;
  if ((HEAP32[$25 >> 2] | 0) - $295 >> 3 >>> 0 <= $$0222304 >>> 0) {
   label = 68;
   break;
  }
  HEAPF64[$295 + ($$0222304 << 3) >> 3] = $301;
  $$0222304 = $$0222304 + 1 | 0;
  if (($$0222304 | 0) >= ($4 | 0)) {
   label = 5;
   break;
  }
 }
 if ((label | 0) == 5) {
  STACKTOP = sp;
  return $24 | 0;
 } else if ((label | 0) == 68) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($24);
 return 0;
}

function __ZN3HFM15ConstructiveACF17returnRLCUsingACFEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0186 = 0, $$054189 = 0, $$055191 = 0, $$064195 = 0, $$pre209 = 0, $100 = 0, $102 = 0, $109 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $124 = 0, $129 = 0, $13 = 0, $133 = 0, $134 = 0, $137 = 0, $14 = 0, $142 = 0, $144 = 0, $145 = 0, $15 = 0, $152 = 0, $153 = 0, $158 = 0, $16 = 0, $161 = 0.0, $174 = 0, $180 = 0, $188 = 0, $194 = 0, $197 = 0, $199 = 0, $2 = 0, $207 = 0, $214 = 0, $216 = 0, $218 = 0, $219 = 0, $220 = 0, $222 = 0, $224 = 0, $225 = 0, $232 = 0, $233 = 0, $235 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $241 = 0, $243 = 0, $244 = 0, $25 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $37 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $75 = 0, $76 = 0, $79 = 0, $82 = 0, $83 = 0, $84 = 0, $88 = 0, $91 = 0, $94 = 0, $99 = 0, $storemerge182 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 60 | 0;
 $4 = sp + 48 | 0;
 $5 = sp;
 HEAP32[$3 >> 2] = 0;
 $6 = $3 + 4 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2ERKS5_($4, (HEAP32[$1 + 20 >> 2] | 0) + 4 | 0);
 $11 = $4 + 4 | 0;
 $13 = HEAP32[$4 >> 2] | 0;
 $14 = (HEAP32[$11 >> 2] | 0) - $13 | 0;
 $15 = ($14 | 0) / 12 | 0;
 $16 = $1 + 144 | 0;
 if (((HEAP32[$1 + 148 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) >> 3 | 0) != ($15 | 0)) {
  $32 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19022, 31) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $32 + (HEAP32[(HEAP32[$32 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $37 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
  $41 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$37 >> 2] | 0) + 28 >> 2] & 63]($37, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($32, $41) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($32) | 0;
  _exit(1);
 }
 $24 = ($14 | 0) > 0;
 L4 : do if ($24) {
  $25 = $2 + 4 | 0;
  $26 = $2 + 8 | 0;
  $27 = $2 + 16 | 0;
  $28 = $1 + 52 | 0;
  $29 = $1 + 56 | 0;
  $30 = $5 + 8 | 0;
  $31 = $3 + 8 | 0;
  $$064195 = 0;
  $44 = $13;
  L6 : while (1) {
   $48 = (HEAP32[$44 + ($$064195 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$44 + ($$064195 * 12 | 0) >> 2] | 0) | 0;
   $49 = $48 >> 3;
   $50 = _llvm_stacksave() | 0;
   $51 = STACKTOP;
   STACKTOP = STACKTOP + ((1 * ($49 << 3) | 0) + 15 & -16) | 0;
   if (($48 | 0) > 0) {
    $53 = HEAP32[$4 >> 2] | 0;
    $54 = $53 + ($$064195 * 12 | 0) | 0;
    $57 = HEAP32[$54 >> 2] | 0;
    $59 = (HEAP32[$53 + ($$064195 * 12 | 0) + 4 >> 2] | 0) - $57 >> 3;
    $60 = $57;
    $$055191 = 0;
    do {
     if ($59 >>> 0 <= $$055191 >>> 0) {
      label = 12;
      break L6;
     }
     HEAPF64[$51 + ($$055191 << 3) >> 3] = +HEAPF64[$60 + ($$055191 << 3) >> 3];
     $$055191 = $$055191 + 1 | 0;
    } while (($$055191 | 0) < ($49 | 0));
   }
   HEAP32[$2 >> 2] = 0;
   HEAP32[$25 >> 2] = 0;
   HEAP32[$26 >> 2] = 0;
   HEAPF64[$27 >> 3] = 0.0;
   $62 = HEAP32[$28 >> 2] | 0;
   if (((HEAP32[$29 >> 2] | 0) - $62 >> 2 | 0) <= ($$064195 | 0)) {
    label = 10;
    break;
   }
   $75 = (HEAP32[$62 + ($$064195 << 2) >> 2] | 0) + 1 | 0;
   HEAPF64[$5 >> 3] = -10.0;
   HEAP32[$30 >> 2] = $75;
   __ZN8autocorr3ACFEPKdjR9acorrInfo($5, $51, $49, $2);
   $76 = HEAP32[$6 >> 2] | 0;
   if (($76 | 0) == (HEAP32[$31 >> 2] | 0)) {
    __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($3, $2);
    $100 = HEAP32[$2 >> 2] | 0;
   } else {
    HEAP32[$76 >> 2] = 0;
    $79 = $76 + 4 | 0;
    HEAP32[$79 >> 2] = 0;
    HEAP32[$76 + 8 >> 2] = 0;
    $82 = HEAP32[$2 >> 2] | 0;
    $83 = (HEAP32[$25 >> 2] | 0) - $82 | 0;
    $84 = $83 >> 3;
    if (!$84) {
     $252 = $82;
     $99 = $76;
    } else {
     if ($84 >>> 0 > 536870911) {
      label = 17;
      break;
     }
     $88 = __Znwj($83) | 0;
     HEAP32[$79 >> 2] = $88;
     HEAP32[$76 >> 2] = $88;
     HEAP32[$76 + 8 >> 2] = $88 + ($84 << 3);
     $91 = HEAP32[$2 >> 2] | 0;
     $94 = (HEAP32[$25 >> 2] | 0) - $91 | 0;
     if (($94 | 0) > 0) {
      _memcpy($88 | 0, $91 | 0, $94 | 0) | 0;
      HEAP32[$79 >> 2] = $88 + ($94 >>> 3 << 3);
      $252 = $91;
      $99 = HEAP32[$6 >> 2] | 0;
     } else {
      $252 = $91;
      $99 = $76;
     }
    }
    HEAP32[$6 >> 2] = $99 + 12;
    $100 = $252;
   }
   if ($100 | 0) {
    $102 = HEAP32[$25 >> 2] | 0;
    if (($102 | 0) != ($100 | 0)) HEAP32[$25 >> 2] = $102 + (~(($102 + -8 - $100 | 0) >>> 3) << 3);
    __ZdlPv($100);
   }
   _llvm_stackrestore($50 | 0);
   $109 = $$064195 + 1 | 0;
   if (($109 | 0) >= ($15 | 0)) {
    label = 5;
    break;
   }
   $$064195 = $109;
   $44 = HEAP32[$4 >> 2] | 0;
  }
  if ((label | 0) == 5) {
   __ZNSt3__26vectorINS0_INS_4pairIdiEENS_9allocatorIS2_EEEENS3_IS5_EEEC2Ej($0, $15);
   if (!$24) break;
   $42 = HEAP32[$3 >> 2] | 0;
   $$054189 = 0;
   while (1) {
    if (((HEAP32[$42 + ($$054189 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$42 + ($$054189 * 12 | 0) >> 2] | 0) | 0) == 8) {
     label = 31;
     break;
    }
    $134 = $$054189 + 1 | 0;
    if (($134 | 0) < ($15 | 0)) $$054189 = $134; else break;
   }
   if ((label | 0) == 31) {
    $124 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19054, 101) | 0, $$054189) | 0;
    __ZNKSt3__28ios_base6getlocEv($2, $124 + (HEAP32[(HEAP32[$124 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $129 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
    $133 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$129 >> 2] | 0) + 28 >> 2] & 63]($129, 10) | 0;
    __ZNSt3__26localeD2Ev($2);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($124, $133) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($124) | 0;
    _exit(1);
   }
   if (!$24) break;
   $111 = $2 + 4 | 0;
   $112 = $2 + 8 | 0;
   $113 = $1 + 116 | 0;
   $114 = $1 + 112 | 0;
   $115 = $5 + 8 | 0;
   $116 = $2 + 8 | 0;
   $$0186 = 0;
   $137 = HEAP32[$0 >> 2] | 0;
   L41 : while (1) {
    if ((HEAP32[$137 + ($$0186 * 12 | 0) + 4 >> 2] | 0) == (HEAP32[$137 + ($$0186 * 12 | 0) >> 2] | 0)) {
     $142 = $$0186 >>> 5;
     $144 = 1 << ($$0186 & 31);
     $254 = $137;
     while (1) {
      HEAP32[$2 >> 2] = 0;
      HEAP32[$111 >> 2] = 0;
      HEAP32[$112 >> 2] = 0;
      $145 = HEAP32[$3 >> 2] | 0;
      if (((HEAP32[$145 + ($$0186 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$145 + ($$0186 * 12 | 0) >> 2] | 0) | 0) > 0) {
       $158 = $145;
       $storemerge182 = 0;
       while (1) {
        $161 = +HEAPF64[(HEAP32[$158 + ($$0186 * 12 | 0) >> 2] | 0) + ($storemerge182 << 3) >> 3];
        do if (!($161 >= +HEAPF64[(HEAP32[$16 >> 2] | 0) + ($$0186 << 3) >> 3])) $180 = $158; else {
         if ($161 == 1.0) {
          if ((HEAP32[$113 >> 2] | 0) < ($$0186 | 0)) break L41;
          if (!(HEAP32[(HEAP32[$114 >> 2] | 0) + ($142 << 2) >> 2] & $144)) {
           $180 = $158;
           break;
          }
         }
         HEAPF64[$5 >> 3] = $161;
         HEAP32[$115 >> 2] = $storemerge182;
         $174 = HEAP32[$111 >> 2] | 0;
         if ($174 >>> 0 < (HEAP32[$116 >> 2] | 0) >>> 0) {
          HEAP32[$174 >> 2] = HEAP32[$5 >> 2];
          HEAP32[$174 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
          HEAP32[$174 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
          HEAP32[$174 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
          HEAP32[$111 >> 2] = $174 + 16;
          $$pre209 = $158;
         } else {
          __ZNSt3__26vectorINS_4pairIdiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($2, $5);
          $$pre209 = HEAP32[$3 >> 2] | 0;
         }
         $180 = $$pre209;
        } while (0);
        $storemerge182 = $storemerge182 + 1 | 0;
        if (($storemerge182 | 0) >= ((HEAP32[$180 + ($$0186 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$180 + ($$0186 * 12 | 0) >> 2] | 0) >> 3 | 0)) break; else $158 = $180;
       }
       $153 = HEAP32[$0 >> 2] | 0;
      } else $153 = $254;
      $152 = $153 + ($$0186 * 12 | 0) | 0;
      if (($152 | 0) == ($2 | 0)) $188 = $153; else {
       __ZNSt3__26vectorINS_4pairIdiEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($152, HEAP32[$2 >> 2] | 0, HEAP32[$111 >> 2] | 0);
       $188 = HEAP32[$0 >> 2] | 0;
      }
      if ((HEAP32[$188 + ($$0186 * 12 | 0) + 4 >> 2] | 0) == (HEAP32[$188 + ($$0186 * 12 | 0) >> 2] | 0)) {
       $194 = (HEAP32[$16 >> 2] | 0) + ($$0186 << 3) | 0;
       HEAPF64[$194 >> 3] = +HEAPF64[$194 >> 3] + -.01;
      }
      $197 = HEAP32[$2 >> 2] | 0;
      if (!$197) $207 = $188; else {
       $199 = HEAP32[$111 >> 2] | 0;
       if (($199 | 0) != ($197 | 0)) HEAP32[$111 >> 2] = $199 + (~(($199 + -16 - $197 | 0) >>> 4) << 4);
       __ZdlPv($197);
       $207 = HEAP32[$0 >> 2] | 0;
      }
      if ((HEAP32[$207 + ($$0186 * 12 | 0) + 4 >> 2] | 0) == (HEAP32[$207 + ($$0186 * 12 | 0) >> 2] | 0)) $254 = $207; else {
       $253 = $207;
       break;
      }
     }
    } else $253 = $137;
    $$0186 = $$0186 + 1 | 0;
    if (($$0186 | 0) >= ($15 | 0)) break L4; else $137 = $253;
   }
   ___assert_fail(16299, 15934, 156, 16362);
  } else if ((label | 0) == 10) ___assert_fail(15898, 15934, 149, 15973); else if ((label | 0) == 12) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($54); else if ((label | 0) == 17) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($76);
 } else __ZNSt3__26vectorINS0_INS_4pairIdiEENS_9allocatorIS2_EEEENS3_IS5_EEEC2Ej($0, $15); while (0);
 $214 = HEAP32[$4 >> 2] | 0;
 if ($214 | 0) {
  $216 = HEAP32[$11 >> 2] | 0;
  if (($216 | 0) == ($214 | 0)) $232 = $214; else {
   $219 = $216;
   while (1) {
    $218 = $219 + -12 | 0;
    HEAP32[$11 >> 2] = $218;
    $220 = HEAP32[$218 >> 2] | 0;
    if (!$220) $222 = $218; else {
     $224 = $219 + -8 | 0;
     $225 = HEAP32[$224 >> 2] | 0;
     if (($225 | 0) != ($220 | 0)) HEAP32[$224 >> 2] = $225 + (~(($225 + -8 - $220 | 0) >>> 3) << 3);
     __ZdlPv($220);
     $222 = HEAP32[$11 >> 2] | 0;
    }
    if (($222 | 0) == ($214 | 0)) break; else $219 = $222;
   }
   $232 = HEAP32[$4 >> 2] | 0;
  }
  __ZdlPv($232);
 }
 $233 = HEAP32[$3 >> 2] | 0;
 if (!$233) {
  STACKTOP = sp;
  return;
 }
 $235 = HEAP32[$6 >> 2] | 0;
 if (($235 | 0) == ($233 | 0)) $251 = $233; else {
  $238 = $235;
  while (1) {
   $237 = $238 + -12 | 0;
   HEAP32[$6 >> 2] = $237;
   $239 = HEAP32[$237 >> 2] | 0;
   if (!$239) $241 = $237; else {
    $243 = $238 + -8 | 0;
    $244 = HEAP32[$243 >> 2] | 0;
    if (($244 | 0) != ($239 | 0)) HEAP32[$243 >> 2] = $244 + (~(($244 + -8 - $239 | 0) >>> 3) << 3);
    __ZdlPv($239);
    $241 = HEAP32[$6 >> 2] | 0;
   }
   if (($241 | 0) == ($233 | 0)) break; else $238 = $241;
  }
  $251 = HEAP32[$3 >> 2] | 0;
 }
 __ZdlPv($251);
 STACKTOP = sp;
 return;
}

function _dispose_chunk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0419 = 0, $$0420 = 0, $$0431 = 0, $$0438 = 0, $$1 = 0, $$1418 = 0, $$1426 = 0, $$1429 = 0, $$1433 = 0, $$1437 = 0, $$2 = 0, $$3 = 0, $$3435 = 0, $$pre$phi24Z2D = 0, $$pre$phi26Z2D = 0, $$pre$phiZ2D = 0, $100 = 0, $101 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $116 = 0, $118 = 0, $12 = 0, $124 = 0, $129 = 0, $13 = 0, $130 = 0, $133 = 0, $135 = 0, $137 = 0, $150 = 0, $155 = 0, $157 = 0, $160 = 0, $162 = 0, $165 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $172 = 0, $174 = 0, $175 = 0, $177 = 0, $178 = 0, $183 = 0, $184 = 0, $197 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $207 = 0, $22 = 0, $222 = 0, $225 = 0, $226 = 0, $227 = 0, $231 = 0, $232 = 0, $238 = 0, $24 = 0, $243 = 0, $244 = 0, $247 = 0, $249 = 0, $252 = 0, $257 = 0, $263 = 0, $267 = 0, $268 = 0, $286 = 0, $288 = 0, $295 = 0, $296 = 0, $297 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $47 = 0, $49 = 0, $52 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $84 = 0, $87 = 0, $88 = 0, $94 = 0, label = 0;
 $2 = $0 + $1 | 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if (!($4 & 1)) {
  $7 = HEAP32[$0 >> 2] | 0;
  if (!($4 & 3)) return;
  $11 = $0 + (0 - $7) | 0;
  $12 = $7 + $1 | 0;
  $13 = HEAP32[7588] | 0;
  if ($11 >>> 0 < $13 >>> 0) _abort();
  if (($11 | 0) == (HEAP32[7589] | 0)) {
   $100 = $2 + 4 | 0;
   $101 = HEAP32[$100 >> 2] | 0;
   if (($101 & 3 | 0) != 3) {
    $$1 = $11;
    $$1418 = $12;
    break;
   }
   HEAP32[7586] = $12;
   HEAP32[$100 >> 2] = $101 & -2;
   HEAP32[$11 + 4 >> 2] = $12 | 1;
   HEAP32[$11 + $12 >> 2] = $12;
   return;
  }
  $17 = $7 >>> 3;
  if ($7 >>> 0 < 256) {
   $20 = HEAP32[$11 + 8 >> 2] | 0;
   $22 = HEAP32[$11 + 12 >> 2] | 0;
   $24 = 30376 + ($17 << 1 << 2) | 0;
   if (($20 | 0) != ($24 | 0)) {
    if ($20 >>> 0 < $13 >>> 0) _abort();
    if ((HEAP32[$20 + 12 >> 2] | 0) != ($11 | 0)) _abort();
   }
   if (($22 | 0) == ($20 | 0)) {
    HEAP32[7584] = HEAP32[7584] & ~(1 << $17);
    $$1 = $11;
    $$1418 = $12;
    break;
   }
   if (($22 | 0) == ($24 | 0)) $$pre$phi26Z2D = $22 + 8 | 0; else {
    if ($22 >>> 0 < $13 >>> 0) _abort();
    $37 = $22 + 8 | 0;
    if ((HEAP32[$37 >> 2] | 0) == ($11 | 0)) $$pre$phi26Z2D = $37; else _abort();
   }
   HEAP32[$20 + 12 >> 2] = $22;
   HEAP32[$$pre$phi26Z2D >> 2] = $20;
   $$1 = $11;
   $$1418 = $12;
   break;
  }
  $42 = HEAP32[$11 + 24 >> 2] | 0;
  $44 = HEAP32[$11 + 12 >> 2] | 0;
  do if (($44 | 0) == ($11 | 0)) {
   $55 = $11 + 16 | 0;
   $56 = $55 + 4 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   if (!$57) {
    $59 = HEAP32[$55 >> 2] | 0;
    if (!$59) {
     $$3 = 0;
     break;
    } else {
     $$1426 = $59;
     $$1429 = $55;
    }
   } else {
    $$1426 = $57;
    $$1429 = $56;
   }
   while (1) {
    $61 = $$1426 + 20 | 0;
    $62 = HEAP32[$61 >> 2] | 0;
    if ($62 | 0) {
     $$1426 = $62;
     $$1429 = $61;
     continue;
    }
    $64 = $$1426 + 16 | 0;
    $65 = HEAP32[$64 >> 2] | 0;
    if (!$65) break; else {
     $$1426 = $65;
     $$1429 = $64;
    }
   }
   if ($$1429 >>> 0 < $13 >>> 0) _abort(); else {
    HEAP32[$$1429 >> 2] = 0;
    $$3 = $$1426;
    break;
   }
  } else {
   $47 = HEAP32[$11 + 8 >> 2] | 0;
   if ($47 >>> 0 < $13 >>> 0) _abort();
   $49 = $47 + 12 | 0;
   if ((HEAP32[$49 >> 2] | 0) != ($11 | 0)) _abort();
   $52 = $44 + 8 | 0;
   if ((HEAP32[$52 >> 2] | 0) == ($11 | 0)) {
    HEAP32[$49 >> 2] = $44;
    HEAP32[$52 >> 2] = $47;
    $$3 = $44;
    break;
   } else _abort();
  } while (0);
  if (!$42) {
   $$1 = $11;
   $$1418 = $12;
  } else {
   $70 = HEAP32[$11 + 28 >> 2] | 0;
   $71 = 30640 + ($70 << 2) | 0;
   do if (($11 | 0) == (HEAP32[$71 >> 2] | 0)) {
    HEAP32[$71 >> 2] = $$3;
    if (!$$3) {
     HEAP32[7585] = HEAP32[7585] & ~(1 << $70);
     $$1 = $11;
     $$1418 = $12;
     break L1;
    }
   } else if ($42 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
    HEAP32[$42 + 16 + (((HEAP32[$42 + 16 >> 2] | 0) != ($11 | 0) & 1) << 2) >> 2] = $$3;
    if (!$$3) {
     $$1 = $11;
     $$1418 = $12;
     break L1;
    } else break;
   } while (0);
   $84 = HEAP32[7588] | 0;
   if ($$3 >>> 0 < $84 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $42;
   $87 = $11 + 16 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   do if ($88 | 0) if ($88 >>> 0 < $84 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $88;
    HEAP32[$88 + 24 >> 2] = $$3;
    break;
   } while (0);
   $94 = HEAP32[$87 + 4 >> 2] | 0;
   if (!$94) {
    $$1 = $11;
    $$1418 = $12;
   } else if ($94 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $94;
    HEAP32[$94 + 24 >> 2] = $$3;
    $$1 = $11;
    $$1418 = $12;
    break;
   }
  }
 } else {
  $$1 = $0;
  $$1418 = $1;
 } while (0);
 $108 = HEAP32[7588] | 0;
 if ($2 >>> 0 < $108 >>> 0) _abort();
 $110 = $2 + 4 | 0;
 $111 = HEAP32[$110 >> 2] | 0;
 if (!($111 & 2)) {
  $116 = HEAP32[7589] | 0;
  if (($2 | 0) == (HEAP32[7590] | 0)) {
   $118 = (HEAP32[7587] | 0) + $$1418 | 0;
   HEAP32[7587] = $118;
   HEAP32[7590] = $$1;
   HEAP32[$$1 + 4 >> 2] = $118 | 1;
   if (($$1 | 0) != ($116 | 0)) return;
   HEAP32[7589] = 0;
   HEAP32[7586] = 0;
   return;
  }
  if (($2 | 0) == ($116 | 0)) {
   $124 = (HEAP32[7586] | 0) + $$1418 | 0;
   HEAP32[7586] = $124;
   HEAP32[7589] = $$1;
   HEAP32[$$1 + 4 >> 2] = $124 | 1;
   HEAP32[$$1 + $124 >> 2] = $124;
   return;
  }
  $129 = ($111 & -8) + $$1418 | 0;
  $130 = $111 >>> 3;
  L96 : do if ($111 >>> 0 < 256) {
   $133 = HEAP32[$2 + 8 >> 2] | 0;
   $135 = HEAP32[$2 + 12 >> 2] | 0;
   $137 = 30376 + ($130 << 1 << 2) | 0;
   if (($133 | 0) != ($137 | 0)) {
    if ($133 >>> 0 < $108 >>> 0) _abort();
    if ((HEAP32[$133 + 12 >> 2] | 0) != ($2 | 0)) _abort();
   }
   if (($135 | 0) == ($133 | 0)) {
    HEAP32[7584] = HEAP32[7584] & ~(1 << $130);
    break;
   }
   if (($135 | 0) == ($137 | 0)) $$pre$phi24Z2D = $135 + 8 | 0; else {
    if ($135 >>> 0 < $108 >>> 0) _abort();
    $150 = $135 + 8 | 0;
    if ((HEAP32[$150 >> 2] | 0) == ($2 | 0)) $$pre$phi24Z2D = $150; else _abort();
   }
   HEAP32[$133 + 12 >> 2] = $135;
   HEAP32[$$pre$phi24Z2D >> 2] = $133;
  } else {
   $155 = HEAP32[$2 + 24 >> 2] | 0;
   $157 = HEAP32[$2 + 12 >> 2] | 0;
   do if (($157 | 0) == ($2 | 0)) {
    $168 = $2 + 16 | 0;
    $169 = $168 + 4 | 0;
    $170 = HEAP32[$169 >> 2] | 0;
    if (!$170) {
     $172 = HEAP32[$168 >> 2] | 0;
     if (!$172) {
      $$3435 = 0;
      break;
     } else {
      $$1433 = $172;
      $$1437 = $168;
     }
    } else {
     $$1433 = $170;
     $$1437 = $169;
    }
    while (1) {
     $174 = $$1433 + 20 | 0;
     $175 = HEAP32[$174 >> 2] | 0;
     if ($175 | 0) {
      $$1433 = $175;
      $$1437 = $174;
      continue;
     }
     $177 = $$1433 + 16 | 0;
     $178 = HEAP32[$177 >> 2] | 0;
     if (!$178) break; else {
      $$1433 = $178;
      $$1437 = $177;
     }
    }
    if ($$1437 >>> 0 < $108 >>> 0) _abort(); else {
     HEAP32[$$1437 >> 2] = 0;
     $$3435 = $$1433;
     break;
    }
   } else {
    $160 = HEAP32[$2 + 8 >> 2] | 0;
    if ($160 >>> 0 < $108 >>> 0) _abort();
    $162 = $160 + 12 | 0;
    if ((HEAP32[$162 >> 2] | 0) != ($2 | 0)) _abort();
    $165 = $157 + 8 | 0;
    if ((HEAP32[$165 >> 2] | 0) == ($2 | 0)) {
     HEAP32[$162 >> 2] = $157;
     HEAP32[$165 >> 2] = $160;
     $$3435 = $157;
     break;
    } else _abort();
   } while (0);
   if ($155 | 0) {
    $183 = HEAP32[$2 + 28 >> 2] | 0;
    $184 = 30640 + ($183 << 2) | 0;
    do if (($2 | 0) == (HEAP32[$184 >> 2] | 0)) {
     HEAP32[$184 >> 2] = $$3435;
     if (!$$3435) {
      HEAP32[7585] = HEAP32[7585] & ~(1 << $183);
      break L96;
     }
    } else if ($155 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
     HEAP32[$155 + 16 + (((HEAP32[$155 + 16 >> 2] | 0) != ($2 | 0) & 1) << 2) >> 2] = $$3435;
     if (!$$3435) break L96; else break;
    } while (0);
    $197 = HEAP32[7588] | 0;
    if ($$3435 >>> 0 < $197 >>> 0) _abort();
    HEAP32[$$3435 + 24 >> 2] = $155;
    $200 = $2 + 16 | 0;
    $201 = HEAP32[$200 >> 2] | 0;
    do if ($201 | 0) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
     HEAP32[$$3435 + 16 >> 2] = $201;
     HEAP32[$201 + 24 >> 2] = $$3435;
     break;
    } while (0);
    $207 = HEAP32[$200 + 4 >> 2] | 0;
    if ($207 | 0) if ($207 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
     HEAP32[$$3435 + 20 >> 2] = $207;
     HEAP32[$207 + 24 >> 2] = $$3435;
     break;
    }
   }
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $129 | 1;
  HEAP32[$$1 + $129 >> 2] = $129;
  if (($$1 | 0) == (HEAP32[7589] | 0)) {
   HEAP32[7586] = $129;
   return;
  } else $$2 = $129;
 } else {
  HEAP32[$110 >> 2] = $111 & -2;
  HEAP32[$$1 + 4 >> 2] = $$1418 | 1;
  HEAP32[$$1 + $$1418 >> 2] = $$1418;
  $$2 = $$1418;
 }
 $222 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $225 = 30376 + ($222 << 1 << 2) | 0;
  $226 = HEAP32[7584] | 0;
  $227 = 1 << $222;
  if (!($226 & $227)) {
   HEAP32[7584] = $226 | $227;
   $$0438 = $225;
   $$pre$phiZ2D = $225 + 8 | 0;
  } else {
   $231 = $225 + 8 | 0;
   $232 = HEAP32[$231 >> 2] | 0;
   if ($232 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
    $$0438 = $232;
    $$pre$phiZ2D = $231;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$0438 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$0438;
  HEAP32[$$1 + 12 >> 2] = $225;
  return;
 }
 $238 = $$2 >>> 8;
 if (!$238) $$0431 = 0; else if ($$2 >>> 0 > 16777215) $$0431 = 31; else {
  $243 = ($238 + 1048320 | 0) >>> 16 & 8;
  $244 = $238 << $243;
  $247 = ($244 + 520192 | 0) >>> 16 & 4;
  $249 = $244 << $247;
  $252 = ($249 + 245760 | 0) >>> 16 & 2;
  $257 = 14 - ($247 | $243 | $252) + ($249 << $252 >>> 15) | 0;
  $$0431 = $$2 >>> ($257 + 7 | 0) & 1 | $257 << 1;
 }
 $263 = 30640 + ($$0431 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $$0431;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $267 = HEAP32[7585] | 0;
 $268 = 1 << $$0431;
 if (!($267 & $268)) {
  HEAP32[7585] = $267 | $268;
  HEAP32[$263 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $263;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 }
 $$0419 = $$2 << (($$0431 | 0) == 31 ? 0 : 25 - ($$0431 >>> 1) | 0);
 $$0420 = HEAP32[$263 >> 2] | 0;
 while (1) {
  if ((HEAP32[$$0420 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
   label = 121;
   break;
  }
  $286 = $$0420 + 16 + ($$0419 >>> 31 << 2) | 0;
  $288 = HEAP32[$286 >> 2] | 0;
  if (!$288) {
   label = 118;
   break;
  } else {
   $$0419 = $$0419 << 1;
   $$0420 = $288;
  }
 }
 if ((label | 0) == 118) {
  if ($286 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort();
  HEAP32[$286 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $$0420;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 } else if ((label | 0) == 121) {
  $295 = $$0420 + 8 | 0;
  $296 = HEAP32[$295 >> 2] | 0;
  $297 = HEAP32[7588] | 0;
  if (!($296 >>> 0 >= $297 >>> 0 & $$0420 >>> 0 >= $297 >>> 0)) _abort();
  HEAP32[$296 + 12 >> 2] = $$1;
  HEAP32[$295 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $296;
  HEAP32[$$1 + 12 >> 2] = $$0420;
  HEAP32[$$1 + 24 >> 2] = 0;
  return;
 }
}

function ___intscan($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0154222 = 0, $$0157 = 0, $$0159 = 0, $$1155192 = 0, $$1158 = 0, $$1160 = 0, $$1160169 = 0, $$1165 = 0, $$1165167 = 0, $$1165168 = 0, $$166 = 0, $$2156210 = 0, $$2161$be = 0, $$2161$lcssa = 0, $$3162$be = 0, $$3162215 = 0, $$4163$be = 0, $$4163$lcssa = 0, $$5$be = 0, $$6$be = 0, $$6$lcssa = 0, $$7$be = 0, $$7198 = 0, $$8 = 0, $$9$be = 0, $104 = 0, $123 = 0, $124 = 0, $131 = 0, $133 = 0, $134 = 0, $138 = 0, $139 = 0, $147 = 0, $152 = 0, $153 = 0, $155 = 0, $157 = 0, $159 = 0, $16 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $169 = 0, $170 = 0, $171 = 0, $189 = 0, $190 = 0, $198 = 0, $20 = 0, $204 = 0, $206 = 0, $207 = 0, $208 = 0, $21 = 0, $210 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $225 = 0, $226 = 0, $227 = 0, $242 = 0, $262 = 0, $264 = 0, $275 = 0, $28 = 0, $284 = 0, $287 = 0, $289 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $32 = 0, $40 = 0, $42 = 0, $50 = 0, $54 = 0, $6 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $94 = 0, $96 = 0, label = 0;
 L1 : do if ($1 >>> 0 > 36) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $289 = 0;
  $290 = 0;
 } else {
  $6 = $0 + 4 | 0;
  $7 = $0 + 100 | 0;
  do {
   $9 = HEAP32[$6 >> 2] | 0;
   if ($9 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
    HEAP32[$6 >> 2] = $9 + 1;
    $16 = HEAPU8[$9 >> 0] | 0;
   } else $16 = ___shgetc($0) | 0;
  } while ((_isspace($16) | 0) != 0);
  L11 : do switch ($16 | 0) {
  case 43:
  case 45:
   {
    $20 = (($16 | 0) == 45) << 31 >> 31;
    $21 = HEAP32[$6 >> 2] | 0;
    if ($21 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
     HEAP32[$6 >> 2] = $21 + 1;
     $$0157 = $20;
     $$0159 = HEAPU8[$21 >> 0] | 0;
     break L11;
    } else {
     $$0157 = $20;
     $$0159 = ___shgetc($0) | 0;
     break L11;
    }
    break;
   }
  default:
   {
    $$0157 = 0;
    $$0159 = $16;
   }
  } while (0);
  $28 = ($1 | 0) == 0;
  do if (($1 | 16 | 0) == 16 & ($$0159 | 0) == 48) {
   $32 = HEAP32[$6 >> 2] | 0;
   if ($32 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
    HEAP32[$6 >> 2] = $32 + 1;
    $40 = HEAPU8[$32 >> 0] | 0;
   } else $40 = ___shgetc($0) | 0;
   if (($40 | 32 | 0) != 120) if ($28) {
    $$1160169 = $40;
    $$1165168 = 8;
    label = 46;
    break;
   } else {
    $$1160 = $40;
    $$1165 = $1;
    label = 32;
    break;
   }
   $42 = HEAP32[$6 >> 2] | 0;
   if ($42 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
    HEAP32[$6 >> 2] = $42 + 1;
    $50 = HEAPU8[$42 >> 0] | 0;
   } else $50 = ___shgetc($0) | 0;
   if ((HEAPU8[25786 + $50 >> 0] | 0) > 15) {
    $54 = (HEAP32[$7 >> 2] | 0) != 0;
    if ($54) HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + -1;
    if (!$2) {
     ___shlim($0, 0);
     $289 = 0;
     $290 = 0;
     break L1;
    }
    if (!$54) {
     $289 = 0;
     $290 = 0;
     break L1;
    }
    HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + -1;
    $289 = 0;
    $290 = 0;
    break L1;
   } else {
    $$1160169 = $50;
    $$1165168 = 16;
    label = 46;
   }
  } else {
   $$166 = $28 ? 10 : $1;
   if ((HEAPU8[25786 + $$0159 >> 0] | 0) >>> 0 < $$166 >>> 0) {
    $$1160 = $$0159;
    $$1165 = $$166;
    label = 32;
   } else {
    if (HEAP32[$7 >> 2] | 0) HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + -1;
    ___shlim($0, 0);
    HEAP32[(___errno_location() | 0) >> 2] = 22;
    $289 = 0;
    $290 = 0;
    break L1;
   }
  } while (0);
  L43 : do if ((label | 0) == 32) if (($$1165 | 0) == 10) {
   $70 = $$1160 + -48 | 0;
   if ($70 >>> 0 < 10) {
    $$0154222 = 0;
    $74 = $70;
    do {
     $$0154222 = ($$0154222 * 10 | 0) + $74 | 0;
     $75 = HEAP32[$6 >> 2] | 0;
     if ($75 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
      HEAP32[$6 >> 2] = $75 + 1;
      $$2161$be = HEAPU8[$75 >> 0] | 0;
     } else $$2161$be = ___shgetc($0) | 0;
     $74 = $$2161$be + -48 | 0;
    } while ($74 >>> 0 < 10 & $$0154222 >>> 0 < 429496729);
    $$2161$lcssa = $$2161$be;
    $291 = $$0154222;
    $292 = 0;
   } else {
    $$2161$lcssa = $$1160;
    $291 = 0;
    $292 = 0;
   }
   $86 = $$2161$lcssa + -48 | 0;
   if ($86 >>> 0 < 10) {
    $$3162215 = $$2161$lcssa;
    $88 = $291;
    $89 = $292;
    $92 = $86;
    while (1) {
     $90 = ___muldi3($88 | 0, $89 | 0, 10, 0) | 0;
     $91 = tempRet0;
     $94 = (($92 | 0) < 0) << 31 >> 31;
     $96 = ~$94;
     if ($91 >>> 0 > $96 >>> 0 | ($91 | 0) == ($96 | 0) & $90 >>> 0 > ~$92 >>> 0) {
      $$1165167 = 10;
      $$8 = $$3162215;
      $293 = $88;
      $294 = $89;
      label = 72;
      break L43;
     }
     $88 = _i64Add($90 | 0, $91 | 0, $92 | 0, $94 | 0) | 0;
     $89 = tempRet0;
     $104 = HEAP32[$6 >> 2] | 0;
     if ($104 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
      HEAP32[$6 >> 2] = $104 + 1;
      $$3162$be = HEAPU8[$104 >> 0] | 0;
     } else $$3162$be = ___shgetc($0) | 0;
     $92 = $$3162$be + -48 | 0;
     if (!($92 >>> 0 < 10 & ($89 >>> 0 < 429496729 | ($89 | 0) == 429496729 & $88 >>> 0 < 2576980378))) break; else $$3162215 = $$3162$be;
    }
    if ($92 >>> 0 > 9) {
     $$1158 = $$0157;
     $262 = $89;
     $264 = $88;
    } else {
     $$1165167 = 10;
     $$8 = $$3162$be;
     $293 = $88;
     $294 = $89;
     label = 72;
    }
   } else {
    $$1158 = $$0157;
    $262 = $292;
    $264 = $291;
   }
  } else {
   $$1160169 = $$1160;
   $$1165168 = $$1165;
   label = 46;
  } while (0);
  L63 : do if ((label | 0) == 46) {
   if (!($$1165168 + -1 & $$1165168)) {
    $131 = HEAP8[26042 + (($$1165168 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    $133 = HEAP8[25786 + $$1160169 >> 0] | 0;
    $134 = $133 & 255;
    if ($134 >>> 0 < $$1165168 >>> 0) {
     $$1155192 = 0;
     $138 = $134;
     do {
      $$1155192 = $138 | $$1155192 << $131;
      $139 = HEAP32[$6 >> 2] | 0;
      if ($139 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
       HEAP32[$6 >> 2] = $139 + 1;
       $$4163$be = HEAPU8[$139 >> 0] | 0;
      } else $$4163$be = ___shgetc($0) | 0;
      $147 = HEAP8[25786 + $$4163$be >> 0] | 0;
      $138 = $147 & 255;
     } while ($$1155192 >>> 0 < 134217728 & $138 >>> 0 < $$1165168 >>> 0);
     $$4163$lcssa = $$4163$be;
     $155 = $147;
     $157 = 0;
     $159 = $$1155192;
    } else {
     $$4163$lcssa = $$1160169;
     $155 = $133;
     $157 = 0;
     $159 = 0;
    }
    $152 = _bitshift64Lshr(-1, -1, $131 | 0) | 0;
    $153 = tempRet0;
    if (($155 & 255) >>> 0 >= $$1165168 >>> 0 | ($157 >>> 0 > $153 >>> 0 | ($157 | 0) == ($153 | 0) & $159 >>> 0 > $152 >>> 0)) {
     $$1165167 = $$1165168;
     $$8 = $$4163$lcssa;
     $293 = $159;
     $294 = $157;
     label = 72;
     break;
    } else {
     $164 = $159;
     $165 = $157;
     $169 = $155;
    }
    while (1) {
     $166 = _bitshift64Shl($164 | 0, $165 | 0, $131 | 0) | 0;
     $167 = tempRet0;
     $170 = $169 & 255 | $166;
     $171 = HEAP32[$6 >> 2] | 0;
     if ($171 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
      HEAP32[$6 >> 2] = $171 + 1;
      $$5$be = HEAPU8[$171 >> 0] | 0;
     } else $$5$be = ___shgetc($0) | 0;
     $169 = HEAP8[25786 + $$5$be >> 0] | 0;
     if (($169 & 255) >>> 0 >= $$1165168 >>> 0 | ($167 >>> 0 > $153 >>> 0 | ($167 | 0) == ($153 | 0) & $170 >>> 0 > $152 >>> 0)) {
      $$1165167 = $$1165168;
      $$8 = $$5$be;
      $293 = $170;
      $294 = $167;
      label = 72;
      break L63;
     } else {
      $164 = $170;
      $165 = $167;
     }
    }
   }
   $123 = HEAP8[25786 + $$1160169 >> 0] | 0;
   $124 = $123 & 255;
   if ($124 >>> 0 < $$1165168 >>> 0) {
    $$2156210 = 0;
    $189 = $124;
    do {
     $$2156210 = $189 + (Math_imul($$2156210, $$1165168) | 0) | 0;
     $190 = HEAP32[$6 >> 2] | 0;
     if ($190 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
      HEAP32[$6 >> 2] = $190 + 1;
      $$6$be = HEAPU8[$190 >> 0] | 0;
     } else $$6$be = ___shgetc($0) | 0;
     $198 = HEAP8[25786 + $$6$be >> 0] | 0;
     $189 = $198 & 255;
    } while ($$2156210 >>> 0 < 119304647 & $189 >>> 0 < $$1165168 >>> 0);
    $$6$lcssa = $$6$be;
    $204 = $198;
    $295 = $$2156210;
    $296 = 0;
   } else {
    $$6$lcssa = $$1160169;
    $204 = $123;
    $295 = 0;
    $296 = 0;
   }
   if (($204 & 255) >>> 0 < $$1165168 >>> 0) {
    $206 = ___udivdi3(-1, -1, $$1165168 | 0, 0) | 0;
    $207 = tempRet0;
    $$7198 = $$6$lcssa;
    $208 = $296;
    $210 = $295;
    $218 = $204;
    while (1) {
     if ($208 >>> 0 > $207 >>> 0 | ($208 | 0) == ($207 | 0) & $210 >>> 0 > $206 >>> 0) {
      $$1165167 = $$1165168;
      $$8 = $$7198;
      $293 = $210;
      $294 = $208;
      label = 72;
      break L63;
     }
     $215 = ___muldi3($210 | 0, $208 | 0, $$1165168 | 0, 0) | 0;
     $216 = tempRet0;
     $217 = $218 & 255;
     if ($216 >>> 0 > 4294967295 | ($216 | 0) == -1 & $215 >>> 0 > ~$217 >>> 0) {
      $$1165167 = $$1165168;
      $$8 = $$7198;
      $293 = $210;
      $294 = $208;
      label = 72;
      break L63;
     }
     $225 = _i64Add($217 | 0, 0, $215 | 0, $216 | 0) | 0;
     $226 = tempRet0;
     $227 = HEAP32[$6 >> 2] | 0;
     if ($227 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
      HEAP32[$6 >> 2] = $227 + 1;
      $$7$be = HEAPU8[$227 >> 0] | 0;
     } else $$7$be = ___shgetc($0) | 0;
     $218 = HEAP8[25786 + $$7$be >> 0] | 0;
     if (($218 & 255) >>> 0 >= $$1165168 >>> 0) {
      $$1165167 = $$1165168;
      $$8 = $$7$be;
      $293 = $225;
      $294 = $226;
      label = 72;
      break;
     } else {
      $$7198 = $$7$be;
      $208 = $226;
      $210 = $225;
     }
    }
   } else {
    $$1165167 = $$1165168;
    $$8 = $$6$lcssa;
    $293 = $295;
    $294 = $296;
    label = 72;
   }
  } while (0);
  if ((label | 0) == 72) if ((HEAPU8[25786 + $$8 >> 0] | 0) >>> 0 < $$1165167 >>> 0) {
   do {
    $242 = HEAP32[$6 >> 2] | 0;
    if ($242 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
     HEAP32[$6 >> 2] = $242 + 1;
     $$9$be = HEAPU8[$242 >> 0] | 0;
    } else $$9$be = ___shgetc($0) | 0;
   } while ((HEAPU8[25786 + $$9$be >> 0] | 0) >>> 0 < $$1165167 >>> 0);
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $$1158 = ($3 & 1 | 0) == 0 & 0 == 0 ? $$0157 : 0;
   $262 = $4;
   $264 = $3;
  } else {
   $$1158 = $$0157;
   $262 = $294;
   $264 = $293;
  }
  if (HEAP32[$7 >> 2] | 0) HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + -1;
  if (!($262 >>> 0 < $4 >>> 0 | ($262 | 0) == ($4 | 0) & $264 >>> 0 < $3 >>> 0)) {
   if (!(($3 & 1 | 0) != 0 | 0 != 0 | ($$1158 | 0) != 0)) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $275 = _i64Add($3 | 0, $4 | 0, -1, -1) | 0;
    $289 = tempRet0;
    $290 = $275;
    break;
   }
   if ($262 >>> 0 > $4 >>> 0 | ($262 | 0) == ($4 | 0) & $264 >>> 0 > $3 >>> 0) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $289 = $4;
    $290 = $3;
    break;
   }
  }
  $284 = (($$1158 | 0) < 0) << 31 >> 31;
  $287 = _i64Subtract($264 ^ $$1158 | 0, $262 ^ $284 | 0, $$1158 | 0, $284 | 0) | 0;
  $289 = tempRet0;
  $290 = $287;
 } while (0);
 tempRet0 = $289;
 return $290 | 0;
}

function __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i49 = 0, $$0$i$i$i55 = 0, $$0$i$i$i61 = 0, $$0$i$i$i67 = 0, $$0$i$i$i73 = 0, $$0$i$i$i79 = 0, $$0$i$i$i85 = 0, $$pre$phi$i$i47Z2D = 0, $$pre$phi$i$i53Z2D = 0, $$pre$phi$i$i59Z2D = 0, $$pre$phi$i$i65Z2D = 0, $$pre$phi$i$i71Z2D = 0, $$pre$phi$i$i77Z2D = 0, $$pre$phi$i$i83Z2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi88Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $113 = 0, $116 = 0, $12 = 0, $123 = 0, $126 = 0, $16 = 0, $20 = 0, $23 = 0, $30 = 0, $34 = 0, $37 = 0, $52 = 0, $55 = 0, $62 = 0, $65 = 0, $73 = 0, $77 = 0, $81 = 0, $84 = 0, $91 = 0, $95 = 0, $98 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 36256) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 127]($10, $12);
   $16 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $16;
   HEAP8[$3 + 1 >> 0] = $16 >> 8;
   HEAP8[$3 + 2 >> 0] = $16 >> 16;
   HEAP8[$3 + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($11, $12);
   $20 = $8 + 11 | 0;
   if ((HEAP8[$20 >> 0] | 0) < 0) {
    $23 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($23, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$iZ2D = $8;
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$20 >> 0] = 0;
    $$pre$phi$i$iZ2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
   HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$11 >> 2];
   HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phiZ2D = $12;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 40 >> 2] & 127]($10, $12);
   $30 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $30;
   HEAP8[$3 + 1 >> 0] = $30 >> 8;
   HEAP8[$3 + 2 >> 0] = $30 >> 16;
   HEAP8[$3 + 3 >> 0] = $30 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($11, $12);
   $34 = $8 + 11 | 0;
   if ((HEAP8[$34 >> 0] | 0) < 0) {
    $37 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($37, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$i47Z2D = $8;
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$34 >> 0] = 0;
    $$pre$phi$i$i47Z2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
   HEAP32[$$pre$phi$i$i47Z2D >> 2] = HEAP32[$11 >> 2];
   HEAP32[$$pre$phi$i$i47Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$$pre$phi$i$i47Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i49 = 0;
   while (1) {
    if (($$0$i$i$i49 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i49 << 2) >> 2] = 0;
    $$0$i$i$i49 = $$0$i$i$i49 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phiZ2D = $12;
  }
  HEAP8[$4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$5 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 20 >> 2] & 127]($11, $12);
  $52 = $6 + 11 | 0;
  if ((HEAP8[$52 >> 0] | 0) < 0) {
   $55 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($55, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i53Z2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$52 >> 0] = 0;
   $$pre$phi$i$i53Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$i53Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i53Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i53Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i55 = 0;
  while (1) {
   if (($$0$i$i$i55 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i55 << 2) >> 2] = 0;
   $$0$i$i$i55 = $$0$i$i$i55 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 24 >> 2] & 127]($11, $12);
  $62 = $7 + 11 | 0;
  if ((HEAP8[$62 >> 0] | 0) < 0) {
   $65 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($65, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i59Z2D = $7;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$62 >> 0] = 0;
   $$pre$phi$i$i59Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
  HEAP32[$$pre$phi$i$i59Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i59Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i59Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i61 = 0;
  while (1) {
   if (($$0$i$i$i61 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i61 << 2) >> 2] = 0;
   $$0$i$i$i61 = $$0$i$i$i61 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $73 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 36248) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$73 >> 2] | 0) + 44 >> 2] & 127]($10, $73);
   $77 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $77;
   HEAP8[$3 + 1 >> 0] = $77 >> 8;
   HEAP8[$3 + 2 >> 0] = $77 >> 16;
   HEAP8[$3 + 3 >> 0] = $77 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$73 >> 2] | 0) + 32 >> 2] & 127]($11, $73);
   $81 = $8 + 11 | 0;
   if ((HEAP8[$81 >> 0] | 0) < 0) {
    $84 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($84, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$i65Z2D = $8;
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$81 >> 0] = 0;
    $$pre$phi$i$i65Z2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
   HEAP32[$$pre$phi$i$i65Z2D >> 2] = HEAP32[$11 >> 2];
   HEAP32[$$pre$phi$i$i65Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$$pre$phi$i$i65Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i67 = 0;
   while (1) {
    if (($$0$i$i$i67 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i67 << 2) >> 2] = 0;
    $$0$i$i$i67 = $$0$i$i$i67 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phi88Z2D = $73;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$73 >> 2] | 0) + 40 >> 2] & 127]($10, $73);
   $91 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $91;
   HEAP8[$3 + 1 >> 0] = $91 >> 8;
   HEAP8[$3 + 2 >> 0] = $91 >> 16;
   HEAP8[$3 + 3 >> 0] = $91 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$73 >> 2] | 0) + 28 >> 2] & 127]($11, $73);
   $95 = $8 + 11 | 0;
   if ((HEAP8[$95 >> 0] | 0) < 0) {
    $98 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($98, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$i71Z2D = $8;
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$95 >> 0] = 0;
    $$pre$phi$i$i71Z2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
   HEAP32[$$pre$phi$i$i71Z2D >> 2] = HEAP32[$11 >> 2];
   HEAP32[$$pre$phi$i$i71Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$$pre$phi$i$i71Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i73 = 0;
   while (1) {
    if (($$0$i$i$i73 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i73 << 2) >> 2] = 0;
    $$0$i$i$i73 = $$0$i$i$i73 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phi88Z2D = $73;
  }
  HEAP8[$4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 12 >> 2] & 127]($73) | 0;
  HEAP8[$5 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 16 >> 2] & 127]($73) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi88Z2D >> 2] | 0) + 20 >> 2] & 127]($11, $73);
  $113 = $6 + 11 | 0;
  if ((HEAP8[$113 >> 0] | 0) < 0) {
   $116 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($116, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i77Z2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$113 >> 0] = 0;
   $$pre$phi$i$i77Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$i77Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i77Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i77Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i79 = 0;
  while (1) {
   if (($$0$i$i$i79 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i79 << 2) >> 2] = 0;
   $$0$i$i$i79 = $$0$i$i$i79 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi88Z2D >> 2] | 0) + 24 >> 2] & 127]($11, $73);
  $123 = $7 + 11 | 0;
  if ((HEAP8[$123 >> 0] | 0) < 0) {
   $126 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($126, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i83Z2D = $7;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$123 >> 0] = 0;
   $$pre$phi$i$i83Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
  HEAP32[$$pre$phi$i$i83Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i83Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i83Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i85 = 0;
  while (1) {
   if (($$0$i$i$i85 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i85 << 2) >> 2] = 0;
   $$0$i$i$i85 = $$0$i$i$i85 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 36 >> 2] & 127]($73) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$095$0 = 0, $10 = 0, $103 = 0, $108 = 0, $109 = 0, $11 = 0, $111 = 0, $116 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $51 = 0, $56 = 0, $57 = 0, $59 = 0, $64 = 0, $8 = 0, $9 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy30 = sp + 128 | 0;
 $$byval_copy26 = sp + 112 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 108 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 100 | 0;
 $14 = sp + 96 | 0;
 $15 = sp + 92 | 0;
 $16 = sp + 88 | 0;
 $17 = sp + 84 | 0;
 $18 = sp + 80 | 0;
 $19 = sp + 76 | 0;
 $20 = sp + 72 | 0;
 $21 = sp + 68 | 0;
 $22 = sp + 64 | 0;
 $23 = sp + 60 | 0;
 $24 = sp + 56 | 0;
 $25 = sp + 52 | 0;
 $26 = sp + 48 | 0;
 $27 = sp + 44 | 0;
 $28 = sp + 40 | 0;
 $29 = sp + 36 | 0;
 $30 = sp + 32 | 0;
 $31 = sp + 28 | 0;
 $32 = sp + 24 | 0;
 $33 = sp + 20 | 0;
 $34 = sp + 16 | 0;
 $35 = sp + 12 | 0;
 $36 = sp + 8 | 0;
 $37 = sp + 4 | 0;
 $38 = sp;
 HEAP32[$4 >> 2] = 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy30, $3);
 $39 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy30, 34568) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy30);
 $41 = $5 + 8 | 0;
 $42 = $5 + 20 | 0;
 $43 = $5 + 16 | 0;
 $44 = $5 + 24 | 0;
 $45 = $0 + 8 | 0;
 do switch ($6 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $44, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$9 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $43, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 99:
  {
   $51 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 12 >> 2] & 127]($45) | 0;
   HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$2 >> 2];
   $56 = HEAP8[$51 + 8 + 3 >> 0] | 0;
   $57 = $56 << 24 >> 24 < 0;
   $59 = $57 ? HEAP32[$51 >> 2] | 0 : $51;
   $64 = $59 + (($57 ? HEAP32[$51 + 4 >> 2] | 0 : $56 & 255) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $59, $64) | 0;
   label = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 12 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 68:
  {
   HEAP32[$13 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$14 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 12816, 12848) | 0;
   label = 26;
   break;
  }
 case 70:
  {
   HEAP32[$15 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$16 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$15 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 12848, 12880) | 0;
   label = 26;
   break;
  }
 case 72:
  {
   HEAP32[$17 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $41, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 73:
  {
   HEAP32[$18 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$18 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $41, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 106:
  {
   HEAP32[$19 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 28 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 109:
  {
   HEAP32[$20 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$20 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($0, $43, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 77:
  {
   HEAP32[$21 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 4 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$22 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 112:
  {
   HEAP32[$23 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$23 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($0, $41, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 114:
  {
   HEAP32[$24 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$25 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 12880, 12924) | 0;
   label = 26;
   break;
  }
 case 82:
  {
   HEAP32[$26 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$27 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 12924, 12944) | 0;
   label = 26;
   break;
  }
 case 83:
  {
   HEAP32[$28 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$28 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$30 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 12944, 12976) | 0;
   label = 26;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $44, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 120:
  {
   $96 = HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$33 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$33 >> 2];
   $$sroa$095$0 = FUNCTION_TABLE_iiiiiii[$96 & 63]($0, $$byval_copy26, $$byval_copy30, $3, $4, $5) | 0;
   break;
  }
 case 88:
  {
   $103 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 24 >> 2] & 127]($45) | 0;
   HEAP32[$34 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$35 >> 2] = HEAP32[$2 >> 2];
   $108 = HEAP8[$103 + 8 + 3 >> 0] | 0;
   $109 = $108 << 24 >> 24 < 0;
   $111 = $109 ? HEAP32[$103 >> 2] | 0 : $103;
   $116 = $111 + (($109 ? HEAP32[$103 + 4 >> 2] | 0 : $108 & 255) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$34 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$35 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $111, $116) | 0;
   label = 26;
   break;
  }
 case 121:
  {
   HEAP32[$36 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$36 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0, $42, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 89:
  {
   HEAP32[$37 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$37 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($0, $42, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 37:
  {
   HEAP32[$38 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$38 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 default:
  {
   HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4;
   label = 26;
  }
 } while (0);
 if ((label | 0) == 26) $$sroa$095$0 = HEAP32[$1 >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$095$0 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$095$0 = 0, $10 = 0, $102 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $114 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $51 = 0, $55 = 0, $56 = 0, $58 = 0, $63 = 0, $8 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy30 = sp + 128 | 0;
 $$byval_copy26 = sp + 112 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 108 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 100 | 0;
 $14 = sp + 96 | 0;
 $15 = sp + 92 | 0;
 $16 = sp + 88 | 0;
 $17 = sp + 84 | 0;
 $18 = sp + 80 | 0;
 $19 = sp + 76 | 0;
 $20 = sp + 72 | 0;
 $21 = sp + 68 | 0;
 $22 = sp + 64 | 0;
 $23 = sp + 60 | 0;
 $24 = sp + 56 | 0;
 $25 = sp + 52 | 0;
 $26 = sp + 48 | 0;
 $27 = sp + 44 | 0;
 $28 = sp + 40 | 0;
 $29 = sp + 36 | 0;
 $30 = sp + 32 | 0;
 $31 = sp + 28 | 0;
 $32 = sp + 24 | 0;
 $33 = sp + 20 | 0;
 $34 = sp + 16 | 0;
 $35 = sp + 12 | 0;
 $36 = sp + 8 | 0;
 $37 = sp + 4 | 0;
 $38 = sp;
 HEAP32[$4 >> 2] = 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy30, $3);
 $39 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy30, 34536) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy30);
 $41 = $5 + 8 | 0;
 $42 = $5 + 20 | 0;
 $43 = $5 + 16 | 0;
 $44 = $5 + 24 | 0;
 $45 = $0 + 8 | 0;
 do switch ($6 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $44, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$9 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $43, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 99:
  {
   $51 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 12 >> 2] & 127]($45) | 0;
   HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$2 >> 2];
   $55 = HEAP8[$51 + 11 >> 0] | 0;
   $56 = $55 << 24 >> 24 < 0;
   $58 = $56 ? HEAP32[$51 >> 2] | 0 : $51;
   $63 = $58 + ($56 ? HEAP32[$51 + 4 >> 2] | 0 : $55 & 255) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $58, $63) | 0;
   label = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 12 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 68:
  {
   HEAP32[$13 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$14 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 27539, 27547) | 0;
   label = 26;
   break;
  }
 case 70:
  {
   HEAP32[$15 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$16 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$15 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 27547, 27555) | 0;
   label = 26;
   break;
  }
 case 72:
  {
   HEAP32[$17 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $41, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 73:
  {
   HEAP32[$18 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$18 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $41, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 106:
  {
   HEAP32[$19 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 28 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 109:
  {
   HEAP32[$20 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$20 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($0, $43, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 77:
  {
   HEAP32[$21 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 4 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$22 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 112:
  {
   HEAP32[$23 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$23 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($0, $41, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 114:
  {
   HEAP32[$24 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$25 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 27555, 27566) | 0;
   label = 26;
   break;
  }
 case 82:
  {
   HEAP32[$26 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$27 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 27566, 27571) | 0;
   label = 26;
   break;
  }
 case 83:
  {
   HEAP32[$28 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$28 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$30 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 27571, 27579) | 0;
   label = 26;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $44, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 120:
  {
   $95 = HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$33 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$33 >> 2];
   $$sroa$095$0 = FUNCTION_TABLE_iiiiiii[$95 & 63]($0, $$byval_copy26, $$byval_copy30, $3, $4, $5) | 0;
   break;
  }
 case 88:
  {
   $102 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 24 >> 2] & 127]($45) | 0;
   HEAP32[$34 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$35 >> 2] = HEAP32[$2 >> 2];
   $106 = HEAP8[$102 + 11 >> 0] | 0;
   $107 = $106 << 24 >> 24 < 0;
   $109 = $107 ? HEAP32[$102 >> 2] | 0 : $102;
   $114 = $109 + ($107 ? HEAP32[$102 + 4 >> 2] | 0 : $106 & 255) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$34 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$35 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $109, $114) | 0;
   label = 26;
   break;
  }
 case 121:
  {
   HEAP32[$36 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$36 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0, $42, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 89:
  {
   HEAP32[$37 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$37 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($0, $42, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 37:
  {
   HEAP32[$38 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$38 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 default:
  {
   HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4;
   label = 26;
  }
 } while (0);
 if ((label | 0) == 26) $$sroa$095$0 = HEAP32[$1 >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$095$0 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i53 = 0, $$0$i$i$i$i69 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i59 = 0, $$0$i$i2$i$i75 = 0, $$0$i$i66 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$ph$sink = 0, $$049 = 0, $$050 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$ph = 0, $$pre = 0, $$pre$i$i$i55 = 0, $$pre$i$i$i71 = 0, $$pre$i4$i$i61 = 0, $$pre$i4$i$i6198 = 0, $$pre$i4$i$i6199 = 0, $$sroa$047$0$copyload = 0, $10 = 0, $106 = 0, $109 = 0, $11 = 0, $12 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $142 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $166 = 0, $17 = 0, $173 = 0, $174 = 0, $184 = 0, $19 = 0, $196 = 0, $199 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $31 = 0, $33 = 0, $35 = 0, $53 = 0, $59 = 0, $60 = 0, $69 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $78 = 0, $8 = 0, $83 = 0, $85 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $3);
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34536) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy1);
 HEAP32[$4 >> 2] = 0;
 $11 = $10 + 8 | 0;
 $$0$ph = $6;
 $$pre = 0;
 L1 : while (1) {
  $12 = ($$0$ph | 0) != ($7 | 0);
  $13 = $$pre;
  while (1) {
   $15 = HEAP32[$1 >> 2] | 0;
   if (!($12 & ($13 | 0) == 0)) {
    $$pre$i$i$i71 = $15;
    break L1;
   }
   $17 = $15;
   if (!$15) {
    $151 = 0;
    $213 = 1;
    $70 = $17;
   } else {
    $19 = HEAP32[$15 + 12 >> 2] | 0;
    if (($19 | 0) == (HEAP32[$15 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 127]($15) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$19 >> 0] | 0) | 0;
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
     HEAP32[$1 >> 2] = 0;
     $151 = 0;
     $213 = 1;
     $70 = 0;
    } else {
     $151 = $15;
     $213 = 0;
     $70 = $17;
    }
   }
   $31 = HEAP32[$2 >> 2] | 0;
   $33 = $31;
   do if (!$31) {
    $$ph = $33;
    label = 16;
   } else {
    $35 = HEAP32[$31 + 12 >> 2] | 0;
    if (($35 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$35 >> 0] | 0) | 0;
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
     HEAP32[$2 >> 2] = 0;
     $$ph = 0;
     label = 16;
     break;
    } else if ($213) {
     $214 = $31;
     $71 = $33;
     break;
    } else {
     label = 61;
     break L1;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($213) {
     label = 61;
     break L1;
    } else {
     $214 = 0;
     $71 = $$ph;
    }
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 63]($10, HEAP8[$$0$ph >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
    label = 19;
    break;
   }
   $75 = HEAP8[$$0$ph >> 0] | 0;
   if ($75 << 24 >> 24 > -1) {
    $78 = HEAP32[$11 >> 2] | 0;
    if (HEAP16[$78 + ($75 << 24 >> 24 << 1) >> 1] & 8192) {
     $$0$ph$sink = $$0$ph;
     label = 27;
     break;
    }
   }
   $150 = $151 + 12 | 0;
   $152 = HEAP32[$150 >> 2] | 0;
   $153 = $151 + 16 | 0;
   if (($152 | 0) == (HEAP32[$153 >> 2] | 0)) $$0$i$i66 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$151 >> 2] | 0) + 36 >> 2] & 127]($151) | 0; else $$0$i$i66 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$152 >> 0] | 0) | 0;
   $166 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, $$0$i$i66 & 255) | 0;
   if ($166 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, HEAP8[$$0$ph >> 0] | 0) | 0) << 24 >> 24) {
    label = 57;
    break;
   }
   HEAP32[$4 >> 2] = 4;
   $13 = 4;
  }
  L35 : do if ((label | 0) == 19) {
   label = 0;
   $53 = $$0$ph + 1 | 0;
   if (($53 | 0) == ($7 | 0)) {
    label = 61;
    break L1;
   }
   $59 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 63]($10, HEAP8[$53 >> 0] | 0, 0) | 0;
   switch ($59 << 24 >> 24) {
   case 48:
   case 69:
    {
     $60 = $$0$ph + 2 | 0;
     if (($60 | 0) == ($7 | 0)) {
      label = 61;
      break L1;
     }
     $$049 = $59;
     $$050 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 63]($10, HEAP8[$60 >> 0] | 0, 0) | 0;
     $74 = $53;
     break;
    }
   default:
    {
     $$049 = 0;
     $$050 = $59;
     $74 = $$0$ph;
    }
   }
   $69 = HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$8 >> 2] = $70;
   HEAP32[$9 >> 2] = $71;
   HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$1 >> 2] = FUNCTION_TABLE_iiiiiiiii[$69 & 15]($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $$050, $$049) | 0;
   $$0$ph$be = $74 + 2 | 0;
  } else if ((label | 0) == 27) {
   while (1) {
    label = 0;
    $83 = $$0$ph$sink + 1 | 0;
    if (($83 | 0) == ($7 | 0)) {
     $$lcssa = $7;
     break;
    }
    $85 = HEAP8[$83 >> 0] | 0;
    if ($85 << 24 >> 24 <= -1) {
     $$lcssa = $83;
     break;
    }
    if (!(HEAP16[$78 + ($85 << 24 >> 24 << 1) >> 1] & 8192)) {
     $$lcssa = $83;
     break;
    } else {
     $$0$ph$sink = $83;
     label = 27;
    }
   }
   $$pre$i$i$i55 = $151;
   $$pre$i4$i$i61 = $214;
   $106 = $214;
   while (1) {
    if (!$$pre$i$i$i55) {
     $121 = 1;
     $123 = 0;
    } else {
     $94 = HEAP32[$$pre$i$i$i55 + 12 >> 2] | 0;
     if (($94 | 0) == (HEAP32[$$pre$i$i$i55 + 16 >> 2] | 0)) $$0$i$i$i$i53 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i55 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i55) | 0; else $$0$i$i$i$i53 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$94 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i53, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      $121 = 1;
      $123 = 0;
     } else {
      $121 = 0;
      $123 = $$pre$i$i$i55;
     }
    }
    do if (!$106) {
     $$pre$i4$i$i6199 = $$pre$i4$i$i61;
     label = 43;
    } else {
     $109 = HEAP32[$106 + 12 >> 2] | 0;
     if (($109 | 0) == (HEAP32[$106 + 16 >> 2] | 0)) $$0$i$i2$i$i59 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$106 >> 2] | 0) + 36 >> 2] & 127]($106) | 0; else $$0$i$i2$i$i59 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$109 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i59, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$2 >> 2] = 0;
      $$pre$i4$i$i6199 = 0;
      label = 43;
      break;
     } else if ($121 ^ ($$pre$i4$i$i61 | 0) == 0) {
      $$pre$i4$i$i6198 = $$pre$i4$i$i61;
      $215 = $$pre$i4$i$i61;
      break;
     } else {
      $$0$ph$be = $$lcssa;
      break L35;
     }
    } while (0);
    if ((label | 0) == 43) {
     label = 0;
     if ($121) {
      $$0$ph$be = $$lcssa;
      break L35;
     } else {
      $$pre$i4$i$i6198 = $$pre$i4$i$i6199;
      $215 = 0;
     }
    }
    $122 = $123 + 12 | 0;
    $124 = HEAP32[$122 >> 2] | 0;
    $125 = $123 + 16 | 0;
    if (($124 | 0) == (HEAP32[$125 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$123 >> 2] | 0) + 36 >> 2] & 127]($123) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$124 >> 0] | 0) | 0;
    if (($$0$i$i & 255) << 24 >> 24 <= -1) {
     $$0$ph$be = $$lcssa;
     break L35;
    }
    if (!(HEAP16[(HEAP32[$11 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
     $$0$ph$be = $$lcssa;
     break L35;
    }
    $142 = HEAP32[$122 >> 2] | 0;
    if (($142 | 0) == (HEAP32[$125 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$123 >> 2] | 0) + 40 >> 2] & 127]($123) | 0;
     $$pre$i$i$i55 = $123;
     $$pre$i4$i$i61 = $$pre$i4$i$i6198;
     $106 = $215;
     continue;
    } else {
     HEAP32[$122 >> 2] = $142 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$142 >> 0] | 0) | 0;
     $$pre$i$i$i55 = $123;
     $$pre$i4$i$i61 = $$pre$i4$i$i6198;
     $106 = $215;
     continue;
    }
   }
  } else if ((label | 0) == 57) {
   label = 0;
   $173 = $$0$ph + 1 | 0;
   $174 = HEAP32[$150 >> 2] | 0;
   if (($174 | 0) == (HEAP32[$153 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[$151 >> 2] | 0) + 40 >> 2] & 127]($151) | 0;
    $$0$ph$be = $173;
    break;
   } else {
    HEAP32[$150 >> 2] = $174 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$174 >> 0] | 0) | 0;
    $$0$ph$be = $173;
    break;
   }
  } while (0);
  $$0$ph = $$0$ph$be;
  $$pre = HEAP32[$4 >> 2] | 0;
 }
 if ((label | 0) == 61) {
  HEAP32[$4 >> 2] = 4;
  $$pre$i$i$i71 = $151;
 }
 if (!$$pre$i$i$i71) {
  $$sroa$047$0$copyload = 0;
  $216 = 1;
 } else {
  $184 = HEAP32[$$pre$i$i$i71 + 12 >> 2] | 0;
  if (($184 | 0) == (HEAP32[$$pre$i$i$i71 + 16 >> 2] | 0)) $$0$i$i$i$i69 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i71 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i71) | 0; else $$0$i$i$i$i69 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$184 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i69, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $$sroa$047$0$copyload = 0;
   $216 = 1;
  } else {
   $$sroa$047$0$copyload = $$pre$i$i$i71;
   $216 = 0;
  }
 }
 $196 = HEAP32[$2 >> 2] | 0;
 do if (!$196) label = 74; else {
  $199 = HEAP32[$196 + 12 >> 2] | 0;
  if (($199 | 0) == (HEAP32[$196 + 16 >> 2] | 0)) $$0$i$i2$i$i75 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$196 >> 2] | 0) + 36 >> 2] & 127]($196) | 0; else $$0$i$i2$i$i75 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$199 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i75, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 74;
   break;
  } else if ($216) break; else {
   label = 76;
   break;
  }
 } while (0);
 if ((label | 0) == 74) if ($216) label = 76;
 if ((label | 0) == 76) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 STACKTOP = sp;
 return $$sroa$047$0$copyload | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i52 = 0, $$0$i$i$i$i67 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i58 = 0, $$0$i$i2$i$i73 = 0, $$0$i$i64 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$ph$sink = 0, $$049 = 0, $$050 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$ph = 0, $$pre = 0, $$pre$i$i$i54 = 0, $$pre$i$i$i69 = 0, $$pre$i4$i$i60 = 0, $$pre$i4$i$i6098 = 0, $$pre$i4$i$i6099 = 0, $$sroa$047$0$copyload = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $132 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $155 = 0, $16 = 0, $162 = 0, $163 = 0, $173 = 0, $18 = 0, $185 = 0, $188 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $30 = 0, $32 = 0, $34 = 0, $52 = 0, $58 = 0, $59 = 0, $68 = 0, $69 = 0, $70 = 0, $73 = 0, $79 = 0, $8 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $3);
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 34568) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy1);
 HEAP32[$4 >> 2] = 0;
 $$0$ph = $6;
 $$pre = 0;
 L1 : while (1) {
  $11 = ($$0$ph | 0) != ($7 | 0);
  $12 = $$pre;
  while (1) {
   $14 = HEAP32[$1 >> 2] | 0;
   if (!($11 & ($12 | 0) == 0)) {
    $$pre$i$i$i69 = $14;
    break L1;
   }
   $16 = $14;
   if (!$14) {
    $141 = 0;
    $202 = 1;
    $69 = $16;
   } else {
    $18 = HEAP32[$14 + 12 >> 2] | 0;
    if (($18 | 0) == (HEAP32[$14 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$18 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$1 >> 2] = 0;
     $141 = 0;
     $202 = 1;
     $69 = 0;
    } else {
     $141 = $14;
     $202 = 0;
     $69 = $16;
    }
   }
   $30 = HEAP32[$2 >> 2] | 0;
   $32 = $30;
   do if (!$30) {
    $$ph = $32;
    label = 16;
   } else {
    $34 = HEAP32[$30 + 12 >> 2] | 0;
    if (($34 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$34 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$2 >> 2] = 0;
     $$ph = 0;
     label = 16;
     break;
    } else if ($202) {
     $203 = $30;
     $70 = $32;
     break;
    } else {
     label = 58;
     break L1;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($202) {
     label = 58;
     break L1;
    } else {
     $203 = 0;
     $70 = $$ph;
    }
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, HEAP32[$$0$ph >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
    label = 19;
    break;
   }
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, 8192, HEAP32[$$0$ph >> 2] | 0) | 0) {
    $$0$ph$sink = $$0$ph;
    label = 26;
    break;
   }
   $140 = $141 + 12 | 0;
   $142 = HEAP32[$140 >> 2] | 0;
   $143 = $141 + 16 | 0;
   if (($142 | 0) == (HEAP32[$143 >> 2] | 0)) $$0$i$i64 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 36 >> 2] & 127]($141) | 0; else $$0$i$i64 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$142 >> 2] | 0) | 0;
   $155 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 63]($10, $$0$i$i64) | 0;
   if (($155 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 63]($10, HEAP32[$$0$ph >> 2] | 0) | 0)) {
    label = 54;
    break;
   }
   HEAP32[$4 >> 2] = 4;
   $12 = 4;
  }
  L33 : do if ((label | 0) == 19) {
   label = 0;
   $52 = $$0$ph + 4 | 0;
   if (($52 | 0) == ($7 | 0)) {
    label = 58;
    break L1;
   }
   $58 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, HEAP32[$52 >> 2] | 0, 0) | 0;
   switch ($58 << 24 >> 24) {
   case 48:
   case 69:
    {
     $59 = $$0$ph + 8 | 0;
     if (($59 | 0) == ($7 | 0)) {
      label = 58;
      break L1;
     }
     $$049 = $58;
     $$050 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, HEAP32[$59 >> 2] | 0, 0) | 0;
     $73 = $52;
     break;
    }
   default:
    {
     $$049 = 0;
     $$050 = $58;
     $73 = $$0$ph;
    }
   }
   $68 = HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$8 >> 2] = $69;
   HEAP32[$9 >> 2] = $70;
   HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$1 >> 2] = FUNCTION_TABLE_iiiiiiiii[$68 & 15]($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $$050, $$049) | 0;
   $$0$ph$be = $73 + 8 | 0;
  } else if ((label | 0) == 26) {
   while (1) {
    label = 0;
    $79 = $$0$ph$sink + 4 | 0;
    if (($79 | 0) == ($7 | 0)) {
     $$lcssa = $7;
     break;
    }
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, 8192, HEAP32[$79 >> 2] | 0) | 0) {
     $$0$ph$sink = $79;
     label = 26;
    } else {
     $$lcssa = $79;
     break;
    }
   }
   $$pre$i$i$i54 = $141;
   $$pre$i4$i$i60 = $203;
   $100 = $203;
   while (1) {
    if (!$$pre$i$i$i54) {
     $115 = 1;
     $117 = 0;
    } else {
     $88 = HEAP32[$$pre$i$i$i54 + 12 >> 2] | 0;
     if (($88 | 0) == (HEAP32[$$pre$i$i$i54 + 16 >> 2] | 0)) $$0$i$i$i$i52 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i54 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i54) | 0; else $$0$i$i$i$i52 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$88 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i52, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      $115 = 1;
      $117 = 0;
     } else {
      $115 = 0;
      $117 = $$pre$i$i$i54;
     }
    }
    do if (!$100) {
     $$pre$i4$i$i6099 = $$pre$i4$i$i60;
     label = 41;
    } else {
     $103 = HEAP32[$100 + 12 >> 2] | 0;
     if (($103 | 0) == (HEAP32[$100 + 16 >> 2] | 0)) $$0$i$i2$i$i58 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$100 >> 2] | 0) + 36 >> 2] & 127]($100) | 0; else $$0$i$i2$i$i58 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$103 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i58, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$2 >> 2] = 0;
      $$pre$i4$i$i6099 = 0;
      label = 41;
      break;
     } else if ($115 ^ ($$pre$i4$i$i60 | 0) == 0) {
      $$pre$i4$i$i6098 = $$pre$i4$i$i60;
      $204 = $$pre$i4$i$i60;
      break;
     } else {
      $$0$ph$be = $$lcssa;
      break L33;
     }
    } while (0);
    if ((label | 0) == 41) {
     label = 0;
     if ($115) {
      $$0$ph$be = $$lcssa;
      break L33;
     } else {
      $$pre$i4$i$i6098 = $$pre$i4$i$i6099;
      $204 = 0;
     }
    }
    $116 = $117 + 12 | 0;
    $118 = HEAP32[$116 >> 2] | 0;
    $119 = $117 + 16 | 0;
    if (($118 | 0) == (HEAP32[$119 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$117 >> 2] | 0) + 36 >> 2] & 127]($117) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$118 >> 2] | 0) | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, 8192, $$0$i$i) | 0)) {
     $$0$ph$be = $$lcssa;
     break L33;
    }
    $132 = HEAP32[$116 >> 2] | 0;
    if (($132 | 0) == (HEAP32[$119 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$117 >> 2] | 0) + 40 >> 2] & 127]($117) | 0;
     $$pre$i$i$i54 = $117;
     $$pre$i4$i$i60 = $$pre$i4$i$i6098;
     $100 = $204;
     continue;
    } else {
     HEAP32[$116 >> 2] = $132 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$132 >> 2] | 0) | 0;
     $$pre$i$i$i54 = $117;
     $$pre$i4$i$i60 = $$pre$i4$i$i6098;
     $100 = $204;
     continue;
    }
   }
  } else if ((label | 0) == 54) {
   label = 0;
   $162 = $$0$ph + 4 | 0;
   $163 = HEAP32[$140 >> 2] | 0;
   if (($163 | 0) == (HEAP32[$143 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 40 >> 2] & 127]($141) | 0;
    $$0$ph$be = $162;
    break;
   } else {
    HEAP32[$140 >> 2] = $163 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$163 >> 2] | 0) | 0;
    $$0$ph$be = $162;
    break;
   }
  } while (0);
  $$0$ph = $$0$ph$be;
  $$pre = HEAP32[$4 >> 2] | 0;
 }
 if ((label | 0) == 58) {
  HEAP32[$4 >> 2] = 4;
  $$pre$i$i$i69 = $141;
 }
 if (!$$pre$i$i$i69) {
  $$sroa$047$0$copyload = 0;
  $205 = 1;
 } else {
  $173 = HEAP32[$$pre$i$i$i69 + 12 >> 2] | 0;
  if (($173 | 0) == (HEAP32[$$pre$i$i$i69 + 16 >> 2] | 0)) $$0$i$i$i$i67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i69 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i69) | 0; else $$0$i$i$i$i67 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$173 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i67, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $$sroa$047$0$copyload = 0;
   $205 = 1;
  } else {
   $$sroa$047$0$copyload = $$pre$i$i$i69;
   $205 = 0;
  }
 }
 $185 = HEAP32[$2 >> 2] | 0;
 do if (!$185) label = 71; else {
  $188 = HEAP32[$185 + 12 >> 2] | 0;
  if (($188 | 0) == (HEAP32[$185 + 16 >> 2] | 0)) $$0$i$i2$i$i73 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$185 >> 2] | 0) + 36 >> 2] & 127]($185) | 0; else $$0$i$i2$i$i73 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$188 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i73, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 71;
   break;
  } else if ($205) break; else {
   label = 73;
   break;
  }
 } while (0);
 if ((label | 0) == 71) if ($205) label = 73;
 if ((label | 0) == 73) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 STACKTOP = sp;
 return $$sroa$047$0$copyload | 0;
}

function __ZN3HFM24MoveHFMRemoveSingleInput5applyER6RepHFMPi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$in = 0, $$0$lcssa$i$i$i = 0, $$0$lcssa$i$i13$i = 0, $$078$i$i$i = 0, $$078$i$i$i59 = 0, $$09$i$i$i = 0, $$09$i$i$i58 = 0, $$byval_copy1 = 0, $$pre$i = 0, $$pre$i$i$i$i$i = 0, $$pre$phi9$i$i$i$i$iZ2D = 0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $106 = 0, $110 = 0, $112 = 0, $125 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $138 = 0, $14 = 0, $140 = 0, $142 = 0, $146 = 0, $148 = 0, $15 = 0, $156 = 0, $161 = 0, $167 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $174 = 0, $175 = 0, $176 = 0, $179 = 0, $183 = 0, $185 = 0, $19 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $207 = 0, $209 = 0, $211 = 0, $215 = 0, $217 = 0, $22 = 0, $224 = 0, $226 = 0, $233 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $7 = 0, $71 = 0, $73 = 0, $75 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy1 = sp + 44 | 0;
 $3 = sp + 20 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp;
 HEAP32[$3 >> 2] = 0;
 $8 = $3 + 4 | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $10 = $0 + 24 | 0;
 if (!(HEAP8[$10 >> 0] | 0)) {
  $13 = $1 + 4 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  $15 = HEAP32[$1 >> 2] | 0;
  $17 = $15;
  if (($14 | 0) == ($15 | 0)) label = 40; else {
   $19 = $0 + 20 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   $22 = HEAP32[$17 + ($20 << 3) >> 2] | 0;
   $24 = HEAP32[$17 + ($20 << 3) + 4 >> 2] | 0;
   $25 = $1 + 12 | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   $27 = $26 + ($20 * 12 | 0) | 0;
   if (($3 | 0) == ($27 | 0)) {
    $33 = $17;
    $34 = $20;
    $37 = $14;
   } else {
    __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($3, HEAP32[$27 >> 2] | 0, HEAP32[$26 + ($20 * 12 | 0) + 4 >> 2] | 0);
    $33 = HEAP32[$1 >> 2] | 0;
    $34 = HEAP32[$19 >> 2] | 0;
    $37 = HEAP32[$13 >> 2] | 0;
   }
   $32 = $33 + ($34 << 3) | 0;
   $35 = $32 + 8 | 0;
   if (($35 | 0) == ($37 | 0)) $$0$lcssa$i$i$i = $32; else {
    $38 = $37 + -8 | 0;
    $$078$i$i$i = $35;
    $$09$i$i$i = $32;
    while (1) {
     HEAP32[$$09$i$i$i >> 2] = HEAP32[$$078$i$i$i >> 2];
     HEAP32[$$09$i$i$i + 4 >> 2] = HEAP32[$$078$i$i$i + 4 >> 2];
     $$078$i$i$i = $$078$i$i$i + 8 | 0;
     if (($$078$i$i$i | 0) == ($37 | 0)) break; else $$09$i$i$i = $$09$i$i$i + 8 | 0;
    }
    $$0$lcssa$i$i$i = $32 + ((($38 - $35 | 0) >>> 3) + 1 << 3) | 0;
   }
   if (($37 | 0) != ($$0$lcssa$i$i$i | 0)) HEAP32[$13 >> 2] = $37 + (~(($37 + -8 - $$0$lcssa$i$i$i | 0) >>> 3) << 3);
   $57 = (HEAP32[$25 >> 2] | 0) + ($34 * 12 | 0) | 0;
   $58 = $57 + 12 | 0;
   $59 = $1 + 16 | 0;
   $60 = HEAP32[$59 >> 2] | 0;
   if (($58 | 0) == ($60 | 0)) {
    $$0$lcssa$i$i13$i = $57;
    $233 = $58;
    label = 19;
   } else {
    $$078$i$i$i59 = $58;
    $$09$i$i$i58 = $57;
    do {
     $62 = HEAP32[$$09$i$i$i58 >> 2] | 0;
     $$pre$i$i$i$i$i = $$09$i$i$i58 + 4 | 0;
     if (!$62) $$pre$phi9$i$i$i$i$iZ2D = $$09$i$i$i58 + 8 | 0; else {
      $64 = HEAP32[$$pre$i$i$i$i$i >> 2] | 0;
      if (($64 | 0) != ($62 | 0)) HEAP32[$$pre$i$i$i$i$i >> 2] = $64 + (~(($64 + -8 - $62 | 0) >>> 3) << 3);
      __ZdlPv($62);
      $71 = $$09$i$i$i58 + 8 | 0;
      HEAP32[$71 >> 2] = 0;
      HEAP32[$$pre$i$i$i$i$i >> 2] = 0;
      HEAP32[$$09$i$i$i58 >> 2] = 0;
      $$pre$phi9$i$i$i$i$iZ2D = $71;
     }
     HEAP32[$$09$i$i$i58 >> 2] = HEAP32[$$078$i$i$i59 >> 2];
     $73 = $$078$i$i$i59 + 4 | 0;
     HEAP32[$$pre$i$i$i$i$i >> 2] = HEAP32[$73 >> 2];
     $75 = $$078$i$i$i59 + 8 | 0;
     HEAP32[$$pre$phi9$i$i$i$i$iZ2D >> 2] = HEAP32[$75 >> 2];
     HEAP32[$75 >> 2] = 0;
     HEAP32[$73 >> 2] = 0;
     HEAP32[$$078$i$i$i59 >> 2] = 0;
     $$078$i$i$i59 = $$078$i$i$i59 + 12 | 0;
     $$09$i$i$i58 = $$09$i$i$i58 + 12 | 0;
    } while (($$078$i$i$i59 | 0) != ($60 | 0));
    $$pre$i = HEAP32[$59 >> 2] | 0;
    if (($$pre$i | 0) != ($$09$i$i$i58 | 0)) {
     $$0$lcssa$i$i13$i = $$09$i$i$i58;
     $233 = $$pre$i;
     label = 19;
    }
   }
   if ((label | 0) == 19) {
    $82 = $233;
    while (1) {
     $81 = $82 + -12 | 0;
     HEAP32[$59 >> 2] = $81;
     $83 = HEAP32[$81 >> 2] | 0;
     if (!$83) $85 = $81; else {
      $87 = $82 + -8 | 0;
      $88 = HEAP32[$87 >> 2] | 0;
      if (($88 | 0) != ($83 | 0)) HEAP32[$87 >> 2] = $88 + (~(($88 + -8 - $83 | 0) >>> 3) << 3);
      __ZdlPv($83);
      $85 = HEAP32[$59 >> 2] | 0;
     }
     if (($85 | 0) == ($$0$lcssa$i$i13$i | 0)) break; else $82 = $85;
    }
   }
   $95 = __Znwj(48) | 0;
   $96 = HEAP32[$19 >> 2] | 0;
   $97 = HEAP8[$10 >> 0] | 0;
   HEAP32[$4 >> 2] = 0;
   $98 = $4 + 4 | 0;
   HEAP32[$98 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $101 = HEAP32[$3 >> 2] | 0;
   $102 = (HEAP32[$8 >> 2] | 0) - $101 | 0;
   $103 = $102 >> 3;
   if (!$103) {
    $133 = 0;
    $134 = 0;
    $140 = 0;
    $146 = 0;
    $148 = 0;
   } else {
    if ($103 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($4);
    $106 = __Znwj($102) | 0;
    HEAP32[$98 >> 2] = $106;
    HEAP32[$4 >> 2] = $106;
    HEAP32[$4 + 8 >> 2] = $106 + ($103 << 3);
    $110 = $106;
    if (($102 | 0) > 0) {
     $112 = $106 + ($102 >>> 3 << 3) | 0;
     _memcpy($106 | 0, $101 | 0, $102 | 0) | 0;
     HEAP32[$98 >> 2] = $112;
     $133 = $110;
     $134 = $112;
     $140 = $106;
     $146 = $106;
     $148 = $112;
    } else {
     $133 = $110;
     $134 = $110;
     $140 = $106;
     $146 = $106;
     $148 = $106;
    }
   }
   HEAP8[$95 + 16 >> 0] = 0;
   HEAP32[$95 + 8 >> 2] = 2;
   HEAP8[$95 + 15 >> 0] = 0;
   HEAP8[$95 + 12 >> 0] = 1;
   HEAP8[$95 + 13 >> 0] = 1;
   HEAP8[$95 + 14 >> 0] = 0;
   HEAP32[$95 >> 2] = 5572;
   HEAP32[$95 + 20 >> 2] = $96;
   HEAP8[$95 + 24 >> 0] = $97 ^ 1;
   $125 = $95 + 28 | 0;
   HEAP32[$125 >> 2] = $22;
   HEAP32[$125 + 4 >> 2] = $24;
   $129 = $95 + 36 | 0;
   HEAP32[$129 >> 2] = 0;
   $130 = $95 + 40 | 0;
   HEAP32[$130 >> 2] = 0;
   $131 = $95 + 44 | 0;
   HEAP32[$131 >> 2] = 0;
   $132 = $134 - $133 | 0;
   $135 = $132 >> 3;
   if ($135 | 0) {
    if ($135 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($129);
    $138 = __Znwj($132) | 0;
    HEAP32[$130 >> 2] = $138;
    HEAP32[$129 >> 2] = $138;
    HEAP32[$131 >> 2] = $138 + ($135 << 3);
    $142 = $134 - $140 | 0;
    if (($142 | 0) > 0) {
     _memcpy($138 | 0, $146 | 0, $142 | 0) | 0;
     HEAP32[$130 >> 2] = $138 + ($142 >>> 3 << 3);
    }
   }
   if (!$140) $$0$in = $95; else {
    if (($148 | 0) != ($140 | 0)) HEAP32[$98 >> 2] = $148 + (~(($148 + -8 - $140 | 0) >>> 3) << 3);
    __ZdlPv($146);
    $$0$in = $95;
   }
  }
 } else {
  $156 = $0 + 20 | 0;
  HEAP32[$5 >> 2] = (HEAP32[$1 >> 2] | 0) + (HEAP32[$156 >> 2] << 3);
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$5 >> 2];
  __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_($1, $$byval_copy1, $0 + 28 | 0) | 0;
  $161 = $1 + 12 | 0;
  HEAP32[$6 >> 2] = (HEAP32[$161 >> 2] | 0) + ((HEAP32[$156 >> 2] | 0) * 12 | 0);
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$6 >> 2];
  __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6insertENS_11__wrap_iterIPKS3_EERS7_($161, $$byval_copy1, $0 + 36 | 0) | 0;
  label = 40;
 }
 if ((label | 0) == 40) {
  $167 = __Znwj(48) | 0;
  $169 = HEAP32[$0 + 20 >> 2] | 0;
  $170 = HEAP8[$10 >> 0] | 0;
  HEAP32[$7 >> 2] = 0;
  $171 = $7 + 4 | 0;
  HEAP32[$171 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  $174 = HEAP32[$3 >> 2] | 0;
  $175 = (HEAP32[$8 >> 2] | 0) - $174 | 0;
  $176 = $175 >> 3;
  if (!$176) {
   $202 = 0;
   $203 = 0;
   $209 = 0;
   $215 = 0;
   $217 = 0;
  } else {
   if ($176 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($7);
   $179 = __Znwj($175) | 0;
   HEAP32[$171 >> 2] = $179;
   HEAP32[$7 >> 2] = $179;
   HEAP32[$7 + 8 >> 2] = $179 + ($176 << 3);
   $183 = $179;
   if (($175 | 0) > 0) {
    $185 = $179 + ($175 >>> 3 << 3) | 0;
    _memcpy($179 | 0, $174 | 0, $175 | 0) | 0;
    HEAP32[$171 >> 2] = $185;
    $202 = $183;
    $203 = $185;
    $209 = $179;
    $215 = $179;
    $217 = $185;
   } else {
    $202 = $183;
    $203 = $183;
    $209 = $179;
    $215 = $179;
    $217 = $179;
   }
  }
  HEAP8[$167 + 16 >> 0] = 0;
  HEAP32[$167 + 8 >> 2] = 2;
  HEAP8[$167 + 15 >> 0] = 0;
  HEAP8[$167 + 12 >> 0] = 1;
  HEAP8[$167 + 13 >> 0] = 1;
  HEAP8[$167 + 14 >> 0] = 0;
  HEAP32[$167 >> 2] = 5572;
  HEAP32[$167 + 20 >> 2] = $169;
  HEAP8[$167 + 24 >> 0] = $170 ^ 1;
  $197 = $167 + 28 | 0;
  $198 = $167 + 36 | 0;
  $199 = $167 + 40 | 0;
  $200 = $167 + 44 | 0;
  $201 = $203 - $202 | 0;
  $204 = $201 >> 3;
  HEAP32[$197 >> 2] = 0;
  HEAP32[$197 + 4 >> 2] = 0;
  HEAP32[$197 + 8 >> 2] = 0;
  HEAP32[$197 + 12 >> 2] = 0;
  HEAP32[$197 + 16 >> 2] = 0;
  if ($204 | 0) {
   if ($204 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($198);
   $207 = __Znwj($201) | 0;
   HEAP32[$199 >> 2] = $207;
   HEAP32[$198 >> 2] = $207;
   HEAP32[$200 >> 2] = $207 + ($204 << 3);
   $211 = $203 - $209 | 0;
   if (($211 | 0) > 0) {
    _memcpy($207 | 0, $215 | 0, $211 | 0) | 0;
    HEAP32[$199 >> 2] = $207 + ($211 >>> 3 << 3);
   }
  }
  if (!$209) $$0$in = $167; else {
   if (($217 | 0) != ($209 | 0)) HEAP32[$171 >> 2] = $217 + (~(($217 + -8 - $209 | 0) >>> 3) << 3);
   __ZdlPv($215);
   $$0$in = $167;
  }
 }
 $224 = HEAP32[$3 >> 2] | 0;
 if (!$224) {
  STACKTOP = sp;
  return $$0$in | 0;
 }
 $226 = HEAP32[$8 >> 2] | 0;
 if (($226 | 0) != ($224 | 0)) HEAP32[$8 >> 2] = $226 + (~(($226 + -8 - $224 | 0) >>> 3) << 3);
 __ZdlPv($224);
 STACKTOP = sp;
 return $$0$in | 0;
}

function __ZN3HFM12HFMEvaluator29generateSWMultiRoundForecastsERK6RepHFMRKNSt3__26vectorINS5_IdNS4_9allocatorIdEEEENS6_IS8_EEEEi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0195 = 0, $$091193 = 0, $$094189 = 0, $$095190 = 0, $$1199 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$pre$phi206Z2D = 0, $$sroa$speculated = 0, $$sroa$speculated162 = 0, $10 = 0, $103 = 0, $105 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $112 = 0, $114 = 0, $115 = 0, $12 = 0, $122 = 0, $123 = 0, $125 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $131 = 0, $133 = 0, $134 = 0, $14 = 0, $141 = 0, $147 = 0, $15 = 0, $152 = 0, $154 = 0, $155 = 0, $16 = 0, $163 = 0, $164 = 0, $17 = 0, $178 = 0, $18 = 0, $180 = 0, $181 = 0, $184 = 0, $187 = 0, $19 = 0, $192 = 0, $193 = 0, $20 = 0, $203 = 0, $204 = 0, $21 = 0, $211 = 0, $213 = 0, $214 = 0, $22 = 0, $221 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $28 = 0, $29 = 0, $30 = 0, $34 = 0, $4 = 0, $40 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $56 = 0, $6 = 0, $60 = 0, $61 = 0, $64 = 0, $65 = 0, $7 = 0, $72 = 0, $78 = 0, $8 = 0, $84 = 0, $86 = 0, $87 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy5 = sp + 56 | 0;
 $$byval_copy4 = sp + 52 | 0;
 $$byval_copy3 = sp + 48 | 0;
 $4 = sp + 28 | 0;
 $5 = sp + 12 | 0;
 $6 = sp + 44 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 8 | 0;
 $10 = sp + 4 | 0;
 $11 = sp;
 $12 = __Znwj(12) | 0;
 HEAP32[$12 >> 2] = 0;
 $13 = $12 + 4 | 0;
 HEAP32[$13 >> 2] = 0;
 $14 = $12 + 8 | 0;
 HEAP32[$14 >> 2] = 0;
 $15 = $12;
 $16 = __Znwj(12) | 0;
 HEAP32[$16 >> 2] = 0;
 $17 = $16 + 4 | 0;
 HEAP32[$17 >> 2] = 0;
 $18 = $16 + 8 | 0;
 HEAP32[$18 >> 2] = 0;
 $19 = $16;
 $20 = $0 + 156 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 $22 = HEAP32[$2 >> 2] | 0;
 $28 = (HEAP32[$22 + ($21 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$22 + ($21 * 12 | 0) >> 2] | 0) >> 3;
 $29 = $0 + 108 | 0;
 $30 = HEAP32[$29 >> 2] | 0;
 $34 = HEAP32[$30 + 28 >> 2] | 0;
 if (((HEAP32[$30 + 32 >> 2] | 0) - $34 >> 2 | 0) <= ($21 | 0)) ___assert_fail(15898, 15934, 149, 15973);
 $40 = HEAP32[$34 + ($21 << 2) >> 2] | 0;
 if ((HEAP32[7580] | 0) <= 1) {
  if (($28 | 0) <= ($40 | 0)) {
   $223 = __Znwj(8) | 0;
   HEAP32[$223 >> 2] = $19;
   $224 = $223 + 4 | 0;
   HEAP32[$224 >> 2] = $15;
   STACKTOP = sp;
   return $223 | 0;
  }
  $$1199 = $40;
  $178 = $30;
  L9 : while (1) {
   $180 = __ZN3HFM12HFMEvaluator15returnForecastsERK6RepHFMRKNSt3__26vectorINS5_IdNS4_9allocatorIdEEEENS6_IS8_EEEEii($0, $1, $2, $$1199, HEAP32[$178 + 8 >> 2] | 0) | 0;
   $181 = $28 - $$1199 | 0;
   $$sroa$speculated = ($181 | 0) < ($3 | 0) ? $181 : $3;
   if (($$sroa$speculated | 0) > 0) {
    $184 = $180 + 4 | 0;
    $$0195 = 0;
    while (1) {
     $187 = HEAP32[$180 >> 2] | 0;
     if ((HEAP32[$184 >> 2] | 0) - $187 >> 3 >>> 0 <= $$0195 >>> 0) {
      label = 49;
      break L9;
     }
     $192 = $187 + ($$0195 << 3) | 0;
     $193 = HEAP32[$13 >> 2] | 0;
     if (($193 | 0) == (HEAP32[$14 >> 2] | 0)) __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($12, $192); else {
      HEAPF64[$193 >> 3] = +HEAPF64[$192 >> 3];
      HEAP32[$13 >> 2] = $193 + 8;
     }
     $203 = (HEAP32[(HEAP32[$2 >> 2] | 0) + ((HEAP32[$20 >> 2] | 0) * 12 | 0) >> 2] | 0) + ($$0195 + $$1199 << 3) | 0;
     $204 = HEAP32[$17 >> 2] | 0;
     if (($204 | 0) == (HEAP32[$18 >> 2] | 0)) __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($16, $203); else {
      HEAPF64[$204 >> 3] = +HEAPF64[$203 >> 3];
      HEAP32[$17 >> 2] = $204 + 8;
     }
     $$0195 = $$0195 + 1 | 0;
     if (($$0195 | 0) >= ($$sroa$speculated | 0)) {
      label = 57;
      break;
     }
    }
   } else if ($180 | 0) label = 57;
   if ((label | 0) == 57) {
    label = 0;
    $211 = HEAP32[$180 >> 2] | 0;
    if ($211 | 0) {
     $213 = $180 + 4 | 0;
     $214 = HEAP32[$213 >> 2] | 0;
     if (($214 | 0) != ($211 | 0)) HEAP32[$213 >> 2] = $214 + (~(($214 + -8 - $211 | 0) >>> 3) << 3);
     __ZdlPv($211);
    }
    __ZdlPv($180);
   }
   $221 = $$1199 + $3 | 0;
   if (($28 | 0) <= ($221 | 0)) {
    label = 64;
    break;
   }
   $$1199 = $221;
   $178 = HEAP32[$29 >> 2] | 0;
  }
  if ((label | 0) == 49) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($180); else if ((label | 0) == 64) {
   $223 = __Znwj(8) | 0;
   HEAP32[$223 >> 2] = $19;
   $224 = $223 + 4 | 0;
   HEAP32[$224 >> 2] = $15;
   STACKTOP = sp;
   return $223 | 0;
  }
 }
 $49 = ~~+Math_ceil(+(+($28 - $40 | 0) / +($3 | 0))) >>> 0;
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2Ej($4, $49);
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2Ej($5, $49);
 if (($28 | 0) > ($40 | 0)) {
  $$091193 = $40;
  do {
   $60 = __ZN3HFM12HFMEvaluator15returnForecastsERK6RepHFMRKNSt3__26vectorINS5_IdNS4_9allocatorIdEEEENS6_IS8_EEEEii($0, $1, $2, $$091193, HEAP32[(HEAP32[$29 >> 2] | 0) + 8 >> 2] | 0) | 0;
   $61 = $28 - $$091193 | 0;
   $$sroa$speculated162 = ($61 | 0) < ($3 | 0) ? $61 : $3;
   $64 = ($$091193 - $40 | 0) / ($3 | 0) | 0;
   $65 = HEAP32[$4 >> 2] | 0;
   HEAP32[$6 >> 2] = HEAP32[$65 + ($64 * 12 | 0) + 4 >> 2];
   HEAP32[$7 >> 2] = HEAP32[$60 >> 2];
   HEAP32[$8 >> 2] = (HEAP32[$60 >> 2] | 0) + ($$sroa$speculated162 << 3);
   HEAP32[$$byval_copy3 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$$byval_copy4 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$8 >> 2];
   __ZNSt3__26vectorIdNS_9allocatorIdEEE6insertINS_11__wrap_iterIPdEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKdEES9_S9_($65 + ($64 * 12 | 0) | 0, $$byval_copy3, $$byval_copy4, $$byval_copy5) | 0;
   $72 = HEAP32[$5 >> 2] | 0;
   HEAP32[$9 >> 2] = HEAP32[$72 + ($64 * 12 | 0) + 4 >> 2];
   $78 = (HEAP32[$2 >> 2] | 0) + ((HEAP32[$20 >> 2] | 0) * 12 | 0) | 0;
   HEAP32[$10 >> 2] = (HEAP32[$78 >> 2] | 0) + ($$091193 << 3);
   HEAP32[$11 >> 2] = (HEAP32[$78 >> 2] | 0) + ($$091193 << 3) + ($$sroa$speculated162 << 3);
   HEAP32[$$byval_copy3 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$$byval_copy4 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$11 >> 2];
   __ZNSt3__26vectorIdNS_9allocatorIdEEE6insertINS_11__wrap_iterIPKdEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPdEEE4typeES8_SA_SA_($72 + ($64 * 12 | 0) | 0, $$byval_copy3, $$byval_copy4, $$byval_copy5) | 0;
   $84 = HEAP32[$60 >> 2] | 0;
   if ($84 | 0) {
    $86 = $60 + 4 | 0;
    $87 = HEAP32[$86 >> 2] | 0;
    if (($87 | 0) != ($84 | 0)) HEAP32[$86 >> 2] = $87 + (~(($87 + -8 - $84 | 0) >>> 3) << 3);
    __ZdlPv($84);
   }
   __ZdlPv($60);
   $$091193 = $$091193 + $3 | 0;
  } while (($28 | 0) > ($$091193 | 0));
 }
 $51 = $4 + 4 | 0;
 $53 = HEAP32[$4 >> 2] | 0;
 $56 = $53;
 if (((HEAP32[$51 >> 2] | 0) - $53 | 0) > 0) {
  $$095190 = 0;
  $226 = $56;
  $227 = $53;
  $97 = $56;
  while (1) {
   if (((HEAP32[$97 + ($$095190 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$97 + ($$095190 * 12 | 0) >> 2] | 0) | 0) > 0) {
    $$094189 = 0;
    $152 = $97;
    do {
     $154 = (HEAP32[$152 + ($$095190 * 12 | 0) >> 2] | 0) + ($$094189 << 3) | 0;
     $155 = HEAP32[$13 >> 2] | 0;
     if (($155 | 0) == (HEAP32[$14 >> 2] | 0)) __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($12, $154); else {
      HEAPF64[$155 >> 3] = +HEAPF64[$154 >> 3];
      HEAP32[$13 >> 2] = $155 + 8;
     }
     $163 = (HEAP32[(HEAP32[$5 >> 2] | 0) + ($$095190 * 12 | 0) >> 2] | 0) + ($$094189 << 3) | 0;
     $164 = HEAP32[$17 >> 2] | 0;
     if (($164 | 0) == (HEAP32[$18 >> 2] | 0)) __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($16, $163); else {
      HEAPF64[$164 >> 3] = +HEAPF64[$163 >> 3];
      HEAP32[$17 >> 2] = $164 + 8;
     }
     $$094189 = $$094189 + 1 | 0;
     $152 = HEAP32[$4 >> 2] | 0;
    } while (($$094189 | 0) < ((HEAP32[$152 + ($$095190 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$152 + ($$095190 * 12 | 0) >> 2] | 0) >> 3 | 0));
    $147 = $152;
    $228 = $152;
   } else {
    $147 = $227;
    $228 = $226;
   }
   $$095190 = $$095190 + 1 | 0;
   if (($$095190 | 0) >= (((HEAP32[$51 >> 2] | 0) - $147 | 0) / 12 | 0 | 0)) {
    $$pre$phi206Z2D = $5;
    $225 = $228;
    break;
   } else {
    $226 = $228;
    $227 = $147;
    $97 = $147;
   }
  }
 } else {
  $$pre$phi206Z2D = $5;
  $225 = $56;
 }
 $103 = HEAP32[$$pre$phi206Z2D >> 2] | 0;
 if (!$103) $123 = $225; else {
  $105 = $5 + 4 | 0;
  $106 = HEAP32[$105 >> 2] | 0;
  if (($106 | 0) == ($103 | 0)) $122 = $103; else {
   $109 = $106;
   while (1) {
    $108 = $109 + -12 | 0;
    HEAP32[$105 >> 2] = $108;
    $110 = HEAP32[$108 >> 2] | 0;
    if (!$110) $112 = $108; else {
     $114 = $109 + -8 | 0;
     $115 = HEAP32[$114 >> 2] | 0;
     if (($115 | 0) != ($110 | 0)) HEAP32[$114 >> 2] = $115 + (~(($115 + -8 - $110 | 0) >>> 3) << 3);
     __ZdlPv($110);
     $112 = HEAP32[$105 >> 2] | 0;
    }
    if (($112 | 0) == ($103 | 0)) break; else $109 = $112;
   }
   $122 = HEAP32[$5 >> 2] | 0;
  }
  __ZdlPv($122);
  $123 = HEAP32[$4 >> 2] | 0;
 }
 if ($123 | 0) {
  $125 = HEAP32[$51 >> 2] | 0;
  if (($125 | 0) == ($123 | 0)) $141 = $123; else {
   $128 = $125;
   while (1) {
    $127 = $128 + -12 | 0;
    HEAP32[$51 >> 2] = $127;
    $129 = HEAP32[$127 >> 2] | 0;
    if (!$129) $131 = $127; else {
     $133 = $128 + -8 | 0;
     $134 = HEAP32[$133 >> 2] | 0;
     if (($134 | 0) != ($129 | 0)) HEAP32[$133 >> 2] = $134 + (~(($134 + -8 - $129 | 0) >>> 3) << 3);
     __ZdlPv($129);
     $131 = HEAP32[$51 >> 2] | 0;
    }
    if (($131 | 0) == ($123 | 0)) break; else $128 = $131;
   }
   $141 = HEAP32[$4 >> 2] | 0;
  }
  __ZdlPv($141);
 }
 $223 = __Znwj(8) | 0;
 HEAP32[$223 >> 2] = $19;
 $224 = $223 + 4 | 0;
 HEAP32[$224 >> 2] = $15;
 STACKTOP = sp;
 return $223 | 0;
}

function __ZN8optframe27VariableNeighborhoodDescentI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $$pre144 = 0, $10 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $118 = 0, $123 = 0.0, $124 = 0.0, $13 = 0, $136 = 0, $137 = 0, $139 = 0, $146 = 0, $148 = 0, $176 = 0, $18 = 0, $180 = 0, $184 = 0, $186 = 0, $187 = 0, $189 = 0, $194 = 0, $198 = 0, $199 = 0, $201 = 0, $208 = 0, $210 = 0, $217 = 0, $219 = 0, $22 = 0, $226 = 0, $228 = 0, $236 = 0, $238 = 0, $239 = 0, $26 = 0, $29 = 0, $32 = 0, $38 = 0, $4 = 0, $42 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $vararg_buffer = sp + 216 | 0;
 $4 = sp + 264 | 0;
 $5 = sp + 256 | 0;
 $6 = sp + 224 | 0;
 $7 = sp + 144 | 0;
 $8 = sp + 72 | 0;
 $9 = sp;
 $10 = $0 + 14 | 0;
 if (HEAP8[$10 >> 0] | 0) {
  $13 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18595, 11) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $13 + (HEAP32[(HEAP32[$13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 28 >> 2] & 63]($18, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($13, $22) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($13) | 0;
 }
 $26 = $6 + 12 | 0;
 HEAP8[$26 + 4 >> 0] = 0;
 HEAP32[$6 + 8 >> 2] = 2;
 HEAP8[$6 + 15 >> 0] = 0;
 HEAP8[$26 >> 0] = 1;
 HEAP8[$6 + 13 >> 0] = 1;
 HEAP8[$6 + 14 >> 0] = 0;
 HEAP32[$6 >> 2] = 5092;
 $29 = $6 + 17 | 0;
 HEAP8[$29 >> 0] = 0;
 _gettimeofday($6 + 20 | 0, $4 | 0) | 0;
 $32 = HEAP32[$0 + 36 >> 2] | 0;
 $$pre144 = $0 + 24 | 0;
 if ($32 | 0) __ZN8optframe7RandGen7shuffleIPNS_11LocalSearchI6RepHFMiEEEEvRNSt3__26vectorIT_NS6_9allocatorIS8_EEEE($32, $$pre144);
 $38 = (HEAP32[$0 + 28 >> 2] | 0) - (HEAP32[$$pre144 >> 2] | 0) >> 2;
 $42 = $7 + 12 | 0;
 HEAP8[$42 + 4 >> 0] = 0;
 HEAP32[$7 + 8 >> 2] = 2;
 HEAP8[$7 + 15 >> 0] = 0;
 HEAP8[$42 >> 0] = 1;
 HEAP8[$7 + 13 >> 0] = 1;
 HEAP8[$7 + 14 >> 0] = 0;
 HEAP32[$7 >> 2] = 4920;
 $45 = $7 + 24 | 0;
 $46 = $2 + 24 | 0;
 HEAPF64[$45 >> 3] = +HEAPF64[$46 >> 3];
 $48 = $7 + 32 | 0;
 $49 = $2 + 32 | 0;
 HEAPF64[$48 >> 3] = +HEAPF64[$49 >> 3];
 $51 = $7 + 40 | 0;
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($51, $2 + 40 | 0);
 $53 = $7 + 52 | 0;
 $54 = $2 + 52 | 0;
 HEAP32[$53 >> 2] = HEAP32[$54 >> 2];
 $56 = $7 + 56 | 0;
 $57 = $2 + 56 | 0;
 HEAP8[$56 >> 0] = HEAP8[$57 >> 0] | 0;
 $59 = $7 + 57 | 0;
 $60 = $2 + 57 | 0;
 HEAP8[$59 >> 0] = HEAP8[$60 >> 0] | 0;
 $62 = $7 + 64 | 0;
 $63 = $2 + 64 | 0;
 $64 = +HEAPF64[$63 >> 3];
 HEAPF64[$62 >> 3] = $64;
 $65 = $0 + 20 | 0;
 $66 = $3 + 32 | 0;
 $67 = $8 + 15 | 0;
 $68 = $8 + 14 | 0;
 $69 = $8 + 13 | 0;
 $70 = $8 + 12 | 0;
 $71 = $8 + 8 | 0;
 $72 = $70 + 4 | 0;
 $73 = $8 + 24 | 0;
 $74 = $8 + 40 | 0;
 $75 = $8 + 44 | 0;
 $76 = $8 + 48 | 0;
 $77 = $8 + 64 | 0;
 $78 = $8 + 32 | 0;
 $79 = $8 + 52 | 0;
 $80 = $8 + 56 | 0;
 $81 = $8 + 57 | 0;
 $82 = $9 + 15 | 0;
 $83 = $9 + 14 | 0;
 $84 = $9 + 13 | 0;
 $85 = $9 + 12 | 0;
 $86 = $9 + 8 | 0;
 $87 = $85 + 4 | 0;
 $88 = $9 + 24 | 0;
 $89 = $9 + 40 | 0;
 $90 = $9 + 44 | 0;
 $91 = $9 + 48 | 0;
 $92 = $9 + 64 | 0;
 $93 = $9 + 32 | 0;
 $94 = $9 + 52 | 0;
 $95 = $9 + 56 | 0;
 $96 = $9 + 57 | 0;
 $104 = +(HEAP32[$6 + 20 >> 2] | 0) * 1.0e6 + +(HEAP32[$6 + 24 >> 2] | 0);
 $105 = $4 + 4 | 0;
 $106 = $3 + 24 | 0;
 $107 = ($7 | 0) == ($2 | 0);
 $108 = $8 + 4 | 0;
 $109 = $3 + 4 | 0;
 $110 = $8 + 24 | 0;
 $111 = $4 + 4 | 0;
 $112 = $0 + 24 | 0;
 $113 = $2 + 40 | 0;
 $114 = $2 + 44 | 0;
 $$0 = 1;
 $123 = $64;
 while (1) {
  $115 = HEAP32[$65 >> 2] | 0;
  $118 = HEAP32[(HEAP32[$115 >> 2] | 0) + 40 >> 2] | 0;
  HEAP8[$72 >> 0] = 0;
  HEAP32[$71 >> 2] = 2;
  HEAP8[$67 >> 0] = 0;
  HEAP8[$70 >> 0] = 1;
  HEAP8[$69 >> 0] = 1;
  HEAP8[$68 >> 0] = 0;
  HEAP32[$8 >> 2] = 4920;
  HEAPF64[$73 >> 3] = +HEAPF64[$66 >> 3];
  HEAP32[$74 >> 2] = 0;
  HEAP32[$75 >> 2] = 0;
  HEAP32[$76 >> 2] = 0;
  HEAPF64[$77 >> 3] = 1.0;
  HEAPF64[$78 >> 3] = 0.0;
  HEAP32[$79 >> 2] = 2;
  HEAP8[$80 >> 0] = 0;
  HEAP8[$81 >> 0] = 0;
  $124 = +HEAPF64[$46 >> 3] + $123 * +HEAPF64[$49 >> 3];
  HEAP8[$87 >> 0] = 0;
  HEAP32[$86 >> 2] = 2;
  HEAP8[$82 >> 0] = 0;
  HEAP8[$85 >> 0] = 1;
  HEAP8[$84 >> 0] = 1;
  HEAP8[$83 >> 0] = 0;
  HEAP32[$9 >> 2] = 4920;
  HEAPF64[$88 >> 3] = $124;
  HEAP32[$89 >> 2] = 0;
  HEAP32[$90 >> 2] = 0;
  HEAP32[$91 >> 2] = 0;
  HEAPF64[$92 >> 3] = 1.0;
  HEAPF64[$93 >> 3] = 0.0;
  HEAP32[$94 >> 2] = 2;
  HEAP8[$95 >> 0] = 0;
  HEAP8[$96 >> 0] = 0;
  if (!(FUNCTION_TABLE_iiii[$118 & 63]($115, $8, $9) | 0)) {
   label = 34;
   break;
  }
  if (($$0 | 0) > ($38 | 0)) {
   label = 25;
   break;
  }
  _gettimeofday($4 | 0, $5 | 0) | 0;
  $136 = (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$105 >> 2] | 0) - $104) * 1.0e-06 < +HEAPF64[$106 >> 3];
  HEAP32[$9 >> 2] = 4920;
  $137 = HEAP32[$89 >> 2] | 0;
  if ($137 | 0) {
   $139 = HEAP32[$90 >> 2] | 0;
   if (($139 | 0) != ($137 | 0)) HEAP32[$90 >> 2] = $139 + (~(($139 + -16 - $137 | 0) >>> 4) << 4);
   __ZdlPv($137);
  }
  HEAP32[$8 >> 2] = 4920;
  $146 = HEAP32[$74 >> 2] | 0;
  if ($146 | 0) {
   $148 = HEAP32[$75 >> 2] | 0;
   if (($148 | 0) != ($146 | 0)) HEAP32[$75 >> 2] = $148 + (~(($148 + -16 - $146 | 0) >>> 4) << 4);
   __ZdlPv($146);
  }
  if (!$136) break;
  if (!$107) {
   HEAPF64[$45 >> 3] = +HEAPF64[$46 >> 3];
   HEAPF64[$48 >> 3] = +HEAPF64[$49 >> 3];
   HEAP8[$56 >> 0] = HEAP8[$57 >> 0] | 0;
   HEAP8[$59 >> 0] = HEAP8[$60 >> 0] | 0;
   HEAPF64[$62 >> 3] = +HEAPF64[$63 >> 3];
   __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($51, HEAP32[$113 >> 2] | 0, HEAP32[$114 >> 2] | 0);
   HEAP32[$53 >> 2] = HEAP32[$54 >> 2];
  };
  HEAP32[$108 >> 2] = HEAP32[$109 >> 2];
  HEAP32[$108 + 4 >> 2] = HEAP32[$109 + 4 >> 2];
  HEAP32[$108 + 8 >> 2] = HEAP32[$109 + 8 >> 2];
  HEAP8[$108 + 12 >> 0] = HEAP8[$109 + 12 >> 0] | 0;
  HEAP32[$8 >> 2] = 3836;
  HEAP32[$110 >> 2] = HEAP32[$106 >> 2];
  HEAP32[$110 + 4 >> 2] = HEAP32[$106 + 4 >> 2];
  HEAP32[$110 + 8 >> 2] = HEAP32[$106 + 8 >> 2];
  HEAP32[$110 + 12 >> 2] = HEAP32[$106 + 12 >> 2];
  _gettimeofday($4 | 0, $5 | 0) | 0;
  HEAPF64[$110 >> 3] = +HEAPF64[$110 >> 3] - (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$111 >> 2] | 0) - $104) * 1.0e-06;
  $176 = HEAP32[(HEAP32[$112 >> 2] | 0) + ($$0 + -1 << 2) >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$176 >> 2] | 0) + 40 >> 2] & 31]($176, $1, $2, $8);
  $180 = HEAP32[$65 >> 2] | 0;
  $184 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$180 >> 2] | 0) + 40 >> 2] & 63]($180, $2, $7) | 0;
  $186 = (HEAP8[$10 >> 0] | 0) != 0;
  if ($184) if ($186) {
   __ZNK8optframe10Evaluation5printEv($2);
   $$1 = 1;
  } else $$1 = 1; else {
   $187 = $$0 + 1 | 0;
   if ($186) {
    $189 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18607, 7) | 0, $187) | 0;
    __ZNKSt3__28ios_base6getlocEv($4, $189 + (HEAP32[(HEAP32[$189 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $194 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
    $198 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$194 >> 2] | 0) + 28 >> 2] & 63]($194, 10) | 0;
    __ZNSt3__26localeD2Ev($4);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($189, $198) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($189) | 0;
    $$1 = $187;
   } else $$1 = $187;
  }
  $$0 = $$1;
  $123 = +HEAPF64[$63 >> 3];
 }
 if ((label | 0) == 25) {
  HEAP32[$9 >> 2] = 4920;
  $199 = HEAP32[$89 >> 2] | 0;
  if ($199 | 0) {
   $201 = HEAP32[$90 >> 2] | 0;
   if (($201 | 0) != ($199 | 0)) HEAP32[$90 >> 2] = $201 + (~(($201 + -16 - $199 | 0) >>> 4) << 4);
   __ZdlPv($199);
  }
  HEAP32[$8 >> 2] = 4920;
  $208 = HEAP32[$74 >> 2] | 0;
  if ($208 | 0) {
   $210 = HEAP32[$75 >> 2] | 0;
   if (($210 | 0) != ($208 | 0)) HEAP32[$75 >> 2] = $210 + (~(($210 + -16 - $208 | 0) >>> 4) << 4);
   __ZdlPv($208);
  }
 } else if ((label | 0) == 34) {
  HEAP32[$9 >> 2] = 4920;
  $217 = HEAP32[$89 >> 2] | 0;
  if ($217 | 0) {
   $219 = HEAP32[$90 >> 2] | 0;
   if (($219 | 0) != ($217 | 0)) HEAP32[$90 >> 2] = $219 + (~(($219 + -16 - $217 | 0) >>> 4) << 4);
   __ZdlPv($217);
  }
  HEAP32[$8 >> 2] = 4920;
  $226 = HEAP32[$74 >> 2] | 0;
  if ($226 | 0) {
   $228 = HEAP32[$75 >> 2] | 0;
   if (($228 | 0) != ($226 | 0)) HEAP32[$75 >> 2] = $228 + (~(($228 + -16 - $226 | 0) >>> 4) << 4);
   __ZdlPv($226);
  }
 }
 HEAP32[$7 >> 2] = 4920;
 $236 = HEAP32[$7 + 40 >> 2] | 0;
 if ($236 | 0) {
  $238 = $7 + 44 | 0;
  $239 = HEAP32[$238 >> 2] | 0;
  if (($239 | 0) != ($236 | 0)) HEAP32[$238 >> 2] = $239 + (~(($239 + -16 - $236 | 0) >>> 4) << 4);
  __ZdlPv($236);
 }
 HEAP32[$6 >> 2] = 5092;
 if (!(HEAP8[$29 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 _gettimeofday($4 | 0, $5 | 0) | 0;
 HEAPF64[$vararg_buffer >> 3] = (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$4 + 4 >> 2] | 0) - $104) * 1.0e-06;
 _printf(17801, $vararg_buffer) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i41 = 0, $$0$i$i$i47 = 0, $$0$i$i$i53 = 0, $$0$i$i$i59 = 0, $$0$i$i$i65 = 0, $$0$i$i$i71 = 0, $$0$i$i$i77 = 0, $$pre$phi$i$i39Z2D = 0, $$pre$phi$i$i45Z2D = 0, $$pre$phi$i$i51Z2D = 0, $$pre$phi$i$i57Z2D = 0, $$pre$phi$i$i63Z2D = 0, $$pre$phi$i$i69Z2D = 0, $$pre$phi$i$i75Z2D = 0, $$pre$phi$i$iZ2D = 0, $10 = 0, $105 = 0, $108 = 0, $11 = 0, $115 = 0, $118 = 0, $12 = 0, $16 = 0, $20 = 0, $23 = 0, $30 = 0, $33 = 0, $48 = 0, $51 = 0, $58 = 0, $61 = 0, $69 = 0, $73 = 0, $77 = 0, $80 = 0, $87 = 0, $90 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 36256) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 127]($10, $12);
  $16 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $16;
  HEAP8[$2 + 1 >> 0] = $16 >> 8;
  HEAP8[$2 + 2 >> 0] = $16 >> 16;
  HEAP8[$2 + 3 >> 0] = $16 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($11, $12);
  $20 = $8 + 11 | 0;
  if ((HEAP8[$20 >> 0] | 0) < 0) {
   $23 = HEAP32[$8 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($23, $10);
   HEAP32[$8 + 4 >> 2] = 0;
   $$pre$phi$i$iZ2D = $8;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
   HEAP8[$20 >> 0] = 0;
   $$pre$phi$i$iZ2D = $8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
  HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i = 0;
  while (1) {
   if (($$0$i$i$i | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
   $$0$i$i$i = $$0$i$i$i + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($11, $12);
  $30 = $7 + 11 | 0;
  if ((HEAP8[$30 >> 0] | 0) < 0) {
   $33 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($33, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i39Z2D = $7;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$30 >> 0] = 0;
   $$pre$phi$i$i39Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
  HEAP32[$$pre$phi$i$i39Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i39Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i39Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i41 = 0;
  while (1) {
   if (($$0$i$i$i41 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i41 << 2) >> 2] = 0;
   $$0$i$i$i41 = $$0$i$i$i41 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  HEAP8[$3 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 127]($11, $12);
  $48 = $5 + 11 | 0;
  if ((HEAP8[$48 >> 0] | 0) < 0) {
   $51 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($51, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$i45Z2D = $5;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$48 >> 0] = 0;
   $$pre$phi$i$i45Z2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($5, 0);
  HEAP32[$$pre$phi$i$i45Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i45Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i45Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i47 = 0;
  while (1) {
   if (($$0$i$i$i47 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i47 << 2) >> 2] = 0;
   $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($11, $12);
  $58 = $6 + 11 | 0;
  if ((HEAP8[$58 >> 0] | 0) < 0) {
   $61 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($61, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i51Z2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$58 >> 0] = 0;
   $$pre$phi$i$i51Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$i51Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i51Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i51Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i53 = 0;
  while (1) {
   if (($$0$i$i$i53 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i53 << 2) >> 2] = 0;
   $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $69 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 36248) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$69 >> 2] | 0) + 44 >> 2] & 127]($10, $69);
  $73 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $73;
  HEAP8[$2 + 1 >> 0] = $73 >> 8;
  HEAP8[$2 + 2 >> 0] = $73 >> 16;
  HEAP8[$2 + 3 >> 0] = $73 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$69 >> 2] | 0) + 32 >> 2] & 127]($11, $69);
  $77 = $8 + 11 | 0;
  if ((HEAP8[$77 >> 0] | 0) < 0) {
   $80 = HEAP32[$8 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($80, $10);
   HEAP32[$8 + 4 >> 2] = 0;
   $$pre$phi$i$i57Z2D = $8;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
   HEAP8[$77 >> 0] = 0;
   $$pre$phi$i$i57Z2D = $8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
  HEAP32[$$pre$phi$i$i57Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i59 = 0;
  while (1) {
   if (($$0$i$i$i59 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i59 << 2) >> 2] = 0;
   $$0$i$i$i59 = $$0$i$i$i59 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$69 >> 2] | 0) + 28 >> 2] & 127]($11, $69);
  $87 = $7 + 11 | 0;
  if ((HEAP8[$87 >> 0] | 0) < 0) {
   $90 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($90, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i63Z2D = $7;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$87 >> 0] = 0;
   $$pre$phi$i$i63Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
  HEAP32[$$pre$phi$i$i63Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i63Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i63Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i65 = 0;
  while (1) {
   if (($$0$i$i$i65 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i65 << 2) >> 2] = 0;
   $$0$i$i$i65 = $$0$i$i$i65 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  HEAP8[$3 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$69 >> 2] | 0) + 12 >> 2] & 127]($69) | 0;
  HEAP8[$4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$69 >> 2] | 0) + 16 >> 2] & 127]($69) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$69 >> 2] | 0) + 20 >> 2] & 127]($11, $69);
  $105 = $5 + 11 | 0;
  if ((HEAP8[$105 >> 0] | 0) < 0) {
   $108 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($108, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$i69Z2D = $5;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$105 >> 0] = 0;
   $$pre$phi$i$i69Z2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($5, 0);
  HEAP32[$$pre$phi$i$i69Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i69Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i69Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i71 = 0;
  while (1) {
   if (($$0$i$i$i71 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i71 << 2) >> 2] = 0;
   $$0$i$i$i71 = $$0$i$i$i71 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$69 >> 2] | 0) + 24 >> 2] & 127]($11, $69);
  $115 = $6 + 11 | 0;
  if ((HEAP8[$115 >> 0] | 0) < 0) {
   $118 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($118, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i75Z2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$115 >> 0] = 0;
   $$pre$phi$i$i75Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$i75Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i75Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i75Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i77 = 0;
  while (1) {
   if (($$0$i$i$i77 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i77 << 2) >> 2] = 0;
   $$0$i$i$i77 = $$0$i$i$i77 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$69 >> 2] | 0) + 36 >> 2] & 127]($69) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$i57 = 0, $$0$i$i$i61 = 0, $$0$i$i$i67 = 0, $$0$i$i$i71 = 0, $$pre$phi$i$i65Z2D = 0, $$pre$phi$i$iZ2D = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $118 = 0, $12 = 0, $121 = 0, $129 = 0, $132 = 0, $16 = 0, $21 = 0, $24 = 0, $31 = 0, $36 = 0, $39 = 0, $54 = 0, $57 = 0, $65 = 0, $68 = 0, $76 = 0, $80 = 0, $85 = 0, $88 = 0, $95 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 36272) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 127]($10, $12);
   $16 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $16;
   HEAP8[$3 + 1 >> 0] = $16 >> 8;
   HEAP8[$3 + 2 >> 0] = $16 >> 16;
   HEAP8[$3 + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($11, $12);
   $21 = $8 + 8 + 3 | 0;
   if ((HEAP8[$21 >> 0] | 0) < 0) {
    $24 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($24, $10);
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$21 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 40 >> 2] & 127]($10, $12);
   $31 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $31;
   HEAP8[$3 + 1 >> 0] = $31 >> 8;
   HEAP8[$3 + 2 >> 0] = $31 >> 16;
   HEAP8[$3 + 3 >> 0] = $31 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($11, $12);
   $36 = $8 + 8 + 3 | 0;
   if ((HEAP8[$36 >> 0] | 0) < 0) {
    $39 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($39, $10);
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$36 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i47 = 0;
   while (1) {
    if (($$0$i$i$i47 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i47 << 2) >> 2] = 0;
    $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  }
  HEAP32[$4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$5 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 127]($11, $12);
  $54 = $6 + 11 | 0;
  if ((HEAP8[$54 >> 0] | 0) < 0) {
   $57 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($57, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$iZ2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$54 >> 0] = 0;
   $$pre$phi$i$iZ2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i50 = 0;
  while (1) {
   if (($$0$i$i$i50 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i50 << 2) >> 2] = 0;
   $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($11, $12);
  $65 = $7 + 8 + 3 | 0;
  if ((HEAP8[$65 >> 0] | 0) < 0) {
   $68 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($68, $10);
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$65 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i53 = 0;
  while (1) {
   if (($$0$i$i$i53 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i53 << 2) >> 2] = 0;
   $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $76 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 36264) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 44 >> 2] & 127]($10, $76);
   $80 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $80;
   HEAP8[$3 + 1 >> 0] = $80 >> 8;
   HEAP8[$3 + 2 >> 0] = $80 >> 16;
   HEAP8[$3 + 3 >> 0] = $80 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 32 >> 2] & 127]($11, $76);
   $85 = $8 + 8 + 3 | 0;
   if ((HEAP8[$85 >> 0] | 0) < 0) {
    $88 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($88, $10);
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$85 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i57 = 0;
   while (1) {
    if (($$0$i$i$i57 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i57 << 2) >> 2] = 0;
    $$0$i$i$i57 = $$0$i$i$i57 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 40 >> 2] & 127]($10, $76);
   $95 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $95;
   HEAP8[$3 + 1 >> 0] = $95 >> 8;
   HEAP8[$3 + 2 >> 0] = $95 >> 16;
   HEAP8[$3 + 3 >> 0] = $95 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 28 >> 2] & 127]($11, $76);
   $100 = $8 + 8 + 3 | 0;
   if ((HEAP8[$100 >> 0] | 0) < 0) {
    $103 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($103, $10);
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$100 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i61 = 0;
   while (1) {
    if (($$0$i$i$i61 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i61 << 2) >> 2] = 0;
    $$0$i$i$i61 = $$0$i$i$i61 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  }
  HEAP32[$4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 12 >> 2] & 127]($76) | 0;
  HEAP32[$5 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 16 >> 2] & 127]($76) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 20 >> 2] & 127]($11, $76);
  $118 = $6 + 11 | 0;
  if ((HEAP8[$118 >> 0] | 0) < 0) {
   $121 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($121, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i65Z2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$118 >> 0] = 0;
   $$pre$phi$i$i65Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$i65Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i65Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i65Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i67 = 0;
  while (1) {
   if (($$0$i$i$i67 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i67 << 2) >> 2] = 0;
   $$0$i$i$i67 = $$0$i$i$i67 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 24 >> 2] & 127]($11, $76);
  $129 = $7 + 8 + 3 | 0;
  if ((HEAP8[$129 >> 0] | 0) < 0) {
   $132 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($132, $10);
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$129 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i71 = 0;
  while (1) {
   if (($$0$i$i$i71 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i71 << 2) >> 2] = 0;
   $$0$i$i$i71 = $$0$i$i$i71 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 36 >> 2] & 127]($76) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZN3HFM13ForecastClass17runMultiObjSearchEdPN8optframe6ParetoI6RepHFMiEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = $2 | 0;
 var $$0 = 0, $$pre = 0, $$pre268 = 0, $10 = 0, $101 = 0, $105 = 0, $11 = 0, $113 = 0, $115 = 0, $119 = 0, $12 = 0, $121 = 0, $125 = 0, $127 = 0, $13 = 0, $131 = 0, $133 = 0, $134 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $142 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $155 = 0, $16 = 0, $160 = 0, $161 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $169 = 0, $17 = 0, $172 = 0, $174 = 0, $178 = 0, $194 = 0, $196 = 0, $206 = 0, $21 = 0, $218 = 0, $220 = 0, $227 = 0, $229 = 0, $236 = 0, $238 = 0, $245 = 0, $247 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $44 = 0, $48 = 0, $5 = 0, $57 = 0, $6 = 0, $63 = 0, $67 = 0, $7 = 0, $76 = 0, $8 = 0, $82 = 0, $86 = 0, $9 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 448 | 0;
 $3 = sp + 368 | 0;
 $4 = sp + 176 | 0;
 $5 = sp + 128 | 0;
 $6 = sp + 80 | 0;
 $7 = sp + 32 | 0;
 $8 = sp + 352 | 0;
 $9 = sp + 236 | 0;
 $10 = sp + 224 | 0;
 $11 = sp;
 $12 = __Znwj(32) | 0;
 HEAP32[$12 >> 2] = 6156;
 $13 = $12 + 4 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP32[$13 + 12 >> 2] = 0;
 HEAP32[$13 + 16 >> 2] = 0;
 HEAP32[$13 + 20 >> 2] = 0;
 HEAP8[$13 + 24 >> 0] = 0;
 $15 = HEAP32[$0 + 28 >> 2] | 0;
 $16 = $0 + 132 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $21 = $3 + 12 | 0;
 HEAP8[$21 + 4 >> 0] = 0;
 HEAP32[$3 + 8 >> 2] = 2;
 HEAP8[$3 + 15 >> 0] = 0;
 HEAP8[$21 >> 0] = 1;
 HEAP8[$3 + 13 >> 0] = 1;
 HEAP8[$3 + 14 >> 0] = 0;
 HEAP32[$3 >> 2] = 6180;
 HEAP32[$3 + 20 >> 2] = $15;
 $25 = $3 + 24 | 0;
 HEAP32[$25 >> 2] = 6228;
 HEAP32[$3 + 28 >> 2] = $17;
 $27 = $3 + 32 | 0;
 HEAP32[$27 >> 2] = 6248;
 $28 = $3 + 36 | 0;
 HEAP32[$28 >> 2] = 0;
 $29 = $3 + 40 | 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$3 + 44 >> 2] = 0;
 HEAP32[$3 + 48 >> 2] = $17;
 $32 = $3 + 52 | 0;
 $33 = $3 + 56 | 0;
 HEAP32[$33 >> 2] = 0;
 $34 = $3 + 60 | 0;
 HEAP32[$34 >> 2] = 0;
 HEAP32[$3 + 64 >> 2] = 0;
 HEAP32[$3 + 68 >> 2] = $17;
 HEAP32[$32 >> 2] = 6276;
 $38 = HEAP32[$0 + 64 >> 2] | 0;
 $39 = $38 + 4 | 0;
 $41 = HEAP32[$38 >> 2] | 0;
 if ((HEAP32[$39 >> 2] | 0) == ($41 | 0)) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($38);
 $44 = HEAP32[$41 >> 2] | 0;
 $48 = $4 + 12 | 0;
 HEAP8[$48 + 4 >> 0] = 0;
 HEAP32[$4 + 8 >> 2] = 2;
 HEAP8[$4 + 15 >> 0] = 0;
 HEAP8[$48 >> 0] = 1;
 HEAP8[$4 + 13 >> 0] = 1;
 HEAP8[$4 + 14 >> 0] = 0;
 HEAP32[$4 >> 2] = 6304;
 HEAP32[$4 + 20 >> 2] = $17;
 HEAP32[$4 + 24 >> 2] = $44;
 HEAP32[$4 + 44 >> 2] = 100;
 HEAPF64[$4 + 32 >> 3] = 0.0;
 HEAP32[$4 + 40 >> 2] = 0;
 $57 = HEAP32[$38 >> 2] | 0;
 if ((HEAP32[$39 >> 2] | 0) - $57 >> 2 >>> 0 <= 1) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($38);
 $63 = HEAP32[$57 + 4 >> 2] | 0;
 $67 = $5 + 12 | 0;
 HEAP8[$67 + 4 >> 0] = 0;
 HEAP32[$5 + 8 >> 2] = 2;
 HEAP8[$5 + 15 >> 0] = 0;
 HEAP8[$67 >> 0] = 1;
 HEAP8[$5 + 13 >> 0] = 1;
 HEAP8[$5 + 14 >> 0] = 0;
 HEAP32[$5 >> 2] = 6304;
 HEAP32[$5 + 20 >> 2] = $17;
 HEAP32[$5 + 24 >> 2] = $63;
 HEAP32[$5 + 44 >> 2] = 100;
 HEAPF64[$5 + 32 >> 3] = 0.0;
 HEAP32[$5 + 40 >> 2] = 0;
 $76 = HEAP32[$38 >> 2] | 0;
 if ((HEAP32[$39 >> 2] | 0) - $76 >> 2 >>> 0 <= 2) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($38);
 $82 = HEAP32[$76 + 8 >> 2] | 0;
 $86 = $6 + 12 | 0;
 HEAP8[$86 + 4 >> 0] = 0;
 HEAP32[$6 + 8 >> 2] = 2;
 HEAP8[$6 + 15 >> 0] = 0;
 HEAP8[$86 >> 0] = 1;
 HEAP8[$6 + 13 >> 0] = 1;
 HEAP8[$6 + 14 >> 0] = 0;
 HEAP32[$6 >> 2] = 6304;
 HEAP32[$6 + 20 >> 2] = $17;
 HEAP32[$6 + 24 >> 2] = $82;
 HEAP32[$6 + 44 >> 2] = 100;
 HEAPF64[$6 + 32 >> 3] = 0.0;
 HEAP32[$6 + 40 >> 2] = 0;
 $95 = HEAP32[$38 >> 2] | 0;
 if ((HEAP32[$39 >> 2] | 0) - $95 >> 2 >>> 0 <= 3) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($38);
 $101 = HEAP32[$95 + 12 >> 2] | 0;
 $105 = $7 + 12 | 0;
 HEAP8[$105 + 4 >> 0] = 0;
 HEAP32[$7 + 8 >> 2] = 2;
 HEAP8[$7 + 15 >> 0] = 0;
 HEAP8[$105 >> 0] = 1;
 HEAP8[$7 + 13 >> 0] = 1;
 HEAP8[$7 + 14 >> 0] = 0;
 HEAP32[$7 >> 2] = 6304;
 HEAP32[$7 + 20 >> 2] = $17;
 HEAP32[$7 + 24 >> 2] = $101;
 HEAP32[$7 + 44 >> 2] = 100;
 HEAPF64[$7 + 32 >> 3] = 0.0;
 HEAP32[$7 + 40 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 $113 = $8 + 4 | 0;
 HEAP32[$113 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 HEAP32[$9 >> 2] = $4;
 $115 = $8 + 8 | 0;
 __ZNSt3__26vectorIPN8optframe13MOLocalSearchI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($8, $9);
 $$pre = HEAP32[$113 >> 2] | 0;
 $$pre268 = HEAP32[$115 >> 2] | 0;
 HEAP32[$9 >> 2] = $6;
 if ($$pre >>> 0 < $$pre268 >>> 0) {
  HEAP32[$$pre >> 2] = $6;
  $119 = (HEAP32[$113 >> 2] | 0) + 4 | 0;
  HEAP32[$113 >> 2] = $119;
  $121 = $119;
 } else {
  __ZNSt3__26vectorIPN8optframe13MOLocalSearchI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($8, $9);
  $121 = HEAP32[$113 >> 2] | 0;
 }
 HEAP32[$9 >> 2] = $7;
 if ($121 >>> 0 < (HEAP32[$115 >> 2] | 0) >>> 0) {
  HEAP32[$121 >> 2] = $7;
  $125 = (HEAP32[$113 >> 2] | 0) + 4 | 0;
  HEAP32[$113 >> 2] = $125;
  $127 = $125;
 } else {
  __ZNSt3__26vectorIPN8optframe13MOLocalSearchI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($8, $9);
  $127 = HEAP32[$113 >> 2] | 0;
 }
 HEAP32[$9 >> 2] = $5;
 if ($127 >>> 0 < (HEAP32[$115 >> 2] | 0) >>> 0) {
  HEAP32[$127 >> 2] = $5;
  $131 = (HEAP32[$113 >> 2] | 0) + 4 | 0;
  HEAP32[$113 >> 2] = $131;
  $138 = $131;
 } else {
  __ZNSt3__26vectorIPN8optframe13MOLocalSearchI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($8, $9);
  $138 = HEAP32[$113 >> 2] | 0;
 }
 $133 = HEAP32[$16 >> 2] | 0;
 HEAP32[$10 >> 2] = 0;
 $134 = $10 + 4 | 0;
 HEAP32[$134 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $136 = HEAP32[$8 >> 2] | 0;
 $137 = $138 - $136 | 0;
 $139 = $137 >> 2;
 if (!$139) {
  $164 = 0;
  $165 = 0;
  $172 = 0;
  $178 = 0;
  $196 = 0;
 } else {
  if ($139 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($10);
  $142 = __Znwj($137) | 0;
  HEAP32[$134 >> 2] = $142;
  HEAP32[$10 >> 2] = $142;
  HEAP32[$10 + 8 >> 2] = $142 + ($139 << 2);
  $145 = $138 - $136 | 0;
  $147 = $142;
  if (($145 | 0) > 0) {
   $149 = $142 + ($145 >>> 2 << 2) | 0;
   _memcpy($142 | 0, $136 | 0, $145 | 0) | 0;
   HEAP32[$134 >> 2] = $149;
   $164 = $147;
   $165 = $149;
   $172 = $142;
   $178 = $142;
   $196 = $149;
  } else {
   $164 = $147;
   $165 = $147;
   $172 = $142;
   $178 = $142;
   $196 = $142;
  }
 }
 $155 = $9 + 12 | 0;
 HEAP8[$155 + 4 >> 0] = 0;
 HEAP32[$9 + 8 >> 2] = 2;
 HEAP8[$9 + 15 >> 0] = 0;
 HEAP8[$155 >> 0] = 1;
 HEAP8[$9 + 13 >> 0] = 1;
 HEAP8[$9 + 14 >> 0] = 0;
 HEAP32[$9 >> 2] = 6356;
 HEAP32[$9 + 20 >> 2] = $3;
 HEAP32[$9 + 24 >> 2] = 30;
 $160 = $9 + 28 | 0;
 HEAP32[$160 >> 2] = 0;
 $161 = $9 + 32 | 0;
 HEAP32[$161 >> 2] = 0;
 HEAP32[$9 + 36 >> 2] = 0;
 $163 = $165 - $164 | 0;
 $166 = $163 >> 2;
 if ($166 | 0) {
  if ($166 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($160);
  $169 = __Znwj($163) | 0;
  HEAP32[$161 >> 2] = $169;
  HEAP32[$160 >> 2] = $169;
  HEAP32[$9 + 36 >> 2] = $169 + ($166 << 2);
  $174 = $165 - $172 | 0;
  if (($174 | 0) > 0) {
   _memcpy($169 | 0, $178 | 0, $174 | 0) | 0;
   HEAP32[$161 >> 2] = $169 + ($174 >>> 2 << 2);
  }
 }
 HEAP32[$9 + 44 >> 2] = $133;
 HEAP32[$9 + 48 >> 2] = 6248;
 HEAP32[$9 + 52 >> 2] = 0;
 HEAP32[$9 + 56 >> 2] = 0;
 HEAP32[$9 + 60 >> 2] = 0;
 HEAP32[$9 + 64 >> 2] = $133;
 HEAP32[$9 + 72 >> 2] = 0;
 HEAP32[$9 + 76 >> 2] = 0;
 HEAP32[$9 + 80 >> 2] = 0;
 HEAP32[$9 + 84 >> 2] = $133;
 HEAP32[$9 + 68 >> 2] = 6276;
 HEAP32[$9 + 40 >> 2] = 6412;
 HEAP32[$9 + 88 >> 2] = $165 - $164 >> 2;
 $194 = $9 + 92 | 0;
 HEAP32[$194 >> 2] = 0;
 HEAP32[$194 + 4 >> 2] = 0;
 HEAP32[$194 + 8 >> 2] = 0;
 HEAP32[$194 + 12 >> 2] = 0;
 HEAP32[$194 + 16 >> 2] = 0;
 HEAP32[$194 + 20 >> 2] = 0;
 if ($172 | 0) {
  if (($196 | 0) != ($172 | 0)) HEAP32[$134 >> 2] = $196 + (~(($196 + -4 - $172 | 0) >>> 2) << 2);
  __ZdlPv($178);
 }
 $206 = $11 + 12 | 0;
 HEAP8[$206 + 4 >> 0] = 0;
 HEAP32[$11 + 8 >> 2] = 2;
 HEAP8[$11 + 15 >> 0] = 0;
 HEAP8[$206 >> 0] = 1;
 HEAP8[$11 + 13 >> 0] = 1;
 HEAP8[$11 + 14 >> 0] = 0;
 HEAP32[$11 >> 2] = 6432;
 HEAPF64[$11 + 24 >> 3] = $1;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12 >> 2] | 0) + 8 >> 2] & 511]($12);
 if (!$2) $$0 = __ZN24GeneralParetoLocalSearchI6RepHFMiE24searchWithOptionalParetoERN8optframe4MOSCEPNS2_6ParetoIS0_iEE($9, $11, 0) | 0; else $$0 = __ZN24GeneralParetoLocalSearchI6RepHFMiE24searchWithOptionalParetoERN8optframe4MOSCEPNS2_6ParetoIS0_iEE($9, $11, $2) | 0;
 HEAP32[$9 >> 2] = 6356;
 __ZN17paretoManagerGPLSI6RepHFMiED2Ev($9 + 40 | 0);
 $218 = HEAP32[$9 + 28 >> 2] | 0;
 if ($218 | 0) {
  $220 = HEAP32[$161 >> 2] | 0;
  if (($220 | 0) != ($218 | 0)) HEAP32[$161 >> 2] = $220 + (~(($220 + -4 - $218 | 0) >>> 2) << 2);
  __ZdlPv($218);
 }
 $227 = HEAP32[$8 >> 2] | 0;
 if ($227 | 0) {
  $229 = HEAP32[$113 >> 2] | 0;
  if (($229 | 0) != ($227 | 0)) HEAP32[$113 >> 2] = $229 + (~(($229 + -4 - $227 | 0) >>> 2) << 2);
  __ZdlPv($227);
 }
 HEAP32[$3 >> 2] = 6180;
 HEAP32[$25 >> 2] = 6228;
 HEAP32[$32 >> 2] = 6248;
 $236 = HEAP32[$33 >> 2] | 0;
 if ($236 | 0) {
  $238 = HEAP32[$34 >> 2] | 0;
  if (($238 | 0) != ($236 | 0)) HEAP32[$34 >> 2] = $238 + (~(($238 + -4 - $236 | 0) >>> 2) << 2);
  __ZdlPv($236);
 }
 HEAP32[$27 >> 2] = 6248;
 $245 = HEAP32[$28 >> 2] | 0;
 if (!$245) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 $247 = HEAP32[$29 >> 2] | 0;
 if (($247 | 0) != ($245 | 0)) HEAP32[$29 >> 2] = $247 + (~(($247 + -4 - $245 | 0) >>> 2) << 2);
 __ZdlPv($245);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN3HFM24NSIteratorHFMModifyRules5firstEv($0) {
 $0 = $0 | 0;
 var $$0109$us$us = 0, $$0109$us$us$1 = 0, $$086110$us$us = 0, $$086110$us$us$1 = 0, $$087113$us = 0, $$087113$us$1 = 0, $$089126$us$us = 0, $$089126$us$us$1 = 0, $$090129$us$us = 0, $$090129$us$us$1 = 0, $$091132$us = 0, $$091132$us$1 = 0, $$095146$us$us = 0, $$095146$us$us$1 = 0, $$096149$us$us = 0, $$096149$us$us$1 = 0, $$097152$us = 0, $$097152$us$1 = 0, $$sink = 0, $1 = 0, $10 = 0, $105 = 0, $111 = 0, $112 = 0, $116 = 0.0, $128 = 0, $141 = 0, $145 = 0.0, $15 = 0, $157 = 0, $16 = 0, $168 = 0, $17 = 0, $173 = 0, $174 = 0, $175 = 0, $179 = 0.0, $18 = 0, $19 = 0, $191 = 0, $2 = 0, $20 = 0, $202 = 0, $207 = 0, $208 = 0, $21 = 0, $25 = 0, $29 = 0.0, $3 = 0, $41 = 0, $52 = 0, $53 = 0, $57 = 0.0, $69 = 0, $7 = 0, $8 = 0, $80 = 0, $81 = 0, $85 = 0.0, $9 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 48 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $7 = (HEAP32[$3 + 4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0;
 $8 = $7 >> 3;
 $9 = $0 + 40 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $15 = (HEAP32[$10 + 16 >> 2] | 0) - (HEAP32[$10 + 12 >> 2] | 0) | 0;
 $16 = ($15 | 0) / 12 | 0;
 $17 = ($15 | 0) > 0;
 $18 = ($7 | 0) > 0;
 $19 = $0 + 28 | 0;
 $20 = $0 + 32 | 0;
 $21 = $0 + 24 | 0;
 if ($17) {
  $$097152$us = 0;
  do {
   if ($18) {
    $$096149$us$us = 0;
    do {
     $$095146$us$us = 0;
     do {
      $25 = __Znwj(48) | 0;
      $29 = +HEAPF64[(HEAP32[HEAP32[$2 >> 2] >> 2] | 0) + ($$095146$us$us << 3) >> 3];
      HEAP8[$25 + 16 >> 0] = 0;
      HEAP32[$25 + 8 >> 2] = 2;
      HEAP8[$25 + 15 >> 0] = 0;
      HEAP8[$25 + 12 >> 0] = 1;
      HEAP8[$25 + 13 >> 0] = 1;
      HEAP8[$25 + 14 >> 0] = 0;
      HEAP32[$25 >> 2] = 5964;
      HEAP32[$25 + 20 >> 2] = $$097152$us;
      HEAP32[$25 + 24 >> 2] = $$096149$us$us;
      HEAPF64[$25 + 32 >> 3] = $29;
      HEAP8[$25 + 40 >> 0] = 0;
      HEAP32[$25 + 44 >> 2] = 0;
      HEAP32[$1 >> 2] = $25;
      $41 = HEAP32[$19 >> 2] | 0;
      if ($41 >>> 0 < (HEAP32[$20 >> 2] | 0) >>> 0) {
       HEAP32[$41 >> 2] = $25;
       HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 4;
      } else __ZNSt3__26vectorIPN3HFM17MoveHFMModifyRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($21, $1);
      $$095146$us$us = $$095146$us$us + 1 | 0;
     } while (($$095146$us$us | 0) < ($8 | 0));
     $$096149$us$us = $$096149$us$us + 1 | 0;
    } while (($$096149$us$us | 0) < ($16 | 0));
   }
   $$097152$us = $$097152$us + 1 | 0;
  } while (($$097152$us | 0) != 6);
  if ($17) {
   $$097152$us$1 = 0;
   do {
    if ($18) {
     $$096149$us$us$1 = 0;
     do {
      $$095146$us$us$1 = 0;
      do {
       $175 = __Znwj(48) | 0;
       $179 = +HEAPF64[(HEAP32[HEAP32[$2 >> 2] >> 2] | 0) + ($$095146$us$us$1 << 3) >> 3];
       HEAP8[$175 + 16 >> 0] = 0;
       HEAP32[$175 + 8 >> 2] = 2;
       HEAP8[$175 + 15 >> 0] = 0;
       HEAP8[$175 + 12 >> 0] = 1;
       HEAP8[$175 + 13 >> 0] = 1;
       HEAP8[$175 + 14 >> 0] = 0;
       HEAP32[$175 >> 2] = 5964;
       HEAP32[$175 + 20 >> 2] = $$097152$us$1;
       HEAP32[$175 + 24 >> 2] = $$096149$us$us$1;
       HEAPF64[$175 + 32 >> 3] = $179;
       HEAP8[$175 + 40 >> 0] = 1;
       HEAP32[$175 + 44 >> 2] = 0;
       HEAP32[$1 >> 2] = $175;
       $191 = HEAP32[$19 >> 2] | 0;
       if ($191 >>> 0 < (HEAP32[$20 >> 2] | 0) >>> 0) {
        HEAP32[$191 >> 2] = $175;
        HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 4;
       } else __ZNSt3__26vectorIPN3HFM17MoveHFMModifyRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($21, $1);
       $$095146$us$us$1 = $$095146$us$us$1 + 1 | 0;
      } while (($$095146$us$us$1 | 0) < ($8 | 0));
      $$096149$us$us$1 = $$096149$us$us$1 + 1 | 0;
     } while (($$096149$us$us$1 | 0) < ($16 | 0));
    }
    $$097152$us$1 = $$097152$us$1 + 1 | 0;
   } while (($$097152$us$1 | 0) != 6);
  }
 }
 $202 = HEAP32[$9 >> 2] | 0;
 $207 = (HEAP32[$202 + 40 >> 2] | 0) - (HEAP32[$202 + 36 >> 2] | 0) | 0;
 $52 = ($207 | 0) / 12 | 0;
 $208 = ($207 | 0) > 0;
 if ($208) {
  $$091132$us = 0;
  do {
   if ($18) {
    $$090129$us$us = 0;
    do {
     $$089126$us$us = 0;
     do {
      $53 = __Znwj(48) | 0;
      $57 = +HEAPF64[(HEAP32[HEAP32[$2 >> 2] >> 2] | 0) + ($$089126$us$us << 3) >> 3];
      HEAP8[$53 + 16 >> 0] = 0;
      HEAP32[$53 + 8 >> 2] = 2;
      HEAP8[$53 + 15 >> 0] = 0;
      HEAP8[$53 + 12 >> 0] = 1;
      HEAP8[$53 + 13 >> 0] = 1;
      HEAP8[$53 + 14 >> 0] = 0;
      HEAP32[$53 >> 2] = 5964;
      HEAP32[$53 + 20 >> 2] = $$091132$us;
      HEAP32[$53 + 24 >> 2] = $$090129$us$us;
      HEAPF64[$53 + 32 >> 3] = $57;
      HEAP8[$53 + 40 >> 0] = 0;
      HEAP32[$53 + 44 >> 2] = 1;
      HEAP32[$1 >> 2] = $53;
      $69 = HEAP32[$19 >> 2] | 0;
      if ($69 >>> 0 < (HEAP32[$20 >> 2] | 0) >>> 0) {
       HEAP32[$69 >> 2] = $53;
       HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 4;
      } else __ZNSt3__26vectorIPN3HFM17MoveHFMModifyRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($21, $1);
      $$089126$us$us = $$089126$us$us + 1 | 0;
     } while (($$089126$us$us | 0) < ($8 | 0));
     $$090129$us$us = $$090129$us$us + 1 | 0;
    } while (($$090129$us$us | 0) < ($52 | 0));
   }
   $$091132$us = $$091132$us + 1 | 0;
  } while (($$091132$us | 0) != 6);
  if ($208) {
   $$091132$us$1 = 0;
   do {
    if ($18) {
     $$090129$us$us$1 = 0;
     do {
      $$089126$us$us$1 = 0;
      do {
       $141 = __Znwj(48) | 0;
       $145 = +HEAPF64[(HEAP32[HEAP32[$2 >> 2] >> 2] | 0) + ($$089126$us$us$1 << 3) >> 3];
       HEAP8[$141 + 16 >> 0] = 0;
       HEAP32[$141 + 8 >> 2] = 2;
       HEAP8[$141 + 15 >> 0] = 0;
       HEAP8[$141 + 12 >> 0] = 1;
       HEAP8[$141 + 13 >> 0] = 1;
       HEAP8[$141 + 14 >> 0] = 0;
       HEAP32[$141 >> 2] = 5964;
       HEAP32[$141 + 20 >> 2] = $$091132$us$1;
       HEAP32[$141 + 24 >> 2] = $$090129$us$us$1;
       HEAPF64[$141 + 32 >> 3] = $145;
       HEAP8[$141 + 40 >> 0] = 1;
       HEAP32[$141 + 44 >> 2] = 1;
       HEAP32[$1 >> 2] = $141;
       $157 = HEAP32[$19 >> 2] | 0;
       if ($157 >>> 0 < (HEAP32[$20 >> 2] | 0) >>> 0) {
        HEAP32[$157 >> 2] = $141;
        HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 4;
       } else __ZNSt3__26vectorIPN3HFM17MoveHFMModifyRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($21, $1);
       $$089126$us$us$1 = $$089126$us$us$1 + 1 | 0;
      } while (($$089126$us$us$1 | 0) < ($8 | 0));
      $$090129$us$us$1 = $$090129$us$us$1 + 1 | 0;
     } while (($$090129$us$us$1 | 0) < ($52 | 0));
    }
    $$091132$us$1 = $$091132$us$1 + 1 | 0;
   } while (($$091132$us$1 | 0) != 6);
  }
 }
 $168 = HEAP32[$9 >> 2] | 0;
 $173 = (HEAP32[$168 + 64 >> 2] | 0) - (HEAP32[$168 + 60 >> 2] | 0) | 0;
 $80 = ($173 | 0) / 12 | 0;
 $174 = ($173 | 0) > 0;
 if ($174) {
  $$087113$us = 0;
  do {
   if ($18) {
    $$086110$us$us = 0;
    do {
     $$0109$us$us = 0;
     do {
      $81 = __Znwj(48) | 0;
      $85 = +HEAPF64[(HEAP32[HEAP32[$2 >> 2] >> 2] | 0) + ($$0109$us$us << 3) >> 3];
      HEAP8[$81 + 16 >> 0] = 0;
      HEAP32[$81 + 8 >> 2] = 2;
      HEAP8[$81 + 15 >> 0] = 0;
      HEAP8[$81 + 12 >> 0] = 1;
      HEAP8[$81 + 13 >> 0] = 1;
      HEAP8[$81 + 14 >> 0] = 0;
      HEAP32[$81 >> 2] = 5964;
      HEAP32[$81 + 20 >> 2] = $$087113$us;
      HEAP32[$81 + 24 >> 2] = $$086110$us$us;
      HEAPF64[$81 + 32 >> 3] = $85;
      HEAP8[$81 + 40 >> 0] = 0;
      HEAP32[$81 + 44 >> 2] = 2;
      HEAP32[$1 >> 2] = $81;
      $97 = HEAP32[$19 >> 2] | 0;
      if ($97 >>> 0 < (HEAP32[$20 >> 2] | 0) >>> 0) {
       HEAP32[$97 >> 2] = $81;
       HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 4;
      } else __ZNSt3__26vectorIPN3HFM17MoveHFMModifyRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($21, $1);
      $$0109$us$us = $$0109$us$us + 1 | 0;
     } while (($$0109$us$us | 0) < ($8 | 0));
     $$086110$us$us = $$086110$us$us + 1 | 0;
    } while (($$086110$us$us | 0) < ($80 | 0));
   }
   $$087113$us = $$087113$us + 1 | 0;
  } while (($$087113$us | 0) != 6);
  if ($174) {
   $$087113$us$1 = 0;
   do {
    if ($18) {
     $$086110$us$us$1 = 0;
     do {
      $$0109$us$us$1 = 0;
      do {
       $112 = __Znwj(48) | 0;
       $116 = +HEAPF64[(HEAP32[HEAP32[$2 >> 2] >> 2] | 0) + ($$0109$us$us$1 << 3) >> 3];
       HEAP8[$112 + 16 >> 0] = 0;
       HEAP32[$112 + 8 >> 2] = 2;
       HEAP8[$112 + 15 >> 0] = 0;
       HEAP8[$112 + 12 >> 0] = 1;
       HEAP8[$112 + 13 >> 0] = 1;
       HEAP8[$112 + 14 >> 0] = 0;
       HEAP32[$112 >> 2] = 5964;
       HEAP32[$112 + 20 >> 2] = $$087113$us$1;
       HEAP32[$112 + 24 >> 2] = $$086110$us$us$1;
       HEAPF64[$112 + 32 >> 3] = $116;
       HEAP8[$112 + 40 >> 0] = 1;
       HEAP32[$112 + 44 >> 2] = 2;
       HEAP32[$1 >> 2] = $112;
       $128 = HEAP32[$19 >> 2] | 0;
       if ($128 >>> 0 < (HEAP32[$20 >> 2] | 0) >>> 0) {
        HEAP32[$128 >> 2] = $112;
        HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 4;
       } else __ZNSt3__26vectorIPN3HFM17MoveHFMModifyRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($21, $1);
       $$0109$us$us$1 = $$0109$us$us$1 + 1 | 0;
      } while (($$0109$us$us$1 | 0) < ($8 | 0));
      $$086110$us$us$1 = $$086110$us$us$1 + 1 | 0;
     } while (($$086110$us$us$1 | 0) < ($80 | 0));
    }
    $$087113$us$1 = $$087113$us$1 + 1 | 0;
   } while (($$087113$us$1 | 0) != 6);
  }
 }
 $105 = HEAP32[$21 >> 2] | 0;
 if ((HEAP32[$19 >> 2] | 0) == ($105 | 0)) {
  $$sink = 0;
  $111 = $0 + 20 | 0;
  HEAP32[$111 >> 2] = $$sink;
  STACKTOP = sp;
  return;
 }
 $$sink = HEAP32[$105 + (HEAP32[$0 + 36 >> 2] << 2) >> 2] | 0;
 $111 = $0 + 20 | 0;
 HEAP32[$111 >> 2] = $$sink;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i39 = 0, $$0$i$i$i42 = 0, $$0$i$i$i45 = 0, $$0$i$i$i49 = 0, $$0$i$i$i53 = 0, $$0$i$i$i59 = 0, $$0$i$i$i63 = 0, $$pre$phi$i$i57Z2D = 0, $$pre$phi$i$iZ2D = 0, $10 = 0, $11 = 0, $110 = 0, $113 = 0, $12 = 0, $121 = 0, $124 = 0, $16 = 0, $21 = 0, $24 = 0, $32 = 0, $35 = 0, $50 = 0, $53 = 0, $61 = 0, $64 = 0, $72 = 0, $76 = 0, $81 = 0, $84 = 0, $92 = 0, $95 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 36272) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 127]($10, $12);
  $16 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $16;
  HEAP8[$2 + 1 >> 0] = $16 >> 8;
  HEAP8[$2 + 2 >> 0] = $16 >> 16;
  HEAP8[$2 + 3 >> 0] = $16 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($11, $12);
  $21 = $8 + 8 + 3 | 0;
  if ((HEAP8[$21 >> 0] | 0) < 0) {
   $24 = HEAP32[$8 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($24, $10);
   HEAP32[$8 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
   HEAP8[$21 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
  HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i = 0;
  while (1) {
   if (($$0$i$i$i | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
   $$0$i$i$i = $$0$i$i$i + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($11, $12);
  $32 = $7 + 8 + 3 | 0;
  if ((HEAP8[$32 >> 0] | 0) < 0) {
   $35 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($35, $10);
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$32 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i39 = 0;
  while (1) {
   if (($$0$i$i$i39 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i39 << 2) >> 2] = 0;
   $$0$i$i$i39 = $$0$i$i$i39 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  HEAP32[$3 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 127]($11, $12);
  $50 = $5 + 11 | 0;
  if ((HEAP8[$50 >> 0] | 0) < 0) {
   $53 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($53, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$iZ2D = $5;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$50 >> 0] = 0;
   $$pre$phi$i$iZ2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($5, 0);
  HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i42 = 0;
  while (1) {
   if (($$0$i$i$i42 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i42 << 2) >> 2] = 0;
   $$0$i$i$i42 = $$0$i$i$i42 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($11, $12);
  $61 = $6 + 8 + 3 | 0;
  if ((HEAP8[$61 >> 0] | 0) < 0) {
   $64 = HEAP32[$6 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($64, $10);
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6, $10);
   HEAP8[$61 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($6, 0);
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i45 = 0;
  while (1) {
   if (($$0$i$i$i45 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i45 << 2) >> 2] = 0;
   $$0$i$i$i45 = $$0$i$i$i45 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $72 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 36264) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 44 >> 2] & 127]($10, $72);
  $76 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $76;
  HEAP8[$2 + 1 >> 0] = $76 >> 8;
  HEAP8[$2 + 2 >> 0] = $76 >> 16;
  HEAP8[$2 + 3 >> 0] = $76 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 32 >> 2] & 127]($11, $72);
  $81 = $8 + 8 + 3 | 0;
  if ((HEAP8[$81 >> 0] | 0) < 0) {
   $84 = HEAP32[$8 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($84, $10);
   HEAP32[$8 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
   HEAP8[$81 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
  HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i49 = 0;
  while (1) {
   if (($$0$i$i$i49 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i49 << 2) >> 2] = 0;
   $$0$i$i$i49 = $$0$i$i$i49 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 28 >> 2] & 127]($11, $72);
  $92 = $7 + 8 + 3 | 0;
  if ((HEAP8[$92 >> 0] | 0) < 0) {
   $95 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($95, $10);
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$92 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i53 = 0;
  while (1) {
   if (($$0$i$i$i53 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i53 << 2) >> 2] = 0;
   $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  HEAP32[$3 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 12 >> 2] & 127]($72) | 0;
  HEAP32[$4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 16 >> 2] & 127]($72) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 20 >> 2] & 127]($11, $72);
  $110 = $5 + 11 | 0;
  if ((HEAP8[$110 >> 0] | 0) < 0) {
   $113 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($113, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$i57Z2D = $5;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$110 >> 0] = 0;
   $$pre$phi$i$i57Z2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($5, 0);
  HEAP32[$$pre$phi$i$i57Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i59 = 0;
  while (1) {
   if (($$0$i$i$i59 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i59 << 2) >> 2] = 0;
   $$0$i$i$i59 = $$0$i$i$i59 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 24 >> 2] & 127]($11, $72);
  $121 = $6 + 8 + 3 | 0;
  if ((HEAP8[$121 >> 0] | 0) < 0) {
   $124 = HEAP32[$6 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($124, $10);
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6, $10);
   HEAP8[$121 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($6, 0);
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i63 = 0;
  while (1) {
   if (($$0$i$i$i63 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i63 << 2) >> 2] = 0;
   $$0$i$i$i63 = $$0$i$i$i63 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 36 >> 2] & 127]($72) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function _hexfloat($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0133 = 0, $$0142 = 0, $$0146 = 0, $$0148 = 0, $$0151 = 0.0, $$0152 = 0.0, $$0155 = 0.0, $$0159 = 0, $$0165 = 0.0, $$0166 = 0, $$0166169 = 0, $$0166170 = 0, $$1$ph = 0, $$1147 = 0, $$1149 = 0, $$1153 = 0.0, $$1156 = 0.0, $$1160 = 0, $$2 = 0, $$2$lcssa = 0, $$2144 = 0, $$2150 = 0, $$2154 = 0.0, $$2157 = 0.0, $$2161 = 0, $$3145 = 0, $$3158$lcssa = 0.0, $$3158179 = 0.0, $$3162$lcssa = 0, $$3162183 = 0, $$4 = 0.0, $$4163$lcssa = 0, $$4163178 = 0, $$5164 = 0, $$pre$phiZ2D = 0.0, $100 = 0, $101 = 0, $107 = 0, $108 = 0, $109 = 0, $119 = 0, $120 = 0, $133 = 0, $135 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $144 = 0, $146 = 0, $156 = 0, $158 = 0, $169 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $179 = 0, $182 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $196 = 0.0, $197 = 0, $21 = 0, $210 = 0.0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $29 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $42 = 0, $44 = 0, $5 = 0, $52 = 0, $54 = 0, $6 = 0, $67 = 0.0, $7 = 0, $74 = 0, $76 = 0, $84 = 0, $85 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond168 = 0, label = 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $0 + 100 | 0;
 if ($6 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
  HEAP32[$5 >> 2] = $6 + 1;
  $$0 = HEAPU8[$6 >> 0] | 0;
  $$0142 = 0;
 } else {
  $$0 = ___shgetc($0) | 0;
  $$0142 = 0;
 }
 L4 : while (1) {
  switch ($$0 | 0) {
  case 46:
   {
    label = 8;
    break L4;
    break;
   }
  case 48:
   break;
  default:
   {
    $$0146 = 0;
    $$0148 = 0;
    $$0152 = 1.0;
    $$0155 = 0.0;
    $$0159 = 0;
    $$2 = $$0;
    $$2144 = $$0142;
    $100 = 0;
    $52 = 0;
    $54 = 0;
    $98 = 0;
    break L4;
   }
  }
  $14 = HEAP32[$5 >> 2] | 0;
  if ($14 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = $14 + 1;
   $$0 = HEAPU8[$14 >> 0] | 0;
   $$0142 = 1;
   continue;
  } else {
   $$0 = ___shgetc($0) | 0;
   $$0142 = 1;
   continue;
  }
 }
 if ((label | 0) == 8) {
  $21 = HEAP32[$5 >> 2] | 0;
  if ($21 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = $21 + 1;
   $$1$ph = HEAPU8[$21 >> 0] | 0;
  } else $$1$ph = ___shgetc($0) | 0;
  if (($$1$ph | 0) == 48) {
   $36 = 0;
   $37 = 0;
   while (1) {
    $29 = HEAP32[$5 >> 2] | 0;
    if ($29 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
     HEAP32[$5 >> 2] = $29 + 1;
     $40 = HEAPU8[$29 >> 0] | 0;
    } else $40 = ___shgetc($0) | 0;
    $38 = _i64Add($36 | 0, $37 | 0, -1, -1) | 0;
    $39 = tempRet0;
    if (($40 | 0) == 48) {
     $36 = $38;
     $37 = $39;
    } else {
     $$0146 = 1;
     $$0148 = 0;
     $$0152 = 1.0;
     $$0155 = 0.0;
     $$0159 = 0;
     $$2 = $40;
     $$2144 = 1;
     $100 = $39;
     $52 = 0;
     $54 = 0;
     $98 = $38;
     break;
    }
   }
  } else {
   $$0146 = 1;
   $$0148 = 0;
   $$0152 = 1.0;
   $$0155 = 0.0;
   $$0159 = 0;
   $$2 = $$1$ph;
   $$2144 = $$0142;
   $100 = 0;
   $52 = 0;
   $54 = 0;
   $98 = 0;
  }
 }
 while (1) {
  $42 = $$2 + -48 | 0;
  $44 = ($$2 | 0) == 46;
  if ($42 >>> 0 >= 10) if (!($44 | (($$2 | 32) + -97 | 0) >>> 0 < 6)) {
   $$2$lcssa = $$2;
   break;
  }
  if ($44) if (!$$0146) {
   $$1147 = 1;
   $$2150 = $$0148;
   $$2154 = $$0152;
   $$2157 = $$0155;
   $$2161 = $$0159;
   $$3145 = $$2144;
   $214 = $54;
   $215 = $52;
   $216 = $54;
   $217 = $52;
  } else {
   $$2$lcssa = 46;
   break;
  } else {
   $$0133 = ($$2 | 0) > 57 ? ($$2 | 32) + -87 | 0 : $42;
   do if (($52 | 0) < 0 | ($52 | 0) == 0 & $54 >>> 0 < 8) {
    $$1149 = $$0148;
    $$1153 = $$0152;
    $$1156 = $$0155;
    $$1160 = $$0133 + ($$0159 << 4) | 0;
   } else if (($52 | 0) < 0 | ($52 | 0) == 0 & $54 >>> 0 < 14) {
    $67 = $$0152 * .0625;
    $$1149 = $$0148;
    $$1153 = $67;
    $$1156 = $$0155 + $67 * +($$0133 | 0);
    $$1160 = $$0159;
    break;
   } else {
    $or$cond = ($$0148 | 0) != 0 | ($$0133 | 0) == 0;
    $$1149 = $or$cond ? $$0148 : 1;
    $$1153 = $$0152;
    $$1156 = $or$cond ? $$0155 : $$0155 + $$0152 * .5;
    $$1160 = $$0159;
    break;
   } while (0);
   $74 = _i64Add($54 | 0, $52 | 0, 1, 0) | 0;
   $$1147 = $$0146;
   $$2150 = $$1149;
   $$2154 = $$1153;
   $$2157 = $$1156;
   $$2161 = $$1160;
   $$3145 = 1;
   $214 = $98;
   $215 = $100;
   $216 = $74;
   $217 = tempRet0;
  }
  $76 = HEAP32[$5 >> 2] | 0;
  if ($76 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = $76 + 1;
   $$0146 = $$1147;
   $$0148 = $$2150;
   $$0152 = $$2154;
   $$0155 = $$2157;
   $$0159 = $$2161;
   $$2 = HEAPU8[$76 >> 0] | 0;
   $$2144 = $$3145;
   $100 = $215;
   $52 = $217;
   $54 = $216;
   $98 = $214;
   continue;
  } else {
   $$0146 = $$1147;
   $$0148 = $$2150;
   $$0152 = $$2154;
   $$0155 = $$2157;
   $$0159 = $$2161;
   $$2 = ___shgetc($0) | 0;
   $$2144 = $$3145;
   $100 = $215;
   $52 = $217;
   $54 = $216;
   $98 = $214;
   continue;
  }
 }
 do if (!$$2144) {
  $84 = HEAP32[$7 >> 2] | 0;
  $85 = ($84 | 0) != 0;
  if ($85) HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
  if (!$4) ___shlim($0, 0); else {
   if ($85) HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
   if (!(($$0146 | 0) == 0 | ($84 | 0) == 0)) HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
  }
  $$0165 = +($3 | 0) * 0.0;
 } else {
  $97 = ($$0146 | 0) == 0;
  $99 = $97 ? $54 : $98;
  $101 = $97 ? $52 : $100;
  if (($52 | 0) < 0 | ($52 | 0) == 0 & $54 >>> 0 < 8) {
   $$3162183 = $$0159;
   $108 = $54;
   $109 = $52;
   while (1) {
    $107 = $$3162183 << 4;
    $108 = _i64Add($108 | 0, $109 | 0, 1, 0) | 0;
    $109 = tempRet0;
    if (!(($109 | 0) < 0 | ($109 | 0) == 0 & $108 >>> 0 < 8)) {
     $$3162$lcssa = $107;
     break;
    } else $$3162183 = $107;
   }
  } else $$3162$lcssa = $$0159;
  if (($$2$lcssa | 32 | 0) == 112) {
   $119 = _scanexp($0, $4) | 0;
   $120 = tempRet0;
   if (($119 | 0) == 0 & ($120 | 0) == -2147483648) {
    if (!$4) {
     ___shlim($0, 0);
     $$0165 = 0.0;
     break;
    }
    if (!(HEAP32[$7 >> 2] | 0)) {
     $137 = 0;
     $138 = 0;
    } else {
     HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
     $137 = 0;
     $138 = 0;
    }
   } else {
    $137 = $119;
    $138 = $120;
   }
  } else if (!(HEAP32[$7 >> 2] | 0)) {
   $137 = 0;
   $138 = 0;
  } else {
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
   $137 = 0;
   $138 = 0;
  }
  $133 = _bitshift64Shl($99 | 0, $101 | 0, 2) | 0;
  $135 = _i64Add($133 | 0, tempRet0 | 0, -32, -1) | 0;
  $139 = _i64Add($135 | 0, tempRet0 | 0, $137 | 0, $138 | 0) | 0;
  $140 = tempRet0;
  if (!$$3162$lcssa) {
   $$0165 = +($3 | 0) * 0.0;
   break;
  }
  $144 = 0 - $2 | 0;
  $146 = (($144 | 0) < 0) << 31 >> 31;
  if (($140 | 0) > ($146 | 0) | ($140 | 0) == ($146 | 0) & $139 >>> 0 > $144 >>> 0) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $$0165 = +($3 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  $156 = $2 + -106 | 0;
  $158 = (($156 | 0) < 0) << 31 >> 31;
  if (($140 | 0) < ($158 | 0) | ($140 | 0) == ($158 | 0) & $139 >>> 0 < $156 >>> 0) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $$0165 = +($3 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if (($$3162$lcssa | 0) > -1) {
   $$3158179 = $$0155;
   $$4163178 = $$3162$lcssa;
   $173 = $139;
   $174 = $140;
   while (1) {
    $169 = !($$3158179 >= .5);
    $$5164 = $$4163178 << 1 | ($169 ^ 1) & 1;
    $$4 = $$3158179 + ($169 ? $$3158179 : $$3158179 + -1.0);
    $175 = _i64Add($173 | 0, $174 | 0, -1, -1) | 0;
    $176 = tempRet0;
    if (($$5164 | 0) > -1) {
     $$3158179 = $$4;
     $$4163178 = $$5164;
     $173 = $175;
     $174 = $176;
    } else {
     $$3158$lcssa = $$4;
     $$4163$lcssa = $$5164;
     $184 = $175;
     $185 = $176;
     break;
    }
   }
  } else {
   $$3158$lcssa = $$0155;
   $$4163$lcssa = $$3162$lcssa;
   $184 = $139;
   $185 = $140;
  }
  $179 = (($1 | 0) < 0) << 31 >> 31;
  $182 = _i64Subtract(32, 0, $2 | 0, (($2 | 0) < 0) << 31 >> 31 | 0) | 0;
  $186 = _i64Add($182 | 0, tempRet0 | 0, $184 | 0, $185 | 0) | 0;
  $187 = tempRet0;
  if (($179 | 0) > ($187 | 0) | ($179 | 0) == ($187 | 0) & $1 >>> 0 > $186 >>> 0) if (($186 | 0) > 0) {
   $$0166 = $186;
   label = 59;
  } else {
   $$0166170 = 0;
   $197 = 84;
   label = 61;
  } else {
   $$0166 = $1;
   label = 59;
  }
  if ((label | 0) == 59) if (($$0166 | 0) < 53) {
   $$0166170 = $$0166;
   $197 = 84 - $$0166 | 0;
   label = 61;
  } else {
   $$0151 = 0.0;
   $$0166169 = $$0166;
   $$pre$phiZ2D = +($3 | 0);
  }
  if ((label | 0) == 61) {
   $196 = +($3 | 0);
   $$0151 = +_copysignl(+_scalbn(1.0, $197), $196);
   $$0166169 = $$0166170;
   $$pre$phiZ2D = $196;
  }
  $or$cond168 = ($$4163$lcssa & 1 | 0) == 0 & ($$3158$lcssa != 0.0 & ($$0166169 | 0) < 32);
  $210 = $$pre$phiZ2D * ($or$cond168 ? 0.0 : $$3158$lcssa) + ($$0151 + $$pre$phiZ2D * +((($or$cond168 & 1) + $$4163$lcssa | 0) >>> 0)) - $$0151;
  if (!($210 != 0.0)) HEAP32[(___errno_location() | 0) >> 2] = 34;
  $$0165 = +_scalbnl($210, $184);
 } while (0);
 return +$$0165;
}

function _mbsrtowcs($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0100$lcssa = 0, $$0100136 = 0, $$0107135 = 0, $$0113134 = 0, $$099 = 0, $$10 = 0, $$1101 = 0, $$1101$ph = 0, $$1108$ph = 0, $$1108138 = 0, $$11124 = 0, $$1114 = 0, $$1114$ph = 0, $$11163 = 0, $$2 = 0, $$2102144 = 0, $$2109 = 0, $$2115143 = 0, $$3103 = 0, $$3110 = 0, $$3116 = 0, $$4 = 0, $$4104 = 0, $$4111 = 0, $$4117 = 0, $$5 = 0, $$5105 = 0, $$5112 = 0, $$5112123 = 0, $$5112162 = 0, $$5118$ph = 0, $$5118137 = 0, $$6 = 0, $$6106$lcssa = 0, $$6106$ph = 0, $$6106139 = 0, $$6119 = 0, $$7 = 0, $$7120 = 0, $$8 = 0, $$8121 = 0, $$9 = 0, $$9$sink = 0, $$9122 = 0, $$9122161 = 0, $104 = 0, $107 = 0, $108 = 0, $110 = 0, $111 = 0, $114 = 0, $118 = 0, $124 = 0, $125 = 0, $13 = 0, $132 = 0, $134 = 0, $138 = 0, $142 = 0, $143 = 0, $147 = 0, $155 = 0, $16 = 0, $18 = 0, $22 = 0, $26 = 0, $33 = 0, $38 = 0, $4 = 0, $41 = 0, $47 = 0, $48 = 0, $53 = 0, $6 = 0, $60 = 0, $66 = 0, $72 = 0, $80 = 0, $88 = 0, label = 0;
 $4 = HEAP32[$1 >> 2] | 0;
 if (!$3) label = 5; else {
  $6 = HEAP32[$3 >> 2] | 0;
  if (!$6) label = 5; else if (!$0) {
   $$2 = $6;
   $$4104 = $4;
   $$4117 = $2;
   label = 25;
  } else {
   HEAP32[$3 >> 2] = 0;
   $$4 = $6;
   $$4111 = $0;
   $$8121 = $2;
   $$9 = $4;
   label = 43;
  }
 }
 L5 : do if ((label | 0) == 5) {
  $13 = ($0 | 0) != 0;
  if (HEAP32[HEAP32[(___pthread_self_349() | 0) + 188 >> 2] >> 2] | 0) if ($13) {
   $$1108$ph = $0;
   $$5118$ph = $2;
   $$6106$ph = $4;
   label = 15;
   break;
  } else {
   $$1101$ph = $4;
   $$1114$ph = $2;
   label = 14;
   break;
  }
  if (!$13) {
   $$099 = _strlen($4) | 0;
   label = 59;
   break;
  }
  L13 : do if (!$2) $$0100$lcssa = $4; else {
   $$0100136 = $4;
   $$0107135 = $0;
   $$0113134 = $2;
   while (1) {
    $16 = HEAP8[$$0100136 >> 0] | 0;
    if (!($16 << 24 >> 24)) break;
    $18 = $$0100136 + 1 | 0;
    HEAP32[$$0107135 >> 2] = $16 << 24 >> 24 & 57343;
    $22 = $$0113134 + -1 | 0;
    if (!$22) {
     $$0100$lcssa = $18;
     break L13;
    } else {
     $$0100136 = $18;
     $$0107135 = $$0107135 + 4 | 0;
     $$0113134 = $22;
    }
   }
   HEAP32[$$0107135 >> 2] = 0;
   HEAP32[$1 >> 2] = 0;
   $$099 = $2 - $$0113134 | 0;
   label = 59;
   break L5;
  } while (0);
  HEAP32[$1 >> 2] = $$0100$lcssa;
  $$099 = $2;
  label = 59;
 } while (0);
 L19 : while (1) {
  L20 : do if ((label | 0) == 14) {
   label = 0;
   $$1101 = $$1101$ph;
   $$1114 = $$1114$ph;
   while (1) {
    $26 = HEAP8[$$1101 >> 0] | 0;
    if ((($26 & 255) + -1 | 0) >>> 0 < 127) if (!($$1101 & 3)) {
     $33 = HEAP32[$$1101 >> 2] | 0;
     $38 = $33 & 255;
     if (!(($33 + -16843009 | $33) & -2139062144)) {
      $$2102144 = $$1101;
      $$2115143 = $$1114;
      do {
       $$2102144 = $$2102144 + 4 | 0;
       $$2115143 = $$2115143 + -4 | 0;
       $41 = HEAP32[$$2102144 >> 2] | 0;
      } while (!(($41 + -16843009 | $41) & -2139062144 | 0));
      $$3103 = $$2102144;
      $$3116 = $$2115143;
      $48 = $41 & 255;
     } else {
      $$3103 = $$1101;
      $$3116 = $$1114;
      $48 = $38;
     }
    } else {
     $$3103 = $$1101;
     $$3116 = $$1114;
     $48 = $26;
    } else {
     $$3103 = $$1101;
     $$3116 = $$1114;
     $48 = $26;
    }
    $47 = $48 & 255;
    if (($47 + -1 | 0) >>> 0 >= 127) break;
    $$1101 = $$3103 + 1 | 0;
    $$1114 = $$3116 + -1 | 0;
   }
   $53 = $47 + -194 | 0;
   if ($53 >>> 0 > 50) {
    $$11163 = $$3103;
    $$5112162 = $0;
    $$9122161 = $$3116;
    label = 53;
   } else {
    $$2 = HEAP32[7100 + ($53 << 2) >> 2] | 0;
    $$4104 = $$3103 + 1 | 0;
    $$4117 = $$3116;
    label = 25;
    continue L19;
   }
  } else if ((label | 0) == 15) {
   label = 0;
   L22 : do if (!$$5118$ph) $$6106$lcssa = $$6106$ph; else {
    $$1108138 = $$1108$ph;
    $$5118137 = $$5118$ph;
    $$6106139 = $$6106$ph;
    while (1) {
     $80 = HEAP8[$$6106139 >> 0] | 0;
     do if ((($80 & 255) + -1 | 0) >>> 0 < 127) if ($$5118137 >>> 0 > 4 & ($$6106139 & 3 | 0) == 0) {
      $$2109 = $$1108138;
      $$6119 = $$5118137;
      $$7 = $$6106139;
      while (1) {
       $88 = HEAP32[$$7 >> 2] | 0;
       if (($88 + -16843009 | $88) & -2139062144 | 0) {
        label = 38;
        break;
       }
       HEAP32[$$2109 >> 2] = $88 & 255;
       HEAP32[$$2109 + 4 >> 2] = HEAPU8[$$7 + 1 >> 0];
       HEAP32[$$2109 + 8 >> 2] = HEAPU8[$$7 + 2 >> 0];
       $104 = $$7 + 4 | 0;
       $107 = $$2109 + 16 | 0;
       HEAP32[$$2109 + 12 >> 2] = HEAPU8[$$7 + 3 >> 0];
       $108 = $$6119 + -4 | 0;
       if ($108 >>> 0 > 4) {
        $$2109 = $107;
        $$6119 = $108;
        $$7 = $104;
       } else {
        label = 37;
        break;
       }
      }
      if ((label | 0) == 37) {
       label = 0;
       $$3110 = $107;
       $$7120 = $108;
       $$8 = $104;
       $111 = HEAP8[$104 >> 0] | 0;
       break;
      } else if ((label | 0) == 38) {
       label = 0;
       $$3110 = $$2109;
       $$7120 = $$6119;
       $$8 = $$7;
       $111 = $88 & 255;
       break;
      }
     } else {
      $$3110 = $$1108138;
      $$7120 = $$5118137;
      $$8 = $$6106139;
      $111 = $80;
     } else {
      $$3110 = $$1108138;
      $$7120 = $$5118137;
      $$8 = $$6106139;
      $111 = $80;
     } while (0);
     $110 = $111 & 255;
     if (($110 + -1 | 0) >>> 0 >= 127) break;
     $114 = $$8 + 1 | 0;
     HEAP32[$$3110 >> 2] = $110;
     $$5118137 = $$7120 + -1 | 0;
     if (!$$5118137) {
      $$6106$lcssa = $114;
      break L22;
     } else {
      $$1108138 = $$3110 + 4 | 0;
      $$6106139 = $114;
     }
    }
    $118 = $110 + -194 | 0;
    if ($118 >>> 0 > 50) {
     $$11163 = $$8;
     $$5112162 = $$3110;
     $$9122161 = $$7120;
     label = 53;
     break L20;
    }
    $$4 = HEAP32[7100 + ($118 << 2) >> 2] | 0;
    $$4111 = $$3110;
    $$8121 = $$7120;
    $$9 = $$8 + 1 | 0;
    label = 43;
    continue L19;
   } while (0);
   HEAP32[$1 >> 2] = $$6106$lcssa;
   $$099 = $2;
   label = 59;
   continue L19;
  } else if ((label | 0) == 25) {
   label = 0;
   $60 = (HEAPU8[$$4104 >> 0] | 0) >>> 3;
   if (($60 + -16 | $60 + ($$2 >> 26)) >>> 0 > 7) {
    $$5112 = $0;
    $$6 = $$2;
    $$9$sink = $$4104;
    $$9122 = $$4117;
    label = 52;
   } else {
    $66 = $$4104 + 1 | 0;
    if (!($$2 & 33554432)) $$5105 = $66; else {
     if ((HEAP8[$66 >> 0] & -64) << 24 >> 24 != -128) {
      $$5112 = $0;
      $$6 = $$2;
      $$9$sink = $$4104;
      $$9122 = $$4117;
      label = 52;
      break;
     }
     $72 = $$4104 + 2 | 0;
     if (!($$2 & 524288)) $$5105 = $72; else {
      if ((HEAP8[$72 >> 0] & -64) << 24 >> 24 != -128) {
       $$5112 = $0;
       $$6 = $$2;
       $$9$sink = $$4104;
       $$9122 = $$4117;
       label = 52;
       break;
      }
      $$5105 = $$4104 + 3 | 0;
     }
    }
    $$1101$ph = $$5105;
    $$1114$ph = $$4117 + -1 | 0;
    label = 14;
    continue L19;
   }
  } else if ((label | 0) == 43) {
   label = 0;
   $124 = HEAPU8[$$9 >> 0] | 0;
   $125 = $124 >>> 3;
   if (($125 + -16 | $125 + ($$4 >> 26)) >>> 0 > 7) {
    $$5112 = $$4111;
    $$6 = $$4;
    $$9$sink = $$9;
    $$9122 = $$8121;
    label = 52;
   } else {
    $132 = $$9 + 1 | 0;
    $134 = $124 + -128 | $$4 << 6;
    do if (($134 | 0) < 0) {
     $138 = (HEAPU8[$132 >> 0] | 0) + -128 | 0;
     if ($138 >>> 0 > 63) {
      $$11124 = $$9 + -1 | 0;
      $$5112123 = $$4111;
      break L20;
     }
     $142 = $$9 + 2 | 0;
     $143 = $138 | $134 << 6;
     if (($143 | 0) < 0) {
      $147 = (HEAPU8[$142 >> 0] | 0) + -128 | 0;
      if ($147 >>> 0 > 63) {
       $$11124 = $$9 + -1 | 0;
       $$5112123 = $$4111;
       break L20;
      } else {
       $$10 = $$9 + 3 | 0;
       $$5 = $147 | $143 << 6;
       break;
      }
     } else {
      $$10 = $142;
      $$5 = $143;
     }
    } else {
     $$10 = $132;
     $$5 = $134;
    } while (0);
    HEAP32[$$4111 >> 2] = $$5;
    $$1108$ph = $$4111 + 4 | 0;
    $$5118$ph = $$8121 + -1 | 0;
    $$6106$ph = $$10;
    label = 15;
    continue L19;
   }
  } else if ((label | 0) == 59) {
   label = 0;
   return $$099 | 0;
  } while (0);
  if ((label | 0) == 52) {
   label = 0;
   $155 = $$9$sink + -1 | 0;
   if (!$$6) {
    $$11163 = $155;
    $$5112162 = $$5112;
    $$9122161 = $$9122;
    label = 53;
   } else {
    $$11124 = $155;
    $$5112123 = $$5112;
   }
  }
  if ((label | 0) == 53) {
   label = 0;
   if (!(HEAP8[$$11163 >> 0] | 0)) {
    if ($$5112162 | 0) {
     HEAP32[$$5112162 >> 2] = 0;
     HEAP32[$1 >> 2] = 0;
    }
    $$099 = $2 - $$9122161 | 0;
    label = 59;
    continue;
   } else {
    $$11124 = $$11163;
    $$5112123 = $$5112162;
   }
  }
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  if (!$$5112123) {
   $$099 = -1;
   label = 59;
   continue;
  }
  HEAP32[$1 >> 2] = $$11124;
  $$099 = -1;
  label = 59;
 }
 return 0;
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if (!$d_sroa_0_0_extract_trunc) {
  if ($17) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $51 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
 } else {
  if (!$17) {
   $119 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc | 0) {
   $88 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem | 0) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
   $r_sroa_1_1200 = tempRet0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem | 0) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}

function __ZN8optframe15ParetoDominanceI6RepHFMiE14checkDominatesERKNS_15MultiEvaluationES5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$$075 = 0, $$$077 = 0, $$024113 = 0, $$075$sink = 0, $$075112 = 0, $$077$sink = 0, $$077111 = 0, $$in = 0, $10 = 0, $111 = 0, $125 = 0, $126 = 0, $128 = 0, $135 = 0, $137 = 0, $145 = 0, $148 = 0, $149 = 0, $15 = 0, $163 = 0, $177 = 0, $178 = 0, $180 = 0, $187 = 0, $189 = 0, $20 = 0, $203 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $88 = 0, $9 = 0, $92 = 0, $93 = 0, $94 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $4 = sp + 72 | 0;
 $5 = sp;
 $6 = $2 + 20 | 0;
 $7 = $2 + 24 | 0;
 $9 = HEAP32[$6 >> 2] | 0;
 $10 = (HEAP32[$7 >> 2] | 0) - $9 | 0;
 $15 = (HEAP32[$3 + 24 >> 2] | 0) - (HEAP32[$3 + 20 >> 2] | 0) | 0;
 if (($15 | 0) == 0 | (($10 | 0) == 0 | ($10 | 0) != ($15 | 0))) {
  $83 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22653, 53) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $83 + (HEAP32[(HEAP32[$83 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $88 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $92 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$88 >> 2] | 0) + 28 >> 2] & 63]($88, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($83, $92) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($83) | 0;
  $$075$sink = -1;
  $$077$sink = -1;
  HEAP32[$0 >> 2] = $$077$sink;
  $203 = $0 + 4 | 0;
  HEAP32[$203 >> 2] = $$075$sink;
  STACKTOP = sp;
  return;
 }
 if (($10 | 0) <= 0) {
  $$075$sink = 0;
  $$077$sink = 0;
  HEAP32[$0 >> 2] = $$077$sink;
  $203 = $0 + 4 | 0;
  HEAP32[$203 >> 2] = $$075$sink;
  STACKTOP = sp;
  return;
 }
 $20 = $1 + 16 | 0;
 $21 = $2 + 20 | 0;
 $22 = $4 + 15 | 0;
 $23 = $4 + 14 | 0;
 $24 = $4 + 13 | 0;
 $25 = $4 + 12 | 0;
 $26 = $4 + 8 | 0;
 $27 = $25 + 4 | 0;
 $28 = $4 + 24 | 0;
 $29 = $4 + 32 | 0;
 $30 = $4 + 40 | 0;
 $31 = $4 + 52 | 0;
 $32 = $4 + 56 | 0;
 $33 = $4 + 57 | 0;
 $34 = $4 + 64 | 0;
 $35 = $3 + 20 | 0;
 $36 = $5 + 15 | 0;
 $37 = $5 + 14 | 0;
 $38 = $5 + 13 | 0;
 $39 = $5 + 12 | 0;
 $40 = $5 + 8 | 0;
 $41 = $39 + 4 | 0;
 $42 = $5 + 24 | 0;
 $43 = $5 + 32 | 0;
 $44 = $5 + 40 | 0;
 $45 = $5 + 52 | 0;
 $46 = $5 + 56 | 0;
 $47 = $5 + 57 | 0;
 $48 = $5 + 64 | 0;
 $49 = $5 + 40 | 0;
 $50 = $4 + 40 | 0;
 $51 = $4 + 15 | 0;
 $52 = $4 + 14 | 0;
 $53 = $4 + 13 | 0;
 $54 = $4 + 12 | 0;
 $55 = $4 + 8 | 0;
 $56 = $54 + 4 | 0;
 $57 = $4 + 24 | 0;
 $58 = $4 + 32 | 0;
 $59 = $4 + 40 | 0;
 $60 = $4 + 52 | 0;
 $61 = $4 + 56 | 0;
 $62 = $4 + 57 | 0;
 $63 = $4 + 64 | 0;
 $64 = $5 + 15 | 0;
 $65 = $5 + 14 | 0;
 $66 = $5 + 13 | 0;
 $67 = $5 + 12 | 0;
 $68 = $5 + 8 | 0;
 $69 = $67 + 4 | 0;
 $70 = $5 + 24 | 0;
 $71 = $5 + 32 | 0;
 $72 = $5 + 40 | 0;
 $73 = $5 + 52 | 0;
 $74 = $5 + 56 | 0;
 $75 = $5 + 57 | 0;
 $76 = $5 + 64 | 0;
 $77 = $5 + 40 | 0;
 $78 = $4 + 40 | 0;
 $79 = $4 + 44 | 0;
 $80 = $5 + 44 | 0;
 $81 = $4 + 44 | 0;
 $82 = $5 + 44 | 0;
 $$024113 = 0;
 $$075112 = 0;
 $$077111 = 0;
 $$in = $9;
 while (1) {
  $93 = $$in;
  $94 = HEAP32[$20 >> 2] | 0;
  $97 = HEAP32[(HEAP32[$94 >> 2] | 0) + 44 >> 2] | 0;
  HEAP8[$27 >> 0] = 0;
  HEAP32[$26 >> 2] = 2;
  HEAP8[$22 >> 0] = 0;
  HEAP8[$25 >> 0] = 1;
  HEAP8[$24 >> 0] = 1;
  HEAP8[$23 >> 0] = 0;
  HEAP32[$4 >> 2] = 4920;
  HEAPF64[$28 >> 3] = +HEAPF64[$93 + ($$024113 * 72 | 0) + 24 >> 3];
  HEAPF64[$29 >> 3] = +HEAPF64[$93 + ($$024113 * 72 | 0) + 32 >> 3];
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($30, $93 + ($$024113 * 72 | 0) + 40 | 0);
  HEAP32[$31 >> 2] = HEAP32[$93 + ($$024113 * 72 | 0) + 52 >> 2];
  HEAP8[$32 >> 0] = HEAP8[$93 + ($$024113 * 72 | 0) + 56 >> 0] | 0;
  HEAP8[$33 >> 0] = HEAP8[$93 + ($$024113 * 72 | 0) + 57 >> 0] | 0;
  HEAPF64[$34 >> 3] = +HEAPF64[$93 + ($$024113 * 72 | 0) + 64 >> 3];
  $111 = HEAP32[$35 >> 2] | 0;
  HEAP8[$41 >> 0] = 0;
  HEAP32[$40 >> 2] = 2;
  HEAP8[$36 >> 0] = 0;
  HEAP8[$39 >> 0] = 1;
  HEAP8[$38 >> 0] = 1;
  HEAP8[$37 >> 0] = 0;
  HEAP32[$5 >> 2] = 4920;
  HEAPF64[$42 >> 3] = +HEAPF64[$111 + ($$024113 * 72 | 0) + 24 >> 3];
  HEAPF64[$43 >> 3] = +HEAPF64[$111 + ($$024113 * 72 | 0) + 32 >> 3];
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($44, $111 + ($$024113 * 72 | 0) + 40 | 0);
  HEAP32[$45 >> 2] = HEAP32[$111 + ($$024113 * 72 | 0) + 52 >> 2];
  HEAP8[$46 >> 0] = HEAP8[$111 + ($$024113 * 72 | 0) + 56 >> 0] | 0;
  HEAP8[$47 >> 0] = HEAP8[$111 + ($$024113 * 72 | 0) + 57 >> 0] | 0;
  HEAPF64[$48 >> 3] = +HEAPF64[$111 + ($$024113 * 72 | 0) + 64 >> 3];
  $125 = FUNCTION_TABLE_iiiii[$97 & 31]($94, $4, $5, $$024113) | 0;
  HEAP32[$5 >> 2] = 4920;
  $126 = HEAP32[$49 >> 2] | 0;
  if ($126 | 0) {
   $128 = HEAP32[$82 >> 2] | 0;
   if (($128 | 0) != ($126 | 0)) HEAP32[$82 >> 2] = $128 + (~(($128 + -16 - $126 | 0) >>> 4) << 4);
   __ZdlPv($126);
  }
  HEAP32[$4 >> 2] = 4920;
  $135 = HEAP32[$50 >> 2] | 0;
  if ($135 | 0) {
   $137 = HEAP32[$81 >> 2] | 0;
   if (($137 | 0) != ($135 | 0)) HEAP32[$81 >> 2] = $137 + (~(($137 + -16 - $135 | 0) >>> 4) << 4);
   __ZdlPv($135);
  }
  $$$077 = ($125 & 1) + $$077111 | 0;
  $145 = HEAP32[$20 >> 2] | 0;
  $148 = HEAP32[(HEAP32[$145 >> 2] | 0) + 48 >> 2] | 0;
  $149 = HEAP32[$21 >> 2] | 0;
  HEAP8[$56 >> 0] = 0;
  HEAP32[$55 >> 2] = 2;
  HEAP8[$51 >> 0] = 0;
  HEAP8[$54 >> 0] = 1;
  HEAP8[$53 >> 0] = 1;
  HEAP8[$52 >> 0] = 0;
  HEAP32[$4 >> 2] = 4920;
  HEAPF64[$57 >> 3] = +HEAPF64[$149 + ($$024113 * 72 | 0) + 24 >> 3];
  HEAPF64[$58 >> 3] = +HEAPF64[$149 + ($$024113 * 72 | 0) + 32 >> 3];
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($59, $149 + ($$024113 * 72 | 0) + 40 | 0);
  HEAP32[$60 >> 2] = HEAP32[$149 + ($$024113 * 72 | 0) + 52 >> 2];
  HEAP8[$61 >> 0] = HEAP8[$149 + ($$024113 * 72 | 0) + 56 >> 0] | 0;
  HEAP8[$62 >> 0] = HEAP8[$149 + ($$024113 * 72 | 0) + 57 >> 0] | 0;
  HEAPF64[$63 >> 3] = +HEAPF64[$149 + ($$024113 * 72 | 0) + 64 >> 3];
  $163 = HEAP32[$35 >> 2] | 0;
  HEAP8[$69 >> 0] = 0;
  HEAP32[$68 >> 2] = 2;
  HEAP8[$64 >> 0] = 0;
  HEAP8[$67 >> 0] = 1;
  HEAP8[$66 >> 0] = 1;
  HEAP8[$65 >> 0] = 0;
  HEAP32[$5 >> 2] = 4920;
  HEAPF64[$70 >> 3] = +HEAPF64[$163 + ($$024113 * 72 | 0) + 24 >> 3];
  HEAPF64[$71 >> 3] = +HEAPF64[$163 + ($$024113 * 72 | 0) + 32 >> 3];
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($72, $163 + ($$024113 * 72 | 0) + 40 | 0);
  HEAP32[$73 >> 2] = HEAP32[$163 + ($$024113 * 72 | 0) + 52 >> 2];
  HEAP8[$74 >> 0] = HEAP8[$163 + ($$024113 * 72 | 0) + 56 >> 0] | 0;
  HEAP8[$75 >> 0] = HEAP8[$163 + ($$024113 * 72 | 0) + 57 >> 0] | 0;
  HEAPF64[$76 >> 3] = +HEAPF64[$163 + ($$024113 * 72 | 0) + 64 >> 3];
  $177 = FUNCTION_TABLE_iiiii[$148 & 31]($145, $4, $5, $$024113) | 0;
  HEAP32[$5 >> 2] = 4920;
  $178 = HEAP32[$77 >> 2] | 0;
  if ($178 | 0) {
   $180 = HEAP32[$80 >> 2] | 0;
   if (($180 | 0) != ($178 | 0)) HEAP32[$80 >> 2] = $180 + (~(($180 + -16 - $178 | 0) >>> 4) << 4);
   __ZdlPv($178);
  }
  HEAP32[$4 >> 2] = 4920;
  $187 = HEAP32[$78 >> 2] | 0;
  if ($187 | 0) {
   $189 = HEAP32[$79 >> 2] | 0;
   if (($189 | 0) != ($187 | 0)) HEAP32[$79 >> 2] = $189 + (~(($189 + -16 - $187 | 0) >>> 4) << 4);
   __ZdlPv($187);
  }
  $$$075 = ($177 & 1) + $$075112 | 0;
  $$024113 = $$024113 + 1 | 0;
  $$in = HEAP32[$6 >> 2] | 0;
  if (($$024113 | 0) >= (((HEAP32[$7 >> 2] | 0) - $$in | 0) / 72 | 0 | 0)) {
   $$075$sink = $$$075;
   $$077$sink = $$$077;
   break;
  } else {
   $$075112 = $$$075;
   $$077111 = $$$077;
  }
 }
 HEAP32[$0 >> 2] = $$077$sink;
 $203 = $0 + 4 | 0;
 HEAP32[$203 >> 2] = $$075$sink;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6insertENS_11__wrap_iterIPKS3_EERS7_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$017$i = 0, $$025 = 0, $$056$i$i$i = 0, $$06$i$i = 0, $$07$i$i = 0, $$07$i$i$i = 0, $$idx = 0, $$in$i = 0, $$pre$i$i$i$i$i39 = 0, $$pre$phi9$i$i$i$i$i47Z2D = 0, $$sroa$11$1 = 0, $$sroa$11$2 = 0, $$sroa$11$3 = 0, $$sroa$26$2 = 0, $$sroa$26$3 = 0, $$sroa$46$1 = 0, $$sroa$speculated$$i = 0, $$sroa$speculated$i = 0, $10 = 0, $101 = 0, $102 = 0, $104 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $113 = 0, $114 = 0, $116 = 0, $119 = 0, $12 = 0, $121 = 0, $125 = 0, $126 = 0, $128 = 0, $131 = 0, $132 = 0, $135 = 0, $137 = 0, $14 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $150 = 0, $151 = 0, $154 = 0, $155 = 0, $21 = 0, $23 = 0, $28 = 0, $3 = 0, $30 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $44 = 0, $45 = 0, $48 = 0, $50 = 0, $6 = 0, $67 = 0, $70 = 0, $72 = 0, $74 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $84 = 0, $9 = 0, $94 = 0, $97 = 0, $$056$i$i$i$looptemp = 0, $$07$i$i$i$looptemp = 0, $$06$i$i$looptemp = 0, $150$looptemp = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $4 = $3;
 $6 = (HEAP32[$1 >> 2] | 0) - $4 | 0;
 $8 = $3 + ((($6 | 0) / 12 | 0) * 12 | 0) | 0;
 $9 = $0 + 4 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $0 + 8 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $14 = $10;
 $15 = $12;
 if ($10 >>> 0 < $12 >>> 0) {
  if (($8 | 0) == ($10 | 0)) {
   __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($8, $2);
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 12;
   $$0 = $8;
   return $$0 | 0;
  }
  $21 = $14 - ($8 + 12) | 0;
  $23 = $8 + ((($21 | 0) / 12 | 0) * 12 | 0) | 0;
  if ($23 >>> 0 < $10 >>> 0) {
   $$017$i = $23;
   $44 = $10;
   do {
    HEAP32[$44 >> 2] = 0;
    $45 = $44 + 4 | 0;
    HEAP32[$45 >> 2] = 0;
    HEAP32[$44 + 8 >> 2] = 0;
    HEAP32[$44 >> 2] = HEAP32[$$017$i >> 2];
    $48 = $$017$i + 4 | 0;
    HEAP32[$45 >> 2] = HEAP32[$48 >> 2];
    $50 = $$017$i + 8 | 0;
    HEAP32[$44 + 8 >> 2] = HEAP32[$50 >> 2];
    HEAP32[$50 >> 2] = 0;
    HEAP32[$48 >> 2] = 0;
    HEAP32[$$017$i >> 2] = 0;
    $$017$i = $$017$i + 12 | 0;
    $44 = (HEAP32[$9 >> 2] | 0) + 12 | 0;
    HEAP32[$9 >> 2] = $44;
   } while ($$017$i >>> 0 < $10 >>> 0);
  }
  if ($21 | 0) {
   $$056$i$i$i = $23;
   $$07$i$i$i = $10;
   do {
    $$056$i$i$i$looptemp = $$056$i$i$i;
    $$056$i$i$i = $$056$i$i$i + -12 | 0;
    $$07$i$i$i$looptemp = $$07$i$i$i;
    $$07$i$i$i = $$07$i$i$i + -12 | 0;
    $28 = HEAP32[$$07$i$i$i >> 2] | 0;
    $$pre$i$i$i$i$i39 = $$07$i$i$i$looptemp + -8 | 0;
    if (!$28) $$pre$phi9$i$i$i$i$i47Z2D = $$07$i$i$i$looptemp + -4 | 0; else {
     $30 = HEAP32[$$pre$i$i$i$i$i39 >> 2] | 0;
     if (($30 | 0) != ($28 | 0)) HEAP32[$$pre$i$i$i$i$i39 >> 2] = $30 + (~(($30 + -8 - $28 | 0) >>> 3) << 3);
     __ZdlPv($28);
     $37 = $$07$i$i$i$looptemp + -4 | 0;
     HEAP32[$37 >> 2] = 0;
     HEAP32[$$pre$i$i$i$i$i39 >> 2] = 0;
     HEAP32[$$07$i$i$i >> 2] = 0;
     $$pre$phi9$i$i$i$i$i47Z2D = $37;
    }
    HEAP32[$$07$i$i$i >> 2] = HEAP32[$$056$i$i$i >> 2];
    $39 = $$056$i$i$i$looptemp + -8 | 0;
    HEAP32[$$pre$i$i$i$i$i39 >> 2] = HEAP32[$39 >> 2];
    $41 = $$056$i$i$i$looptemp + -4 | 0;
    HEAP32[$$pre$phi9$i$i$i$i$i47Z2D >> 2] = HEAP32[$41 >> 2];
    HEAP32[$41 >> 2] = 0;
    HEAP32[$39 >> 2] = 0;
    HEAP32[$$056$i$i$i >> 2] = 0;
   } while (($$056$i$i$i | 0) != ($8 | 0));
  }
  if ($8 >>> 0 > $2 >>> 0) $$025 = $2; else $$025 = (HEAP32[$9 >> 2] | 0) >>> 0 > $2 >>> 0 ? $2 + 12 | 0 : $2;
  if (($8 | 0) == ($$025 | 0)) {
   $$0 = $8;
   return $$0 | 0;
  }
  __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($8, HEAP32[$$025 >> 2] | 0, HEAP32[$$025 + 4 >> 2] | 0);
  $$0 = $8;
  return $$0 | 0;
 }
 $67 = (($14 - $4 | 0) / 12 | 0) + 1 | 0;
 if ($67 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $70 = ($15 - $4 | 0) / 12 | 0;
 $72 = $70 << 1;
 $$sroa$speculated$$i = $70 >>> 0 < 178956970 ? ($72 >>> 0 < $67 >>> 0 ? $67 : $72) : 357913941;
 $74 = ($6 | 0) / 12 | 0;
 do if (!$$sroa$speculated$$i) {
  $106 = 0;
  $81 = 0;
 } else if ($$sroa$speculated$$i >>> 0 > 357913941) {
  $77 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($77, 15810);
  HEAP32[$77 >> 2] = 14216;
  ___cxa_throw($77 | 0, 3104, 246);
 } else {
  $79 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  $106 = $79;
  $81 = $79;
  break;
 } while (0);
 $80 = $81 + ($74 * 12 | 0) | 0;
 $82 = $80;
 $84 = $81 + ($$sroa$speculated$$i * 12 | 0) | 0;
 do if (($74 | 0) == ($$sroa$speculated$$i | 0)) {
  if (($6 | 0) > 0) {
   $$sroa$11$1 = $80 + ((($$sroa$speculated$$i + 1 | 0) / -2 | 0) * 12 | 0) | 0;
   $$sroa$46$1 = $84;
   break;
  }
  $$idx = $$sroa$speculated$$i * 12 | 0;
  $$sroa$speculated$i = ($$idx | 0) == 0 ? 1 : (($$idx | 0) / 12 | 0) << 1;
  $94 = $$sroa$speculated$i >>> 2;
  do if (!$$sroa$speculated$i) $101 = 0; else if ($$sroa$speculated$i >>> 0 > 357913941) {
   $97 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($97, 15810);
   HEAP32[$97 >> 2] = 14216;
   ___cxa_throw($97 | 0, 3104, 246);
  } else {
   $101 = __Znwj($$sroa$speculated$i * 12 | 0) | 0;
   break;
  } while (0);
  $102 = $101 + ($94 * 12 | 0) | 0;
  $104 = $101 + ($$sroa$speculated$i * 12 | 0) | 0;
  if (!$81) {
   $$sroa$11$1 = $102;
   $$sroa$46$1 = $104;
  } else {
   __ZdlPv($106);
   $$sroa$11$1 = $102;
   $$sroa$46$1 = $104;
  }
 } else {
  $$sroa$11$1 = $82;
  $$sroa$46$1 = $84;
 } while (0);
 $107 = $$sroa$11$1;
 __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($107, $2);
 $108 = $107 + 12 | 0;
 $109 = $108;
 $110 = $$sroa$11$1;
 $111 = HEAP32[$0 >> 2] | 0;
 if (($111 | 0) == ($8 | 0)) {
  $$in$i = $110;
  $$sroa$11$3 = $$sroa$11$1;
 } else {
  $$06$i$i = $8;
  $$sroa$11$2 = $$sroa$11$1;
  $114 = $110;
  while (1) {
   $113 = $114 + -12 | 0;
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$113 >> 2] = 0;
   $116 = $114 + -8 | 0;
   HEAP32[$116 >> 2] = 0;
   HEAP32[$114 + -4 >> 2] = 0;
   HEAP32[$113 >> 2] = HEAP32[$$06$i$i >> 2];
   $119 = $$06$i$i$looptemp + -8 | 0;
   HEAP32[$116 >> 2] = HEAP32[$119 >> 2];
   $121 = $$06$i$i$looptemp + -4 | 0;
   HEAP32[$114 + -4 >> 2] = HEAP32[$121 >> 2];
   HEAP32[$121 >> 2] = 0;
   HEAP32[$119 >> 2] = 0;
   HEAP32[$$06$i$i >> 2] = 0;
   $125 = $$sroa$11$2 + -12 | 0;
   $126 = $125;
   if (($$06$i$i | 0) == ($111 | 0)) {
    $$in$i = $125;
    $$sroa$11$3 = $126;
    break;
   } else {
    $$sroa$11$2 = $126;
    $114 = $125;
   }
  }
 }
 $128 = HEAP32[$9 >> 2] | 0;
 if (($128 | 0) == ($8 | 0)) {
  $$sroa$26$3 = $109;
  $146 = $$in$i;
  $147 = $8;
 } else {
  $$07$i$i = $8;
  $$sroa$26$2 = $109;
  $131 = $108;
  do {
   HEAP32[$131 >> 2] = 0;
   $132 = $131 + 4 | 0;
   HEAP32[$132 >> 2] = 0;
   HEAP32[$131 + 8 >> 2] = 0;
   HEAP32[$131 >> 2] = HEAP32[$$07$i$i >> 2];
   $135 = $$07$i$i + 4 | 0;
   HEAP32[$132 >> 2] = HEAP32[$135 >> 2];
   $137 = $$07$i$i + 8 | 0;
   HEAP32[$131 + 8 >> 2] = HEAP32[$137 >> 2];
   HEAP32[$137 >> 2] = 0;
   HEAP32[$135 >> 2] = 0;
   HEAP32[$$07$i$i >> 2] = 0;
   $$07$i$i = $$07$i$i + 12 | 0;
   $131 = $$sroa$26$2 + 12 | 0;
   $$sroa$26$2 = $131;
  } while (($$07$i$i | 0) != ($128 | 0));
  $$sroa$26$3 = $$sroa$26$2;
  $146 = $$sroa$11$3;
  $147 = HEAP32[$9 >> 2] | 0;
 }
 $145 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $146;
 HEAP32[$9 >> 2] = $$sroa$26$3;
 HEAP32[$11 >> 2] = $$sroa$46$1;
 if (($147 | 0) != ($145 | 0)) {
  $150 = $147;
  do {
   $150$looptemp = $150;
   $150 = $150 + -12 | 0;
   $151 = HEAP32[$150 >> 2] | 0;
   if ($151 | 0) {
    $154 = $150$looptemp + -8 | 0;
    $155 = HEAP32[$154 >> 2] | 0;
    if (($155 | 0) != ($151 | 0)) HEAP32[$154 >> 2] = $155 + (~(($155 + -8 - $151 | 0) >>> 3) << 3);
    __ZdlPv($151);
   }
  } while (($150 | 0) != ($145 | 0));
 }
 if (!$145) {
  $$0 = $110;
  return $$0 | 0;
 }
 __ZdlPv($145);
 $$0 = $110;
 return $$0 | 0;
}

function _loadTS($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$016$i$i = 0, $$017$i$i = 0, $$065 = 0, $104 = 0, $105 = 0, $107 = 0, $11 = 0, $114 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $126 = 0, $131 = 0, $135 = 0, $137 = 0, $142 = 0, $146 = 0, $15 = 0, $150 = 0, $17 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $52 = 0.0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $68 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $82 = 0, $84 = 0, $87 = 0, $88 = 0, $89 = 0, $93 = 0, $96 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 20 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 $6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 23266, 18) | 0;
 __ZNKSt3__28ios_base6getlocEv($3, $6 + (HEAP32[(HEAP32[$6 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 34536) | 0;
 $15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 63]($11, 10) | 0;
 __ZNSt3__26localeD2Ev($3);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($6, $15) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($6) | 0;
 $17 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, $0, _strlen($0) | 0) | 0;
 __ZNKSt3__28ios_base6getlocEv($3, $17 + (HEAP32[(HEAP32[$17 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 34536) | 0;
 $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 63]($22, 10) | 0;
 __ZNSt3__26localeD2Ev($3);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($17, $26) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($17) | 0;
 $27 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 23285, 10) | 0;
 $29 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($27, $0, _strlen($0) | 0) | 0;
 __ZNKSt3__28ios_base6getlocEv($3, $29 + (HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $34 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 34536) | 0;
 $38 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$34 >> 2] | 0) + 28 >> 2] & 63]($34, 10) | 0;
 __ZNSt3__26localeD2Ev($3);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($29, $38) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($29) | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $39 = _strlen($0) | 0;
 if ($39 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($4);
 if ($39 >>> 0 < 11) {
  HEAP8[$4 + 11 >> 0] = $39;
  if (!$39) $$017$i$i = $4; else {
   $$016$i$i = $4;
   label = 6;
  }
 } else {
  $43 = $39 + 16 & -16;
  $44 = __Znwj($43) | 0;
  HEAP32[$4 >> 2] = $44;
  HEAP32[$4 + 8 >> 2] = $43 | -2147483648;
  HEAP32[$4 + 4 >> 2] = $39;
  $$016$i$i = $44;
  label = 6;
 }
 if ((label | 0) == 6) {
  _memcpy($$016$i$i | 0, $0 | 0, $39 | 0) | 0;
  $$017$i$i = $$016$i$i;
 }
 HEAP8[$$017$i$i + $39 >> 0] = 0;
 $52 = +__ZNSt3__24stodERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPj($4, 0);
 HEAPF64[$5 >> 3] = $52;
 $53 = HEAP32[7582] | 0;
 $54 = HEAP32[7581] | 0;
 $56 = ($53 - $54 | 0) / 12 | 0;
 $58 = $53;
 $59 = $54;
 do if ($56 >>> 0 > $2 >>> 0) {
  $60 = $59 + ($2 * 12 | 0) + 4 | 0;
  $61 = HEAP32[$60 >> 2] | 0;
  if (($61 | 0) == (HEAP32[$59 + ($2 * 12 | 0) + 8 >> 2] | 0)) {
   __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($59 + ($2 * 12 | 0) | 0, $5);
   break;
  } else {
   HEAPF64[$61 >> 3] = $52;
   HEAP32[$60 >> 2] = $61 + 8;
   break;
  }
 } else {
  $68 = $2 + 1 - $56 | 0;
  do if (($68 | 0) > 0) {
   $70 = $3 + 4 | 0;
   $71 = $3 + 8 | 0;
   $$065 = 0;
   $82 = $58;
   while (1) {
    HEAP32[$3 >> 2] = 0;
    HEAP32[$70 >> 2] = 0;
    HEAP32[$71 >> 2] = 0;
    if (($82 | 0) == (HEAP32[7583] | 0)) {
     __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(30324, $3);
     $105 = HEAP32[$3 >> 2] | 0;
    } else {
     HEAP32[$82 >> 2] = 0;
     $84 = $82 + 4 | 0;
     HEAP32[$84 >> 2] = 0;
     HEAP32[$82 + 8 >> 2] = 0;
     $87 = HEAP32[$3 >> 2] | 0;
     $88 = (HEAP32[$70 >> 2] | 0) - $87 | 0;
     $89 = $88 >> 3;
     if (!$89) {
      $104 = $82;
      $150 = $87;
     } else {
      if ($89 >>> 0 > 536870911) {
       label = 20;
       break;
      }
      $93 = __Znwj($88) | 0;
      HEAP32[$84 >> 2] = $93;
      HEAP32[$82 >> 2] = $93;
      HEAP32[$82 + 8 >> 2] = $93 + ($89 << 3);
      $96 = HEAP32[$3 >> 2] | 0;
      $99 = (HEAP32[$70 >> 2] | 0) - $96 | 0;
      if (($99 | 0) > 0) {
       _memcpy($93 | 0, $96 | 0, $99 | 0) | 0;
       HEAP32[$84 >> 2] = $93 + ($99 >>> 3 << 3);
       $104 = HEAP32[7582] | 0;
       $150 = $96;
      } else {
       $104 = $82;
       $150 = $96;
      }
     }
     HEAP32[7582] = $104 + 12;
     $105 = $150;
    }
    if ($105 | 0) {
     $107 = HEAP32[$70 >> 2] | 0;
     if (($107 | 0) != ($105 | 0)) HEAP32[$70 >> 2] = $107 + (~(($107 + -8 - $105 | 0) >>> 3) << 3);
     __ZdlPv($105);
    }
    $114 = $$065 + 1 | 0;
    if (($114 | 0) >= ($68 | 0)) {
     label = 13;
     break;
    }
    $$065 = $114;
    $82 = HEAP32[7582] | 0;
   }
   if ((label | 0) == 13) {
    $73 = HEAP32[7581] | 0;
    break;
   } else if ((label | 0) == 20) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($82);
  } else $73 = $59; while (0);
  $72 = $73 + ($2 * 12 | 0) + 4 | 0;
  $74 = HEAP32[$72 >> 2] | 0;
  if (($74 | 0) == (HEAP32[$73 + ($2 * 12 | 0) + 8 >> 2] | 0)) {
   __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($73 + ($2 * 12 | 0) | 0, $5);
   break;
  } else {
   HEAPF64[$74 >> 3] = +HEAPF64[$5 >> 3];
   HEAP32[$72 >> 2] = $74 + 8;
   break;
  }
 } while (0);
 $116 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 23296, 17) | 0;
 $117 = $4 + 11 | 0;
 $118 = HEAP8[$117 >> 0] | 0;
 $119 = $118 << 24 >> 24 < 0;
 $126 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($116, $119 ? HEAP32[$4 >> 2] | 0 : $4, $119 ? HEAP32[$4 + 4 >> 2] | 0 : $118 & 255) | 0;
 __ZNKSt3__28ios_base6getlocEv($3, $126 + (HEAP32[(HEAP32[$126 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $131 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 34536) | 0;
 $135 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$131 >> 2] | 0) + 28 >> 2] & 63]($131, 10) | 0;
 __ZNSt3__26localeD2Ev($3);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($126, $135) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($126) | 0;
 $137 = __ZN8optframelsINSt3__26vectorIdNS1_9allocatorIdEEEEEERNS1_13basic_ostreamIcNS1_11char_traitsIcEEEESA_RKNS2_IT_NS3_ISB_EEEE(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 23314, 10) | 0, 30324) | 0;
 __ZNKSt3__28ios_base6getlocEv($3, $137 + (HEAP32[(HEAP32[$137 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $142 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 34536) | 0;
 $146 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$142 >> 2] | 0) + 28 >> 2] & 63]($142, 10) | 0;
 __ZNSt3__26localeD2Ev($3);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($137, $146) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($137) | 0;
 if ((HEAP8[$117 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$4 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i116 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i122 = 0, $$0101 = 0, $$0105 = 0, $$0111 = 0, $$0112 = 0, $$0112144 = 0, $$092 = 0, $$093 = 0, $$094$off0 = 0, $$095 = 0, $$096 = 0, $$097 = 0, $$098 = 0, $$1102 = 0, $$1106 = 0, $$199 = 0, $$2$off0 = 0, $$2100 = 0, $$2103 = 0, $$2107 = 0, $$3 = 0, $$3104 = 0, $$3108 = 0, $$5 = 0, $$5110 = 0, $$6 = 0, $$7 = 0, $$pre$i4$i$i124 = 0, $$sroa$0130$0 = 0, $107 = 0, $11 = 0, $112 = 0, $117 = 0, $118 = 0, $124 = 0, $125 = 0, $13 = 0, $130 = 0, $135 = 0, $136 = 0, $137 = 0, $153 = 0, $158 = 0, $172 = 0, $18 = 0, $23 = 0, $29 = 0, $32 = 0, $44 = 0, $47 = 0, $59 = 0, $60 = 0, $63 = 0, $66 = 0, $7 = 0, $80 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $7 = sp;
 $11 = ($3 - $2 | 0) / 12 | 0;
 if ($11 >>> 0 > 100) {
  $13 = _malloc($11) | 0;
  if (!$13) __ZSt17__throw_bad_allocv(); else {
   $$0111 = $13;
   $$sroa$0130$0 = $13;
  }
 } else {
  $$0111 = $7;
  $$sroa$0130$0 = 0;
 }
 $$0101 = 0;
 $$0105 = $11;
 $$097 = $2;
 $$098 = $$0111;
 while (1) {
  if (($$097 | 0) == ($3 | 0)) break;
  $18 = HEAP8[$$097 + 8 + 3 >> 0] | 0;
  if ($18 << 24 >> 24 < 0) $23 = HEAP32[$$097 + 4 >> 2] | 0; else $23 = $18 & 255;
  if (!$23) {
   HEAP8[$$098 >> 0] = 2;
   $$1102 = $$0101 + 1 | 0;
   $$1106 = $$0105 + -1 | 0;
  } else {
   HEAP8[$$098 >> 0] = 1;
   $$1102 = $$0101;
   $$1106 = $$0105;
  }
  $$0101 = $$1102;
  $$0105 = $$1106;
  $$097 = $$097 + 12 | 0;
  $$098 = $$098 + 1 | 0;
 }
 $$096 = 0;
 $$2103 = $$0101;
 $$2107 = $$0105;
 L17 : while (1) {
  $29 = HEAP32[$0 >> 2] | 0;
  do if (!$29) $60 = 1; else {
   $32 = HEAP32[$29 + 12 >> 2] | 0;
   if (($32 | 0) == (HEAP32[$29 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 127]($29) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$32 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $60 = 1;
    break;
   } else {
    $60 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $44 = HEAP32[$1 >> 2] | 0;
  if (!$44) {
   $$pre$i4$i$i124 = 0;
   $59 = 1;
  } else {
   $47 = HEAP32[$44 + 12 >> 2] | 0;
   if (($47 | 0) == (HEAP32[$44 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$44 >> 2] | 0) + 36 >> 2] & 127]($44) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$47 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i4$i$i124 = 0;
    $59 = 1;
   } else {
    $$pre$i4$i$i124 = $44;
    $59 = 0;
   }
  }
  $63 = HEAP32[$0 >> 2] | 0;
  if (!(($$2107 | 0) != 0 & ($60 ^ $59))) break;
  $93 = HEAP32[$63 + 12 >> 2] | 0;
  if (($93 | 0) == (HEAP32[$63 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] & 127]($63) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$93 >> 2] | 0) | 0;
  if ($6) $$095 = $$0$i$i; else $$095 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, $$0$i$i) | 0;
  $107 = $$096 + 1 | 0;
  $$093 = $2;
  $$094$off0 = 0;
  $$199 = $$0111;
  $$3104 = $$2103;
  $$3108 = $$2107;
  while (1) {
   if (($$093 | 0) == ($3 | 0)) break;
   do if ((HEAP8[$$199 >> 0] | 0) == 1) {
    $112 = $$093 + 8 + 3 | 0;
    if ((HEAP8[$112 >> 0] | 0) < 0) $117 = HEAP32[$$093 >> 2] | 0; else $117 = $$093;
    $118 = HEAP32[$117 + ($$096 << 2) >> 2] | 0;
    if ($6) $$092 = $118; else $$092 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, $118) | 0;
    $124 = $$3108 + -1 | 0;
    if (($$095 | 0) != ($$092 | 0)) {
     HEAP8[$$199 >> 0] = 0;
     $$2$off0 = $$094$off0;
     $$5 = $$3104;
     $$5110 = $124;
     break;
    }
    $125 = HEAP8[$112 >> 0] | 0;
    if ($125 << 24 >> 24 < 0) $130 = HEAP32[$$093 + 4 >> 2] | 0; else $130 = $125 & 255;
    if (($130 | 0) == ($107 | 0)) {
     HEAP8[$$199 >> 0] = 2;
     $$2$off0 = 1;
     $$5 = $$3104 + 1 | 0;
     $$5110 = $124;
    } else {
     $$2$off0 = 1;
     $$5 = $$3104;
     $$5110 = $$3108;
    }
   } else {
    $$2$off0 = $$094$off0;
    $$5 = $$3104;
    $$5110 = $$3108;
   } while (0);
   $$093 = $$093 + 12 | 0;
   $$094$off0 = $$2$off0;
   $$199 = $$199 + 1 | 0;
   $$3104 = $$5;
   $$3108 = $$5110;
  }
  if (!$$094$off0) {
   $$096 = $107;
   $$2103 = $$3104;
   $$2107 = $$3108;
   continue;
  }
  $135 = HEAP32[$0 >> 2] | 0;
  $136 = $135 + 12 | 0;
  $137 = HEAP32[$136 >> 2] | 0;
  if (($137 | 0) == (HEAP32[$135 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$135 >> 2] | 0) + 40 >> 2] & 127]($135) | 0; else {
   HEAP32[$136 >> 2] = $137 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$137 >> 2] | 0) | 0;
  }
  if (($$3104 + $$3108 | 0) >>> 0 > 1) {
   $$0 = $2;
   $$2100 = $$0111;
   $$6 = $$3104;
  } else {
   $$096 = $107;
   $$2103 = $$3104;
   $$2107 = $$3108;
   continue;
  }
  while (1) {
   if (($$0 | 0) == ($3 | 0)) {
    $$096 = $107;
    $$2103 = $$6;
    $$2107 = $$3108;
    continue L17;
   }
   if ((HEAP8[$$2100 >> 0] | 0) == 2) {
    $153 = HEAP8[$$0 + 8 + 3 >> 0] | 0;
    if ($153 << 24 >> 24 < 0) $158 = HEAP32[$$0 + 4 >> 2] | 0; else $158 = $153 & 255;
    if (($158 | 0) == ($107 | 0)) $$7 = $$6; else {
     HEAP8[$$2100 >> 0] = 0;
     $$7 = $$6 + -1 | 0;
    }
   } else $$7 = $$6;
   $$0 = $$0 + 12 | 0;
   $$2100 = $$2100 + 1 | 0;
   $$6 = $$7;
  }
 }
 do if (!$63) $172 = 1; else {
  $66 = HEAP32[$63 + 12 >> 2] | 0;
  if (($66 | 0) == (HEAP32[$63 + 16 >> 2] | 0)) $$0$i$i$i$i116 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] & 127]($63) | 0; else $$0$i$i$i$i116 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$66 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i116, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $172 = 1;
   break;
  } else {
   $172 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i4$i$i124) label = 41; else {
  $80 = HEAP32[$$pre$i4$i$i124 + 12 >> 2] | 0;
  if (($80 | 0) == (HEAP32[$$pre$i4$i$i124 + 16 >> 2] | 0)) $$0$i$i2$i$i122 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i124 >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i124) | 0; else $$0$i$i2$i$i122 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$80 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i122, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   label = 41;
   break;
  } else if ($172) {
   $$0112 = $2;
   $$3 = $$0111;
   break;
  } else {
   label = 77;
   break;
  }
 } while (0);
 if ((label | 0) == 41) if ($172) label = 77; else {
  $$0112 = $2;
  $$3 = $$0111;
 }
 if ((label | 0) == 77) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
  $$0112 = $2;
  $$3 = $$0111;
 }
 while (1) {
  if (($$0112 | 0) == ($3 | 0)) {
   label = 81;
   break;
  }
  if ((HEAP8[$$3 >> 0] | 0) == 2) {
   $$0112144 = $$0112;
   break;
  }
  $$0112 = $$0112 + 12 | 0;
  $$3 = $$3 + 1 | 0;
 }
 if ((label | 0) == 81) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$0112144 = $3;
 }
 _free($$sroa$0130$0);
 STACKTOP = sp;
 return $$0112144 | 0;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i112 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i118 = 0, $$0101 = 0, $$0107 = 0, $$0108 = 0, $$0108140 = 0, $$088 = 0, $$089 = 0, $$090$off0 = 0, $$091 = 0, $$092 = 0, $$093 = 0, $$094 = 0, $$097 = 0, $$1102 = 0, $$195 = 0, $$198 = 0, $$2$off0 = 0, $$2103 = 0, $$296 = 0, $$299 = 0, $$3 = 0, $$3100 = 0, $$3104 = 0, $$5 = 0, $$5106 = 0, $$6 = 0, $$7 = 0, $$pre$i4$i$i120 = 0, $$sroa$0126$0 = 0, $102 = 0, $107 = 0, $11 = 0, $111 = 0, $116 = 0, $117 = 0, $123 = 0, $124 = 0, $129 = 0, $13 = 0, $134 = 0, $135 = 0, $136 = 0, $151 = 0, $156 = 0, $17 = 0, $170 = 0, $22 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $58 = 0, $59 = 0, $62 = 0, $65 = 0, $7 = 0, $79 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $7 = sp;
 $11 = ($3 - $2 | 0) / 12 | 0;
 if ($11 >>> 0 > 100) {
  $13 = _malloc($11) | 0;
  if (!$13) __ZSt17__throw_bad_allocv(); else {
   $$0107 = $13;
   $$sroa$0126$0 = $13;
  }
 } else {
  $$0107 = $7;
  $$sroa$0126$0 = 0;
 }
 $$0101 = $11;
 $$093 = $2;
 $$094 = $$0107;
 $$097 = 0;
 while (1) {
  if (($$093 | 0) == ($3 | 0)) break;
  $17 = HEAP8[$$093 + 11 >> 0] | 0;
  if ($17 << 24 >> 24 < 0) $22 = HEAP32[$$093 + 4 >> 2] | 0; else $22 = $17 & 255;
  if (!$22) {
   HEAP8[$$094 >> 0] = 2;
   $$1102 = $$0101 + -1 | 0;
   $$198 = $$097 + 1 | 0;
  } else {
   HEAP8[$$094 >> 0] = 1;
   $$1102 = $$0101;
   $$198 = $$097;
  }
  $$0101 = $$1102;
  $$093 = $$093 + 12 | 0;
  $$094 = $$094 + 1 | 0;
  $$097 = $$198;
 }
 $$092 = 0;
 $$2103 = $$0101;
 $$299 = $$097;
 L17 : while (1) {
  $28 = HEAP32[$0 >> 2] | 0;
  do if (!$28) $59 = 1; else {
   $31 = HEAP32[$28 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$31 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $59 = 1;
    break;
   } else {
    $59 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $43 = HEAP32[$1 >> 2] | 0;
  if (!$43) {
   $$pre$i4$i$i120 = 0;
   $58 = 1;
  } else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$46 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i4$i$i120 = 0;
    $58 = 1;
   } else {
    $$pre$i4$i$i120 = $43;
    $58 = 0;
   }
  }
  $62 = HEAP32[$0 >> 2] | 0;
  if (!(($$2103 | 0) != 0 & ($59 ^ $58))) break;
  $92 = HEAP32[$62 + 12 >> 2] | 0;
  if (($92 | 0) == (HEAP32[$62 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$62 >> 2] | 0) + 36 >> 2] & 127]($62) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$92 >> 0] | 0) | 0;
  $102 = $$0$i$i & 255;
  if ($6) $$091 = $102; else $$091 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, $102) | 0;
  $107 = $$092 + 1 | 0;
  $$089 = $2;
  $$090$off0 = 0;
  $$195 = $$0107;
  $$3100 = $$299;
  $$3104 = $$2103;
  while (1) {
   if (($$089 | 0) == ($3 | 0)) break;
   do if ((HEAP8[$$195 >> 0] | 0) == 1) {
    $111 = $$089 + 11 | 0;
    if ((HEAP8[$111 >> 0] | 0) < 0) $116 = HEAP32[$$089 >> 2] | 0; else $116 = $$089;
    $117 = HEAP8[$116 + $$092 >> 0] | 0;
    if ($6) $$088 = $117; else $$088 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, $117) | 0;
    $123 = $$3104 + -1 | 0;
    if ($$091 << 24 >> 24 != $$088 << 24 >> 24) {
     HEAP8[$$195 >> 0] = 0;
     $$2$off0 = $$090$off0;
     $$5 = $$3100;
     $$5106 = $123;
     break;
    }
    $124 = HEAP8[$111 >> 0] | 0;
    if ($124 << 24 >> 24 < 0) $129 = HEAP32[$$089 + 4 >> 2] | 0; else $129 = $124 & 255;
    if (($129 | 0) == ($107 | 0)) {
     HEAP8[$$195 >> 0] = 2;
     $$2$off0 = 1;
     $$5 = $$3100 + 1 | 0;
     $$5106 = $123;
    } else {
     $$2$off0 = 1;
     $$5 = $$3100;
     $$5106 = $$3104;
    }
   } else {
    $$2$off0 = $$090$off0;
    $$5 = $$3100;
    $$5106 = $$3104;
   } while (0);
   $$089 = $$089 + 12 | 0;
   $$090$off0 = $$2$off0;
   $$195 = $$195 + 1 | 0;
   $$3100 = $$5;
   $$3104 = $$5106;
  }
  if (!$$090$off0) {
   $$092 = $107;
   $$2103 = $$3104;
   $$299 = $$3100;
   continue;
  }
  $134 = HEAP32[$0 >> 2] | 0;
  $135 = $134 + 12 | 0;
  $136 = HEAP32[$135 >> 2] | 0;
  if (($136 | 0) == (HEAP32[$134 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$134 >> 2] | 0) + 40 >> 2] & 127]($134) | 0; else {
   HEAP32[$135 >> 2] = $136 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$136 >> 0] | 0) | 0;
  }
  if (($$3100 + $$3104 | 0) >>> 0 > 1) {
   $$0 = $2;
   $$296 = $$0107;
   $$6 = $$3100;
  } else {
   $$092 = $107;
   $$2103 = $$3104;
   $$299 = $$3100;
   continue;
  }
  while (1) {
   if (($$0 | 0) == ($3 | 0)) {
    $$092 = $107;
    $$2103 = $$3104;
    $$299 = $$6;
    continue L17;
   }
   if ((HEAP8[$$296 >> 0] | 0) == 2) {
    $151 = HEAP8[$$0 + 11 >> 0] | 0;
    if ($151 << 24 >> 24 < 0) $156 = HEAP32[$$0 + 4 >> 2] | 0; else $156 = $151 & 255;
    if (($156 | 0) == ($107 | 0)) $$7 = $$6; else {
     HEAP8[$$296 >> 0] = 0;
     $$7 = $$6 + -1 | 0;
    }
   } else $$7 = $$6;
   $$0 = $$0 + 12 | 0;
   $$296 = $$296 + 1 | 0;
   $$6 = $$7;
  }
 }
 do if (!$62) $170 = 1; else {
  $65 = HEAP32[$62 + 12 >> 2] | 0;
  if (($65 | 0) == (HEAP32[$62 + 16 >> 2] | 0)) $$0$i$i$i$i112 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$62 >> 2] | 0) + 36 >> 2] & 127]($62) | 0; else $$0$i$i$i$i112 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$65 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i112, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $170 = 1;
   break;
  } else {
   $170 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i4$i$i120) label = 41; else {
  $79 = HEAP32[$$pre$i4$i$i120 + 12 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$$pre$i4$i$i120 + 16 >> 2] | 0)) $$0$i$i2$i$i118 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i120 >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i120) | 0; else $$0$i$i2$i$i118 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$79 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i118, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   label = 41;
   break;
  } else if ($170) {
   $$0108 = $2;
   $$3 = $$0107;
   break;
  } else {
   label = 77;
   break;
  }
 } while (0);
 if ((label | 0) == 41) if ($170) label = 77; else {
  $$0108 = $2;
  $$3 = $$0107;
 }
 if ((label | 0) == 77) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
  $$0108 = $2;
  $$3 = $$0107;
 }
 while (1) {
  if (($$0108 | 0) == ($3 | 0)) {
   label = 81;
   break;
  }
  if ((HEAP8[$$3 >> 0] | 0) == 2) {
   $$0108140 = $$0108;
   break;
  }
  $$0108 = $$0108 + 12 | 0;
  $$3 = $$3 + 1 | 0;
 }
 if ((label | 0) == 81) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$0108140 = $3;
 }
 _free($$sroa$0126$0);
 STACKTOP = sp;
 return $$0108140 | 0;
}

function __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i$i$i41 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i2$i$i47 = 0, $$0$i$i37 = 0, $$0$in = 0, $$023 = 0, $$023$in = 0, $$2 = 0, $$pre$i4$i$i33 = 0, $$pre$i4$i$i49 = 0, $106 = 0, $107 = 0, $110 = 0, $112 = 0, $122 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $150 = 0, $164 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $20 = 0, $23 = 0, $37 = 0, $39 = 0, $49 = 0, $5 = 0, $52 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $76 = 0, $79 = 0, $8 = 0, $91 = 0, $94 = 0, label = 0;
 $5 = HEAP32[$0 >> 2] | 0;
 do if (!$5) $178 = 1; else {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$8 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $178 = 1;
   break;
  } else {
   $178 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $20 = HEAP32[$1 >> 2] | 0;
 do if (!$20) label = 14; else {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$23 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   label = 14;
   break;
  } else if ($178) {
   $179 = $20;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($178) label = 16; else {
  $179 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 6;
  $$2 = 0;
 } else if ((label | 0) == 17) {
  $37 = HEAP32[$0 >> 2] | 0;
  $39 = HEAP32[$37 + 12 >> 2] | 0;
  if (($39 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$39 >> 0] | 0) | 0;
  $49 = $$0$i$i & 255;
  if ($49 << 24 >> 24 > -1) {
   $52 = $3 + 8 | 0;
   if (HEAP16[(HEAP32[$52 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 2048) {
    $64 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 63]($3, $49, 0) | 0) << 24 >> 24;
    $65 = HEAP32[$0 >> 2] | 0;
    $66 = $65 + 12 | 0;
    $67 = HEAP32[$66 >> 2] | 0;
    if (($67 | 0) == (HEAP32[$65 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 40 >> 2] & 127]($65) | 0;
     $$0$in = $64;
     $$023$in = $4;
     $$pre$i4$i$i33 = $179;
     $91 = $179;
    } else {
     HEAP32[$66 >> 2] = $67 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$67 >> 0] | 0) | 0;
     $$0$in = $64;
     $$023$in = $4;
     $$pre$i4$i$i33 = $179;
     $91 = $179;
    }
    while (1) {
     $$0 = $$0$in + -48 | 0;
     $$023 = $$023$in + -1 | 0;
     $76 = HEAP32[$0 >> 2] | 0;
     do if (!$76) $107 = 1; else {
      $79 = HEAP32[$76 + 12 >> 2] | 0;
      if (($79 | 0) == (HEAP32[$76 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 36 >> 2] & 127]($76) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$79 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $107 = 1;
       break;
      } else {
       $107 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$91) {
      $$pre$i4$i$i49 = $$pre$i4$i$i33;
      $106 = 1;
      $180 = 0;
     } else {
      $94 = HEAP32[$91 + 12 >> 2] | 0;
      if (($94 | 0) == (HEAP32[$91 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 36 >> 2] & 127]($91) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$94 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       $$pre$i4$i$i49 = 0;
       $106 = 1;
       $180 = 0;
       break;
      } else {
       $$pre$i4$i$i49 = $$pre$i4$i$i33;
       $106 = ($$pre$i4$i$i33 | 0) == 0;
       $180 = $$pre$i4$i$i33;
       break;
      }
     } while (0);
     $110 = HEAP32[$0 >> 2] | 0;
     if (!(($$023$in | 0) > 1 & ($107 ^ $106))) break;
     $112 = HEAP32[$110 + 12 >> 2] | 0;
     if (($112 | 0) == (HEAP32[$110 + 16 >> 2] | 0)) $$0$i$i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$110 >> 2] | 0) + 36 >> 2] & 127]($110) | 0; else $$0$i$i37 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$112 >> 0] | 0) | 0;
     $122 = $$0$i$i37 & 255;
     if ($122 << 24 >> 24 <= -1) {
      $$2 = $$0;
      break L22;
     }
     if (!(HEAP16[(HEAP32[$52 >> 2] | 0) + ($$0$i$i37 << 24 >> 24 << 1) >> 1] & 2048)) {
      $$2 = $$0;
      break L22;
     }
     $136 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 63]($3, $122, 0) | 0) << 24 >> 24) + ($$0 * 10 | 0) | 0;
     $137 = HEAP32[$0 >> 2] | 0;
     $138 = $137 + 12 | 0;
     $139 = HEAP32[$138 >> 2] | 0;
     if (($139 | 0) == (HEAP32[$137 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$137 >> 2] | 0) + 40 >> 2] & 127]($137) | 0;
      $$0$in = $136;
      $$023$in = $$023;
      $$pre$i4$i$i33 = $$pre$i4$i$i49;
      $91 = $180;
      continue;
     } else {
      HEAP32[$138 >> 2] = $139 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
      $$0$in = $136;
      $$023$in = $$023;
      $$pre$i4$i$i33 = $$pre$i4$i$i49;
      $91 = $180;
      continue;
     }
    }
    do if (!$110) $181 = 1; else {
     $150 = HEAP32[$110 + 12 >> 2] | 0;
     if (($150 | 0) == (HEAP32[$110 + 16 >> 2] | 0)) $$0$i$i$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$110 >> 2] | 0) + 36 >> 2] & 127]($110) | 0; else $$0$i$i$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$150 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i41, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $181 = 1;
      break;
     } else {
      $181 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } while (0);
    do if (!$$pre$i4$i$i49) label = 62; else {
     $164 = HEAP32[$$pre$i4$i$i49 + 12 >> 2] | 0;
     if (($164 | 0) == (HEAP32[$$pre$i4$i$i49 + 16 >> 2] | 0)) $$0$i$i2$i$i47 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i49 >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i49) | 0; else $$0$i$i2$i$i47 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$164 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i47, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      label = 62;
      break;
     } else if ($181) {
      $$2 = $$0;
      break L22;
     } else break;
    } while (0);
    if ((label | 0) == 62) if (!$181) {
     $$2 = $$0;
     break;
    }
    HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 2;
    $$2 = $$0;
    break;
   }
  }
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 4;
  $$2 = 0;
 } while (0);
 return $$2 | 0;
}

function __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i27 = 0, $$0$i$i$i$i42 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i33 = 0, $$0$i$i2$i$i48 = 0, $$0$i$i39 = 0, $$0$in = 0, $$025 = 0, $$025$in = 0, $$2 = 0, $$pre$i4$i$i35 = 0, $$pre$i4$i$i50 = 0, $101 = 0, $102 = 0, $105 = 0, $107 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $141 = 0, $155 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $20 = 0, $23 = 0, $37 = 0, $39 = 0, $5 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $71 = 0, $74 = 0, $8 = 0, $86 = 0, $89 = 0, label = 0;
 $5 = HEAP32[$0 >> 2] | 0;
 do if (!$5) $169 = 1; else {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$8 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $169 = 1;
   break;
  } else {
   $169 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $20 = HEAP32[$1 >> 2] | 0;
 do if (!$20) label = 14; else {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$23 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   label = 14;
   break;
  } else if ($169) {
   $170 = $20;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($169) label = 16; else {
  $170 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 6;
  $$2 = 0;
 } else if ((label | 0) == 17) {
  $37 = HEAP32[$0 >> 2] | 0;
  $39 = HEAP32[$37 + 12 >> 2] | 0;
  if (($39 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$39 >> 2] | 0) | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, 2048, $$0$i$i) | 0)) {
   HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 4;
   $$2 = 0;
   break;
  }
  $59 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 52 >> 2] & 63]($3, $$0$i$i, 0) | 0) << 24 >> 24;
  $60 = HEAP32[$0 >> 2] | 0;
  $61 = $60 + 12 | 0;
  $62 = HEAP32[$61 >> 2] | 0;
  if (($62 | 0) == (HEAP32[$60 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 40 >> 2] & 127]($60) | 0;
   $$0$in = $59;
   $$025$in = $4;
   $$pre$i4$i$i35 = $170;
   $86 = $170;
  } else {
   HEAP32[$61 >> 2] = $62 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$62 >> 2] | 0) | 0;
   $$0$in = $59;
   $$025$in = $4;
   $$pre$i4$i$i35 = $170;
   $86 = $170;
  }
  while (1) {
   $$0 = $$0$in + -48 | 0;
   $$025 = $$025$in + -1 | 0;
   $71 = HEAP32[$0 >> 2] | 0;
   do if (!$71) $102 = 1; else {
    $74 = HEAP32[$71 + 12 >> 2] | 0;
    if (($74 | 0) == (HEAP32[$71 + 16 >> 2] | 0)) $$0$i$i$i$i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$71 >> 2] | 0) + 36 >> 2] & 127]($71) | 0; else $$0$i$i$i$i27 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$74 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i27, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$0 >> 2] = 0;
     $102 = 1;
     break;
    } else {
     $102 = (HEAP32[$0 >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$86) {
    $$pre$i4$i$i50 = $$pre$i4$i$i35;
    $101 = 1;
    $171 = 0;
   } else {
    $89 = HEAP32[$86 + 12 >> 2] | 0;
    if (($89 | 0) == (HEAP32[$86 + 16 >> 2] | 0)) $$0$i$i2$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$86 >> 2] | 0) + 36 >> 2] & 127]($86) | 0; else $$0$i$i2$i$i33 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$89 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i33, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$1 >> 2] = 0;
     $$pre$i4$i$i50 = 0;
     $101 = 1;
     $171 = 0;
     break;
    } else {
     $$pre$i4$i$i50 = $$pre$i4$i$i35;
     $101 = ($$pre$i4$i$i35 | 0) == 0;
     $171 = $$pre$i4$i$i35;
     break;
    }
   } while (0);
   $105 = HEAP32[$0 >> 2] | 0;
   if (!(($$025$in | 0) > 1 & ($102 ^ $101))) break;
   $107 = HEAP32[$105 + 12 >> 2] | 0;
   if (($107 | 0) == (HEAP32[$105 + 16 >> 2] | 0)) $$0$i$i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$105 >> 2] | 0) + 36 >> 2] & 127]($105) | 0; else $$0$i$i39 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$107 >> 2] | 0) | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, 2048, $$0$i$i39) | 0)) {
    $$2 = $$0;
    break L22;
   }
   $127 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 52 >> 2] & 63]($3, $$0$i$i39, 0) | 0) << 24 >> 24) + ($$0 * 10 | 0) | 0;
   $128 = HEAP32[$0 >> 2] | 0;
   $129 = $128 + 12 | 0;
   $130 = HEAP32[$129 >> 2] | 0;
   if (($130 | 0) == (HEAP32[$128 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[$128 >> 2] | 0) + 40 >> 2] & 127]($128) | 0;
    $$0$in = $127;
    $$025$in = $$025;
    $$pre$i4$i$i35 = $$pre$i4$i$i50;
    $86 = $171;
    continue;
   } else {
    HEAP32[$129 >> 2] = $130 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$130 >> 2] | 0) | 0;
    $$0$in = $127;
    $$025$in = $$025;
    $$pre$i4$i$i35 = $$pre$i4$i$i50;
    $86 = $171;
    continue;
   }
  }
  do if (!$105) $172 = 1; else {
   $141 = HEAP32[$105 + 12 >> 2] | 0;
   if (($141 | 0) == (HEAP32[$105 + 16 >> 2] | 0)) $$0$i$i$i$i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$105 >> 2] | 0) + 36 >> 2] & 127]($105) | 0; else $$0$i$i$i$i42 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$141 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i42, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $172 = 1;
    break;
   } else {
    $172 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i4$i$i50) label = 60; else {
   $155 = HEAP32[$$pre$i4$i$i50 + 12 >> 2] | 0;
   if (($155 | 0) == (HEAP32[$$pre$i4$i$i50 + 16 >> 2] | 0)) $$0$i$i2$i$i48 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i50 >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i50) | 0; else $$0$i$i2$i$i48 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$155 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i48, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    label = 60;
    break;
   } else if ($172) {
    $$2 = $$0;
    break L22;
   } else break;
  } while (0);
  if ((label | 0) == 60) if (!$172) {
   $$2 = $$0;
   break;
  }
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 2;
  $$2 = $$0;
 } while (0);
 return $$2 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i32 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i17 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $112 = 0, $117 = 0, $12 = 0, $124 = 0, $129 = 0, $13 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $7 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $6 = sp + 208 | 0;
 $7 = sp + 200 | 0;
 $8 = sp + 196 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 337 | 0;
 $16 = sp + 336 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $$pre$i$i$i17 = $$pre;
 $153 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i17) {
   $$pre$i$i$i = 0;
   $129 = 0;
   $154 = 1;
  } else {
   $33 = HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i17) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $129 = 0;
    $154 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i17;
    $129 = $153;
    $154 = 0;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$19 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $65 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $73 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $73, 0);
   $77 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $$pre$i$i$i + 12 | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $$pre$i$i$i + 16 | 0;
  if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) $$0$i$i32 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i32 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$80 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i32, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $155;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$81 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $153 = $129;
   continue;
  } else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $153 = $129;
   continue;
  }
 }
 $103 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($103 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $103 & 255) | 0) == 0)) {
  $112 = HEAP32[$13 >> 2] | 0;
  if (($112 - $12 | 0) < 160) {
   $117 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $112 + 4;
   HEAP32[$112 >> 2] = $117;
  }
 }
 HEAPF32[$5 >> 2] = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $156 = 1; else {
  $124 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($124 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$129 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$124 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $139 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$139 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($156) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($156) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i32 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i17 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $112 = 0, $117 = 0, $12 = 0, $124 = 0, $129 = 0, $13 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $7 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $6 = sp + 208 | 0;
 $7 = sp + 200 | 0;
 $8 = sp + 196 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 337 | 0;
 $16 = sp + 336 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $$pre$i$i$i17 = $$pre;
 $153 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i17) {
   $$pre$i$i$i = 0;
   $129 = 0;
   $154 = 1;
  } else {
   $33 = HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i17) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $129 = 0;
    $154 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i17;
    $129 = $153;
    $154 = 0;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$19 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $65 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $73 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $73, 0);
   $77 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $$pre$i$i$i + 12 | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $$pre$i$i$i + 16 | 0;
  if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) $$0$i$i32 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i32 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$80 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i32, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $155;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$81 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $153 = $129;
   continue;
  } else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $153 = $129;
   continue;
  }
 }
 $103 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($103 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $103 & 255) | 0) == 0)) {
  $112 = HEAP32[$13 >> 2] | 0;
  if (($112 - $12 | 0) < 160) {
   $117 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $112 + 4;
   HEAP32[$112 >> 2] = $117;
  }
 }
 HEAPF64[$5 >> 3] = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $156 = 1; else {
  $124 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($124 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$129 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$124 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $139 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$139 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($156) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($156) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i32 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i17 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $112 = 0, $117 = 0, $12 = 0, $124 = 0, $129 = 0, $13 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $7 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $6 = sp + 208 | 0;
 $7 = sp + 200 | 0;
 $8 = sp + 196 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 337 | 0;
 $16 = sp + 336 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $$pre$i$i$i17 = $$pre;
 $153 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i17) {
   $$pre$i$i$i = 0;
   $129 = 0;
   $154 = 1;
  } else {
   $33 = HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i17) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $129 = 0;
    $154 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i17;
    $129 = $153;
    $154 = 0;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$19 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $65 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $73 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $73, 0);
   $77 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $$pre$i$i$i + 12 | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $$pre$i$i$i + 16 | 0;
  if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) $$0$i$i32 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i32 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$80 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i32, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $155;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$81 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $153 = $129;
   continue;
  } else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $153 = $129;
   continue;
  }
 }
 $103 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($103 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $103 & 255) | 0) == 0)) {
  $112 = HEAP32[$13 >> 2] | 0;
  if (($112 - $12 | 0) < 160) {
   $117 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $112 + 4;
   HEAP32[$112 >> 2] = $117;
  }
 }
 HEAPF64[$5 >> 3] = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $156 = 1; else {
  $124 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($124 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$129 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$124 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $139 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$139 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($156) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($156) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i17 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i26 = 0, $$0$i$i37 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i22 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $109 = 0, $11 = 0, $110 = 0, $115 = 0, $12 = 0, $120 = 0, $130 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $21 = 0, $24 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $47 = 0, $50 = 0, $6 = 0, $63 = 0, $67 = 0, $7 = 0, $75 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vararg_buffer = sp;
 $6 = sp + 204 | 0;
 $7 = sp + 192 | 0;
 $8 = sp + 180 | 0;
 $9 = sp + 176 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$7 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 __ZNKSt3__28ios_base6getlocEv($8, $3);
 $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 34536) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 32 >> 2] & 31]($15, 26800, 26826, $6) | 0;
 __ZNSt3__26localeD2Ev($8);
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $$0$i$i17 = 0;
 while (1) {
  if (($$0$i$i17 | 0) == 3) break;
  HEAP32[$8 + ($$0$i$i17 << 2) >> 2] = 0;
  $$0$i$i17 = $$0$i$i17 + 1 | 0;
 }
 $21 = $8 + 11 | 0;
 $24 = $8 + 8 | 0;
 if ((HEAP8[$21 >> 0] | 0) < 0) $27 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $27 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $27, 0);
 $31 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 HEAP32[$9 >> 2] = $31;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$12 >> 2] = 0;
 $32 = $8 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $31;
 $$pre$i$i$i22 = $$pre;
 $144 = $$pre;
 L12 : while (1) {
  if (!$$pre$i$i$i22) {
   $$pre$i$i$i = 0;
   $120 = 0;
   $145 = 1;
  } else {
   $35 = HEAP32[$$pre$i$i$i22 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$$pre$i$i$i22 + 16 >> 2] | 0)) $$0$i$i$i$i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i22 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i22) | 0; else $$0$i$i$i$i20 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$35 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i20, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $120 = 0;
    $145 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i22;
    $120 = $144;
    $145 = 0;
   }
  }
  $47 = HEAP32[$2 >> 2] | 0;
  do if (!$47) label = 22; else {
   $50 = HEAP32[$47 + 12 >> 2] | 0;
   if (($50 | 0) == (HEAP32[$47 + 16 >> 2] | 0)) $$0$i$i2$i$i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] & 127]($47) | 0; else $$0$i$i2$i$i26 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$50 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i26, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 22;
    break;
   } else if ($145) {
    $146 = $47;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $47;
    break L12;
   }
  } while (0);
  if ((label | 0) == 22) {
   label = 0;
   if ($145) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $146 = 0;
  }
  $63 = HEAP8[$21 >> 0] | 0;
  $67 = $63 << 24 >> 24 < 0 ? HEAP32[$32 >> 2] | 0 : $63 & 255;
  if ((HEAP32[$9 >> 2] | 0) == ($$0 + $67 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $67 << 1, 0);
   if ((HEAP8[$21 >> 0] | 0) < 0) $75 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $75 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $75, 0);
   $79 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
   HEAP32[$9 >> 2] = $79 + $67;
   $$1 = $79;
  } else $$1 = $$0;
  $81 = $$pre$i$i$i + 12 | 0;
  $82 = HEAP32[$81 >> 2] | 0;
  $83 = $$pre$i$i$i + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i37 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$82 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i37 & 255, 16, $$1, $9, $12, 0, $7, $10, $11, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $146;
   break;
  }
  $95 = HEAP32[$81 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$83 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i22 = $$pre$i$i$i;
   $144 = $120;
   continue;
  } else {
   HEAP32[$81 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i22 = $$pre$i$i$i;
   $144 = $120;
   continue;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, (HEAP32[$9 >> 2] | 0) - $$2 | 0, 0);
 $109 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 $110 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $5;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($109, $110, 26833, $vararg_buffer) | 0) != 1) HEAP32[$4 >> 2] = 4;
 if (!$$pre$i$i$i) $147 = 1; else {
  $115 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($115 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$120 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$115 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $147 = 1;
  } else $147 = 0;
 }
 do if (!$$pre$i4$i$i) label = 49; else {
  $130 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($130 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$130 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 49;
   break;
  } else if ($147) break; else {
   label = 51;
   break;
  }
 } while (0);
 if ((label | 0) == 49) if ($147) label = 51;
 if ((label | 0) == 51) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i32 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i17 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $113 = 0, $118 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $14 = 0, $140 = 0, $15 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $7 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 199 | 0;
 $8 = sp + 198 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 197 | 0;
 $16 = sp + 196 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $$pre$i$i$i17 = $$pre;
 $154 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i17) {
   $$pre$i$i$i = 0;
   $130 = 0;
   $155 = 1;
  } else {
   $33 = HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i17) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $130 = 0;
    $155 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i17;
    $130 = $154;
    $155 = 0;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($155) {
    $156 = $45;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($155) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $156 = 0;
  }
  $61 = HEAP8[$19 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $65 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $73 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $73, 0);
   $77 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $$pre$i$i$i + 12 | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $$pre$i$i$i + 16 | 0;
  if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) $$0$i$i32 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i32 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$80 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i32 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $156;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $154 = $130;
   continue;
  } else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $154 = $130;
   continue;
  }
 }
 $104 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($104 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $104 & 255) | 0) == 0)) {
  $113 = HEAP32[$13 >> 2] | 0;
  if (($113 - $12 | 0) < 160) {
   $118 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $113 + 4;
   HEAP32[$113 >> 2] = $118;
  }
 }
 HEAPF32[$5 >> 2] = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $157 = 1; else {
  $125 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($125 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$130 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$125 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $157 = 1;
  } else $157 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $140 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($140 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$140 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($157) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($157) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i32 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i17 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $113 = 0, $118 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $14 = 0, $140 = 0, $15 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $7 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 199 | 0;
 $8 = sp + 198 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 197 | 0;
 $16 = sp + 196 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $$pre$i$i$i17 = $$pre;
 $154 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i17) {
   $$pre$i$i$i = 0;
   $130 = 0;
   $155 = 1;
  } else {
   $33 = HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i17) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $130 = 0;
    $155 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i17;
    $130 = $154;
    $155 = 0;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($155) {
    $156 = $45;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($155) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $156 = 0;
  }
  $61 = HEAP8[$19 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $65 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $73 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $73, 0);
   $77 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $$pre$i$i$i + 12 | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $$pre$i$i$i + 16 | 0;
  if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) $$0$i$i32 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i32 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$80 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i32 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $156;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $154 = $130;
   continue;
  } else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $154 = $130;
   continue;
  }
 }
 $104 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($104 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $104 & 255) | 0) == 0)) {
  $113 = HEAP32[$13 >> 2] | 0;
  if (($113 - $12 | 0) < 160) {
   $118 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $113 + 4;
   HEAP32[$113 >> 2] = $118;
  }
 }
 HEAPF64[$5 >> 3] = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $157 = 1; else {
  $125 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($125 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$130 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$125 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $157 = 1;
  } else $157 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $140 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($140 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$140 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($157) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($157) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i32 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i17 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $113 = 0, $118 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $14 = 0, $140 = 0, $15 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $7 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 199 | 0;
 $8 = sp + 198 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 197 | 0;
 $16 = sp + 196 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $$pre$i$i$i17 = $$pre;
 $154 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i17) {
   $$pre$i$i$i = 0;
   $130 = 0;
   $155 = 1;
  } else {
   $33 = HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i17) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $130 = 0;
    $155 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i17;
    $130 = $154;
    $155 = 0;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($155) {
    $156 = $45;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($155) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $156 = 0;
  }
  $61 = HEAP8[$19 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $65 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $73 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $73, 0);
   $77 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $$pre$i$i$i + 12 | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $$pre$i$i$i + 16 | 0;
  if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) $$0$i$i32 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i32 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$80 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i32 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $156;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $154 = $130;
   continue;
  } else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   $154 = $130;
   continue;
  }
 }
 $104 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($104 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $104 & 255) | 0) == 0)) {
  $113 = HEAP32[$13 >> 2] | 0;
  if (($113 - $12 | 0) < 160) {
   $118 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $113 + 4;
   HEAP32[$113 >> 2] = $118;
  }
 }
 HEAPF64[$5 >> 3] = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $157 = 1; else {
  $125 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($125 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$130 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$125 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $157 = 1;
  } else $157 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $140 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($140 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$140 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($157) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($157) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i22 = 0, $$0$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i28 = 0, $$0$i$i39 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i24 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $108 = 0, $109 = 0, $11 = 0, $114 = 0, $119 = 0, $12 = 0, $129 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $21 = 0, $24 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $47 = 0, $50 = 0, $6 = 0, $63 = 0, $67 = 0, $7 = 0, $75 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $94 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $vararg_buffer = sp;
 $6 = sp + 208 | 0;
 $7 = sp + 192 | 0;
 $8 = sp + 180 | 0;
 $9 = sp + 176 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$7 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 __ZNKSt3__28ios_base6getlocEv($8, $3);
 $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 34568) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 48 >> 2] & 31]($15, 26800, 26826, $6) | 0;
 __ZNSt3__26localeD2Ev($8);
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $$0$i$i19 = 0;
 while (1) {
  if (($$0$i$i19 | 0) == 3) break;
  HEAP32[$8 + ($$0$i$i19 << 2) >> 2] = 0;
  $$0$i$i19 = $$0$i$i19 + 1 | 0;
 }
 $21 = $8 + 11 | 0;
 $24 = $8 + 8 | 0;
 if ((HEAP8[$21 >> 0] | 0) < 0) $27 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $27 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $27, 0);
 $31 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 HEAP32[$9 >> 2] = $31;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$12 >> 2] = 0;
 $32 = $8 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $31;
 $$pre$i$i$i24 = $$pre;
 $143 = $$pre;
 L12 : while (1) {
  if (!$$pre$i$i$i24) {
   $$pre$i$i$i = 0;
   $119 = 0;
   $144 = 1;
  } else {
   $35 = HEAP32[$$pre$i$i$i24 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$$pre$i$i$i24 + 16 >> 2] | 0)) $$0$i$i$i$i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i24 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i24) | 0; else $$0$i$i$i$i22 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$35 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i22, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $119 = 0;
    $144 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i24;
    $119 = $143;
    $144 = 0;
   }
  }
  $47 = HEAP32[$2 >> 2] | 0;
  do if (!$47) label = 22; else {
   $50 = HEAP32[$47 + 12 >> 2] | 0;
   if (($50 | 0) == (HEAP32[$47 + 16 >> 2] | 0)) $$0$i$i2$i$i28 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] & 127]($47) | 0; else $$0$i$i2$i$i28 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$50 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i28, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 22;
    break;
   } else if ($144) {
    $145 = $47;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $47;
    break L12;
   }
  } while (0);
  if ((label | 0) == 22) {
   label = 0;
   if ($144) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $145 = 0;
  }
  $63 = HEAP8[$21 >> 0] | 0;
  $67 = $63 << 24 >> 24 < 0 ? HEAP32[$32 >> 2] | 0 : $63 & 255;
  if ((HEAP32[$9 >> 2] | 0) == ($$0 + $67 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $67 << 1, 0);
   if ((HEAP8[$21 >> 0] | 0) < 0) $75 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $75 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $75, 0);
   $79 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
   HEAP32[$9 >> 2] = $79 + $67;
   $$1 = $79;
  } else $$1 = $$0;
  $81 = $$pre$i$i$i + 12 | 0;
  $82 = HEAP32[$81 >> 2] | 0;
  $83 = $$pre$i$i$i + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i39 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$82 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i39, 16, $$1, $9, $12, 0, $7, $10, $11, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $145;
   break;
  }
  $94 = HEAP32[$81 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$83 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i24 = $$pre$i$i$i;
   $143 = $119;
   continue;
  } else {
   HEAP32[$81 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i24 = $$pre$i$i$i;
   $143 = $119;
   continue;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, (HEAP32[$9 >> 2] | 0) - $$2 | 0, 0);
 $108 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 $109 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $5;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($108, $109, 26833, $vararg_buffer) | 0) != 1) HEAP32[$4 >> 2] = 4;
 if (!$$pre$i$i$i) $146 = 1; else {
  $114 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($114 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$119 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$114 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $146 = 1;
  } else $146 = 0;
 }
 do if (!$$pre$i4$i$i) label = 49; else {
  $129 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($129 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$129 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 49;
   break;
  } else if ($146) break; else {
   label = 51;
   break;
  }
 } while (0);
 if ((label | 0) == 49) if ($146) label = 51;
 if ((label | 0) == 51) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $107 = 0, $11 = 0, $112 = 0, $115 = 0, $117 = 0, $12 = 0, $124 = 0, $129 = 0, $13 = 0, $139 = 0, $14 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $153 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $129 = 0;
   $154 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$31 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i19, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $129 = 0;
    $154 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $129 = $153;
    $154 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$46 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($154) {
    $155 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $155 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$78 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i36, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $155;
   break;
  }
  $91 = HEAP32[$77 >> 2] | 0;
  if (($91 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $153 = $129;
   continue;
  } else {
   HEAP32[$77 >> 2] = $91 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$91 >> 2] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $153 = $129;
   continue;
  }
 }
 $100 = HEAP8[$8 + 11 >> 0] | 0;
 if (($100 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $100 & 255) | 0) {
  $107 = HEAP32[$12 >> 2] | 0;
  if (($107 - $11 | 0) < 160) {
   $112 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $107 + 4;
   HEAP32[$107 >> 2] = $112;
  }
 }
 $115 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $117 = $5;
 HEAP32[$117 >> 2] = $115;
 HEAP32[$117 + 4 >> 2] = tempRet0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $156 = 1; else {
  $124 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($124 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$129 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$124 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $139 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$139 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($156) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($156) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $108 = 0, $11 = 0, $113 = 0, $116 = 0, $118 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $14 = 0, $140 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $154 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $130 = 0;
   $155 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$31 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i19, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $130 = 0;
    $155 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $130 = $154;
    $155 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$46 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($155) {
    $156 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($155) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $156 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$78 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i36 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $156;
   break;
  }
  $92 = HEAP32[$77 >> 2] | 0;
  if (($92 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $154 = $130;
   continue;
  } else {
   HEAP32[$77 >> 2] = $92 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$92 >> 0] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $154 = $130;
   continue;
  }
 }
 $101 = HEAP8[$8 + 11 >> 0] | 0;
 if (($101 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $101 & 255) | 0) {
  $108 = HEAP32[$12 >> 2] | 0;
  if (($108 - $11 | 0) < 160) {
   $113 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $108 + 4;
   HEAP32[$108 >> 2] = $113;
  }
 }
 $116 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $118 = $5;
 HEAP32[$118 >> 2] = $116;
 HEAP32[$118 + 4 >> 2] = tempRet0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $157 = 1; else {
  $125 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($125 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$130 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$125 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $157 = 1;
  } else $157 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $140 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($140 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$140 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($157) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($157) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $107 = 0, $11 = 0, $112 = 0, $115 = 0, $117 = 0, $12 = 0, $124 = 0, $129 = 0, $13 = 0, $139 = 0, $14 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $153 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $129 = 0;
   $154 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$31 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i19, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $129 = 0;
    $154 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $129 = $153;
    $154 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$46 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($154) {
    $155 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $155 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$78 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i36, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $155;
   break;
  }
  $91 = HEAP32[$77 >> 2] | 0;
  if (($91 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $153 = $129;
   continue;
  } else {
   HEAP32[$77 >> 2] = $91 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$91 >> 2] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $153 = $129;
   continue;
  }
 }
 $100 = HEAP8[$8 + 11 >> 0] | 0;
 if (($100 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $100 & 255) | 0) {
  $107 = HEAP32[$12 >> 2] | 0;
  if (($107 - $11 | 0) < 160) {
   $112 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $107 + 4;
   HEAP32[$107 >> 2] = $112;
  }
 }
 $115 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $117 = $5;
 HEAP32[$117 >> 2] = $115;
 HEAP32[$117 + 4 >> 2] = tempRet0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $156 = 1; else {
  $124 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($124 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$129 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$124 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $139 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$139 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($156) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($156) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $108 = 0, $11 = 0, $113 = 0, $116 = 0, $118 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $14 = 0, $140 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $154 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $130 = 0;
   $155 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$31 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i19, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $130 = 0;
    $155 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $130 = $154;
    $155 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$46 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($155) {
    $156 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($155) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $156 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$78 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i36 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $156;
   break;
  }
  $92 = HEAP32[$77 >> 2] | 0;
  if (($92 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $154 = $130;
   continue;
  } else {
   HEAP32[$77 >> 2] = $92 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$92 >> 0] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $154 = $130;
   continue;
  }
 }
 $101 = HEAP8[$8 + 11 >> 0] | 0;
 if (($101 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $101 & 255) | 0) {
  $108 = HEAP32[$12 >> 2] | 0;
  if (($108 - $11 | 0) < 160) {
   $113 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $108 + 4;
   HEAP32[$108 >> 2] = $113;
  }
 }
 $116 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $118 = $5;
 HEAP32[$118 >> 2] = $116;
 HEAP32[$118 + 4 >> 2] = tempRet0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $157 = 1; else {
  $125 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($125 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$130 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$125 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $157 = 1;
  } else $157 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $140 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($140 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$140 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($157) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($157) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 var $$$099 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i108 = 0, $$0$i$i112 = 0, $$0101 = 0, $$0103 = 0, $$0106 = 0, $$07$i$i = 0, $$095 = 0, $$097 = 0, $$099 = 0, $$1 = 0, $$1102 = 0, $$1104 = 0, $$196 = 0, $$198 = 0, $$2 = 0, $$2105 = 0, $$3 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $105 = 0, $114 = 0, $115 = 0, $116 = 0, $123 = 0, $126 = 0, $127 = 0, $129 = 0, $132 = 0, $133 = 0, $135 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $58 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $69 = 0, $79 = 0, $81 = 0, $82 = 0, $83 = 0, $91 = 0, $92 = 0, $93 = 0, $99 = 0;
 HEAP32[$2 >> 2] = $0;
 $16 = $13 + 8 + 3 | 0;
 $17 = $13 + 4 | 0;
 $19 = $12 + 8 + 3 | 0;
 $20 = $12 + 4 | 0;
 $22 = ($3 & 512 | 0) == 0;
 $23 = ($14 | 0) > 0;
 $24 = $11 + 11 | 0;
 $25 = $11 + 4 | 0;
 $$0106 = 0;
 $$099 = $4;
 while (1) {
  if (($$0106 | 0) == 4) break;
  L4 : do switch (HEAP8[$8 + $$0106 >> 0] | 0) {
  case 0:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $$2 = $$099;
    break;
   }
  case 1:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 63]($6, 32) | 0;
    $41 = HEAP32[$2 >> 2] | 0;
    HEAP32[$2 >> 2] = $41 + 4;
    HEAP32[$41 >> 2] = $40;
    $$2 = $$099;
    break;
   }
  case 3:
   {
    $43 = HEAP8[$16 >> 0] | 0;
    $44 = $43 << 24 >> 24 < 0;
    if (!(($44 ? HEAP32[$17 >> 2] | 0 : $43 & 255) | 0)) $$2 = $$099; else {
     $51 = HEAP32[($44 ? HEAP32[$13 >> 2] | 0 : $13) >> 2] | 0;
     $52 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $52 + 4;
     HEAP32[$52 >> 2] = $51;
     $$2 = $$099;
    }
    break;
   }
  case 2:
   {
    $54 = HEAP8[$19 >> 0] | 0;
    $55 = $54 << 24 >> 24 < 0;
    $58 = $55 ? HEAP32[$20 >> 2] | 0 : $54 & 255;
    if ($22 | ($58 | 0) == 0) $$2 = $$099; else {
     $61 = $55 ? HEAP32[$12 >> 2] | 0 : $12;
     $62 = $61 + ($58 << 2) | 0;
     $63 = HEAP32[$2 >> 2] | 0;
     $$0$i$i112 = $63;
     $64 = $61;
     while (1) {
      if (($64 | 0) == ($62 | 0)) break;
      HEAP32[$$0$i$i112 >> 2] = HEAP32[$64 >> 2];
      $$0$i$i112 = $$0$i$i112 + 4 | 0;
      $64 = $64 + 4 | 0;
     }
     HEAP32[$2 >> 2] = $63 + ($58 << 2);
     $$2 = $$099;
    }
    break;
   }
  case 4:
   {
    $69 = HEAP32[$2 >> 2] | 0;
    $$$099 = $7 ? $$099 + 4 | 0 : $$099;
    $$0103 = $$$099;
    while (1) {
     if ($$0103 >>> 0 >= $5 >>> 0) break;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 12 >> 2] & 63]($6, 2048, HEAP32[$$0103 >> 2] | 0) | 0)) break;
     $$0103 = $$0103 + 4 | 0;
    }
    if ($23) {
     $$0101 = $14;
     $$1104 = $$0103;
     while (1) {
      $79 = ($$0101 | 0) > 0;
      if (!($$1104 >>> 0 > $$$099 >>> 0 & $79)) break;
      $81 = $$1104 + -4 | 0;
      $82 = HEAP32[$81 >> 2] | 0;
      $83 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $83 + 4;
      HEAP32[$83 >> 2] = $82;
      $$0101 = $$0101 + -1 | 0;
      $$1104 = $81;
     }
     if ($79) $93 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 63]($6, 48) | 0; else $93 = 0;
     $$1102 = $$0101;
     $92 = HEAP32[$2 >> 2] | 0;
     while (1) {
      $91 = $92 + 4 | 0;
      if (($$1102 | 0) <= 0) break;
      HEAP32[$92 >> 2] = $93;
      $$1102 = $$1102 + -1 | 0;
      $92 = $91;
     }
     HEAP32[$2 >> 2] = $91;
     HEAP32[$92 >> 2] = $9;
     $$2105 = $$1104;
    } else $$2105 = $$0103;
    if (($$2105 | 0) == ($$$099 | 0)) {
     $99 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 63]($6, 48) | 0;
     $100 = HEAP32[$2 >> 2] | 0;
     $101 = $100 + 4 | 0;
     HEAP32[$2 >> 2] = $101;
     HEAP32[$100 >> 2] = $99;
     $132 = $101;
    } else {
     $102 = HEAP8[$24 >> 0] | 0;
     $103 = $102 << 24 >> 24 < 0;
     $105 = $102 & 255;
     if (!(($103 ? HEAP32[$25 >> 2] | 0 : $105) | 0)) {
      $$0 = -1;
      $$095 = 0;
      $$097 = 0;
      $$3 = $$2105;
     } else {
      $$0 = HEAP8[($103 ? HEAP32[$11 >> 2] | 0 : $11) >> 0] | 0;
      $$095 = 0;
      $$097 = 0;
      $$3 = $$2105;
     }
     while (1) {
      if (($$3 | 0) == ($$$099 | 0)) break;
      $114 = HEAP32[$2 >> 2] | 0;
      if (($$097 | 0) == ($$0 | 0)) {
       $115 = $114 + 4 | 0;
       HEAP32[$2 >> 2] = $115;
       HEAP32[$114 >> 2] = $10;
       $116 = $$095 + 1 | 0;
       if ($116 >>> 0 < ($103 ? HEAP32[$25 >> 2] | 0 : $105) >>> 0) {
        $123 = HEAP8[($103 ? HEAP32[$11 >> 2] | 0 : $11) + $116 >> 0] | 0;
        $$1 = $123 << 24 >> 24 == 127 ? -1 : $123 << 24 >> 24;
        $$196 = $116;
        $$198 = 0;
        $129 = $115;
       } else {
        $$1 = $$097;
        $$196 = $116;
        $$198 = 0;
        $129 = $115;
       }
      } else {
       $$1 = $$0;
       $$196 = $$095;
       $$198 = $$097;
       $129 = $114;
      }
      $126 = $$3 + -4 | 0;
      $127 = HEAP32[$126 >> 2] | 0;
      HEAP32[$2 >> 2] = $129 + 4;
      HEAP32[$129 >> 2] = $127;
      $$0 = $$1;
      $$095 = $$196;
      $$097 = $$198 + 1 | 0;
      $$3 = $126;
     }
     $132 = HEAP32[$2 >> 2] | 0;
    }
    if (($69 | 0) == ($132 | 0)) $$2 = $$$099; else {
     $$0$i$i108 = $132;
     $$07$i$i = $69;
     while (1) {
      $133 = $$0$i$i108 + -4 | 0;
      if ($$07$i$i >>> 0 >= $133 >>> 0) {
       $$2 = $$$099;
       break L4;
      }
      $135 = HEAP32[$$07$i$i >> 2] | 0;
      HEAP32[$$07$i$i >> 2] = HEAP32[$133 >> 2];
      HEAP32[$133 >> 2] = $135;
      $$0$i$i108 = $133;
      $$07$i$i = $$07$i$i + 4 | 0;
     }
    }
    break;
   }
  default:
   $$2 = $$099;
  } while (0);
  $$0106 = $$0106 + 1 | 0;
  $$099 = $$2;
 }
 $26 = HEAP8[$16 >> 0] | 0;
 $27 = $26 << 24 >> 24 < 0;
 $30 = $27 ? HEAP32[$17 >> 2] | 0 : $26 & 255;
 if ($30 >>> 0 > 1) {
  $140 = $27 ? HEAP32[$13 >> 2] | 0 : $13;
  $141 = $140 + 4 | 0;
  $142 = $140 + ($30 << 2) | 0;
  $143 = HEAP32[$2 >> 2] | 0;
  $146 = $142 - $141 | 0;
  $$0$i$i = $143;
  $147 = $141;
  while (1) {
   if (($147 | 0) == ($142 | 0)) break;
   HEAP32[$$0$i$i >> 2] = HEAP32[$147 >> 2];
   $$0$i$i = $$0$i$i + 4 | 0;
   $147 = $147 + 4 | 0;
  }
  HEAP32[$2 >> 2] = $143 + ($146 >>> 2 << 2);
 }
 switch (($3 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$1 >> 2] = $0;
 }
 return;
}

function __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 var $$$097 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i106 = 0, $$0$i$i113 = 0, $$0101 = 0, $$0104 = 0, $$07$i$i = 0, $$093 = 0, $$095 = 0, $$097 = 0, $$099 = 0, $$1 = 0, $$1100 = 0, $$1102 = 0, $$194 = 0, $$196 = 0, $$2 = 0, $$2103 = 0, $$3 = 0, $$pn = 0, $$sroa$08$0$i = 0, $$sroa$08$0$i112 = 0, $100 = 0, $101 = 0, $103 = 0, $104 = 0, $115 = 0, $117 = 0, $118 = 0, $119 = 0, $127 = 0, $130 = 0, $131 = 0, $132 = 0, $135 = 0, $137 = 0, $139 = 0, $144 = 0, $145 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $57 = 0, $60 = 0, $61 = 0, $67 = 0, $70 = 0, $80 = 0, $82 = 0, $83 = 0, $84 = 0, $92 = 0, $94 = 0;
 HEAP32[$2 >> 2] = $0;
 $15 = $13 + 11 | 0;
 $16 = $13 + 4 | 0;
 $17 = $12 + 11 | 0;
 $18 = $12 + 4 | 0;
 $20 = ($3 & 512 | 0) == 0;
 $21 = $6 + 8 | 0;
 $22 = ($14 | 0) > 0;
 $23 = $11 + 11 | 0;
 $24 = $11 + 4 | 0;
 $$0104 = 0;
 $$097 = $4;
 while (1) {
  if (($$0104 | 0) == 4) break;
  L4 : do switch (HEAP8[$8 + $$0104 >> 0] | 0) {
  case 0:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $$2 = $$097;
    break;
   }
  case 1:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $39 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($6, 32) | 0;
    $40 = HEAP32[$2 >> 2] | 0;
    HEAP32[$2 >> 2] = $40 + 1;
    HEAP8[$40 >> 0] = $39;
    $$2 = $$097;
    break;
   }
  case 3:
   {
    $42 = HEAP8[$15 >> 0] | 0;
    $43 = $42 << 24 >> 24 < 0;
    if (!(($43 ? HEAP32[$16 >> 2] | 0 : $42 & 255) | 0)) $$2 = $$097; else {
     $50 = HEAP8[($43 ? HEAP32[$13 >> 2] | 0 : $13) >> 0] | 0;
     $51 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $51 + 1;
     HEAP8[$51 >> 0] = $50;
     $$2 = $$097;
    }
    break;
   }
  case 2:
   {
    $53 = HEAP8[$17 >> 0] | 0;
    $54 = $53 << 24 >> 24 < 0;
    $57 = $54 ? HEAP32[$18 >> 2] | 0 : $53 & 255;
    if ($20 | ($57 | 0) == 0) $$2 = $$097; else {
     $60 = $54 ? HEAP32[$12 >> 2] | 0 : $12;
     $61 = $60 + $57 | 0;
     $$0$i$i113 = HEAP32[$2 >> 2] | 0;
     $$sroa$08$0$i112 = $60;
     while (1) {
      if (($$sroa$08$0$i112 | 0) == ($61 | 0)) break;
      HEAP8[$$0$i$i113 >> 0] = HEAP8[$$sroa$08$0$i112 >> 0] | 0;
      $$0$i$i113 = $$0$i$i113 + 1 | 0;
      $$sroa$08$0$i112 = $$sroa$08$0$i112 + 1 | 0;
     }
     HEAP32[$2 >> 2] = $$0$i$i113;
     $$2 = $$097;
    }
    break;
   }
  case 4:
   {
    $67 = HEAP32[$2 >> 2] | 0;
    $$$097 = $7 ? $$097 + 1 | 0 : $$097;
    $$0101 = $$$097;
    while (1) {
     if ($$0101 >>> 0 >= $5 >>> 0) break;
     $70 = HEAP8[$$0101 >> 0] | 0;
     if ($70 << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[$21 >> 2] | 0) + ($70 << 24 >> 24 << 1) >> 1] & 2048)) break;
     $$0101 = $$0101 + 1 | 0;
    }
    if ($22) {
     $$099 = $14;
     $$1102 = $$0101;
     while (1) {
      $80 = ($$099 | 0) > 0;
      if (!($$1102 >>> 0 > $$$097 >>> 0 & $80)) break;
      $82 = $$1102 + -1 | 0;
      $83 = HEAP8[$82 >> 0] | 0;
      $84 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $84 + 1;
      HEAP8[$84 >> 0] = $83;
      $$099 = $$099 + -1 | 0;
      $$1102 = $82;
     }
     if ($80) $94 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($6, 48) | 0; else $94 = 0;
     $$1100 = $$099;
     while (1) {
      $92 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $92 + 1;
      if (($$1100 | 0) <= 0) break;
      HEAP8[$92 >> 0] = $94;
      $$1100 = $$1100 + -1 | 0;
     }
     HEAP8[$92 >> 0] = $9;
     $$2103 = $$1102;
    } else $$2103 = $$0101;
    L35 : do if (($$2103 | 0) == ($$$097 | 0)) {
     $100 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($6, 48) | 0;
     $101 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $101 + 1;
     HEAP8[$101 >> 0] = $100;
    } else {
     $103 = HEAP8[$23 >> 0] | 0;
     $104 = $103 << 24 >> 24 < 0;
     if (!(($104 ? HEAP32[$24 >> 2] | 0 : $103 & 255) | 0)) {
      $$0 = -1;
      $$093 = 0;
      $$095 = 0;
      $$3 = $$2103;
     } else {
      $$0 = HEAP8[($104 ? HEAP32[$11 >> 2] | 0 : $11) >> 0] | 0;
      $$093 = 0;
      $$095 = 0;
      $$3 = $$2103;
     }
     while (1) {
      if (($$3 | 0) == ($$$097 | 0)) break L35;
      if (($$095 | 0) == ($$0 | 0)) {
       $115 = HEAP32[$2 >> 2] | 0;
       HEAP32[$2 >> 2] = $115 + 1;
       HEAP8[$115 >> 0] = $10;
       $117 = $$093 + 1 | 0;
       $118 = HEAP8[$23 >> 0] | 0;
       $119 = $118 << 24 >> 24 < 0;
       if ($117 >>> 0 < ($119 ? HEAP32[$24 >> 2] | 0 : $118 & 255) >>> 0) {
        $127 = HEAP8[($119 ? HEAP32[$11 >> 2] | 0 : $11) + $117 >> 0] | 0;
        $$1 = $127 << 24 >> 24 == 127 ? -1 : $127 << 24 >> 24;
        $$194 = $117;
        $$196 = 0;
       } else {
        $$1 = $$095;
        $$194 = $117;
        $$196 = 0;
       }
      } else {
       $$1 = $$0;
       $$194 = $$093;
       $$196 = $$095;
      }
      $130 = $$3 + -1 | 0;
      $131 = HEAP8[$130 >> 0] | 0;
      $132 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $132 + 1;
      HEAP8[$132 >> 0] = $131;
      $$0 = $$1;
      $$093 = $$194;
      $$095 = $$196 + 1 | 0;
      $$3 = $130;
     }
    } while (0);
    $135 = HEAP32[$2 >> 2] | 0;
    if (($67 | 0) == ($135 | 0)) $$2 = $$$097; else {
     $$0$i$i106 = $135;
     $$07$i$i = $67;
     while (1) {
      $137 = $$0$i$i106 + -1 | 0;
      if ($$07$i$i >>> 0 >= $137 >>> 0) {
       $$2 = $$$097;
       break L4;
      }
      $139 = HEAP8[$$07$i$i >> 0] | 0;
      HEAP8[$$07$i$i >> 0] = HEAP8[$137 >> 0] | 0;
      HEAP8[$137 >> 0] = $139;
      $$0$i$i106 = $137;
      $$07$i$i = $$07$i$i + 1 | 0;
     }
    }
    break;
   }
  default:
   $$2 = $$097;
  } while (0);
  $$0104 = $$0104 + 1 | 0;
  $$097 = $$2;
 }
 $25 = HEAP8[$15 >> 0] | 0;
 $26 = $25 << 24 >> 24 < 0;
 $29 = $26 ? HEAP32[$16 >> 2] | 0 : $25 & 255;
 if ($29 >>> 0 > 1) {
  $144 = $26 ? HEAP32[$13 >> 2] | 0 : $13;
  $145 = $144 + $29 | 0;
  $$0$i$i = HEAP32[$2 >> 2] | 0;
  $$pn = $144;
  while (1) {
   $$sroa$08$0$i = $$pn + 1 | 0;
   if (($$sroa$08$0$i | 0) == ($145 | 0)) break;
   HEAP8[$$0$i$i >> 0] = HEAP8[$$sroa$08$0$i >> 0] | 0;
   $$0$i$i = $$0$i$i + 1 | 0;
   $$pn = $$sroa$08$0$i;
  }
  HEAP32[$2 >> 2] = $$0$i$i;
 }
 switch (($3 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$1 >> 2] = $0;
 }
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $107 = 0, $11 = 0, $112 = 0, $119 = 0, $12 = 0, $124 = 0, $13 = 0, $134 = 0, $14 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $148 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $124 = 0;
   $149 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$31 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i19, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $124 = 0;
    $149 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $124 = $148;
    $149 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$46 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($149) {
    $150 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($149) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $150 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$78 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i36, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $150;
   break;
  }
  $91 = HEAP32[$77 >> 2] | 0;
  if (($91 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $148 = $124;
   continue;
  } else {
   HEAP32[$77 >> 2] = $91 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$91 >> 2] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $148 = $124;
   continue;
  }
 }
 $100 = HEAP8[$8 + 11 >> 0] | 0;
 if (($100 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $100 & 255) | 0) {
  $107 = HEAP32[$12 >> 2] | 0;
  if (($107 - $11 | 0) < 160) {
   $112 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $107 + 4;
   HEAP32[$107 >> 2] = $112;
  }
 }
 HEAP16[$5 >> 1] = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $151 = 1; else {
  $119 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($119 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$124 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$119 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $151 = 1;
  } else $151 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $134 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($134 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$134 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($151) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($151) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $107 = 0, $11 = 0, $112 = 0, $119 = 0, $12 = 0, $124 = 0, $13 = 0, $134 = 0, $14 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $148 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $124 = 0;
   $149 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$31 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i19, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $124 = 0;
    $149 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $124 = $148;
    $149 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$46 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($149) {
    $150 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($149) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $150 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$78 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i36, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $150;
   break;
  }
  $91 = HEAP32[$77 >> 2] | 0;
  if (($91 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $148 = $124;
   continue;
  } else {
   HEAP32[$77 >> 2] = $91 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$91 >> 2] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $148 = $124;
   continue;
  }
 }
 $100 = HEAP8[$8 + 11 >> 0] | 0;
 if (($100 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $100 & 255) | 0) {
  $107 = HEAP32[$12 >> 2] | 0;
  if (($107 - $11 | 0) < 160) {
   $112 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $107 + 4;
   HEAP32[$107 >> 2] = $112;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $151 = 1; else {
  $119 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($119 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$124 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$119 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $151 = 1;
  } else $151 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $134 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($134 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$134 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($151) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($151) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $107 = 0, $11 = 0, $112 = 0, $119 = 0, $12 = 0, $124 = 0, $13 = 0, $134 = 0, $14 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $148 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $124 = 0;
   $149 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$31 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i19, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $124 = 0;
    $149 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $124 = $148;
    $149 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$46 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($149) {
    $150 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($149) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $150 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$78 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i36, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $150;
   break;
  }
  $91 = HEAP32[$77 >> 2] | 0;
  if (($91 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $148 = $124;
   continue;
  } else {
   HEAP32[$77 >> 2] = $91 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$91 >> 2] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $148 = $124;
   continue;
  }
 }
 $100 = HEAP8[$8 + 11 >> 0] | 0;
 if (($100 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $100 & 255) | 0) {
  $107 = HEAP32[$12 >> 2] | 0;
  if (($107 - $11 | 0) < 160) {
   $112 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $107 + 4;
   HEAP32[$107 >> 2] = $112;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $151 = 1; else {
  $119 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($119 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$124 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$119 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $151 = 1;
  } else $151 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $134 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($134 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$134 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($151) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($151) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $108 = 0, $11 = 0, $113 = 0, $12 = 0, $120 = 0, $125 = 0, $13 = 0, $135 = 0, $14 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $149 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $125 = 0;
   $150 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$31 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i19, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $125 = 0;
    $150 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $125 = $149;
    $150 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$46 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($150) {
    $151 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($150) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $151 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$78 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i36 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $151;
   break;
  }
  $92 = HEAP32[$77 >> 2] | 0;
  if (($92 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $149 = $125;
   continue;
  } else {
   HEAP32[$77 >> 2] = $92 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$92 >> 0] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $149 = $125;
   continue;
  }
 }
 $101 = HEAP8[$8 + 11 >> 0] | 0;
 if (($101 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $101 & 255) | 0) {
  $108 = HEAP32[$12 >> 2] | 0;
  if (($108 - $11 | 0) < 160) {
   $113 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $108 + 4;
   HEAP32[$108 >> 2] = $113;
  }
 }
 HEAP16[$5 >> 1] = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $152 = 1; else {
  $120 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($120 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$125 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$120 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $152 = 1;
  } else $152 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $135 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($135 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$135 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($152) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($152) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $108 = 0, $11 = 0, $113 = 0, $12 = 0, $120 = 0, $125 = 0, $13 = 0, $135 = 0, $14 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $149 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $125 = 0;
   $150 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$31 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i19, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $125 = 0;
    $150 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $125 = $149;
    $150 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$46 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($150) {
    $151 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($150) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $151 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$78 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i36 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $151;
   break;
  }
  $92 = HEAP32[$77 >> 2] | 0;
  if (($92 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $149 = $125;
   continue;
  } else {
   HEAP32[$77 >> 2] = $92 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$92 >> 0] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $149 = $125;
   continue;
  }
 }
 $101 = HEAP8[$8 + 11 >> 0] | 0;
 if (($101 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $101 & 255) | 0) {
  $108 = HEAP32[$12 >> 2] | 0;
  if (($108 - $11 | 0) < 160) {
   $113 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $108 + 4;
   HEAP32[$108 >> 2] = $113;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $152 = 1; else {
  $120 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($120 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$125 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$120 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $152 = 1;
  } else $152 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $135 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($135 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$135 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($152) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($152) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $108 = 0, $11 = 0, $113 = 0, $12 = 0, $120 = 0, $125 = 0, $13 = 0, $135 = 0, $14 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $149 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $125 = 0;
   $150 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$31 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i19, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $125 = 0;
    $150 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $125 = $149;
    $150 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$46 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($150) {
    $151 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($150) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $151 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$78 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i36 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $151;
   break;
  }
  $92 = HEAP32[$77 >> 2] | 0;
  if (($92 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $149 = $125;
   continue;
  } else {
   HEAP32[$77 >> 2] = $92 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$92 >> 0] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $149 = $125;
   continue;
  }
 }
 $101 = HEAP8[$8 + 11 >> 0] | 0;
 if (($101 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $101 & 255) | 0) {
  $108 = HEAP32[$12 >> 2] | 0;
  if (($108 - $11 | 0) < 160) {
   $113 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $108 + 4;
   HEAP32[$108 >> 2] = $113;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $152 = 1; else {
  $120 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($120 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$125 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$120 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $152 = 1;
  } else $152 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $135 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($135 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$135 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($152) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($152) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $107 = 0, $11 = 0, $112 = 0, $119 = 0, $12 = 0, $124 = 0, $13 = 0, $134 = 0, $14 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $148 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $124 = 0;
   $149 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$31 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i19, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $124 = 0;
    $149 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $124 = $148;
    $149 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$46 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($149) {
    $150 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($149) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $150 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$78 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i36, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $150;
   break;
  }
  $91 = HEAP32[$77 >> 2] | 0;
  if (($91 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $148 = $124;
   continue;
  } else {
   HEAP32[$77 >> 2] = $91 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$91 >> 2] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $148 = $124;
   continue;
  }
 }
 $100 = HEAP8[$8 + 11 >> 0] | 0;
 if (($100 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $100 & 255) | 0) {
  $107 = HEAP32[$12 >> 2] | 0;
  if (($107 - $11 | 0) < 160) {
   $112 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $107 + 4;
   HEAP32[$107 >> 2] = $112;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $151 = 1; else {
  $119 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($119 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$124 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$119 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $151 = 1;
  } else $151 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $134 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($134 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$134 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($151) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($151) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $108 = 0, $11 = 0, $113 = 0, $12 = 0, $120 = 0, $125 = 0, $13 = 0, $135 = 0, $14 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $27;
 $$pre$i$i$i21 = $$pre;
 $149 = $$pre;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $125 = 0;
   $150 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$31 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i19, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $125 = 0;
    $150 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $125 = $149;
    $150 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$46 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($150) {
    $151 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($150) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $151 = 0;
  }
  $59 = HEAP8[$17 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $63 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $71 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $71, 0);
   $75 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$78 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i36 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $151;
   break;
  }
  $92 = HEAP32[$77 >> 2] | 0;
  if (($92 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $149 = $125;
   continue;
  } else {
   HEAP32[$77 >> 2] = $92 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$92 >> 0] | 0) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   $149 = $125;
   continue;
  }
 }
 $101 = HEAP8[$8 + 11 >> 0] | 0;
 if (($101 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $101 & 255) | 0) {
  $108 = HEAP32[$12 >> 2] | 0;
  if (($108 - $11 | 0) < 160) {
   $113 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $108 + 4;
   HEAP32[$108 >> 2] = $113;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $152 = 1; else {
  $120 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($120 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$125 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$120 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $152 = 1;
  } else $152 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $135 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($135 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$135 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($152) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($152) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZN3HFM17HFMMultiEvaluator8evaluateERK6RepHFMPKi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $104 = 0, $107 = 0, $109 = 0, $110 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $123 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $135 = 0, $136 = 0, $137 = 0, $141 = 0, $144 = 0, $147 = 0, $162 = 0, $164 = 0, $17 = 0, $171 = 0, $173 = 0, $18 = 0, $180 = 0, $181 = 0, $20 = 0, $26 = 0, $29 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $46 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $59 = 0, $60 = 0, $64 = 0, $67 = 0, $70 = 0, $85 = 0, $87 = 0, $9 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $4 = sp + 72 | 0;
 $5 = sp;
 $9 = $0 + 12 | 0;
 HEAP8[$9 + 4 >> 0] = 0;
 HEAP32[$0 + 8 >> 2] = 2;
 HEAP8[$0 + 15 >> 0] = 0;
 HEAP8[$9 >> 0] = 1;
 HEAP8[$0 + 13 >> 0] = 1;
 HEAP8[$0 + 14 >> 0] = 0;
 HEAP32[$0 >> 2] = 4868;
 HEAP32[$0 + 20 >> 2] = 0;
 $13 = $0 + 24 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = 0;
 $17 = __ZN3HFM12HFMEvaluator11evaluateAllERK6RepHFMiPNSt3__26vectorINS5_IdNS4_9allocatorIdEEEENS6_IS8_EEEE(HEAP32[$1 + 52 >> 2] | 0, $2, 11, 0) | 0;
 $18 = $17 + 4 | 0;
 $20 = HEAP32[$17 >> 2] | 0;
 if ((HEAP32[$18 >> 2] | 0) == ($20 | 0)) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($17);
 $26 = $4 + 12 | 0;
 HEAP8[$26 + 4 >> 0] = 0;
 HEAP32[$4 + 8 >> 2] = 2;
 HEAP8[$4 + 15 >> 0] = 0;
 HEAP8[$26 >> 0] = 1;
 HEAP8[$4 + 13 >> 0] = 1;
 HEAP8[$4 + 14 >> 0] = 0;
 HEAP32[$4 >> 2] = 4920;
 $29 = $4 + 24 | 0;
 HEAPF64[$29 >> 3] = +HEAPF64[$20 >> 3];
 $31 = $4 + 40 | 0;
 HEAP32[$31 >> 2] = 0;
 $32 = $4 + 44 | 0;
 HEAP32[$32 >> 2] = 0;
 HEAP32[$4 + 48 >> 2] = 0;
 $34 = $4 + 64 | 0;
 HEAPF64[$34 >> 3] = 1.0;
 $35 = $4 + 32 | 0;
 HEAPF64[$35 >> 3] = 0.0;
 $36 = $4 + 52 | 0;
 HEAP32[$36 >> 2] = 2;
 $37 = $4 + 56 | 0;
 HEAP8[$37 >> 0] = 0;
 $38 = $4 + 57 | 0;
 HEAP8[$38 >> 0] = 0;
 $39 = HEAP32[$13 >> 2] | 0;
 $40 = $0 + 28 | 0;
 if (($39 | 0) == (HEAP32[$40 >> 2] | 0)) {
  __ZNSt3__26vectorIN8optframe10EvaluationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0 + 20 | 0, $4);
  $85 = HEAP32[$31 >> 2] | 0;
 } else {
  $46 = $39 + 12 | 0;
  HEAP8[$46 + 4 >> 0] = 0;
  HEAP32[$39 + 8 >> 2] = 2;
  HEAP8[$39 + 15 >> 0] = 0;
  HEAP8[$46 >> 0] = 1;
  HEAP8[$39 + 13 >> 0] = 1;
  HEAP8[$39 + 14 >> 0] = 0;
  HEAP32[$39 >> 2] = 4920;
  HEAPF64[$39 + 24 >> 3] = +HEAPF64[$29 >> 3];
  HEAPF64[$39 + 32 >> 3] = +HEAPF64[$35 >> 3];
  $53 = $39 + 40 | 0;
  $54 = $4 + 40 | 0;
  HEAP32[$53 >> 2] = 0;
  $55 = $39 + 44 | 0;
  HEAP32[$55 >> 2] = 0;
  HEAP32[$39 + 48 >> 2] = 0;
  $58 = HEAP32[$54 >> 2] | 0;
  $59 = (HEAP32[$32 >> 2] | 0) - $58 | 0;
  $60 = $59 >> 4;
  if (!$60) $180 = $58; else {
   if ($60 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($53);
   $64 = __Znwj($59) | 0;
   HEAP32[$55 >> 2] = $64;
   HEAP32[$53 >> 2] = $64;
   HEAP32[$39 + 48 >> 2] = $64 + ($60 << 4);
   $67 = HEAP32[$54 >> 2] | 0;
   $70 = (HEAP32[$32 >> 2] | 0) - $67 | 0;
   if (($70 | 0) > 0) {
    _memcpy($64 | 0, $67 | 0, $70 | 0) | 0;
    HEAP32[$55 >> 2] = $64 + ($70 >>> 4 << 4);
    $180 = $67;
   } else $180 = $67;
  }
  HEAP32[$39 + 52 >> 2] = HEAP32[$36 >> 2];
  HEAP8[$39 + 56 >> 0] = HEAP8[$37 >> 0] | 0;
  HEAP8[$39 + 57 >> 0] = HEAP8[$38 >> 0] | 0;
  HEAPF64[$39 + 64 >> 3] = +HEAPF64[$34 >> 3];
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 72;
  $85 = $180;
 }
 HEAP32[$4 >> 2] = 4920;
 if ($85 | 0) {
  $87 = HEAP32[$32 >> 2] | 0;
  if (($87 | 0) != ($85 | 0)) HEAP32[$32 >> 2] = $87 + (~(($87 + -16 - $85 | 0) >>> 4) << 4);
  __ZdlPv($85);
 }
 $95 = HEAP32[$17 >> 2] | 0;
 if ((HEAP32[$18 >> 2] | 0) - $95 >> 3 >>> 0 <= 4) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($17);
 $104 = $5 + 12 | 0;
 HEAP8[$104 + 4 >> 0] = 0;
 HEAP32[$5 + 8 >> 2] = 2;
 HEAP8[$5 + 15 >> 0] = 0;
 HEAP8[$104 >> 0] = 1;
 HEAP8[$5 + 13 >> 0] = 1;
 HEAP8[$5 + 14 >> 0] = 0;
 HEAP32[$5 >> 2] = 4920;
 $107 = $5 + 24 | 0;
 HEAPF64[$107 >> 3] = +HEAPF64[$95 + 32 >> 3];
 $109 = $5 + 40 | 0;
 HEAP32[$109 >> 2] = 0;
 $110 = $5 + 44 | 0;
 HEAP32[$110 >> 2] = 0;
 HEAP32[$5 + 48 >> 2] = 0;
 $112 = $5 + 64 | 0;
 HEAPF64[$112 >> 3] = 1.0;
 $113 = $5 + 32 | 0;
 HEAPF64[$113 >> 3] = 0.0;
 $114 = $5 + 52 | 0;
 HEAP32[$114 >> 2] = 2;
 $115 = $5 + 56 | 0;
 HEAP8[$115 >> 0] = 0;
 $116 = $5 + 57 | 0;
 HEAP8[$116 >> 0] = 0;
 $117 = HEAP32[$13 >> 2] | 0;
 if (($117 | 0) == (HEAP32[$40 >> 2] | 0)) {
  __ZNSt3__26vectorIN8optframe10EvaluationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0 + 20 | 0, $5);
  $162 = HEAP32[$109 >> 2] | 0;
 } else {
  $123 = $117 + 12 | 0;
  HEAP8[$123 + 4 >> 0] = 0;
  HEAP32[$117 + 8 >> 2] = 2;
  HEAP8[$117 + 15 >> 0] = 0;
  HEAP8[$123 >> 0] = 1;
  HEAP8[$117 + 13 >> 0] = 1;
  HEAP8[$117 + 14 >> 0] = 0;
  HEAP32[$117 >> 2] = 4920;
  HEAPF64[$117 + 24 >> 3] = +HEAPF64[$107 >> 3];
  HEAPF64[$117 + 32 >> 3] = +HEAPF64[$113 >> 3];
  $130 = $117 + 40 | 0;
  $131 = $5 + 40 | 0;
  HEAP32[$130 >> 2] = 0;
  $132 = $117 + 44 | 0;
  HEAP32[$132 >> 2] = 0;
  HEAP32[$117 + 48 >> 2] = 0;
  $135 = HEAP32[$131 >> 2] | 0;
  $136 = (HEAP32[$110 >> 2] | 0) - $135 | 0;
  $137 = $136 >> 4;
  if (!$137) $181 = $135; else {
   if ($137 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($130);
   $141 = __Znwj($136) | 0;
   HEAP32[$132 >> 2] = $141;
   HEAP32[$130 >> 2] = $141;
   HEAP32[$117 + 48 >> 2] = $141 + ($137 << 4);
   $144 = HEAP32[$131 >> 2] | 0;
   $147 = (HEAP32[$110 >> 2] | 0) - $144 | 0;
   if (($147 | 0) > 0) {
    _memcpy($141 | 0, $144 | 0, $147 | 0) | 0;
    HEAP32[$132 >> 2] = $141 + ($147 >>> 4 << 4);
    $181 = $144;
   } else $181 = $144;
  }
  HEAP32[$117 + 52 >> 2] = HEAP32[$114 >> 2];
  HEAP8[$117 + 56 >> 0] = HEAP8[$115 >> 0] | 0;
  HEAP8[$117 + 57 >> 0] = HEAP8[$116 >> 0] | 0;
  HEAPF64[$117 + 64 >> 3] = +HEAPF64[$112 >> 3];
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 72;
  $162 = $181;
 }
 HEAP32[$5 >> 2] = 4920;
 if ($162 | 0) {
  $164 = HEAP32[$110 >> 2] | 0;
  if (($164 | 0) != ($162 | 0)) HEAP32[$110 >> 2] = $164 + (~(($164 + -16 - $162 | 0) >>> 4) << 4);
  __ZdlPv($162);
 }
 $171 = HEAP32[$17 >> 2] | 0;
 if (!$171) {
  __ZdlPv($17);
  STACKTOP = sp;
  return;
 }
 $173 = HEAP32[$18 >> 2] | 0;
 if (($173 | 0) != ($171 | 0)) HEAP32[$18 >> 2] = $173 + (~(($173 + -8 - $171 | 0) >>> 3) << 3);
 __ZdlPv($171);
 __ZdlPv($17);
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i110 = 0, $$0101 = 0, $$0102 = 0, $$0104 = 0, $$0106 = 0, $$07$i$i = 0, $$07$i$i109 = 0, $$1 = 0, $$1103 = 0, $$1105 = 0, $$1107 = 0, $$2 = 0, $$2108 = 0, $$3 = 0, $$pre$phiZ2D = 0, $100 = 0, $104 = 0, $116 = 0, $117 = 0, $122 = 0, $124 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $134 = 0, $135 = 0, $136 = 0, $140 = 0, $144 = 0, $149 = 0, $150 = 0, $18 = 0, $19 = 0, $21 = 0, $27 = 0, $32 = 0, $33 = 0, $35 = 0, $40 = 0, $41 = 0, $45 = 0, $52 = 0, $57 = 0, $58 = 0, $60 = 0, $65 = 0, $66 = 0, $7 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $84 = 0, $87 = 0, $88 = 0, $9 = 0, $90 = 0, $92 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34568) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34576) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 127]($7, $9);
 HEAP32[$5 >> 2] = $3;
 $13 = HEAP8[$0 >> 0] | 0;
 switch ($13 << 24 >> 24) {
 case 43:
 case 45:
  {
   $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, $13) | 0;
   $19 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $19 + 4;
   HEAP32[$19 >> 2] = $18;
   $$0104 = $0 + 1 | 0;
   break;
  }
 default:
  $$0104 = $0;
 }
 $21 = $2;
 L4 : do if (($21 - $$0104 | 0) > 1) if ((HEAP8[$$0104 >> 0] | 0) == 48) {
  $27 = $$0104 + 1 | 0;
  switch (HEAP8[$27 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    $$1107 = $$0104;
    label = 10;
    break L4;
   }
  }
  $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, 48) | 0;
  $33 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $33 + 4;
  HEAP32[$33 >> 2] = $32;
  $35 = $$0104 + 2 | 0;
  $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$27 >> 0] | 0) | 0;
  $41 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $41 + 4;
  HEAP32[$41 >> 2] = $40;
  $$0106 = $35;
  while (1) {
   if ($$0106 >>> 0 >= $2 >>> 0) {
    $$1105 = $35;
    $$2108 = $$0106;
    break L4;
   }
   $45 = HEAP8[$$0106 >> 0] | 0;
   if (!(_isxdigit_l($45, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1105 = $35;
    $$2108 = $$0106;
    break L4;
   }
   $$0106 = $$0106 + 1 | 0;
  }
 } else {
  $$1107 = $$0104;
  label = 10;
 } else {
  $$1107 = $$0104;
  label = 10;
 } while (0);
 L12 : do if ((label | 0) == 10) while (1) {
  label = 0;
  if ($$1107 >>> 0 >= $2 >>> 0) {
   $$1105 = $$0104;
   $$2108 = $$1107;
   break L12;
  }
  $52 = HEAP8[$$1107 >> 0] | 0;
  if (!(_isdigit_l($52, __ZNSt3__26__clocEv() | 0) | 0)) {
   $$1105 = $$0104;
   $$2108 = $$1107;
   break L12;
  }
  $$1107 = $$1107 + 1 | 0;
  label = 10;
 } while (0);
 $57 = $7 + 11 | 0;
 $58 = HEAP8[$57 >> 0] | 0;
 $60 = $7 + 4 | 0;
 $65 = $$1105;
 $66 = $0;
 L18 : do if (!(($58 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $58 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 31]($8, $$1105, $$2108, HEAP32[$5 >> 2] | 0) | 0;
  $74 = (HEAP32[$5 >> 2] | 0) + ($$2108 - $65 << 2) | 0;
  HEAP32[$5 >> 2] = $74;
  $$pre$phiZ2D = $8;
  $149 = $74;
 } else {
  L21 : do if (($$1105 | 0) != ($$2108 | 0)) {
   $$0$i$i = $$2108;
   $$07$i$i = $$1105;
   while (1) {
    $76 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $76 >>> 0) break L21;
    $78 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$76 >> 0] | 0;
    HEAP8[$76 >> 0] = $78;
    $$0$i$i = $76;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $84 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$1105;
  $$0101 = 0;
  $$0102 = 0;
  while (1) {
   if ($$0 >>> 0 >= $$2108 >>> 0) break;
   $95 = HEAP8[$57 >> 0] | 0;
   $96 = $95 << 24 >> 24 < 0;
   $100 = HEAP8[($96 ? HEAP32[$7 >> 2] | 0 : $7) + $$0101 >> 0] | 0;
   if ($100 << 24 >> 24 > 0 & ($$0102 | 0) == ($100 << 24 >> 24 | 0)) {
    $104 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $104 + 4;
    HEAP32[$104 >> 2] = $84;
    $$1 = ($$0101 >>> 0 < (($96 ? HEAP32[$60 >> 2] | 0 : $95 & 255) + -1 | 0) >>> 0 & 1) + $$0101 | 0;
    $$1103 = 0;
   } else {
    $$1 = $$0101;
    $$1103 = $$0102;
   }
   $116 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $117 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $117 + 4;
   HEAP32[$117 >> 2] = $116;
   $$0 = $$0 + 1 | 0;
   $$0101 = $$1;
   $$0102 = $$1103 + 1 | 0;
  }
  $87 = $3 + ($65 - $66 << 2) | 0;
  $88 = HEAP32[$5 >> 2] | 0;
  if (($87 | 0) == ($88 | 0)) {
   $$pre$phiZ2D = $8;
   $149 = $87;
  } else {
   $$0$i$i110 = $88;
   $$07$i$i109 = $87;
   while (1) {
    $90 = $$0$i$i110 + -4 | 0;
    if ($$07$i$i109 >>> 0 >= $90 >>> 0) {
     $$pre$phiZ2D = $8;
     $149 = $88;
     break L18;
    }
    $92 = HEAP32[$$07$i$i109 >> 2] | 0;
    HEAP32[$$07$i$i109 >> 2] = HEAP32[$90 >> 2];
    HEAP32[$90 >> 2] = $92;
    $$0$i$i110 = $90;
    $$07$i$i109 = $$07$i$i109 + 4 | 0;
   }
  }
 } while (0);
 $$2 = $$2108;
 $150 = $149;
 while (1) {
  if ($$2 >>> 0 >= $2 >>> 0) {
   $$3 = $$2;
   $140 = $150;
   break;
  }
  $122 = HEAP8[$$2 >> 0] | 0;
  $124 = $$2 + 1 | 0;
  if ($122 << 24 >> 24 == 46) {
   label = 29;
   break;
  }
  $134 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 44 >> 2] & 63]($8, $122) | 0;
  $135 = HEAP32[$5 >> 2] | 0;
  $136 = $135 + 4 | 0;
  HEAP32[$5 >> 2] = $136;
  HEAP32[$135 >> 2] = $134;
  $$2 = $124;
  $150 = $136;
 }
 if ((label | 0) == 29) {
  $128 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] & 127]($9) | 0;
  $129 = HEAP32[$5 >> 2] | 0;
  $130 = $129 + 4 | 0;
  HEAP32[$5 >> 2] = $130;
  HEAP32[$129 >> 2] = $128;
  $$3 = $124;
  $140 = $130;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 31]($8, $$3, $2, $140) | 0;
 $144 = (HEAP32[$5 >> 2] | 0) + ($21 - $$3 << 2) | 0;
 HEAP32[$5 >> 2] = $144;
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $144 : $3 + ($1 - $66 << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26locale5__impC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 13608;
 $5 = $0 + 8 | 0;
 __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($5, 28);
 $6 = $0 + 144 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $7 = __ZNSt3__211char_traitsIcE6lengthEPKc(26836) | 0;
 if ($7 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($6);
 if ($7 >>> 0 < 11) {
  HEAP8[$6 + 11 >> 0] = $7;
  $$0$i$i = $6;
 } else {
  $13 = $7 + 16 & -16;
  $14 = __Znwj($13) | 0;
  HEAP32[$6 >> 2] = $14;
  HEAP32[$0 + 152 >> 2] = $13 | -2147483648;
  HEAP32[$0 + 148 >> 2] = $7;
  $$0$i$i = $14;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i$i, 26836, $7) | 0;
 HEAP8[$2 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0$i$i + $7 | 0, $2);
 $19 = HEAP32[$5 >> 2] | 0;
 $20 = $0 + 12 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 while (1) {
  if (($21 | 0) == ($19 | 0)) break;
  $23 = $21 + -4 | 0;
  HEAP32[$20 >> 2] = $23;
  $21 = $23;
 }
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_($0, 29832);
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_($0, 29840);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_($0, 29848);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_($0, 29864);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($0, 29872);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($0, 29880);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($0, 29896);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($0, 29904);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_($0, 29912);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_($0, 29936);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 29968);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 29976);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 29984);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 29992);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($0, 3e4);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($0, 30008);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($0, 30016);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($0, 30024);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 30032);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 30040);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 30048);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 30056);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 30064);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 30080);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 30096);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 30112);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_($0, 30128);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_($0, 30136);
 STACKTOP = sp;
 return;
}

function __ZN3HFM12HFMEvaluator9getKValueEiiiiRKNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEERKS5_($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0.0, $10 = 0, $102 = 0, $105 = 0, $109 = 0, $110 = 0, $113 = 0, $125 = 0, $128 = 0, $137 = 0, $14 = 0, $141 = 0, $142 = 0, $145 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $30 = 0, $34 = 0, $39 = 0, $44 = 0, $48 = 0, $52 = 0, $57 = 0, $61 = 0, $67 = 0, $7 = 0, $8 = 0, $83 = 0, $88 = 0, $92 = 0, $93 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $7 = sp;
 $8 = $5 + 4 | 0;
 $10 = HEAP32[$5 >> 2] | 0;
 if ((((HEAP32[$8 >> 2] | 0) - $10 | 0) / 12 | 0) >>> 0 <= $2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($5);
 $14 = $10;
 $20 = (HEAP32[$14 + ($2 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$14 + ($2 * 12 | 0) >> 2] | 0) >> 3;
 $21 = $4 + $3 | 0;
 $22 = $21 - $1 | 0;
 if (($22 | 0) < 0) {
  $25 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16184, 51) | 0, $22) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $25 + (HEAP32[(HEAP32[$25 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $30 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 34536) | 0;
  $34 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$30 >> 2] | 0) + 28 >> 2] & 63]($30, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($25, $34) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($25) | 0;
  $39 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj(33664, ((HEAP32[$8 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) | 0) / 12 | 0) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $39 + (HEAP32[(HEAP32[$39 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $44 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 34536) | 0;
  $48 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$44 >> 2] | 0) + 28 >> 2] & 63]($44, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($39, $48) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($39) | 0;
  $52 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16236, 14) | 0, $2) | 0, 16251, 11) | 0, $20) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $52 + (HEAP32[(HEAP32[$52 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $57 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 34536) | 0;
  $61 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$57 >> 2] | 0) + 28 >> 2] & 63]($57, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($52, $61) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($52) | 0;
 }
 if (!$1) {
  if ((HEAP32[$0 + 156 >> 2] | 0) == ($2 | 0)) ___assert_fail(16263, 16106, 216, 16289);
  $67 = HEAP32[$0 + 108 >> 2] | 0;
  if ((HEAP32[$67 + 92 >> 2] | 0) < ($2 | 0)) ___assert_fail(16299, 15934, 156, 16362);
  if (!(HEAP32[(HEAP32[$67 + 88 >> 2] | 0) + ($2 >>> 5 << 2) >> 2] & 1 << ($2 & 31))) {
   $83 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16399, 44) | 0, 0) | 0, 16444, 10) | 0, $2) | 0;
   __ZNKSt3__28ios_base6getlocEv($7, $83 + (HEAP32[(HEAP32[$83 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $88 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 34536) | 0;
   $92 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$88 >> 2] | 0) + 28 >> 2] & 63]($88, 10) | 0;
   __ZNSt3__26localeD2Ev($7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($83, $92) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($83) | 0;
   $93 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16455, 68) | 0;
   __ZNKSt3__28ios_base6getlocEv($7, $93 + (HEAP32[(HEAP32[$93 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $98 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 34536) | 0;
   $102 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$98 >> 2] | 0) + 28 >> 2] & 63]($98, 10) | 0;
   __ZNSt3__26localeD2Ev($7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($93, $102) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($93) | 0;
   _exit(1);
  }
  if (($21 | 0) >= ($20 | 0)) {
   $$0 = 0.0;
   STACKTOP = sp;
   return +$$0;
  }
  $105 = HEAP32[$5 >> 2] | 0;
  if ((((HEAP32[$8 >> 2] | 0) - $105 | 0) / 12 | 0) >>> 0 <= $2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($5);
  $109 = $105;
  $110 = $109 + ($2 * 12 | 0) | 0;
  $113 = HEAP32[$110 >> 2] | 0;
  if ((HEAP32[$109 + ($2 * 12 | 0) + 4 >> 2] | 0) - $113 >> 3 >>> 0 <= $22 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($110);
  $$0 = +HEAPF64[$113 + ($22 << 3) >> 3];
  STACKTOP = sp;
  return +$$0;
 } else {
  if (($4 | 0) >= ($1 | 0)) if (($1 | 0) > 0 ? (HEAP32[$0 + 156 >> 2] | 0) == ($2 | 0) : 0) {
   $125 = $4 - $1 | 0;
   $128 = HEAP32[$6 >> 2] | 0;
   if ((HEAP32[$6 + 4 >> 2] | 0) - $128 >> 3 >>> 0 <= $125 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($6);
   $$0 = +HEAPF64[$128 + ($125 << 3) >> 3];
   STACKTOP = sp;
   return +$$0;
  }
  if (($22 | 0) >= ($20 | 0)) {
   $$0 = 0.0;
   STACKTOP = sp;
   return +$$0;
  }
  $137 = HEAP32[$5 >> 2] | 0;
  if ((((HEAP32[$8 >> 2] | 0) - $137 | 0) / 12 | 0) >>> 0 <= $2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($5);
  $141 = $137;
  $142 = $141 + ($2 * 12 | 0) | 0;
  $145 = HEAP32[$142 >> 2] | 0;
  if ((HEAP32[$141 + ($2 * 12 | 0) + 4 >> 2] | 0) - $145 >> 3 >>> 0 <= $22 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($142);
  $$0 = +HEAPF64[$145 + ($22 << 3) >> 3];
  STACKTOP = sp;
  return +$$0;
 }
 return +(0.0);
}

function __ZN8optframe9EvaluatorI6RepHFMiE8moveCostERNS_10EvaluationERNS_4MoveIS1_iEERNS_8SolutionIS1_iEEb($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0115 = 0, $$060 = 0, $$061116 = 0, $110 = 0.0, $111 = 0.0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $117 = 0, $118 = 0, $120 = 0, $123 = 0, $128 = 0, $139 = 0, $142 = 0.0, $154 = 0, $159 = 0, $161 = 0, $169 = 0, $17 = 0, $171 = 0, $172 = 0, $26 = 0, $29 = 0, $30 = 0, $32 = 0, $33 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $6 = 0, $63 = 0.0, $64 = 0.0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $73 = 0, $75 = 0, $79 = 0, $85 = 0, $scevgep = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $5 = sp;
 $6 = sp + 72 | 0;
 if (HEAP8[$0 + 88 >> 0] | 0) {
  $17 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 56 >> 2] & 31]($2, $1, HEAP32[$3 + 20 >> 2] | 0, HEAP32[$3 + 24 >> 2] | 0, $4) | 0;
  if ($17 | 0) {
   $$060 = $17;
   STACKTOP = sp;
   return $$060 | 0;
  }
 }
 if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 40 >> 2] & 127]($2) | 0)) ___assert_fail(18727, 18742, 188, 18788);
 $26 = $5 + 12 | 0;
 HEAP8[$26 + 4 >> 0] = 0;
 HEAP32[$5 + 8 >> 2] = 2;
 HEAP8[$5 + 15 >> 0] = 0;
 HEAP8[$26 >> 0] = 1;
 HEAP8[$5 + 13 >> 0] = 1;
 HEAP8[$5 + 14 >> 0] = 0;
 HEAP32[$5 >> 2] = 4920;
 $29 = $5 + 24 | 0;
 $30 = $1 + 24 | 0;
 HEAPF64[$29 >> 3] = +HEAPF64[$30 >> 3];
 $32 = $5 + 32 | 0;
 $33 = $1 + 32 | 0;
 HEAPF64[$32 >> 3] = +HEAPF64[$33 >> 3];
 $36 = $1 + 40 | 0;
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($5 + 40 | 0, $36);
 $37 = $5 + 52 | 0;
 $38 = $1 + 52 | 0;
 HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
 $40 = $5 + 56 | 0;
 $41 = $1 + 56 | 0;
 HEAP8[$40 >> 0] = HEAP8[$41 >> 0] | 0;
 $43 = $5 + 57 | 0;
 $44 = $1 + 57 | 0;
 HEAP8[$43 >> 0] = HEAP8[$44 >> 0] | 0;
 $46 = $5 + 64 | 0;
 $47 = $1 + 64 | 0;
 HEAPF64[$46 >> 3] = +HEAPF64[$47 >> 3];
 $52 = $3 + 20 | 0;
 $54 = $3 + 24 | 0;
 $56 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 48 >> 2] & 31]($2, $1, HEAP32[$52 >> 2] | 0, HEAP32[$54 >> 2] | 0) | 0;
 if (!$56) ___assert_fail(18797, 18742, 144, 18812);
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 80 >> 2] & 31]($0, $1, HEAP32[$52 >> 2] | 0, HEAP32[$54 >> 2] | 0);
 $63 = +HEAPF64[$30 >> 3];
 $64 = +HEAPF64[$33 >> 3];
 $67 = HEAP32[$36 >> 2] | 0;
 $68 = (HEAP32[$1 + 44 >> 2] | 0) - $67 | 0;
 $69 = $68 >> 4;
 HEAP32[$6 >> 2] = 0;
 $70 = $6 + 4 | 0;
 HEAP32[$70 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $73 = $67;
 if (!$69) {
  $113 = $70;
  $115 = $6;
 } else {
  if ($69 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($6);
  $75 = __Znwj($68) | 0;
  HEAP32[$6 >> 2] = $75;
  HEAP32[$6 + 8 >> 2] = $75 + ($69 << 4);
  $scevgep = $75 + $68 | 0;
  _memset($75 | 0, 0, $68 | 0) | 0;
  HEAP32[$70 >> 2] = $scevgep;
  if (($scevgep | 0) == ($75 | 0)) {
   $113 = $70;
   $115 = $6;
  } else {
   $79 = $68 >> 4;
   $$061116 = 0;
   do {
    HEAPF64[$75 + ($$061116 << 4) >> 3] = +HEAPF64[$73 + ($$061116 << 4) >> 3];
    HEAPF64[$75 + ($$061116 << 4) + 8 >> 3] = +HEAPF64[$73 + ($$061116 << 4) + 8 >> 3];
    $$061116 = $$061116 + 1 | 0;
   } while ($$061116 >>> 0 < $79 >>> 0);
   $113 = $70;
   $115 = $6;
  }
 }
 $85 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$56 >> 2] | 0) + 44 >> 2] & 63]($56, HEAP32[$52 >> 2] | 0, HEAP32[$54 >> 2] | 0) | 0;
 if (!$85) ___assert_fail(18832, 18742, 216, 18788);
 if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 40 >> 2] & 127]($56) | 0)) ___assert_fail(18847, 18742, 218, 18788);
 if (($5 | 0) != ($1 | 0)) {
  HEAPF64[$30 >> 3] = +HEAPF64[$29 >> 3];
  HEAPF64[$33 >> 3] = +HEAPF64[$32 >> 3];
  HEAP8[$41 >> 0] = HEAP8[$40 >> 0] | 0;
  HEAP8[$44 >> 0] = HEAP8[$43 >> 0] | 0;
  HEAPF64[$47 >> 3] = +HEAPF64[$46 >> 3];
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($36, HEAP32[$5 + 40 >> 2] | 0, HEAP32[$5 + 44 >> 2] | 0);
  HEAP32[$38 >> 2] = HEAP32[$37 >> 2];
 }
 $110 = +HEAPF64[$30 >> 3];
 $111 = +HEAPF64[$33 >> 3];
 $112 = HEAP32[$113 >> 2] | 0;
 $114 = HEAP32[$115 >> 2] | 0;
 $117 = $114;
 if (($112 | 0) != ($114 | 0)) {
  $118 = HEAP32[$36 >> 2] | 0;
  $120 = $112 - $114 >> 4;
  $$0115 = 0;
  do {
   $123 = $117 + ($$0115 << 4) | 0;
   HEAPF64[$123 >> 3] = +HEAPF64[$123 >> 3] - +HEAPF64[$118 + ($$0115 << 4) >> 3];
   $128 = $117 + ($$0115 << 4) + 8 | 0;
   HEAPF64[$128 >> 3] = +HEAPF64[$128 >> 3] - +HEAPF64[$118 + ($$0115 << 4) + 8 >> 3];
   $$0115 = $$0115 + 1 | 0;
  } while ($$0115 >>> 0 < $120 >>> 0);
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$56 >> 2] | 0) + 4 >> 2] & 511]($56);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$85 >> 2] | 0) + 4 >> 2] & 511]($85);
 $139 = __Znwj(64) | 0;
 $142 = +HEAPF64[$47 >> 3];
 HEAP8[$139 + 16 >> 0] = 0;
 HEAP32[$139 + 8 >> 2] = 2;
 HEAP8[$139 + 15 >> 0] = 0;
 HEAP8[$139 + 12 >> 0] = 1;
 HEAP8[$139 + 13 >> 0] = 1;
 HEAP8[$139 + 14 >> 0] = 0;
 HEAP32[$139 >> 2] = 4004;
 HEAPF64[$139 + 24 >> 3] = $63 - $110;
 HEAPF64[$139 + 32 >> 3] = $64 - $111;
 HEAPF64[$139 + 40 >> 3] = $142;
 HEAP8[$139 + 48 >> 0] = 1;
 HEAP8[$139 + 49 >> 0] = 0;
 $154 = $139 + 52 | 0;
 HEAP32[$154 >> 2] = 0;
 HEAP32[$139 + 56 >> 2] = 0;
 HEAP32[$139 + 60 >> 2] = 0;
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($154, HEAP32[$6 >> 2] | 0, HEAP32[$70 >> 2] | 0);
 $159 = HEAP32[$6 >> 2] | 0;
 if ($159 | 0) {
  $161 = HEAP32[$70 >> 2] | 0;
  if (($161 | 0) != ($159 | 0)) HEAP32[$70 >> 2] = $161 + (~(($161 + -16 - $159 | 0) >>> 4) << 4);
  __ZdlPv($159);
 }
 HEAP32[$5 >> 2] = 4920;
 $169 = HEAP32[$5 + 40 >> 2] | 0;
 if ($169 | 0) {
  $171 = $5 + 44 | 0;
  $172 = HEAP32[$171 >> 2] | 0;
  if (($172 | 0) != ($169 | 0)) HEAP32[$171 >> 2] = $172 + (~(($172 + -16 - $169 | 0) >>> 4) << 4);
  __ZdlPv($169);
 }
 $$060 = $139;
 STACKTOP = sp;
 return $$060 | 0;
}
function ___lgamma_r($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 var $$0174 = 0.0, $$0175 = 0.0, $$0176185 = 0.0, $$0176188 = 0.0, $$0176191 = 0.0, $$0178 = 0.0, $$0179187 = 0.0, $$0179190 = 0.0, $$0180 = 0.0, $$0181 = 0.0, $$1 = 0.0, $$1177 = 0.0, $$1182 = 0.0, $$2183 = 0.0, $$3 = 0.0, $$sink = 0.0, $12 = 0.0, $122 = 0, $124 = 0.0, $13 = 0.0, $152 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $2 = 0, $26 = 0.0, $3 = 0, $34 = 0.0, $35 = 0.0, $4 = 0, $62 = 0.0, $63 = 0.0, $8 = 0, label = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAP32[$1 >> 2] = 1;
 $4 = $3 & 2147483647;
 do if ($4 >>> 0 > 2146435071) $$0174 = $0 * $0; else {
  $8 = ($3 | 0) < 0;
  if ($4 >>> 0 < 999292928) {
   if ($8) {
    HEAP32[$1 >> 2] = -1;
    $$0175 = -$0;
   } else $$0175 = $0;
   $$0174 = -+Math_log(+$$0175);
   break;
  }
  if ($8) {
   $12 = -$0;
   $13 = +_sin_pi($12);
   if ($13 == 0.0) {
    $$0174 = 1.0 / ($0 - $0);
    break;
   }
   if ($13 > 0.0) {
    HEAP32[$1 >> 2] = -1;
    $$0178 = $13;
   } else $$0178 = -$13;
   $$0180 = +Math_log(+(3.141592653589793 / ($$0178 * $12)));
   $$1 = $12;
  } else {
   $$0180 = 0.0;
   $$1 = $0;
  }
  L20 : do if (($3 | 0) < 1072693248) if (($3 | 0) < -1073741824) switch ($3 | 0) {
  case -1074790400:
   {
    label = 15;
    break L20;
    break;
   }
  default:
   {
    label = 16;
    break L20;
   }
  } else switch ($3 | 0) {
  case -1073741824:
   {
    label = 15;
    break L20;
    break;
   }
  default:
   {
    label = 16;
    break L20;
   }
  } else if (($3 | 0) < 1073741824) switch ($3 | 0) {
  case 1072693248:
   {
    label = 15;
    break L20;
    break;
   }
  default:
   {
    label = 16;
    break L20;
   }
  } else switch ($3 | 0) {
  case 1073741824:
   {
    label = 15;
    break L20;
    break;
   }
  default:
   {
    label = 16;
    break L20;
   }
  } while (0);
  if ((label | 0) == 15) if (!$2) $$1177 = 0.0; else label = 16;
  L31 : do if ((label | 0) == 16) if ($4 >>> 0 < 1073741824) {
   do if ($4 >>> 0 < 1072483533) {
    $26 = -+Math_log(+$$1);
    if ($4 >>> 0 > 1072130371) {
     $$0176185 = $26;
     $$sink = 1.0;
     label = 24;
    } else if ($4 >>> 0 > 1070442080) {
     $$0176188 = $26;
     $$0179187 = $$1 + -.46163214496836225;
     label = 25;
    } else {
     $$0176191 = $26;
     $$0179190 = $$1;
     label = 26;
    }
   } else if ($4 >>> 0 > 1073460418) {
    $$0176185 = 0.0;
    $$sink = 2.0;
    label = 24;
   } else if ($4 >>> 0 > 1072936131) {
    $$0176188 = 0.0;
    $$0179187 = $$1 + -1.4616321449683622;
    label = 25;
    break;
   } else {
    $$0176191 = 0.0;
    $$0179190 = $$1 + -1.0;
    label = 26;
    break;
   } while (0);
   if ((label | 0) == 24) {
    $34 = $$sink - $$1;
    $35 = $34 * $34;
    $$1177 = $$0176185 + ($34 * ($35 * ($35 * ($35 * ($35 * ($35 * 2.5214456545125733e-05 + 2.2086279071390839e-04) + 1.1927076318336207e-03) + .007385550860814029) + .06735230105312927) + .07721566490153287) + $35 * ($35 * ($35 * ($35 * ($35 * ($35 * 4.4864094961891516e-05 + 1.0801156724758394e-04) + 5.100697921535113e-04) + 2.8905138367341563e-03) + .020580808432516733) + .3224670334241136) - $34 * .5);
    break;
   } else if ((label | 0) == 25) {
    $62 = $$0179187 * $$0179187;
    $63 = $$0179187 * $62;
    $$1177 = $$0176188 + ($62 * ($63 * ($63 * ($63 * ($63 * 3.1563207090362595e-04 + -1.4034646998923284e-03) + .006100538702462913) + -.032788541075985965) + .48383612272381005) - (-3.638676997039505e-18 - $63 * ($63 * ($63 * ($63 * (.000881081882437654 - $63 * 3.1275416837512086e-04) + -3.6845201678113826e-03) + .01797067508118204) + -.1475877229945939 + $$0179187 * ($63 * ($63 * ($63 * ($63 * 3.355291926355191e-04 + -5.385953053567405e-04) + 2.2596478090061247e-03) + -.010314224129834144) + .06462494023913339))) + -.12148629053584961);
    break;
   } else if ((label | 0) == 26) {
    $$1177 = $$0176191 + ($$0179190 * ($$0179190 * ($$0179190 * ($$0179190 * ($$0179190 * ($$0179190 * .013381091853678766 + .22896372806469245) + .9777175279633727) + 1.4549225013723477) + .6328270640250934) + -.07721566490153287) / ($$0179190 * ($$0179190 * ($$0179190 * ($$0179190 * ($$0179190 * .003217092422824239 + .10422264559336913) + .7692851504566728) + 2.128489763798934) + 2.4559779371304113) + 1.0) - $$0179190 * .5);
    break;
   }
  } else {
   if ($4 >>> 0 >= 1075838976) {
    $166 = +Math_log(+$$1) + -1.0;
    if ($4 >>> 0 < 1133510656) {
     $167 = 1.0 / $$1;
     $168 = $167 * $167;
     $$1177 = $167 * ($168 * ($168 * ($168 * ($168 * (8.363399189962821e-04 - $168 * 1.6309293409657527e-03) + -.00059518755745034) + 7.936505586430196e-04) + -2.7777777772877554e-03) + .08333333333333297) + .4189385332046727 + ($$1 + -.5) * $166;
     break;
    } else {
     $$1177 = $$1 * $166;
     break;
    }
   }
   $122 = ~~$$1;
   $124 = $$1 - +($122 | 0);
   $152 = $124 * .5 + $124 * ($124 * ($124 * ($124 * ($124 * ($124 * ($124 * 3.194753265841009e-05 + 1.8402845140733772e-03) + .02664227030336386) + .14635047265246445) + .325778796408931) + .21498241596060885) + -.07721566490153287) / ($124 * ($124 * ($124 * ($124 * ($124 * ($124 * 7.326684307446256e-06 + 7.779424963818936e-04) + .01864591917156529) + .17193386563280308) + .7219355475671381) + 1.3920053346762105) + 1.0);
   switch ($122 | 0) {
   case 7:
    {
     $$0181 = $124 + 6.0;
     label = 30;
     break;
    }
   case 6:
    {
     $$0181 = 1.0;
     label = 30;
     break;
    }
   case 5:
    {
     $$1182 = 1.0;
     label = 31;
     break;
    }
   case 4:
    {
     $$2183 = 1.0;
     label = 32;
     break;
    }
   case 3:
    {
     $$3 = 1.0;
     break;
    }
   default:
    {
     $$1177 = $152;
     break L31;
    }
   }
   if ((label | 0) == 30) {
    $$1182 = ($124 + 5.0) * $$0181;
    label = 31;
   }
   if ((label | 0) == 31) {
    $$2183 = ($124 + 4.0) * $$1182;
    label = 32;
   }
   if ((label | 0) == 32) $$3 = ($124 + 3.0) * $$2183;
   $$1177 = $152 + +Math_log(+(($124 + 2.0) * $$3));
   break;
  } while (0);
  $$0174 = $8 ? $$0180 - $$1177 : $$1177;
 } while (0);
 return +$$0174;
}

function ___floatscan($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0105$ph = 0, $$0106$ph = 0, $$0107$lcssa = 0, $$0107127 = 0, $$0113 = 0, $$0114 = 0.0, $$1$lcssa = 0, $$1108 = 0, $$1128 = 0, $$2 = 0, $$2109125 = 0, $$3110 = 0, $$3126 = 0, $$4 = 0, $$4111 = 0, $$5 = 0, $$6 = 0, $$in = 0, $102 = 0, $118 = 0, $12 = 0, $126 = 0, $18 = 0, $19 = 0, $3 = 0, $32 = 0, $39 = 0, $4 = 0, $42 = 0, $45 = 0, $5 = 0, $63 = 0, $70 = 0, $72 = 0, $79 = 0, $85 = 0, $93 = 0, label = 0;
 switch ($1 | 0) {
 case 0:
  {
   $$0105$ph = -149;
   $$0106$ph = 24;
   label = 4;
   break;
  }
 case 1:
  {
   $$0105$ph = -1074;
   $$0106$ph = 53;
   label = 4;
   break;
  }
 case 2:
  {
   $$0105$ph = -1074;
   $$0106$ph = 53;
   label = 4;
   break;
  }
 default:
  $$0114 = 0.0;
 }
 L4 : do if ((label | 0) == 4) {
  $3 = $0 + 4 | 0;
  $4 = $0 + 100 | 0;
  do {
   $5 = HEAP32[$3 >> 2] | 0;
   if ($5 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $5 + 1;
    $12 = HEAPU8[$5 >> 0] | 0;
   } else $12 = ___shgetc($0) | 0;
  } while ((_isspace($12) | 0) != 0);
  L13 : do switch ($12 | 0) {
  case 43:
  case 45:
   {
    $18 = 1 - ((($12 | 0) == 45 & 1) << 1) | 0;
    $19 = HEAP32[$3 >> 2] | 0;
    if ($19 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $19 + 1;
     $$0 = HEAPU8[$19 >> 0] | 0;
     $$0113 = $18;
     break L13;
    } else {
     $$0 = ___shgetc($0) | 0;
     $$0113 = $18;
     break L13;
    }
    break;
   }
  default:
   {
    $$0 = $12;
    $$0113 = 1;
   }
  } while (0);
  $$0107127 = 0;
  $$1128 = $$0;
  while (1) {
   if (($$1128 | 32 | 0) != (HEAP8[25772 + $$0107127 >> 0] | 0)) {
    $$0107$lcssa = $$0107127;
    $$1$lcssa = $$1128;
    break;
   }
   do if ($$0107127 >>> 0 < 7) {
    $32 = HEAP32[$3 >> 2] | 0;
    if ($32 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $32 + 1;
     $$2 = HEAPU8[$32 >> 0] | 0;
     break;
    } else {
     $$2 = ___shgetc($0) | 0;
     break;
    }
   } else $$2 = $$1128; while (0);
   $39 = $$0107127 + 1 | 0;
   if ($39 >>> 0 < 8) {
    $$0107127 = $39;
    $$1128 = $$2;
   } else {
    $$0107$lcssa = $39;
    $$1$lcssa = $$2;
    break;
   }
  }
  L29 : do switch ($$0107$lcssa | 0) {
  case 8:
   break;
  case 3:
   {
    label = 23;
    break;
   }
  default:
   {
    $42 = ($2 | 0) != 0;
    if ($42 & $$0107$lcssa >>> 0 > 3) if (($$0107$lcssa | 0) == 8) break L29; else {
     label = 23;
     break L29;
    }
    L34 : do if (!$$0107$lcssa) {
     $$2109125 = 0;
     $$3126 = $$1$lcssa;
     while (1) {
      if (($$3126 | 32 | 0) != (HEAP8[25781 + $$2109125 >> 0] | 0)) {
       $$3110 = $$2109125;
       $$5 = $$3126;
       break L34;
      }
      do if ($$2109125 >>> 0 < 2) {
       $63 = HEAP32[$3 >> 2] | 0;
       if ($63 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $63 + 1;
        $$4 = HEAPU8[$63 >> 0] | 0;
        break;
       } else {
        $$4 = ___shgetc($0) | 0;
        break;
       }
      } else $$4 = $$3126; while (0);
      $70 = $$2109125 + 1 | 0;
      if ($70 >>> 0 < 3) {
       $$2109125 = $70;
       $$3126 = $$4;
      } else {
       $$3110 = $70;
       $$5 = $$4;
       break;
      }
     }
    } else {
     $$3110 = $$0107$lcssa;
     $$5 = $$1$lcssa;
    } while (0);
    switch ($$3110 | 0) {
    case 3:
     {
      $72 = HEAP32[$3 >> 2] | 0;
      if ($72 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $72 + 1;
       $79 = HEAPU8[$72 >> 0] | 0;
      } else $79 = ___shgetc($0) | 0;
      if (($79 | 0) == 40) $$4111 = 1; else {
       if (!(HEAP32[$4 >> 2] | 0)) {
        $$0114 = nan;
        break L4;
       }
       HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
       $$0114 = nan;
       break L4;
      }
      while (1) {
       $85 = HEAP32[$3 >> 2] | 0;
       if ($85 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $85 + 1;
        $93 = HEAPU8[$85 >> 0] | 0;
       } else $93 = ___shgetc($0) | 0;
       if (!(($93 + -48 | 0) >>> 0 < 10 | ($93 + -65 | 0) >>> 0 < 26)) if (!(($93 | 0) == 95 | ($93 + -97 | 0) >>> 0 < 26)) break;
       $$4111 = $$4111 + 1 | 0;
      }
      if (($93 | 0) == 41) {
       $$0114 = nan;
       break L4;
      }
      $102 = (HEAP32[$4 >> 2] | 0) == 0;
      if (!$102) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
      if (!$42) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim($0, 0);
       $$0114 = 0.0;
       break L4;
      }
      if (!$$4111) {
       $$0114 = nan;
       break L4;
      } else $$in = $$4111;
      while (1) {
       $$in = $$in + -1 | 0;
       if (!$102) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
       if (!$$in) {
        $$0114 = nan;
        break L4;
       }
      }
      break;
     }
    case 0:
     {
      if (($$5 | 0) == 48) {
       $118 = HEAP32[$3 >> 2] | 0;
       if ($118 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $118 + 1;
        $126 = HEAPU8[$118 >> 0] | 0;
       } else $126 = ___shgetc($0) | 0;
       if (($126 | 32 | 0) == 120) {
        $$0114 = +_hexfloat($0, $$0106$ph, $$0105$ph, $$0113, $2);
        break L4;
       }
       if (!(HEAP32[$4 >> 2] | 0)) $$6 = 48; else {
        HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
        $$6 = 48;
       }
      } else $$6 = $$5;
      $$0114 = +_decfloat($0, $$6, $$0106$ph, $$0105$ph, $$0113, $2);
      break L4;
      break;
     }
    default:
     {
      if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
      HEAP32[(___errno_location() | 0) >> 2] = 22;
      ___shlim($0, 0);
      $$0114 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((label | 0) == 23) {
   $45 = (HEAP32[$4 >> 2] | 0) == 0;
   if (!$45) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   if (($2 | 0) != 0 & $$0107$lcssa >>> 0 > 3) {
    $$1108 = $$0107$lcssa;
    do {
     if (!$45) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
     $$1108 = $$1108 + -1 | 0;
    } while ($$1108 >>> 0 > 3);
   }
  }
  $$0114 = +($$0113 | 0) * inf;
 } while (0);
 return +$$0114;
}

function __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i108 = 0, $$0100 = 0, $$0102 = 0, $$0104 = 0, $$07$i$i = 0, $$07$i$i107 = 0, $$099 = 0, $$1 = 0, $$1101 = 0, $$1103 = 0, $$1105 = 0, $$2 = 0, $$2106 = 0, $$3 = 0, $$pre$phiZ2D = 0, $100 = 0, $104 = 0, $106 = 0, $118 = 0, $119 = 0, $124 = 0, $126 = 0, $13 = 0, $130 = 0, $131 = 0, $136 = 0, $137 = 0, $146 = 0, $18 = 0, $19 = 0, $21 = 0, $27 = 0, $32 = 0, $33 = 0, $35 = 0, $40 = 0, $41 = 0, $45 = 0, $52 = 0, $57 = 0, $58 = 0, $60 = 0, $65 = 0, $66 = 0, $7 = 0, $76 = 0, $78 = 0, $8 = 0, $84 = 0, $87 = 0, $88 = 0, $9 = 0, $90 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34536) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34552) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 127]($7, $9);
 HEAP32[$5 >> 2] = $3;
 $13 = HEAP8[$0 >> 0] | 0;
 switch ($13 << 24 >> 24) {
 case 43:
 case 45:
  {
   $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, $13) | 0;
   $19 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $19 + 1;
   HEAP8[$19 >> 0] = $18;
   $$0102 = $0 + 1 | 0;
   break;
  }
 default:
  $$0102 = $0;
 }
 $21 = $2;
 L4 : do if (($21 - $$0102 | 0) > 1) if ((HEAP8[$$0102 >> 0] | 0) == 48) {
  $27 = $$0102 + 1 | 0;
  switch (HEAP8[$27 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    $$1105 = $$0102;
    label = 10;
    break L4;
   }
  }
  $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, 48) | 0;
  $33 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $33 + 1;
  HEAP8[$33 >> 0] = $32;
  $35 = $$0102 + 2 | 0;
  $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$27 >> 0] | 0) | 0;
  $41 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $41 + 1;
  HEAP8[$41 >> 0] = $40;
  $$0104 = $35;
  while (1) {
   if ($$0104 >>> 0 >= $2 >>> 0) {
    $$1103 = $35;
    $$2106 = $$0104;
    break L4;
   }
   $45 = HEAP8[$$0104 >> 0] | 0;
   if (!(_isxdigit_l($45, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1103 = $35;
    $$2106 = $$0104;
    break L4;
   }
   $$0104 = $$0104 + 1 | 0;
  }
 } else {
  $$1105 = $$0102;
  label = 10;
 } else {
  $$1105 = $$0102;
  label = 10;
 } while (0);
 L12 : do if ((label | 0) == 10) while (1) {
  label = 0;
  if ($$1105 >>> 0 >= $2 >>> 0) {
   $$1103 = $$0102;
   $$2106 = $$1105;
   break L12;
  }
  $52 = HEAP8[$$1105 >> 0] | 0;
  if (!(_isdigit_l($52, __ZNSt3__26__clocEv() | 0) | 0)) {
   $$1103 = $$0102;
   $$2106 = $$1105;
   break L12;
  }
  $$1105 = $$1105 + 1 | 0;
  label = 10;
 } while (0);
 $57 = $7 + 11 | 0;
 $58 = HEAP8[$57 >> 0] | 0;
 $60 = $7 + 4 | 0;
 $65 = $$1103;
 $66 = $0;
 L18 : do if (!(($58 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $58 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 31]($8, $$1103, $$2106, HEAP32[$5 >> 2] | 0) | 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + ($$2106 - $65);
  $$pre$phiZ2D = $8;
 } else {
  L21 : do if (($$1103 | 0) != ($$2106 | 0)) {
   $$0$i$i = $$2106;
   $$07$i$i = $$1103;
   while (1) {
    $76 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $76 >>> 0) break L21;
    $78 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$76 >> 0] | 0;
    HEAP8[$76 >> 0] = $78;
    $$0$i$i = $76;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $84 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$1103;
  $$0100 = 0;
  $$099 = 0;
  while (1) {
   if ($$0 >>> 0 >= $$2106 >>> 0) break;
   $100 = HEAP8[((HEAP8[$57 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$099 >> 0] | 0;
   if ($100 << 24 >> 24 > 0 & ($$0100 | 0) == ($100 << 24 >> 24 | 0)) {
    $104 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $104 + 1;
    HEAP8[$104 >> 0] = $84;
    $106 = HEAP8[$57 >> 0] | 0;
    $$1 = ($$099 >>> 0 < (($106 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $106 & 255) + -1 | 0) >>> 0 & 1) + $$099 | 0;
    $$1101 = 0;
   } else {
    $$1 = $$099;
    $$1101 = $$0100;
   }
   $118 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $119 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $119 + 1;
   HEAP8[$119 >> 0] = $118;
   $$0 = $$0 + 1 | 0;
   $$0100 = $$1101 + 1 | 0;
   $$099 = $$1;
  }
  $87 = $3 + ($65 - $66) | 0;
  $88 = HEAP32[$5 >> 2] | 0;
  if (($87 | 0) == ($88 | 0)) $$pre$phiZ2D = $8; else {
   $$0$i$i108 = $88;
   $$07$i$i107 = $87;
   while (1) {
    $90 = $$0$i$i108 + -1 | 0;
    if ($$07$i$i107 >>> 0 >= $90 >>> 0) {
     $$pre$phiZ2D = $8;
     break L18;
    }
    $92 = HEAP8[$$07$i$i107 >> 0] | 0;
    HEAP8[$$07$i$i107 >> 0] = HEAP8[$90 >> 0] | 0;
    HEAP8[$90 >> 0] = $92;
    $$0$i$i108 = $90;
    $$07$i$i107 = $$07$i$i107 + 1 | 0;
   }
  }
 } while (0);
 $$2 = $$2106;
 while (1) {
  if ($$2 >>> 0 >= $2 >>> 0) {
   $$3 = $$2;
   break;
  }
  $124 = HEAP8[$$2 >> 0] | 0;
  $126 = $$2 + 1 | 0;
  if ($124 << 24 >> 24 == 46) {
   label = 29;
   break;
  }
  $136 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 28 >> 2] & 63]($8, $124) | 0;
  $137 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $137 + 1;
  HEAP8[$137 >> 0] = $136;
  $$2 = $126;
 }
 if ((label | 0) == 29) {
  $130 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] & 127]($9) | 0;
  $131 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $131 + 1;
  HEAP8[$131 >> 0] = $130;
  $$3 = $126;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 31]($8, $$3, $2, HEAP32[$5 >> 2] | 0) | 0;
 $146 = (HEAP32[$5 >> 2] | 0) + ($21 - $$3) | 0;
 HEAP32[$5 >> 2] = $146;
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $146 : $3 + ($1 - $66) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function _try_realloc_chunk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1272 = 0, $$1275 = 0, $$2 = 0, $$3 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $102 = 0, $105 = 0, $107 = 0, $110 = 0, $113 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $120 = 0, $122 = 0, $123 = 0, $128 = 0, $129 = 0, $142 = 0, $145 = 0, $146 = 0, $152 = 0, $159 = 0, $163 = 0, $166 = 0, $172 = 0, $2 = 0, $22 = 0, $24 = 0, $3 = 0, $31 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $60 = 0, $66 = 0, $7 = 0, $72 = 0, $74 = 0, $75 = 0, $78 = 0, $80 = 0, $82 = 0, $95 = 0, $storemerge = 0, $storemerge1 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $3 & -8;
 $5 = $0 + $4 | 0;
 $6 = HEAP32[7588] | 0;
 $7 = $3 & 3;
 if (!(($7 | 0) != 1 & $0 >>> 0 >= $6 >>> 0 & $0 >>> 0 < $5 >>> 0)) _abort();
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 if (!($10 & 1)) _abort();
 if (!$7) {
  if ($1 >>> 0 < 256) {
   $$2 = 0;
   return $$2 | 0;
  }
  if ($4 >>> 0 >= ($1 + 4 | 0) >>> 0) if (($4 - $1 | 0) >>> 0 <= HEAP32[7704] << 1 >>> 0) {
   $$2 = $0;
   return $$2 | 0;
  }
  $$2 = 0;
  return $$2 | 0;
 }
 if ($4 >>> 0 >= $1 >>> 0) {
  $22 = $4 - $1 | 0;
  if ($22 >>> 0 <= 15) {
   $$2 = $0;
   return $$2 | 0;
  }
  $24 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$24 + 4 >> 2] = $22 | 3;
  $31 = $24 + $22 + 4 | 0;
  HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | 1;
  _dispose_chunk($24, $22);
  $$2 = $0;
  return $$2 | 0;
 }
 if (($5 | 0) == (HEAP32[7590] | 0)) {
  $37 = (HEAP32[7587] | 0) + $4 | 0;
  $39 = $37 - $1 | 0;
  $40 = $0 + $1 | 0;
  if ($37 >>> 0 <= $1 >>> 0) {
   $$2 = 0;
   return $$2 | 0;
  }
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$40 + 4 >> 2] = $39 | 1;
  HEAP32[7590] = $40;
  HEAP32[7587] = $39;
  $$2 = $0;
  return $$2 | 0;
 }
 if (($5 | 0) == (HEAP32[7589] | 0)) {
  $49 = (HEAP32[7586] | 0) + $4 | 0;
  if ($49 >>> 0 < $1 >>> 0) {
   $$2 = 0;
   return $$2 | 0;
  }
  $51 = $49 - $1 | 0;
  $53 = $3 & 1;
  if ($51 >>> 0 > 15) {
   $54 = $0 + $1 | 0;
   $55 = $54 + $51 | 0;
   HEAP32[$2 >> 2] = $53 | $1 | 2;
   HEAP32[$54 + 4 >> 2] = $51 | 1;
   HEAP32[$55 >> 2] = $51;
   $60 = $55 + 4 | 0;
   HEAP32[$60 >> 2] = HEAP32[$60 >> 2] & -2;
   $storemerge = $54;
   $storemerge1 = $51;
  } else {
   HEAP32[$2 >> 2] = $53 | $49 | 2;
   $66 = $0 + $49 + 4 | 0;
   HEAP32[$66 >> 2] = HEAP32[$66 >> 2] | 1;
   $storemerge = 0;
   $storemerge1 = 0;
  }
  HEAP32[7586] = $storemerge1;
  HEAP32[7589] = $storemerge;
  $$2 = $0;
  return $$2 | 0;
 }
 if ($10 & 2 | 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 $72 = ($10 & -8) + $4 | 0;
 if ($72 >>> 0 < $1 >>> 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 $74 = $72 - $1 | 0;
 $75 = $10 >>> 3;
 L49 : do if ($10 >>> 0 < 256) {
  $78 = HEAP32[$5 + 8 >> 2] | 0;
  $80 = HEAP32[$5 + 12 >> 2] | 0;
  $82 = 30376 + ($75 << 1 << 2) | 0;
  if (($78 | 0) != ($82 | 0)) {
   if ($78 >>> 0 < $6 >>> 0) _abort();
   if ((HEAP32[$78 + 12 >> 2] | 0) != ($5 | 0)) _abort();
  }
  if (($80 | 0) == ($78 | 0)) {
   HEAP32[7584] = HEAP32[7584] & ~(1 << $75);
   break;
  }
  if (($80 | 0) == ($82 | 0)) $$pre$phiZ2D = $80 + 8 | 0; else {
   if ($80 >>> 0 < $6 >>> 0) _abort();
   $95 = $80 + 8 | 0;
   if ((HEAP32[$95 >> 2] | 0) == ($5 | 0)) $$pre$phiZ2D = $95; else _abort();
  }
  HEAP32[$78 + 12 >> 2] = $80;
  HEAP32[$$pre$phiZ2D >> 2] = $78;
 } else {
  $100 = HEAP32[$5 + 24 >> 2] | 0;
  $102 = HEAP32[$5 + 12 >> 2] | 0;
  do if (($102 | 0) == ($5 | 0)) {
   $113 = $5 + 16 | 0;
   $114 = $113 + 4 | 0;
   $115 = HEAP32[$114 >> 2] | 0;
   if (!$115) {
    $117 = HEAP32[$113 >> 2] | 0;
    if (!$117) {
     $$3 = 0;
     break;
    } else {
     $$1272 = $117;
     $$1275 = $113;
    }
   } else {
    $$1272 = $115;
    $$1275 = $114;
   }
   while (1) {
    $119 = $$1272 + 20 | 0;
    $120 = HEAP32[$119 >> 2] | 0;
    if ($120 | 0) {
     $$1272 = $120;
     $$1275 = $119;
     continue;
    }
    $122 = $$1272 + 16 | 0;
    $123 = HEAP32[$122 >> 2] | 0;
    if (!$123) break; else {
     $$1272 = $123;
     $$1275 = $122;
    }
   }
   if ($$1275 >>> 0 < $6 >>> 0) _abort(); else {
    HEAP32[$$1275 >> 2] = 0;
    $$3 = $$1272;
    break;
   }
  } else {
   $105 = HEAP32[$5 + 8 >> 2] | 0;
   if ($105 >>> 0 < $6 >>> 0) _abort();
   $107 = $105 + 12 | 0;
   if ((HEAP32[$107 >> 2] | 0) != ($5 | 0)) _abort();
   $110 = $102 + 8 | 0;
   if ((HEAP32[$110 >> 2] | 0) == ($5 | 0)) {
    HEAP32[$107 >> 2] = $102;
    HEAP32[$110 >> 2] = $105;
    $$3 = $102;
    break;
   } else _abort();
  } while (0);
  if ($100 | 0) {
   $128 = HEAP32[$5 + 28 >> 2] | 0;
   $129 = 30640 + ($128 << 2) | 0;
   do if (($5 | 0) == (HEAP32[$129 >> 2] | 0)) {
    HEAP32[$129 >> 2] = $$3;
    if (!$$3) {
     HEAP32[7585] = HEAP32[7585] & ~(1 << $128);
     break L49;
    }
   } else if ($100 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
    HEAP32[$100 + 16 + (((HEAP32[$100 + 16 >> 2] | 0) != ($5 | 0) & 1) << 2) >> 2] = $$3;
    if (!$$3) break L49; else break;
   } while (0);
   $142 = HEAP32[7588] | 0;
   if ($$3 >>> 0 < $142 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $100;
   $145 = $5 + 16 | 0;
   $146 = HEAP32[$145 >> 2] | 0;
   do if ($146 | 0) if ($146 >>> 0 < $142 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $146;
    HEAP32[$146 + 24 >> 2] = $$3;
    break;
   } while (0);
   $152 = HEAP32[$145 + 4 >> 2] | 0;
   if ($152 | 0) if ($152 >>> 0 < (HEAP32[7588] | 0) >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $152;
    HEAP32[$152 + 24 >> 2] = $$3;
    break;
   }
  }
 } while (0);
 $159 = $3 & 1;
 if ($74 >>> 0 < 16) {
  HEAP32[$2 >> 2] = $72 | $159 | 2;
  $163 = $0 + $72 + 4 | 0;
  HEAP32[$163 >> 2] = HEAP32[$163 >> 2] | 1;
  $$2 = $0;
  return $$2 | 0;
 } else {
  $166 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $159 | $1 | 2;
  HEAP32[$166 + 4 >> 2] = $74 | 3;
  $172 = $166 + $74 + 4 | 0;
  HEAP32[$172 >> 2] = HEAP32[$172 >> 2] | 1;
  _dispose_chunk($166, $74);
  $$2 = $0;
  return $$2 | 0;
 }
 return 0;
}

function __ZN8optframe19RandomDescentMethodI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$be = 0, $$0109 = 0, $$18185 = 0, $$182 = 0, $10 = 0, $105 = 0, $111 = 0, $119 = 0, $120 = 0, $126 = 0, $13 = 0, $136 = 0, $141 = 0, $15 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $76 = 0, $79 = 0, $85 = 0.0, $86 = 0, $87 = 0, $89 = 0, $96 = 0, $98 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $vararg_buffer = sp + 144 | 0;
 $4 = sp + 72 | 0;
 $5 = sp;
 $6 = sp + 152 | 0;
 $10 = $6 + 12 | 0;
 HEAP8[$10 + 4 >> 0] = 0;
 HEAP32[$6 + 8 >> 2] = 2;
 HEAP8[$6 + 15 >> 0] = 0;
 HEAP8[$10 >> 0] = 1;
 HEAP8[$6 + 13 >> 0] = 1;
 HEAP8[$6 + 14 >> 0] = 0;
 HEAP32[$6 >> 2] = 5092;
 $13 = $6 + 17 | 0;
 HEAP8[$13 >> 0] = 0;
 _gettimeofday($6 + 20 | 0, $4 | 0) | 0;
 $15 = $0 + 28 | 0;
 L1 : do if (HEAP32[$15 >> 2] | 0) {
  $25 = +(HEAP32[$6 + 20 >> 2] | 0) * 1.0e6 + +(HEAP32[$6 + 24 >> 2] | 0);
  $26 = $4 + 4 | 0;
  $27 = $3 + 24 | 0;
  $28 = $0 + 20 | 0;
  $29 = $3 + 32 | 0;
  $30 = $4 + 15 | 0;
  $31 = $4 + 14 | 0;
  $32 = $4 + 13 | 0;
  $33 = $4 + 12 | 0;
  $34 = $4 + 8 | 0;
  $35 = $33 + 4 | 0;
  $36 = $4 + 24 | 0;
  $37 = $4 + 40 | 0;
  $38 = $4 + 44 | 0;
  $39 = $4 + 48 | 0;
  $40 = $4 + 64 | 0;
  $41 = $4 + 32 | 0;
  $42 = $4 + 52 | 0;
  $43 = $4 + 56 | 0;
  $44 = $4 + 57 | 0;
  $45 = $2 + 24 | 0;
  $46 = $2 + 64 | 0;
  $47 = $2 + 32 | 0;
  $48 = $5 + 15 | 0;
  $49 = $5 + 14 | 0;
  $50 = $5 + 13 | 0;
  $51 = $5 + 12 | 0;
  $52 = $5 + 8 | 0;
  $53 = $51 + 4 | 0;
  $54 = $5 + 24 | 0;
  $55 = $5 + 40 | 0;
  $56 = $5 + 44 | 0;
  $57 = $5 + 48 | 0;
  $58 = $5 + 64 | 0;
  $59 = $5 + 32 | 0;
  $60 = $5 + 52 | 0;
  $61 = $5 + 56 | 0;
  $62 = $5 + 57 | 0;
  $63 = $0 + 24 | 0;
  $64 = $1 + 20 | 0;
  $65 = $1 + 24 | 0;
  $$0109 = 0;
  while (1) {
   _gettimeofday($4 | 0, $5 | 0) | 0;
   if (!((+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$26 >> 2] | 0) - $25) * 1.0e-06 < +HEAPF64[$27 >> 3])) break L1;
   $76 = HEAP32[$28 >> 2] | 0;
   $79 = HEAP32[(HEAP32[$76 >> 2] | 0) + 40 >> 2] | 0;
   HEAP8[$35 >> 0] = 0;
   HEAP32[$34 >> 2] = 2;
   HEAP8[$30 >> 0] = 0;
   HEAP8[$33 >> 0] = 1;
   HEAP8[$32 >> 0] = 1;
   HEAP8[$31 >> 0] = 0;
   HEAP32[$4 >> 2] = 4920;
   HEAPF64[$36 >> 3] = +HEAPF64[$29 >> 3];
   HEAP32[$37 >> 2] = 0;
   HEAP32[$38 >> 2] = 0;
   HEAP32[$39 >> 2] = 0;
   HEAPF64[$40 >> 3] = 1.0;
   HEAPF64[$41 >> 3] = 0.0;
   HEAP32[$42 >> 2] = 2;
   HEAP8[$43 >> 0] = 0;
   HEAP8[$44 >> 0] = 0;
   $85 = +HEAPF64[$45 >> 3] + +HEAPF64[$46 >> 3] * +HEAPF64[$47 >> 3];
   HEAP8[$53 >> 0] = 0;
   HEAP32[$52 >> 2] = 2;
   HEAP8[$48 >> 0] = 0;
   HEAP8[$51 >> 0] = 1;
   HEAP8[$50 >> 0] = 1;
   HEAP8[$49 >> 0] = 0;
   HEAP32[$5 >> 2] = 4920;
   HEAPF64[$54 >> 3] = $85;
   HEAP32[$55 >> 2] = 0;
   HEAP32[$56 >> 2] = 0;
   HEAP32[$57 >> 2] = 0;
   HEAPF64[$58 >> 3] = 1.0;
   HEAPF64[$59 >> 3] = 0.0;
   HEAP32[$60 >> 2] = 2;
   HEAP8[$61 >> 0] = 0;
   HEAP8[$62 >> 0] = 0;
   $86 = FUNCTION_TABLE_iiii[$79 & 63]($76, $4, $5) | 0;
   HEAP32[$5 >> 2] = 4920;
   $87 = HEAP32[$55 >> 2] | 0;
   if ($87 | 0) {
    $89 = HEAP32[$56 >> 2] | 0;
    if (($89 | 0) != ($87 | 0)) HEAP32[$56 >> 2] = $89 + (~(($89 + -16 - $87 | 0) >>> 4) << 4);
    __ZdlPv($87);
   }
   HEAP32[$4 >> 2] = 4920;
   $96 = HEAP32[$37 >> 2] | 0;
   if ($96 | 0) {
    $98 = HEAP32[$38 >> 2] | 0;
    if (($98 | 0) != ($96 | 0)) HEAP32[$38 >> 2] = $98 + (~(($98 + -16 - $96 | 0) >>> 4) << 4);
    __ZdlPv($96);
   }
   if (!$86) break L1;
   $105 = HEAP32[$63 >> 2] | 0;
   $111 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$105 >> 2] | 0) + 36 >> 2] & 63]($105, HEAP32[$64 >> 2] | 0, HEAP32[$65 >> 2] | 0) | 0;
   do if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$111 >> 2] | 0) + 36 >> 2] & 63]($111, HEAP32[$64 >> 2] | 0, HEAP32[$65 >> 2] | 0) | 0) {
    $119 = __ZN8optframe9EvaluatorI6RepHFMiE8moveCostERNS_10EvaluationERNS_4MoveIS1_iEERNS_8SolutionIS1_iEEb(HEAP32[$28 >> 2] | 0, $2, $111, $1, 0) | 0;
    $120 = $$0109 + 1 | 0;
    if (!$119) $$18185 = $120; else {
     $126 = HEAP32[$28 >> 2] | 0;
     if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$126 >> 2] | 0) + 60 >> 2] & 63]($126, $119) | 0) {
      $136 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$111 >> 2] | 0) + 48 >> 2] & 31]($111, $2, HEAP32[$64 >> 2] | 0, HEAP32[$65 >> 2] | 0) | 0;
      if ($136 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$136 >> 2] | 0) + 4 >> 2] & 511]($136);
      $141 = HEAP32[$28 >> 2] | 0;
      FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$141 >> 2] | 0) + 80 >> 2] & 31]($141, $2, HEAP32[$64 >> 2] | 0, HEAP32[$65 >> 2] | 0);
      $$182 = 0;
     } else $$182 = $120;
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$119 >> 2] | 0) + 4 >> 2] & 511]($119);
     if (!$111) {
      $$0$be = $$182;
      break;
     } else $$18185 = $$182;
    }
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$111 >> 2] | 0) + 4 >> 2] & 511]($111);
    $$0$be = $$18185;
   } else {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$111 >> 2] | 0) + 4 >> 2] & 511]($111);
    $$0$be = $$0109 + 1 | 0;
   } while (0);
   if ($$0$be >>> 0 < (HEAP32[$15 >> 2] | 0) >>> 0) $$0109 = $$0$be; else break;
  }
 } while (0);
 HEAP32[$6 >> 2] = 5092;
 if (!(HEAP8[$13 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 _gettimeofday($4 | 0, $5 | 0) | 0;
 HEAPF64[$vararg_buffer >> 3] = (+(HEAP32[$4 >> 2] | 0) * 1.0e6 + +(HEAP32[$4 + 4 >> 2] | 0) - (+(HEAP32[$6 + 20 >> 2] | 0) * 1.0e6 + +(HEAP32[$6 + 24 >> 2] | 0))) * 1.0e-06;
 _printf(17801, $vararg_buffer) | 0;
 STACKTOP = sp;
 return;
}

function __ZN3HFM13ForecastClassD2Ev($0) {
 $0 = $0 | 0;
 var $$01132 = 0, $$030 = 0, $$cast = 0, $$cast$lcssa = 0, $$cast31 = 0, $$cast33 = 0, $$in = 0, $$lcssa = 0, $$lcssa27 = 0, $$pre = 0, $102 = 0, $108 = 0, $114 = 0, $116 = 0, $121 = 0, $123 = 0, $124 = 0, $132 = 0, $138 = 0, $14 = 0, $145 = 0, $147 = 0, $148 = 0, $155 = 0, $156 = 0, $158 = 0, $159 = 0, $161 = 0, $162 = 0, $163 = 0, $165 = 0, $167 = 0, $168 = 0, $175 = 0, $176 = 0, $178 = 0, $186 = 0, $188 = 0, $189 = 0, $19 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $41 = 0, $49 = 0, $50 = 0, $53 = 0, $55 = 0, $57 = 0, $58 = 0, $61 = 0, $68 = 0, $69 = 0, $74 = 0, $8 = 0, $84 = 0, $90 = 0, $96 = 0;
 HEAP32[$0 >> 2] = 3912;
 $2 = HEAP32[$0 + 20 >> 2] | 0;
 if ($2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 4 >> 2] & 511]($2);
 $8 = HEAP32[$0 + 24 >> 2] | 0;
 if ($8 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8 >> 2] | 0) + 4 >> 2] & 511]($8);
 $14 = HEAP32[$0 + 28 >> 2] | 0;
 if ($14 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$14 >> 2] | 0) + 4 >> 2] & 511]($14);
 $19 = $0 + 76 | 0;
 $20 = $0 + 80 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 $22 = HEAP32[$19 >> 2] | 0;
 $$cast31 = $22;
 $25 = $21;
 if (($21 - $22 | 0) > 0) {
  $$01132 = 0;
  $$cast33 = $$cast31;
  $196 = $25;
  $197 = $22;
  $198 = $21;
  while (1) {
   $41 = HEAP32[$$cast33 + ($$01132 << 2) >> 2] | 0;
   if (!$41) {
    $199 = $196;
    $49 = $197;
    $50 = $198;
   } else {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$41 >> 2] | 0) + 4 >> 2] & 511]($41);
    $$pre = HEAP32[$20 >> 2] | 0;
    $199 = $$pre;
    $49 = HEAP32[$19 >> 2] | 0;
    $50 = $$pre;
   }
   $$01132 = $$01132 + 1 | 0;
   $$cast = $49;
   if (($$01132 | 0) >= ($50 - $49 >> 2 | 0)) {
    $$cast$lcssa = $$cast;
    $$lcssa27 = $49;
    $26 = $199;
    break;
   } else {
    $$cast33 = $$cast;
    $196 = $199;
    $197 = $49;
    $198 = $50;
   }
  }
 } else {
  $$cast$lcssa = $$cast31;
  $$lcssa27 = $22;
  $26 = $25;
 }
 if (($26 | 0) != ($$cast$lcssa | 0)) HEAP32[$20 >> 2] = $26 + (~(($26 + -4 - $$lcssa27 | 0) >>> 2) << 2);
 $32 = $0 + 64 | 0;
 $33 = HEAP32[$32 >> 2] | 0;
 $35 = HEAP32[$33 + 4 >> 2] | 0;
 $36 = HEAP32[$33 >> 2] | 0;
 $37 = $35 - $36 | 0;
 L20 : do if (($37 | 0) > 0) {
  $$030 = 0;
  $55 = $37 >>> 2;
  $57 = $33;
  $58 = $36;
  while (1) {
   if ($55 >>> 0 <= $$030 >>> 0) break;
   $61 = HEAP32[$58 + ($$030 << 2) >> 2] | 0;
   if (!$61) $68 = $57; else {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$61 >> 2] | 0) + 4 >> 2] & 511]($61);
    $68 = HEAP32[$32 >> 2] | 0;
   }
   $$030 = $$030 + 1 | 0;
   $69 = HEAP32[$68 + 4 >> 2] | 0;
   $58 = HEAP32[$68 >> 2] | 0;
   $55 = $69 - $58 >> 2;
   if (($$030 | 0) >= ($55 | 0)) {
    $$in = $69;
    $$lcssa = $68;
    break L20;
   } else $57 = $68;
  }
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($57);
 } else {
  $$in = $35;
  $$lcssa = $33;
 } while (0);
 $53 = $$in;
 if ($$lcssa | 0) {
  $74 = HEAP32[$$lcssa >> 2] | 0;
  if ($74 | 0) {
   if (($53 | 0) != ($74 | 0)) HEAP32[$$lcssa + 4 >> 2] = $53 + (~(($53 + -4 - $74 | 0) >>> 2) << 2);
   __ZdlPv($74);
  }
  __ZdlPv($$lcssa);
 }
 $84 = HEAP32[$0 + 120 >> 2] | 0;
 if ($84 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$84 >> 2] | 0) + 4 >> 2] & 511]($84);
 $90 = HEAP32[$0 + 92 >> 2] | 0;
 if ($90 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$90 >> 2] | 0) + 4 >> 2] & 511]($90);
 $96 = HEAP32[$0 + 88 >> 2] | 0;
 if ($96 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$96 >> 2] | 0) + 4 >> 2] & 511]($96);
 $102 = HEAP32[$0 + 132 >> 2] | 0;
 if ($102 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$102 >> 2] | 0) + 4 >> 2] & 511]($102);
 $108 = HEAP32[$0 + 68 >> 2] | 0;
 if ($108 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$108 >> 2] | 0) + 4 >> 2] & 511]($108);
 $114 = HEAP32[$0 + 72 >> 2] | 0;
 if ($114 | 0) {
  $116 = $114 + 36 | 0;
  if ((HEAP8[$116 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$116 >> 2] | 0);
  $121 = HEAP32[$114 >> 2] | 0;
  if ($121 | 0) {
   $123 = $114 + 4 | 0;
   $124 = HEAP32[$123 >> 2] | 0;
   if (($124 | 0) != ($121 | 0)) HEAP32[$123 >> 2] = $124 + (~(($124 + -4 - $121 | 0) >>> 2) << 2);
   __ZdlPv($121);
  }
  __ZdlPv($114);
 }
 $132 = HEAP32[$0 + 128 >> 2] | 0;
 if ($132 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$132 >> 2] | 0) + 4 >> 2] & 511]($132);
 $138 = HEAP32[$0 + 124 >> 2] | 0;
 if ($138 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$138 >> 2] | 0) + 4 >> 2] & 511]($138);
 __ZN8optframe12CheckCommandI6RepHFMiED2Ev($0 + 136 | 0);
 $145 = HEAP32[$0 + 108 >> 2] | 0;
 if ($145 | 0) {
  $147 = $0 + 112 | 0;
  $148 = HEAP32[$147 >> 2] | 0;
  if (($148 | 0) != ($145 | 0)) HEAP32[$147 >> 2] = $148 + (~(($148 + -4 - $145 | 0) >>> 2) << 2);
  __ZdlPv($145);
 }
 $155 = $0 + 96 | 0;
 $156 = HEAP32[$155 >> 2] | 0;
 if ($156 | 0) {
  $158 = $0 + 100 | 0;
  $159 = HEAP32[$158 >> 2] | 0;
  if (($159 | 0) == ($156 | 0)) $175 = $156; else {
   $162 = $159;
   while (1) {
    $161 = $162 + -12 | 0;
    HEAP32[$158 >> 2] = $161;
    $163 = HEAP32[$161 >> 2] | 0;
    if (!$163) $165 = $161; else {
     $167 = $162 + -8 | 0;
     $168 = HEAP32[$167 >> 2] | 0;
     if (($168 | 0) != ($163 | 0)) HEAP32[$167 >> 2] = $168 + (~(($168 + -8 - $163 | 0) >>> 3) << 3);
     __ZdlPv($163);
     $165 = HEAP32[$158 >> 2] | 0;
    }
    if (($165 | 0) == ($156 | 0)) break; else $162 = $165;
   }
   $175 = HEAP32[$155 >> 2] | 0;
  }
  __ZdlPv($175);
 }
 $176 = HEAP32[$19 >> 2] | 0;
 if ($176 | 0) {
  $178 = HEAP32[$20 >> 2] | 0;
  if (($178 | 0) != ($176 | 0)) HEAP32[$20 >> 2] = $178 + (~(($178 + -4 - $176 | 0) >>> 2) << 2);
  __ZdlPv($176);
 }
 $186 = HEAP32[$0 + 32 >> 2] | 0;
 if (!$186) return;
 $188 = $0 + 36 | 0;
 $189 = HEAP32[$188 >> 2] | 0;
 if (($189 | 0) != ($186 | 0)) HEAP32[$188 >> 2] = $189 + (~(($189 + -4 - $186 | 0) >>> 2) << 2);
 __ZdlPv($186);
 return;
}

function _fmod($0, $1) {
 $0 = +$0;
 $1 = +$1;
 var $$070 = 0.0, $$071$lcssa = 0, $$07194 = 0, $$073$lcssa = 0, $$073100 = 0, $$172$ph = 0, $$174 = 0, $$275$lcssa = 0, $$27586 = 0, $$376$lcssa = 0, $$37683 = 0, $$lcssa = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $116 = 0, $117 = 0, $119 = 0, $12 = 0, $122 = 0, $124 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $150 = 0, $153 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $18 = 0, $2 = 0, $20 = 0, $27 = 0.0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $41 = 0, $42 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $59 = 0, $6 = 0, $64 = 0, $65 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $82 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $97 = 0, $98 = 0, label = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $1;
 $4 = HEAP32[tempDoublePtr >> 2] | 0;
 $5 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $6 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 $8 = $6 & 2047;
 $9 = _bitshift64Lshr($4 | 0, $5 | 0, 52) | 0;
 $11 = $9 & 2047;
 $12 = $3 & -2147483648;
 $13 = _bitshift64Shl($4 | 0, $5 | 0, 1) | 0;
 $14 = tempRet0;
 L1 : do if (($13 | 0) == 0 & ($14 | 0) == 0) label = 3; else {
  $18 = ___DOUBLE_BITS_511($1) | 0;
  $20 = tempRet0 & 2147483647;
  if (($8 | 0) == 2047 | ($20 >>> 0 > 2146435072 | ($20 | 0) == 2146435072 & $18 >>> 0 > 0)) label = 3; else {
   $29 = _bitshift64Shl($2 | 0, $3 | 0, 1) | 0;
   $30 = tempRet0;
   if (!($30 >>> 0 > $14 >>> 0 | ($30 | 0) == ($14 | 0) & $29 >>> 0 > $13 >>> 0)) return +(($29 | 0) == ($13 | 0) & ($30 | 0) == ($14 | 0) ? $0 * 0.0 : $0);
   if (!$8) {
    $41 = _bitshift64Shl($2 | 0, $3 | 0, 12) | 0;
    $42 = tempRet0;
    if (($42 | 0) > -1 | ($42 | 0) == -1 & $41 >>> 0 > 4294967295) {
     $$073100 = 0;
     $49 = $41;
     $50 = $42;
     while (1) {
      $48 = $$073100 + -1 | 0;
      $49 = _bitshift64Shl($49 | 0, $50 | 0, 1) | 0;
      $50 = tempRet0;
      if (!(($50 | 0) > -1 | ($50 | 0) == -1 & $49 >>> 0 > 4294967295)) {
       $$073$lcssa = $48;
       break;
      } else $$073100 = $48;
     }
    } else $$073$lcssa = 0;
    $59 = _bitshift64Shl($2 | 0, $3 | 0, 1 - $$073$lcssa | 0) | 0;
    $$174 = $$073$lcssa;
    $87 = $59;
    $88 = tempRet0;
   } else {
    $$174 = $8;
    $87 = $2;
    $88 = $3 & 1048575 | 1048576;
   }
   if (!$11) {
    $64 = _bitshift64Shl($4 | 0, $5 | 0, 12) | 0;
    $65 = tempRet0;
    if (($65 | 0) > -1 | ($65 | 0) == -1 & $64 >>> 0 > 4294967295) {
     $$07194 = 0;
     $72 = $64;
     $73 = $65;
     while (1) {
      $71 = $$07194 + -1 | 0;
      $72 = _bitshift64Shl($72 | 0, $73 | 0, 1) | 0;
      $73 = tempRet0;
      if (!(($73 | 0) > -1 | ($73 | 0) == -1 & $72 >>> 0 > 4294967295)) {
       $$071$lcssa = $71;
       break;
      } else $$07194 = $71;
     }
    } else $$071$lcssa = 0;
    $82 = _bitshift64Shl($4 | 0, $5 | 0, 1 - $$071$lcssa | 0) | 0;
    $$172$ph = $$071$lcssa;
    $89 = $82;
    $90 = tempRet0;
   } else {
    $$172$ph = $11;
    $89 = $4;
    $90 = $5 & 1048575 | 1048576;
   }
   $91 = _i64Subtract($87 | 0, $88 | 0, $89 | 0, $90 | 0) | 0;
   $92 = tempRet0;
   $97 = ($92 | 0) > -1 | ($92 | 0) == -1 & $91 >>> 0 > 4294967295;
   L23 : do if (($$174 | 0) > ($$172$ph | 0)) {
    $$27586 = $$174;
    $100 = $92;
    $156 = $97;
    $157 = $87;
    $158 = $88;
    $98 = $91;
    while (1) {
     if ($156) if (($98 | 0) == 0 & ($100 | 0) == 0) break; else {
      $104 = $98;
      $105 = $100;
     } else {
      $104 = $157;
      $105 = $158;
     }
     $106 = _bitshift64Shl($104 | 0, $105 | 0, 1) | 0;
     $107 = tempRet0;
     $108 = $$27586 + -1 | 0;
     $110 = _i64Subtract($106 | 0, $107 | 0, $89 | 0, $90 | 0) | 0;
     $111 = tempRet0;
     $116 = ($111 | 0) > -1 | ($111 | 0) == -1 & $110 >>> 0 > 4294967295;
     if (($108 | 0) > ($$172$ph | 0)) {
      $$27586 = $108;
      $100 = $111;
      $156 = $116;
      $157 = $106;
      $158 = $107;
      $98 = $110;
     } else {
      $$275$lcssa = $108;
      $$lcssa = $116;
      $117 = $110;
      $119 = $111;
      $159 = $106;
      $160 = $107;
      break L23;
     }
    }
    $$070 = $0 * 0.0;
    break L1;
   } else {
    $$275$lcssa = $$174;
    $$lcssa = $97;
    $117 = $91;
    $119 = $92;
    $159 = $87;
    $160 = $88;
   } while (0);
   if ($$lcssa) if (($117 | 0) == 0 & ($119 | 0) == 0) {
    $$070 = $0 * 0.0;
    break;
   } else {
    $122 = $119;
    $124 = $117;
   } else {
    $122 = $160;
    $124 = $159;
   }
   if ($122 >>> 0 < 1048576 | ($122 | 0) == 1048576 & $124 >>> 0 < 0) {
    $$37683 = $$275$lcssa;
    $130 = $124;
    $131 = $122;
    while (1) {
     $132 = _bitshift64Shl($130 | 0, $131 | 0, 1) | 0;
     $133 = tempRet0;
     $134 = $$37683 + -1 | 0;
     if ($133 >>> 0 < 1048576 | ($133 | 0) == 1048576 & $132 >>> 0 < 0) {
      $$37683 = $134;
      $130 = $132;
      $131 = $133;
     } else {
      $$376$lcssa = $134;
      $141 = $132;
      $142 = $133;
      break;
     }
    }
   } else {
    $$376$lcssa = $$275$lcssa;
    $141 = $124;
    $142 = $122;
   }
   if (($$376$lcssa | 0) > 0) {
    $143 = _i64Add($141 | 0, $142 | 0, 0, -1048576) | 0;
    $144 = tempRet0;
    $145 = _bitshift64Shl($$376$lcssa | 0, 0, 52) | 0;
    $153 = $144 | tempRet0;
    $155 = $143 | $145;
   } else {
    $150 = _bitshift64Lshr($141 | 0, $142 | 0, 1 - $$376$lcssa | 0) | 0;
    $153 = tempRet0;
    $155 = $150;
   }
   HEAP32[tempDoublePtr >> 2] = $155;
   HEAP32[tempDoublePtr + 4 >> 2] = $153 | $12;
   $$070 = +HEAPF64[tempDoublePtr >> 3];
  }
 } while (0);
 if ((label | 0) == 3) {
  $27 = $0 * $1;
  $$070 = $27 / $27;
 }
 return +$$070;
}

function __ZN8optframe14MultiEvaluatorI6RepHFMiE8evaluateERKS1_PKi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$01283 = 0, $$in = 0, $100 = 0, $101 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $125 = 0, $127 = 0, $134 = 0, $136 = 0, $149 = 0, $15 = 0, $19 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $67 = 0, $68 = 0, $69 = 0, $72 = 0, $82 = 0, $88 = 0, $95 = 0, $96 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $4 = sp + 72 | 0;
 $5 = sp;
 $6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17425, 19) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $6 + (HEAP32[(HEAP32[$6 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 $15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 63]($11, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($6, $15) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($6) | 0;
 _getchar() | 0;
 $19 = $0 + 12 | 0;
 HEAP8[$19 + 4 >> 0] = 0;
 HEAP32[$0 + 8 >> 2] = 2;
 HEAP8[$0 + 15 >> 0] = 0;
 HEAP8[$19 >> 0] = 1;
 HEAP8[$0 + 13 >> 0] = 1;
 HEAP8[$0 + 14 >> 0] = 0;
 HEAP32[$0 >> 2] = 4868;
 HEAP32[$0 + 20 >> 2] = 0;
 $23 = $0 + 24 | 0;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = 0;
 $25 = $1 + 36 | 0;
 $26 = $1 + 40 | 0;
 $28 = HEAP32[$25 >> 2] | 0;
 if ((HEAP32[$26 >> 2] | 0) == ($28 | 0)) {
  STACKTOP = sp;
  return;
 }
 $30 = $5 + 15 | 0;
 $31 = $5 + 14 | 0;
 $32 = $5 + 13 | 0;
 $33 = $5 + 12 | 0;
 $34 = $5 + 8 | 0;
 $35 = $33 + 4 | 0;
 $36 = $5 + 24 | 0;
 $37 = $4 + 24 | 0;
 $38 = $5 + 32 | 0;
 $39 = $4 + 32 | 0;
 $40 = $5 + 40 | 0;
 $41 = $4 + 40 | 0;
 $42 = $5 + 44 | 0;
 $43 = $5 + 48 | 0;
 $44 = $4 + 44 | 0;
 $45 = $5 + 52 | 0;
 $46 = $4 + 52 | 0;
 $47 = $5 + 56 | 0;
 $48 = $4 + 56 | 0;
 $49 = $5 + 57 | 0;
 $50 = $4 + 57 | 0;
 $51 = $5 + 64 | 0;
 $52 = $4 + 64 | 0;
 $53 = $0 + 28 | 0;
 $54 = $0 + 20 | 0;
 $55 = $5 + 40 | 0;
 $56 = $4 + 40 | 0;
 $57 = $5 + 48 | 0;
 $$01283 = 0;
 $$in = $28;
 while (1) {
  $60 = HEAP32[$$in + ($$01283 << 2) >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$60 >> 2] | 0) + 76 >> 2] & 31]($4, $60, $2, $3);
  HEAP8[$35 >> 0] = 0;
  HEAP32[$34 >> 2] = 2;
  HEAP8[$30 >> 0] = 0;
  HEAP8[$33 >> 0] = 1;
  HEAP8[$32 >> 0] = 1;
  HEAP8[$31 >> 0] = 0;
  HEAP32[$5 >> 2] = 4920;
  HEAPF64[$36 >> 3] = +HEAPF64[$37 >> 3];
  HEAPF64[$38 >> 3] = +HEAPF64[$39 >> 3];
  HEAP32[$40 >> 2] = 0;
  HEAP32[$42 >> 2] = 0;
  HEAP32[$43 >> 2] = 0;
  $67 = HEAP32[$41 >> 2] | 0;
  $68 = (HEAP32[$44 >> 2] | 0) - $67 | 0;
  $69 = $68 >> 4;
  if ($69 | 0) {
   if ($69 >>> 0 > 268435455) {
    label = 5;
    break;
   }
   $72 = __Znwj($68) | 0;
   HEAP32[$42 >> 2] = $72;
   HEAP32[$40 >> 2] = $72;
   HEAP32[$57 >> 2] = $72 + ($69 << 4);
   if (($68 | 0) > 0) {
    _memcpy($72 | 0, $67 | 0, $68 | 0) | 0;
    HEAP32[$42 >> 2] = $72 + ($68 >>> 4 << 4);
   }
  }
  HEAP32[$45 >> 2] = HEAP32[$46 >> 2];
  HEAP8[$47 >> 0] = HEAP8[$48 >> 0] | 0;
  HEAP8[$49 >> 0] = HEAP8[$50 >> 0] | 0;
  HEAPF64[$51 >> 3] = +HEAPF64[$52 >> 3];
  $82 = HEAP32[$23 >> 2] | 0;
  if (($82 | 0) == (HEAP32[$53 >> 2] | 0)) {
   __ZNSt3__26vectorIN8optframe10EvaluationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($54, $5);
   $125 = HEAP32[$55 >> 2] | 0;
  } else {
   $88 = $82 + 12 | 0;
   HEAP8[$88 + 4 >> 0] = 0;
   HEAP32[$82 + 8 >> 2] = 2;
   HEAP8[$82 + 15 >> 0] = 0;
   HEAP8[$88 >> 0] = 1;
   HEAP8[$82 + 13 >> 0] = 1;
   HEAP8[$82 + 14 >> 0] = 0;
   HEAP32[$82 >> 2] = 4920;
   HEAPF64[$82 + 24 >> 3] = +HEAPF64[$36 >> 3];
   HEAPF64[$82 + 32 >> 3] = +HEAPF64[$38 >> 3];
   $95 = $82 + 40 | 0;
   HEAP32[$95 >> 2] = 0;
   $96 = $82 + 44 | 0;
   HEAP32[$96 >> 2] = 0;
   HEAP32[$82 + 48 >> 2] = 0;
   $99 = HEAP32[$40 >> 2] | 0;
   $100 = (HEAP32[$42 >> 2] | 0) - $99 | 0;
   $101 = $100 >> 4;
   if (!$101) $149 = $99; else {
    if ($101 >>> 0 > 268435455) {
     label = 11;
     break;
    }
    $105 = __Znwj($100) | 0;
    HEAP32[$96 >> 2] = $105;
    HEAP32[$95 >> 2] = $105;
    HEAP32[$82 + 48 >> 2] = $105 + ($101 << 4);
    $108 = HEAP32[$40 >> 2] | 0;
    $111 = (HEAP32[$42 >> 2] | 0) - $108 | 0;
    if (($111 | 0) > 0) {
     _memcpy($105 | 0, $108 | 0, $111 | 0) | 0;
     HEAP32[$96 >> 2] = $105 + ($111 >>> 4 << 4);
     $149 = $108;
    } else $149 = $108;
   }
   HEAP32[$82 + 52 >> 2] = HEAP32[$45 >> 2];
   HEAP8[$82 + 56 >> 0] = HEAP8[$47 >> 0] | 0;
   HEAP8[$82 + 57 >> 0] = HEAP8[$49 >> 0] | 0;
   HEAPF64[$82 + 64 >> 3] = +HEAPF64[$51 >> 3];
   HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 72;
   $125 = $149;
  }
  HEAP32[$5 >> 2] = 4920;
  if ($125 | 0) {
   $127 = HEAP32[$42 >> 2] | 0;
   if (($127 | 0) != ($125 | 0)) HEAP32[$42 >> 2] = $127 + (~(($127 + -16 - $125 | 0) >>> 4) << 4);
   __ZdlPv($125);
  }
  HEAP32[$4 >> 2] = 4920;
  $134 = HEAP32[$56 >> 2] | 0;
  if ($134 | 0) {
   $136 = HEAP32[$44 >> 2] | 0;
   if (($136 | 0) != ($134 | 0)) HEAP32[$44 >> 2] = $136 + (~(($136 + -16 - $134 | 0) >>> 4) << 4);
   __ZdlPv($134);
  }
  $$01283 = $$01283 + 1 | 0;
  $$in = HEAP32[$25 >> 2] | 0;
  if ($$01283 >>> 0 >= (HEAP32[$26 >> 2] | 0) - $$in >> 2 >>> 0) {
   label = 25;
   break;
  }
 }
 if ((label | 0) == 5) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($40); else if ((label | 0) == 11) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($95); else if ((label | 0) == 25) {
  STACKTOP = sp;
  return;
 }
}
function __ZN8optframe14MultiEvaluatorI6RepHFMiE13reevaluateMEVERNS_15MultiEvaluationERKS1_PKi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$01577 = 0, $102 = 0, $118 = 0, $12 = 0, $120 = 0, $127 = 0, $129 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $66 = 0, $68 = 0, $7 = 0, $70 = 0, $72 = 0.0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $83 = 0, $90 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $4 = sp + 144 | 0;
 $5 = sp + 72 | 0;
 $6 = sp;
 $7 = $0 + 36 | 0;
 $8 = $0 + 40 | 0;
 if ((HEAP32[$8 >> 2] | 0) == (HEAP32[$7 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 }
 $12 = $1 + 20 | 0;
 $13 = $5 + 15 | 0;
 $14 = $5 + 14 | 0;
 $15 = $5 + 13 | 0;
 $16 = $5 + 12 | 0;
 $17 = $5 + 8 | 0;
 $18 = $16 + 4 | 0;
 $19 = $5 + 24 | 0;
 $20 = $5 + 32 | 0;
 $21 = $5 + 40 | 0;
 $22 = $5 + 52 | 0;
 $23 = $5 + 56 | 0;
 $24 = $5 + 57 | 0;
 $25 = $5 + 64 | 0;
 $26 = $4 + 15 | 0;
 $27 = $4 + 14 | 0;
 $28 = $4 + 13 | 0;
 $29 = $4 + 12 | 0;
 $30 = $4 + 8 | 0;
 $31 = $29 + 4 | 0;
 $32 = $4 + 24 | 0;
 $33 = $4 + 32 | 0;
 $34 = $4 + 40 | 0;
 $35 = $4 + 44 | 0;
 $36 = $4 + 48 | 0;
 $37 = $5 + 44 | 0;
 $38 = $4 + 52 | 0;
 $39 = $4 + 56 | 0;
 $40 = $4 + 57 | 0;
 $41 = $4 + 64 | 0;
 $42 = $6 + 15 | 0;
 $43 = $6 + 14 | 0;
 $44 = $6 + 13 | 0;
 $45 = $6 + 12 | 0;
 $46 = $6 + 8 | 0;
 $47 = $45 + 4 | 0;
 $48 = $6 + 24 | 0;
 $49 = $6 + 32 | 0;
 $50 = $6 + 40 | 0;
 $51 = $6 + 52 | 0;
 $52 = $6 + 56 | 0;
 $53 = $6 + 57 | 0;
 $54 = $6 + 64 | 0;
 $55 = $4 + 40 | 0;
 $56 = $6 + 40 | 0;
 $57 = $6 + 44 | 0;
 $58 = $4 + 48 | 0;
 $$01577 = 0;
 while (1) {
  $59 = HEAP32[$12 >> 2] | 0;
  HEAP8[$18 >> 0] = 0;
  HEAP32[$17 >> 2] = 2;
  HEAP8[$13 >> 0] = 0;
  HEAP8[$16 >> 0] = 1;
  HEAP8[$15 >> 0] = 1;
  HEAP8[$14 >> 0] = 0;
  HEAP32[$5 >> 2] = 4920;
  HEAPF64[$19 >> 3] = +HEAPF64[$59 + ($$01577 * 72 | 0) + 24 >> 3];
  HEAPF64[$20 >> 3] = +HEAPF64[$59 + ($$01577 * 72 | 0) + 32 >> 3];
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($21, $59 + ($$01577 * 72 | 0) + 40 | 0);
  $66 = HEAP32[$59 + ($$01577 * 72 | 0) + 52 >> 2] | 0;
  HEAP32[$22 >> 2] = $66;
  $68 = HEAP8[$59 + ($$01577 * 72 | 0) + 56 >> 0] | 0;
  HEAP8[$23 >> 0] = $68;
  $70 = HEAP8[$59 + ($$01577 * 72 | 0) + 57 >> 0] | 0;
  HEAP8[$24 >> 0] = $70;
  $72 = +HEAPF64[$59 + ($$01577 * 72 | 0) + 64 >> 3];
  HEAPF64[$25 >> 3] = $72;
  HEAP8[$31 >> 0] = 0;
  HEAP32[$30 >> 2] = 2;
  HEAP8[$26 >> 0] = 0;
  HEAP8[$29 >> 0] = 1;
  HEAP8[$28 >> 0] = 1;
  HEAP8[$27 >> 0] = 0;
  HEAP32[$4 >> 2] = 4920;
  HEAPF64[$32 >> 3] = +HEAPF64[$19 >> 3];
  HEAPF64[$33 >> 3] = +HEAPF64[$20 >> 3];
  HEAP32[$34 >> 2] = 0;
  HEAP32[$35 >> 2] = 0;
  HEAP32[$36 >> 2] = 0;
  $75 = HEAP32[$37 >> 2] | 0;
  $76 = HEAP32[$21 >> 2] | 0;
  $77 = $75 - $76 | 0;
  $78 = $77 >> 4;
  $80 = $76;
  $81 = $75;
  if ($78 | 0) {
   if ($78 >>> 0 > 268435455) {
    label = 6;
    break;
   }
   $83 = __Znwj($77) | 0;
   HEAP32[$35 >> 2] = $83;
   HEAP32[$34 >> 2] = $83;
   HEAP32[$58 >> 2] = $83 + ($78 << 4);
   if (($77 | 0) > 0) {
    _memcpy($83 | 0, $76 | 0, $77 | 0) | 0;
    HEAP32[$35 >> 2] = $83 + ($77 >>> 4 << 4);
   }
  }
  HEAP32[$38 >> 2] = $66;
  HEAP8[$39 >> 0] = $68;
  HEAP8[$40 >> 0] = $70;
  HEAPF64[$41 >> 3] = $72;
  HEAP32[$5 >> 2] = 4920;
  $90 = $76;
  if ($76 | 0) {
   if (($81 | 0) != ($80 | 0)) HEAP32[$37 >> 2] = $81 + (~(($81 + -16 - $76 | 0) >>> 4) << 4);
   __ZdlPv($90);
  }
  $98 = HEAP32[(HEAP32[$7 >> 2] | 0) + ($$01577 << 2) >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$98 >> 2] | 0) + 80 >> 2] & 31]($98, $4, $2, $3);
  $102 = HEAP32[$12 >> 2] | 0;
  HEAP8[$47 >> 0] = 0;
  HEAP32[$46 >> 2] = 2;
  HEAP8[$42 >> 0] = 0;
  HEAP8[$45 >> 0] = 1;
  HEAP8[$44 >> 0] = 1;
  HEAP8[$43 >> 0] = 0;
  HEAP32[$6 >> 2] = 4920;
  HEAPF64[$48 >> 3] = +HEAPF64[$102 + ($$01577 * 72 | 0) + 24 >> 3];
  HEAPF64[$49 >> 3] = +HEAPF64[$102 + ($$01577 * 72 | 0) + 32 >> 3];
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($50, $102 + ($$01577 * 72 | 0) + 40 | 0);
  HEAP32[$51 >> 2] = HEAP32[$102 + ($$01577 * 72 | 0) + 52 >> 2];
  HEAPF64[$48 >> 3] = +HEAPF64[$32 >> 3];
  HEAPF64[$49 >> 3] = +HEAPF64[$33 >> 3];
  HEAP8[$52 >> 0] = HEAP8[$39 >> 0] | 0;
  HEAP8[$53 >> 0] = HEAP8[$40 >> 0] | 0;
  HEAPF64[$54 >> 3] = +HEAPF64[$41 >> 3];
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($50, HEAP32[$55 >> 2] | 0, HEAP32[$35 >> 2] | 0);
  HEAP32[$51 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$6 >> 2] = 4920;
  $118 = HEAP32[$56 >> 2] | 0;
  if ($118 | 0) {
   $120 = HEAP32[$57 >> 2] | 0;
   if (($120 | 0) != ($118 | 0)) HEAP32[$57 >> 2] = $120 + (~(($120 + -16 - $118 | 0) >>> 4) << 4);
   __ZdlPv($118);
  }
  HEAP32[$4 >> 2] = 4920;
  $127 = HEAP32[$55 >> 2] | 0;
  if ($127 | 0) {
   $129 = HEAP32[$35 >> 2] | 0;
   if (($129 | 0) != ($127 | 0)) HEAP32[$35 >> 2] = $129 + (~(($129 + -16 - $127 | 0) >>> 4) << 4);
   __ZdlPv($127);
  }
  $$01577 = $$01577 + 1 | 0;
  if ($$01577 >>> 0 >= (HEAP32[$8 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) >> 2 >>> 0) {
   label = 3;
   break;
  }
 }
 if ((label | 0) == 3) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 6) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($34);
}

function __ZN3HFM19NSSeqHFMModifyRulesC2ERNS_18HFMProblemInstanceERN8optframe7RandGenEPNSt3__26vectorIdNS6_9allocatorIdEEEE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$pre = 0, $$pre35 = 0, $14 = 0, $15 = 0, $22 = 0, $27 = 0, $31 = 0, $33 = 0, $34 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $45 = 0, $47 = 0.0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0.0, $54 = 0, $56 = 0, $57 = 0, $59 = 0.0, $60 = 0, $62 = 0, $63 = 0, $65 = 0.0, $66 = 0, $68 = 0, $69 = 0, $70 = 0, $72 = 0, $74 = 0, $76 = 0.0, $77 = 0, $79 = 0, $80 = 0, $82 = 0.0, $83 = 0, $85 = 0, $86 = 0, $88 = 0.0, $89 = 0, $9 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 $9 = $0 + 12 | 0;
 HEAP8[$9 + 4 >> 0] = 0;
 HEAP32[$0 + 8 >> 2] = 2;
 HEAP8[$0 + 15 >> 0] = 0;
 HEAP8[$9 >> 0] = 1;
 HEAP8[$0 + 13 >> 0] = 1;
 HEAP8[$0 + 14 >> 0] = 0;
 HEAP32[$0 >> 2] = 5828;
 HEAP32[$0 + 20 >> 2] = $1;
 HEAP32[$0 + 24 >> 2] = $2;
 $14 = $0 + 28 | 0;
 HEAP32[$14 >> 2] = 0;
 $15 = $0 + 32 | 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$0 + 36 >> 2] = 0;
 HEAPF64[$5 >> 3] = +HEAPF64[HEAP32[$1 + 16 >> 2] >> 3];
 if ($3 | 0) {
  $22 = __ZN8optframelsIdEERNSt3__213basic_ostreamIcNS1_11char_traitsIcEEEES6_RKNS1_6vectorIT_NS1_9allocatorIS8_EEEE(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 20407, 29) | 0, $3) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $22 + (HEAP32[(HEAP32[$22 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $27 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
  $31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 28 >> 2] & 63]($27, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($22, $31) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($22) | 0;
  $33 = HEAP32[$3 + 4 >> 2] | 0;
  $34 = HEAP32[$3 >> 2] | 0;
  if (($33 | 0) == ($34 | 0)) ___assert_fail(20437, 20464, 210, 20508);
  if (($14 | 0) == ($3 | 0)) {
   STACKTOP = sp;
   return;
  }
  __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($14, $34, $33);
  STACKTOP = sp;
  return;
 }
 HEAPF64[$4 >> 3] = .01;
 $39 = $0 + 36 | 0;
 __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($14, $4);
 $$pre = HEAP32[$15 >> 2] | 0;
 $$pre35 = HEAP32[$39 >> 2] | 0;
 HEAPF64[$4 >> 3] = .1;
 if ($$pre >>> 0 < $$pre35 >>> 0) {
  HEAPF64[$$pre >> 3] = .1;
  $41 = $$pre + 8 | 0;
  HEAP32[$15 >> 2] = $41;
  $42 = $41;
  $44 = $$pre35;
 } else {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($14, $4);
  $42 = HEAP32[$15 >> 2] | 0;
  $44 = HEAP32[$39 >> 2] | 0;
 }
 HEAPF64[$4 >> 3] = 1.0;
 if ($42 >>> 0 < $44 >>> 0) {
  HEAPF64[$42 >> 3] = 1.0;
  $45 = $42 + 8 | 0;
  HEAP32[$15 >> 2] = $45;
  $48 = $45;
  $50 = $44;
 } else {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($14, $4);
  $48 = HEAP32[$15 >> 2] | 0;
  $50 = HEAP32[$39 >> 2] | 0;
 }
 $47 = +HEAPF64[$5 >> 3] / 30.0;
 HEAPF64[$4 >> 3] = $47;
 if ($48 >>> 0 < $50 >>> 0) {
  HEAPF64[$48 >> 3] = $47;
  $51 = $48 + 8 | 0;
  HEAP32[$15 >> 2] = $51;
  $54 = $51;
  $56 = $50;
 } else {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($14, $4);
  $54 = HEAP32[$15 >> 2] | 0;
  $56 = HEAP32[$39 >> 2] | 0;
 }
 $53 = +HEAPF64[$5 >> 3] / 15.0;
 HEAPF64[$4 >> 3] = $53;
 if ($54 >>> 0 < $56 >>> 0) {
  HEAPF64[$54 >> 3] = $53;
  $57 = $54 + 8 | 0;
  HEAP32[$15 >> 2] = $57;
  $60 = $57;
  $62 = $56;
 } else {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($14, $4);
  $60 = HEAP32[$15 >> 2] | 0;
  $62 = HEAP32[$39 >> 2] | 0;
 }
 $59 = +HEAPF64[$5 >> 3] / 6.0;
 HEAPF64[$4 >> 3] = $59;
 if ($60 >>> 0 < $62 >>> 0) {
  HEAPF64[$60 >> 3] = $59;
  $63 = $60 + 8 | 0;
  HEAP32[$15 >> 2] = $63;
  $66 = $63;
  $68 = $62;
 } else {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($14, $4);
  $66 = HEAP32[$15 >> 2] | 0;
  $68 = HEAP32[$39 >> 2] | 0;
 }
 $65 = +HEAPF64[$5 >> 3] * .5;
 HEAPF64[$4 >> 3] = $65;
 if ($66 >>> 0 < $68 >>> 0) {
  HEAPF64[$66 >> 3] = $65;
  $69 = $66 + 8 | 0;
  HEAP32[$15 >> 2] = $69;
  $70 = $69;
  $72 = $68;
 } else {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($14, $4);
  $70 = HEAP32[$15 >> 2] | 0;
  $72 = HEAP32[$39 >> 2] | 0;
 }
 if (($70 | 0) == ($72 | 0)) {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($14, $5);
  $77 = HEAP32[$15 >> 2] | 0;
  $79 = HEAP32[$39 >> 2] | 0;
 } else {
  HEAPF64[$70 >> 3] = +HEAPF64[$5 >> 3];
  $74 = $70 + 8 | 0;
  HEAP32[$15 >> 2] = $74;
  $77 = $74;
  $79 = $72;
 }
 $76 = +HEAPF64[$5 >> 3] * 2.0;
 HEAPF64[$4 >> 3] = $76;
 if ($77 >>> 0 < $79 >>> 0) {
  HEAPF64[$77 >> 3] = $76;
  $80 = $77 + 8 | 0;
  HEAP32[$15 >> 2] = $80;
  $83 = $80;
  $85 = $79;
 } else {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($14, $4);
  $83 = HEAP32[$15 >> 2] | 0;
  $85 = HEAP32[$39 >> 2] | 0;
 }
 $82 = +HEAPF64[$5 >> 3] * 5.0;
 HEAPF64[$4 >> 3] = $82;
 if ($83 >>> 0 < $85 >>> 0) {
  HEAPF64[$83 >> 3] = $82;
  $86 = $83 + 8 | 0;
  HEAP32[$15 >> 2] = $86;
  $89 = $86;
  $91 = $85;
 } else {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($14, $4);
  $89 = HEAP32[$15 >> 2] | 0;
  $91 = HEAP32[$39 >> 2] | 0;
 }
 $88 = +HEAPF64[$5 >> 3] * 100.0;
 HEAPF64[$4 >> 3] = $88;
 if ($89 >>> 0 < $91 >>> 0) {
  HEAPF64[$89 >> 3] = $88;
  HEAP32[$15 >> 2] = $89 + 8;
 } else __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($14, $4);
 STACKTOP = sp;
 return;
}

function __ZN8optframe15ParetoDominanceI6RepHFMiE9dominatesERKNS_8SolutionIS1_iEES6_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$phi$trans$insert$i71 = 0, $$phi$trans$insert$i98 = 0, $$pre = 0, $$pre$phi$i102Z2D = 0, $$pre$phi$i75Z2D = 0, $101 = 0, $102 = 0, $109 = 0, $111 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $121 = 0, $122 = 0, $129 = 0, $13 = 0, $132 = 0, $133 = 0, $135 = 0, $137 = 0, $139 = 0, $140 = 0, $147 = 0, $18 = 0, $22 = 0, $3 = 0, $33 = 0, $38 = 0, $4 = 0, $5 = 0, $51 = 0, $56 = 0, $6 = 0, $65 = 0, $7 = 0, $73 = 0, $74 = 0, $76 = 0, $77 = 0, $79 = 0, $81 = 0, $83 = 0, $84 = 0, $91 = 0, $94 = 0, $95 = 0, $97 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 32 | 0;
 $5 = sp;
 $6 = $0 + 16 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if ((HEAP32[$7 + 40 >> 2] | 0) == (HEAP32[$7 + 36 >> 2] | 0)) {
  $13 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22919, 59) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $13 + (HEAP32[(HEAP32[$13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 34536) | 0;
  $22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 28 >> 2] & 63]($18, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($13, $22) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($13) | 0;
  _exit(1);
 }
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 52 >> 2] & 31]($4, $7, HEAP32[$1 + 20 >> 2] | 0, HEAP32[$1 + 24 >> 2] | 0);
 $33 = $3 + 12 | 0;
 HEAP8[$33 + 4 >> 0] = 0;
 HEAP32[$3 + 8 >> 2] = 2;
 HEAP8[$3 + 15 >> 0] = 0;
 HEAP8[$33 >> 0] = 1;
 HEAP8[$3 + 13 >> 0] = 1;
 HEAP8[$3 + 14 >> 0] = 0;
 HEAP32[$3 >> 2] = 4868;
 $38 = $3 + 24 | 0;
 HEAP32[$3 + 20 >> 2] = HEAP32[$4 + 20 >> 2];
 HEAP32[$38 >> 2] = HEAP32[$4 + 24 >> 2];
 HEAP32[$3 + 28 >> 2] = HEAP32[$4 + 28 >> 2];
 $$pre = HEAP32[$6 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$$pre >> 2] | 0) + 52 >> 2] & 31]($5, $$pre, HEAP32[$2 + 20 >> 2] | 0, HEAP32[$2 + 24 >> 2] | 0);
 $51 = $4 + 12 | 0;
 HEAP8[$51 + 4 >> 0] = 0;
 HEAP32[$4 + 8 >> 2] = 2;
 HEAP8[$4 + 15 >> 0] = 0;
 HEAP8[$51 >> 0] = 1;
 HEAP8[$4 + 13 >> 0] = 1;
 HEAP8[$4 + 14 >> 0] = 0;
 HEAP32[$4 >> 2] = 4868;
 $56 = $4 + 24 | 0;
 HEAP32[$4 + 20 >> 2] = HEAP32[$5 + 20 >> 2];
 HEAP32[$56 >> 2] = HEAP32[$5 + 24 >> 2];
 HEAP32[$4 + 28 >> 2] = HEAP32[$5 + 28 >> 2];
 $65 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 63]($0, $3, $4) | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 4 >> 2] & 511]($3);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4 >> 2] | 0) + 4 >> 2] & 511]($4);
 HEAP32[$4 >> 2] = 4868;
 $73 = HEAP32[$4 + 20 >> 2] | 0;
 $74 = HEAP32[$56 >> 2] | 0;
 if (($74 | 0) == ($73 | 0)) {
  $$pre$phi$i75Z2D = $4 + 20 | 0;
  $91 = $73;
 } else {
  $77 = $74;
  while (1) {
   $76 = $77 + -72 | 0;
   HEAP32[$56 >> 2] = $76;
   HEAP32[$76 >> 2] = 4920;
   $79 = HEAP32[$77 + -32 >> 2] | 0;
   if (!$79) $81 = $76; else {
    $83 = $77 + -28 | 0;
    $84 = HEAP32[$83 >> 2] | 0;
    if (($84 | 0) != ($79 | 0)) HEAP32[$83 >> 2] = $84 + (~(($84 + -16 - $79 | 0) >>> 4) << 4);
    __ZdlPv($79);
    $81 = HEAP32[$56 >> 2] | 0;
   }
   if (($81 | 0) == ($73 | 0)) break; else $77 = $81;
  }
  $$phi$trans$insert$i71 = $4 + 20 | 0;
  $$pre$phi$i75Z2D = $$phi$trans$insert$i71;
  $91 = HEAP32[$$phi$trans$insert$i71 >> 2] | 0;
 }
 if ($91 | 0) {
  if (($73 | 0) == ($91 | 0)) $109 = $91; else {
   $95 = $73;
   while (1) {
    $94 = $95 + -72 | 0;
    HEAP32[$56 >> 2] = $94;
    HEAP32[$94 >> 2] = 4920;
    $97 = HEAP32[$95 + -32 >> 2] | 0;
    if (!$97) $99 = $94; else {
     $101 = $95 + -28 | 0;
     $102 = HEAP32[$101 >> 2] | 0;
     if (($102 | 0) != ($97 | 0)) HEAP32[$101 >> 2] = $102 + (~(($102 + -16 - $97 | 0) >>> 4) << 4);
     __ZdlPv($97);
     $99 = HEAP32[$56 >> 2] | 0;
    }
    if (($99 | 0) == ($91 | 0)) break; else $95 = $99;
   }
   $109 = HEAP32[$$pre$phi$i75Z2D >> 2] | 0;
  }
  __ZdlPv($109);
 }
 HEAP32[$3 >> 2] = 4868;
 $111 = HEAP32[$3 + 20 >> 2] | 0;
 $112 = HEAP32[$38 >> 2] | 0;
 if (($112 | 0) == ($111 | 0)) {
  $$pre$phi$i102Z2D = $3 + 20 | 0;
  $129 = $111;
 } else {
  $115 = $112;
  while (1) {
   $114 = $115 + -72 | 0;
   HEAP32[$38 >> 2] = $114;
   HEAP32[$114 >> 2] = 4920;
   $117 = HEAP32[$115 + -32 >> 2] | 0;
   if (!$117) $119 = $114; else {
    $121 = $115 + -28 | 0;
    $122 = HEAP32[$121 >> 2] | 0;
    if (($122 | 0) != ($117 | 0)) HEAP32[$121 >> 2] = $122 + (~(($122 + -16 - $117 | 0) >>> 4) << 4);
    __ZdlPv($117);
    $119 = HEAP32[$38 >> 2] | 0;
   }
   if (($119 | 0) == ($111 | 0)) break; else $115 = $119;
  }
  $$phi$trans$insert$i98 = $3 + 20 | 0;
  $$pre$phi$i102Z2D = $$phi$trans$insert$i98;
  $129 = HEAP32[$$phi$trans$insert$i98 >> 2] | 0;
 }
 if (!$129) {
  STACKTOP = sp;
  return $65 | 0;
 }
 if (($111 | 0) == ($129 | 0)) $147 = $129; else {
  $133 = $111;
  while (1) {
   $132 = $133 + -72 | 0;
   HEAP32[$38 >> 2] = $132;
   HEAP32[$132 >> 2] = 4920;
   $135 = HEAP32[$133 + -32 >> 2] | 0;
   if (!$135) $137 = $132; else {
    $139 = $133 + -28 | 0;
    $140 = HEAP32[$139 >> 2] | 0;
    if (($140 | 0) != ($135 | 0)) HEAP32[$139 >> 2] = $140 + (~(($140 + -16 - $135 | 0) >>> 4) << 4);
    __ZdlPv($135);
    $137 = HEAP32[$38 >> 2] | 0;
   }
   if (($137 | 0) == ($129 | 0)) break; else $133 = $137;
  }
  $147 = HEAP32[$$pre$phi$i102Z2D >> 2] | 0;
 }
 __ZdlPv($147);
 STACKTOP = sp;
 return $65 | 0;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$6 = 0, $$7 = 0, $$cast = 0, $$phi$trans$insert = 0, $$phi$trans$insert64 = 0, $$phi$trans$insert67 = 0, $$pre = 0, $$pre$phi72Z2D = 0, $$pre$phi73Z2D = 0, $$pre$phi75Z2D = 0, $$pre$phi78Z2D = 0, $$pre$phiZ2D = 0, $$pre68 = 0, $$pre70 = 0, $$sink$i = 0, $$sink4$i = 0, $107 = 0, $109 = 0, $110 = 0, $111 = 0, $17 = 0, $2 = 0, $23 = 0, $27 = 0, $3 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $41 = 0, $43 = 0, $44 = 0, $46 = 0, $5 = 0, $52 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $69 = 0, $71 = 0, $73 = 0, $74 = 0, $77 = 0, $79 = 0, $8 = 0, $87 = 0, $89 = 0, $93 = 0, $94 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp + 4 | 0;
 $4 = sp;
 $5 = $0 + 64 | 0;
 if (!(HEAP32[$5 >> 2] | 0)) {
  $$7 = -1;
  STACKTOP = sp;
  return $$7 | 0;
 }
 $8 = $0 + 92 | 0;
 if (!(HEAP32[$8 >> 2] & 16)) {
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
  $17 = HEAP32[$0 + 52 >> 2] | 0;
  do if ($17 >>> 0 > 8) if (!(HEAP8[$0 + 98 >> 0] | 0)) {
   $27 = HEAP32[$0 + 56 >> 2] | 0;
   $$sink$i = $27 + ((HEAP32[$0 + 60 >> 2] | 0) + -1) | 0;
   $$sink4$i = $27;
   break;
  } else {
   $23 = HEAP32[$0 + 32 >> 2] | 0;
   $$sink$i = $23 + ($17 + -1) | 0;
   $$sink4$i = $23;
   break;
  } else {
   $$sink$i = 0;
   $$sink4$i = 0;
  } while (0);
  HEAP32[$0 + 24 >> 2] = $$sink4$i;
  $33 = $0 + 20 | 0;
  HEAP32[$33 >> 2] = $$sink4$i;
  $34 = $0 + 28 | 0;
  HEAP32[$34 >> 2] = $$sink$i;
  HEAP32[$8 >> 2] = 16;
  $$pre$phi72Z2D = $33;
  $$pre$phi73Z2D = $34;
  $$pre$phi75Z2D = $34;
  $$pre$phiZ2D = $33;
  $109 = $$sink4$i;
  $110 = $$sink$i;
  $111 = $$sink4$i;
 } else {
  $$phi$trans$insert = $0 + 20 | 0;
  $$pre = HEAP32[$$phi$trans$insert >> 2] | 0;
  $$phi$trans$insert64 = $0 + 28 | 0;
  $$pre$phi72Z2D = $$phi$trans$insert;
  $$pre$phi73Z2D = $$phi$trans$insert64;
  $$pre$phi75Z2D = $$phi$trans$insert64;
  $$pre$phiZ2D = $$phi$trans$insert;
  $109 = $$pre;
  $110 = HEAP32[$$phi$trans$insert64 >> 2] | 0;
  $111 = $$pre;
 }
 $37 = ($1 | 0) == -1;
 $$phi$trans$insert67 = $0 + 24 | 0;
 $$pre68 = HEAP32[$$phi$trans$insert67 >> 2] | 0;
 if ($37) {
  $44 = $$pre68;
  $46 = $111;
 } else {
  if (!$$pre68) {
   HEAP32[$$phi$trans$insert67 >> 2] = $2;
   HEAP32[$$pre$phiZ2D >> 2] = $2;
   HEAP32[$$pre$phi73Z2D >> 2] = $2 + 1;
   $41 = $2;
  } else $41 = $$pre68;
  HEAP8[$41 >> 0] = $1;
  $43 = (HEAP32[$$phi$trans$insert67 >> 2] | 0) + 1 | 0;
  HEAP32[$$phi$trans$insert67 >> 2] = $43;
  $44 = $43;
  $46 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 }
 L20 : do if (($44 | 0) == ($46 | 0)) label = 32; else {
  L22 : do if (!(HEAP8[$0 + 98 >> 0] | 0)) {
   $56 = $0 + 32 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   HEAP32[$3 >> 2] = $57;
   $58 = $0 + 68 | 0;
   $59 = HEAP32[$58 >> 2] | 0;
   if (!$59) {
    $73 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($73);
    ___cxa_throw($73 | 0, 3120, 249);
   }
   $61 = $57;
   $62 = $0 + 72 | 0;
   $63 = $0 + 52 | 0;
   $69 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$59 >> 2] | 0) + 12 >> 2] & 15]($59, $62, $46, $44, $4, $61, $61 + (HEAP32[$63 >> 2] | 0) | 0, $3) | 0;
   $71 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   L27 : do if ((HEAP32[$4 >> 2] | 0) != ($71 | 0)) {
    $74 = $69;
    $77 = $71;
    while (1) {
     if (($74 | 0) == 3) {
      label = 21;
      break;
     }
     if (($74 | 1 | 0) != 1) break L27;
     $87 = HEAP32[$56 >> 2] | 0;
     $89 = (HEAP32[$3 >> 2] | 0) - $87 | 0;
     if ((_fwrite($87, 1, $89, HEAP32[$5 >> 2] | 0) | 0) != ($89 | 0)) break L27;
     if (($74 | 0) != 1) {
      label = 28;
      break;
     }
     $93 = HEAP32[$4 >> 2] | 0;
     $94 = HEAP32[$$phi$trans$insert67 >> 2] | 0;
     HEAP32[$$pre$phi72Z2D >> 2] = $93;
     HEAP32[$$pre$phi73Z2D >> 2] = $94;
     $$cast = $93;
     $97 = $$cast + ($94 - $93) | 0;
     HEAP32[$$phi$trans$insert67 >> 2] = $97;
     $98 = HEAP32[$58 >> 2] | 0;
     if (!$98) {
      label = 19;
      break;
     }
     $$pre70 = HEAP32[$56 >> 2] | 0;
     $74 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$98 >> 2] | 0) + 12 >> 2] & 15]($98, $62, $$cast, $97, $4, $$pre70, $$pre70 + (HEAP32[$63 >> 2] | 0) | 0, $3) | 0;
     $107 = HEAP32[$$pre$phiZ2D >> 2] | 0;
     if ((HEAP32[$4 >> 2] | 0) == ($107 | 0)) break L27; else $77 = $107;
    }
    if ((label | 0) == 19) {
     $73 = ___cxa_allocate_exception(4) | 0;
     __ZNSt8bad_castC2Ev($73);
     ___cxa_throw($73 | 0, 3120, 249);
    } else if ((label | 0) == 21) {
     $79 = (HEAP32[$$phi$trans$insert67 >> 2] | 0) - $77 | 0;
     if ((_fwrite($77, 1, $79, HEAP32[$5 >> 2] | 0) | 0) != ($79 | 0)) break;
    } else if ((label | 0) == 28) {}
    $$pre$phi78Z2D = $$phi$trans$insert67;
    break L22;
   } while (0);
   $$6 = -1;
   break L20;
  } else {
   $52 = $44 - $46 | 0;
   if ((_fwrite($46, 1, $52, HEAP32[$5 >> 2] | 0) | 0) != ($52 | 0)) {
    $$6 = -1;
    break L20;
   }
   $$pre$phi78Z2D = $$phi$trans$insert67;
  } while (0);
  HEAP32[$$pre$phi78Z2D >> 2] = $109;
  HEAP32[$$pre$phi72Z2D >> 2] = $109;
  HEAP32[$$pre$phi75Z2D >> 2] = $110;
  label = 32;
 } while (0);
 if ((label | 0) == 32) $$6 = $37 ? 0 : $1;
 $$7 = $$6;
 STACKTOP = sp;
 return $$7 | 0;
}

function __ZN3HFM23MoveNEIGHAddSingleInput5applyER6RepHFMPi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pre = 0, $$pre$phi46Z2D = 0, $$pre$phiZ2D = 0, $101 = 0, $102 = 0, $109 = 0, $110 = 0, $111 = 0, $113 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $131 = 0, $132 = 0, $134 = 0, $14 = 0, $149 = 0, $18 = 0, $23 = 0, $24 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $37 = 0, $4 = 0, $5 = 0, $54 = 0, $55 = 0, $59 = 0, $62 = 0, $63 = 0, $64 = 0, $68 = 0, $71 = 0, $74 = 0, $8 = 0, $81 = 0, $83 = 0, $9 = 0, $90 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp;
 $4 = sp + 12 | 0;
 $5 = $0 + 40 | 0;
 if (!(HEAP8[$5 >> 0] | 0)) {
  $8 = $0 + 20 | 0;
  $9 = $0 + 24 | 0;
  HEAP32[$3 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$3 + 4 >> 2] = HEAP32[$9 >> 2];
  $13 = $1 + 4 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  if ($14 >>> 0 < (HEAP32[$1 + 8 >> 2] | 0) >>> 0) {
   $18 = $3;
   $23 = HEAP32[$18 + 4 >> 2] | 0;
   $24 = $14;
   HEAP32[$24 >> 2] = HEAP32[$18 >> 2];
   HEAP32[$24 + 4 >> 2] = $23;
   HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 8;
  } else __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($1, $3);
  $30 = HEAP32[$9 >> 2] | 0;
  $31 = $1 + 72 | 0;
  if (($30 | 0) > (HEAP32[$31 >> 2] | 0)) HEAP32[$31 >> 2] = $30;
  HEAP32[$3 >> 2] = 0;
  $34 = $3 + 4 | 0;
  HEAP32[$34 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEj($3, 6);
  $$pre = HEAP32[$3 >> 2] | 0;
  $37 = HEAP32[$0 + 28 >> 2] | 0;
  HEAPF64[$$pre >> 3] = +HEAPF64[$37 >> 3];
  HEAPF64[$$pre + 8 >> 3] = +HEAPF64[$37 + 8 >> 3];
  HEAPF64[$$pre + 16 >> 3] = +HEAPF64[$37 + 16 >> 3];
  HEAPF64[$$pre + 24 >> 3] = +HEAPF64[$37 + 24 >> 3];
  HEAPF64[$$pre + 32 >> 3] = +HEAPF64[$37 + 32 >> 3];
  HEAPF64[$$pre + 40 >> 3] = +HEAPF64[$37 + 40 >> 3];
  $54 = $1 + 16 | 0;
  $55 = HEAP32[$54 >> 2] | 0;
  if (($55 | 0) == (HEAP32[$1 + 20 >> 2] | 0)) {
   __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($1 + 12 | 0, $3);
   $81 = HEAP32[$3 >> 2] | 0;
  } else {
   HEAP32[$55 >> 2] = 0;
   $59 = $55 + 4 | 0;
   HEAP32[$59 >> 2] = 0;
   HEAP32[$55 + 8 >> 2] = 0;
   $62 = HEAP32[$3 >> 2] | 0;
   $63 = (HEAP32[$34 >> 2] | 0) - $62 | 0;
   $64 = $63 >> 3;
   if (!$64) $149 = $62; else {
    if ($64 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($55);
    $68 = __Znwj($63) | 0;
    HEAP32[$59 >> 2] = $68;
    HEAP32[$55 >> 2] = $68;
    HEAP32[$55 + 8 >> 2] = $68 + ($64 << 3);
    $71 = HEAP32[$3 >> 2] | 0;
    $74 = (HEAP32[$34 >> 2] | 0) - $71 | 0;
    if (($74 | 0) > 0) {
     _memcpy($68 | 0, $71 | 0, $74 | 0) | 0;
     HEAP32[$59 >> 2] = $68 + ($74 >>> 3 << 3);
     $149 = $71;
    } else $149 = $71;
   }
   HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 12;
   $81 = $149;
  }
  if ($81 | 0) {
   $83 = HEAP32[$34 >> 2] | 0;
   if (($83 | 0) != ($81 | 0)) HEAP32[$34 >> 2] = $83 + (~(($83 + -8 - $81 | 0) >>> 3) << 3);
   __ZdlPv($81);
  }
  $$pre$phi46Z2D = $9;
  $$pre$phiZ2D = $8;
 } else {
  $90 = $1 + 4 | 0;
  HEAP32[$90 >> 2] = (HEAP32[$90 >> 2] | 0) + -8;
  $92 = $1 + 16 | 0;
  $93 = HEAP32[$92 >> 2] | 0;
  $94 = $93 + -12 | 0;
  $96 = $93;
  while (1) {
   $95 = $96 + -12 | 0;
   HEAP32[$92 >> 2] = $95;
   $97 = HEAP32[$95 >> 2] | 0;
   if (!$97) $99 = $95; else {
    $101 = $96 + -8 | 0;
    $102 = HEAP32[$101 >> 2] | 0;
    if (($102 | 0) != ($97 | 0)) HEAP32[$101 >> 2] = $102 + (~(($102 + -8 - $97 | 0) >>> 3) << 3);
    __ZdlPv($97);
    $99 = HEAP32[$92 >> 2] | 0;
   }
   if (($99 | 0) == ($94 | 0)) break; else $96 = $99;
  }
  $$pre$phi46Z2D = $0 + 24 | 0;
  $$pre$phiZ2D = $0 + 20 | 0;
 }
 $109 = __Znwj(44) | 0;
 $110 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $111 = HEAP32[$$pre$phi46Z2D >> 2] | 0;
 __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($4, $0 + 28 | 0);
 $113 = HEAP8[$5 >> 0] | 0;
 HEAP8[$109 + 16 >> 0] = 0;
 HEAP32[$109 + 8 >> 2] = 2;
 HEAP8[$109 + 15 >> 0] = 0;
 HEAP8[$109 + 12 >> 0] = 1;
 HEAP8[$109 + 13 >> 0] = 1;
 HEAP8[$109 + 14 >> 0] = 0;
 HEAP32[$109 >> 2] = 5408;
 HEAP32[$109 + 20 >> 2] = $110;
 HEAP32[$109 + 24 >> 2] = $111;
 $122 = $109 + 28 | 0;
 HEAP32[$122 >> 2] = 0;
 $123 = $109 + 32 | 0;
 HEAP32[$123 >> 2] = 0;
 $124 = $109 + 36 | 0;
 HEAP32[$124 >> 2] = 0;
 $125 = $4 + 4 | 0;
 $126 = HEAP32[$125 >> 2] | 0;
 $127 = HEAP32[$4 >> 2] | 0;
 $128 = $126 - $127 | 0;
 $129 = $128 >> 3;
 $131 = $127;
 $132 = $126;
 if ($129 | 0) {
  if ($129 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($122);
  $134 = __Znwj($128) | 0;
  HEAP32[$123 >> 2] = $134;
  HEAP32[$122 >> 2] = $134;
  HEAP32[$124 >> 2] = $134 + ($129 << 3);
  if (($128 | 0) > 0) {
   _memcpy($134 | 0, $127 | 0, $128 | 0) | 0;
   HEAP32[$123 >> 2] = $134 + ($128 >>> 3 << 3);
  }
 }
 HEAP8[$109 + 40 >> 0] = $113 ^ 1;
 if (!$127) {
  STACKTOP = sp;
  return $109 | 0;
 }
 if (($132 | 0) != ($131 | 0)) HEAP32[$125 >> 2] = $132 + (~(($132 + -8 - $127 | 0) >>> 3) << 3);
 __ZdlPv($127);
 STACKTOP = sp;
 return $109 | 0;
}

function __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$017$i = 0, $$025 = 0, $$056$i$i$i = 0, $$07$i$i$i = 0, $$in$i33 = 0, $$sroa$21$0 = 0, $$sroa$21$1$in = 0, $$sroa$37$0 = 0, $$sroa$speculated$$i = 0, $$sroa$speculated$i = 0, $10 = 0, $100 = 0, $102 = 0, $104 = 0, $105 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $121 = 0, $124 = 0, $128 = 0, $132 = 0, $14 = 0, $15 = 0, $17 = 0, $22 = 0, $23 = 0, $3 = 0, $32 = 0, $33 = 0, $4 = 0, $43 = 0, $48 = 0, $49 = 0, $55 = 0, $58 = 0, $6 = 0, $67 = 0, $69 = 0, $7 = 0, $72 = 0, $74 = 0, $75 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $9 = 0, $90 = 0, $92 = 0, $95 = 0, $97 = 0, $99 = 0, $$056$i$i$i$looptemp = 0, $$07$i$i$i$looptemp = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $4 = $3;
 $6 = (HEAP32[$1 >> 2] | 0) - $4 | 0;
 $7 = $6 >> 3;
 $8 = $3 + ($7 << 3) | 0;
 $9 = $0 + 4 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $0 + 8 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $14 = $10;
 $15 = $12;
 if ($10 >>> 0 < $12 >>> 0) {
  if (($8 | 0) == ($10 | 0)) {
   $17 = $2;
   $22 = HEAP32[$17 + 4 >> 2] | 0;
   $23 = $8;
   HEAP32[$23 >> 2] = HEAP32[$17 >> 2];
   HEAP32[$23 + 4 >> 2] = $22;
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 8;
   $$0 = $8;
   return $$0 | 0;
  }
  $32 = $14 - ($8 + 8) >> 3;
  $33 = $8 + ($32 << 3) | 0;
  if ($33 >>> 0 < $10 >>> 0) {
   $$017$i = $33;
   $$in$i33 = $10;
   while (1) {
    $43 = $$017$i;
    $48 = HEAP32[$43 + 4 >> 2] | 0;
    $49 = $$in$i33;
    HEAP32[$49 >> 2] = HEAP32[$43 >> 2];
    HEAP32[$49 + 4 >> 2] = $48;
    $$017$i = $$017$i + 8 | 0;
    $55 = (HEAP32[$9 >> 2] | 0) + 8 | 0;
    HEAP32[$9 >> 2] = $55;
    if ($$017$i >>> 0 >= $10 >>> 0) {
     $58 = $55;
     break;
    } else $$in$i33 = $55;
   }
  } else $58 = $10;
  if ($32 | 0) {
   $$056$i$i$i = $33;
   $$07$i$i$i = $10;
   do {
    $$056$i$i$i$looptemp = $$056$i$i$i;
    $$056$i$i$i = $$056$i$i$i + -8 | 0;
    $$07$i$i$i$looptemp = $$07$i$i$i;
    $$07$i$i$i = $$07$i$i$i + -8 | 0;
    HEAP32[$$07$i$i$i >> 2] = HEAP32[$$056$i$i$i >> 2];
    HEAP32[$$07$i$i$i$looptemp + -4 >> 2] = HEAP32[$$056$i$i$i$looptemp + -4 >> 2];
   } while (($$056$i$i$i | 0) != ($8 | 0));
  }
  $$025 = $8 >>> 0 > $2 >>> 0 ? $2 : $58 >>> 0 > $2 >>> 0 ? $2 + 8 | 0 : $2;
  HEAP32[$8 >> 2] = HEAP32[$$025 >> 2];
  HEAP32[$3 + ($7 << 3) + 4 >> 2] = HEAP32[$$025 + 4 >> 2];
  $$0 = $8;
  return $$0 | 0;
 }
 $67 = ($14 - $4 >> 3) + 1 | 0;
 if ($67 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $69 = $15 - $4 | 0;
 $72 = $69 >> 2;
 $$sroa$speculated$$i = $69 >> 3 >>> 0 < 268435455 ? ($72 >>> 0 < $67 >>> 0 ? $67 : $72) : 536870911;
 $74 = $8;
 $75 = $6 >> 3;
 do if (!$$sroa$speculated$$i) {
  $104 = 0;
  $82 = 0;
 } else if ($$sroa$speculated$$i >>> 0 > 536870911) {
  $78 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($78, 15810);
  HEAP32[$78 >> 2] = 14216;
  ___cxa_throw($78 | 0, 3104, 246);
 } else {
  $80 = __Znwj($$sroa$speculated$$i << 3) | 0;
  $104 = $80;
  $82 = $80;
  break;
 } while (0);
 $81 = $82 + ($75 << 3) | 0;
 $83 = $81;
 $85 = $82 + ($$sroa$speculated$$i << 3) | 0;
 do if (($75 | 0) == ($$sroa$speculated$$i | 0)) {
  if (($6 | 0) > 0) {
   $90 = $81 + ((($$sroa$speculated$$i + 1 | 0) / -2 | 0) << 3) | 0;
   $$sroa$21$0 = $90;
   $$sroa$37$0 = $85;
   $111 = $90;
   $119 = $3;
   break;
  }
  $92 = $$sroa$speculated$$i << 3 >> 2;
  $$sroa$speculated$i = ($92 | 0) == 0 ? 1 : $92;
  if ($$sroa$speculated$i >>> 0 > 536870911) {
   $95 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($95, 15810);
   HEAP32[$95 >> 2] = 14216;
   ___cxa_throw($95 | 0, 3104, 246);
  }
  $97 = __Znwj($$sroa$speculated$i << 3) | 0;
  $99 = $97 + ($$sroa$speculated$i >>> 2 << 3) | 0;
  $100 = $99;
  $102 = $97 + ($$sroa$speculated$i << 3) | 0;
  if (!$82) {
   $$sroa$21$0 = $100;
   $$sroa$37$0 = $102;
   $111 = $99;
   $119 = $3;
  } else {
   __ZdlPv($104);
   $$sroa$21$0 = $100;
   $$sroa$37$0 = $102;
   $111 = $99;
   $119 = HEAP32[$0 >> 2] | 0;
  }
 } else {
  $$sroa$21$0 = $83;
  $$sroa$37$0 = $85;
  $111 = $81;
  $119 = $3;
 } while (0);
 $105 = $2;
 $110 = HEAP32[$105 + 4 >> 2] | 0;
 $112 = $111;
 HEAP32[$112 >> 2] = HEAP32[$105 >> 2];
 HEAP32[$112 + 4 >> 2] = $110;
 $117 = $$sroa$21$0 + 8 | 0;
 $118 = $$sroa$21$0;
 $121 = $74 - $119 | 0;
 $124 = $118 + (0 - ($121 >> 3) << 3) | 0;
 if (($121 | 0) > 0) _memcpy($124 | 0, $119 | 0, $121 | 0) | 0;
 $128 = (HEAP32[$9 >> 2] | 0) - $74 | 0;
 if (($128 | 0) > 0) {
  _memcpy($117 | 0, $8 | 0, $128 | 0) | 0;
  $$sroa$21$1$in = $117 + ($128 >>> 3 << 3) | 0;
 } else $$sroa$21$1$in = $117;
 $132 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $124;
 HEAP32[$9 >> 2] = $$sroa$21$1$in;
 HEAP32[$11 >> 2] = $$sroa$37$0;
 if (!$132) {
  $$0 = $118;
  return $$0 | 0;
 }
 __ZdlPv($132);
 $$0 = $118;
 return $$0 | 0;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE9underflowEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i = 0, $$1 = 0, $$3 = 0, $$phi$trans$insert = 0, $$phi$trans$insert56 = 0, $$pre$phi64Z2D = 0, $$pre$phi66Z2D = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink$i = 0, $$sink55 = 0, $1 = 0, $102 = 0, $105 = 0, $107 = 0, $109 = 0, $111 = 0, $120 = 0, $121 = 0, $122 = 0, $124 = 0, $15 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $34 = 0, $37 = 0, $39 = 0, $41 = 0, $42 = 0, $49 = 0, $55 = 0, $58 = 0, $6 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $67 = 0, $68 = 0, $70 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $82 = 0, $83 = 0, $84 = 0, $86 = 0, $87 = 0, $89 = 0, $91 = 0, $96 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 $3 = $0 + 64 | 0;
 if (!(HEAP32[$3 >> 2] | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $6 = $0 + 92 | 0;
 if (!(HEAP32[$6 >> 2] & 8)) {
  HEAP32[$0 + 24 >> 2] = 0;
  HEAP32[$0 + 20 >> 2] = 0;
  HEAP32[$0 + 28 >> 2] = 0;
  $15 = (HEAP8[$0 + 98 >> 0] | 0) == 0;
  $$sink$i = HEAP32[($15 ? $0 + 56 | 0 : $0 + 32 | 0) >> 2] | 0;
  $21 = $$sink$i + (HEAP32[($15 ? $0 + 60 | 0 : $0 + 52 | 0) >> 2] | 0) | 0;
  HEAP32[$0 + 8 >> 2] = $$sink$i;
  $23 = $0 + 12 | 0;
  HEAP32[$23 >> 2] = $21;
  HEAP32[$0 + 16 >> 2] = $21;
  HEAP32[$6 >> 2] = 8;
  $$0$i = 1;
  $$pre$phiZ2D = $23;
  $25 = $21;
 } else {
  $$phi$trans$insert = $0 + 12 | 0;
  $$0$i = 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $25 = HEAP32[$$phi$trans$insert >> 2] | 0;
 }
 if (!$25) {
  $27 = $1 + 1 | 0;
  HEAP32[$0 + 8 >> 2] = $1;
  HEAP32[$$pre$phiZ2D >> 2] = $27;
  HEAP32[$0 + 16 >> 2] = $27;
  $37 = $27;
 } else $37 = $25;
 $$phi$trans$insert56 = $0 + 16 | 0;
 if ($$0$i) {
  $39 = HEAP32[$$phi$trans$insert56 >> 2] | 0;
  $41 = 0;
 } else {
  $30 = HEAP32[$$phi$trans$insert56 >> 2] | 0;
  $34 = ($30 - (HEAP32[$0 + 8 >> 2] | 0) | 0) / 2 | 0;
  $39 = $30;
  $41 = $34 >>> 0 < 4 ? $34 : 4;
 }
 do if (($37 | 0) == ($39 | 0)) {
  $42 = $0 + 8 | 0;
  _memmove(HEAP32[$42 >> 2] | 0, $37 + (0 - $41) | 0, $41 | 0) | 0;
  if (HEAP8[$0 + 98 >> 0] | 0) {
   $49 = HEAP32[$42 >> 2] | 0;
   $55 = _fread($49 + $41 | 0, 1, (HEAP32[$$phi$trans$insert56 >> 2] | 0) - $41 - $49 | 0, HEAP32[$3 >> 2] | 0) | 0;
   if (!$55) {
    $$3 = -1;
    $$pre$phi64Z2D = $42;
    break;
   }
   $58 = (HEAP32[$42 >> 2] | 0) + $41 | 0;
   HEAP32[$$pre$phiZ2D >> 2] = $58;
   HEAP32[$$phi$trans$insert56 >> 2] = $58 + $55;
   $$3 = HEAPU8[$58 >> 0] | 0;
   $$pre$phi64Z2D = $42;
   break;
  }
  $62 = $0 + 40 | 0;
  $63 = HEAP32[$62 >> 2] | 0;
  $64 = $0 + 36 | 0;
  $65 = HEAP32[$64 >> 2] | 0;
  $67 = $63;
  $68 = $65;
  if (($63 | 0) == ($65 | 0)) {
   $$pre$phi66Z2D = $0 + 32 | 0;
   $74 = $68;
   $75 = $67;
  } else {
   $70 = $0 + 32 | 0;
   _memmove(HEAP32[$70 >> 2] | 0, $65 | 0, $67 - $68 | 0) | 0;
   $$pre$phi66Z2D = $70;
   $74 = HEAP32[$64 >> 2] | 0;
   $75 = HEAP32[$62 >> 2] | 0;
  }
  $72 = HEAP32[$$pre$phi66Z2D >> 2] | 0;
  $76 = $72 + ($75 - $74) | 0;
  HEAP32[$64 >> 2] = $76;
  if (($72 | 0) == ($0 + 44 | 0)) $83 = 8; else $83 = HEAP32[$0 + 52 >> 2] | 0;
  $82 = $72 + $83 | 0;
  HEAP32[$62 >> 2] = $82;
  $84 = $0 + 60 | 0;
  $86 = (HEAP32[$84 >> 2] | 0) - $41 | 0;
  $87 = $82 - $76 | 0;
  $89 = $0 + 72 | 0;
  $91 = $89;
  $96 = HEAP32[$91 + 4 >> 2] | 0;
  $97 = $0 + 80 | 0;
  HEAP32[$97 >> 2] = HEAP32[$91 >> 2];
  HEAP32[$97 + 4 >> 2] = $96;
  $102 = _fread($76, 1, $87 >>> 0 < $86 >>> 0 ? $87 : $86, HEAP32[$3 >> 2] | 0) | 0;
  if (!$102) {
   $$3 = -1;
   $$pre$phi64Z2D = $42;
  } else {
   $105 = HEAP32[$0 + 68 >> 2] | 0;
   if (!$105) {
    $107 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($107);
    ___cxa_throw($107 | 0, 3120, 249);
   }
   $109 = (HEAP32[$64 >> 2] | 0) + $102 | 0;
   HEAP32[$62 >> 2] = $109;
   $111 = HEAP32[$42 >> 2] | 0;
   if ((FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$105 >> 2] | 0) + 16 >> 2] & 15]($105, $89, HEAP32[$$pre$phi66Z2D >> 2] | 0, $109, $64, $111 + $41 | 0, $111 + (HEAP32[$84 >> 2] | 0) | 0, $2) | 0) == 3) {
    $120 = HEAP32[$$pre$phi66Z2D >> 2] | 0;
    $121 = HEAP32[$62 >> 2] | 0;
    HEAP32[$42 >> 2] = $120;
    $$sink = $121;
    $$sink55 = $120;
    label = 25;
   } else {
    $122 = HEAP32[$2 >> 2] | 0;
    $124 = (HEAP32[$42 >> 2] | 0) + $41 | 0;
    if (($122 | 0) == ($124 | 0)) $$1 = -1; else {
     $$sink = $122;
     $$sink55 = $124;
     label = 25;
    }
   }
   if ((label | 0) == 25) {
    HEAP32[$$pre$phiZ2D >> 2] = $$sink55;
    HEAP32[$$phi$trans$insert56 >> 2] = $$sink;
    $$1 = HEAPU8[$$sink55 >> 0] | 0;
   }
   $$3 = $$1;
   $$pre$phi64Z2D = $42;
  }
 } else {
  $$3 = HEAPU8[$37 >> 0] | 0;
  $$pre$phi64Z2D = $0 + 8 | 0;
 } while (0);
 if ((HEAP32[$$pre$phi64Z2D >> 2] | 0) == ($1 | 0)) {
  HEAP32[$$pre$phi64Z2D >> 2] = 0;
  HEAP32[$$pre$phiZ2D >> 2] = 0;
  HEAP32[$$phi$trans$insert56 >> 2] = 0;
 }
 $$0 = $$3;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i40 = 0, $$0$i$i42 = 0, $$038 = 0, $$039 = 0, $$byval_copy = 0, $$sink1 = 0, $$sink73 = 0, $$sink74 = 0, $$sroa$051$0 = 0, $$sroa$059$0 = 0, $$sroa$068$0 = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0, $32 = 0, $33 = 0, $48 = 0, $49 = 0, $55 = 0, $6 = 0, $64 = 0, $7 = 0, $72 = 0, $8 = 0, $80 = 0, $87 = 0, $9 = 0, $90 = 0, $99 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer1 = sp;
 $6 = sp + 896 | 0;
 $7 = sp + 888 | 0;
 $8 = sp + 488 | 0;
 $9 = sp + 480 | 0;
 $10 = sp + 892 | 0;
 $11 = sp + 476 | 0;
 $12 = sp + 472 | 0;
 $13 = sp + 460 | 0;
 $14 = sp + 448 | 0;
 $15 = sp + 436 | 0;
 $16 = sp + 432 | 0;
 $17 = sp + 32 | 0;
 $18 = sp + 24 | 0;
 $19 = sp + 16 | 0;
 $20 = sp + 20 | 0;
 HEAP32[$7 >> 2] = $6;
 HEAPF64[$$byval_copy >> 3] = $5;
 $21 = _snprintf($6, 100, 28320, $$byval_copy) | 0;
 if ($21 >>> 0 > 99) {
  $23 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[$vararg_buffer1 >> 3] = $5;
  $24 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $23, 28320, $vararg_buffer1) | 0;
  $25 = HEAP32[$7 >> 2] | 0;
  if (!$25) __ZSt17__throw_bad_allocv();
  $29 = _malloc($24 << 2) | 0;
  if (!$29) __ZSt17__throw_bad_allocv(); else {
   $$0 = $29;
   $$039 = $24;
   $$sroa$059$0 = $29;
   $$sroa$068$0 = $25;
  }
 } else {
  $$0 = $8;
  $$039 = $21;
  $$sroa$059$0 = 0;
  $$sroa$068$0 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv($9, $3);
 $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($9, 34568) | 0;
 $33 = HEAP32[$7 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$32 >> 2] | 0) + 48 >> 2] & 31]($32, $33, $33 + $$039 | 0, $$0) | 0;
 if (!$$039) $48 = 0; else $48 = (HEAP8[HEAP32[$7 >> 2] >> 0] | 0) == 45;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$13 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 $$0$i$i40 = 0;
 while (1) {
  if (($$0$i$i40 | 0) == 3) break;
  HEAP32[$14 + ($$0$i$i40 << 2) >> 2] = 0;
  $$0$i$i40 = $$0$i$i40 + 1 | 0;
 }
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 $$0$i$i42 = 0;
 while (1) {
  if (($$0$i$i42 | 0) == 3) break;
  HEAP32[$15 + ($$0$i$i42 << 2) >> 2] = 0;
  $$0$i$i42 = $$0$i$i42 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($2, $48, $9, $10, $11, $12, $13, $14, $15, $16);
 $49 = HEAP32[$16 >> 2] | 0;
 if (($$039 | 0) > ($49 | 0)) {
  $55 = HEAP8[$15 + 8 + 3 >> 0] | 0;
  $64 = HEAP8[$14 + 8 + 3 >> 0] | 0;
  $$sink1 = 1;
  $$sink73 = ($55 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $55 & 255) + ($$039 - $49 << 1) | 0;
  $$sink74 = $64 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $64 & 255;
 } else {
  $72 = HEAP8[$15 + 8 + 3 >> 0] | 0;
  $80 = HEAP8[$14 + 8 + 3 >> 0] | 0;
  $$sink1 = 2;
  $$sink73 = $80 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $80 & 255;
  $$sink74 = $72 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $72 & 255;
 }
 $87 = $$sink74 + $49 + $$sink73 + $$sink1 | 0;
 if ($87 >>> 0 > 100) {
  $90 = _malloc($87 << 2) | 0;
  if (!$90) __ZSt17__throw_bad_allocv(); else {
   $$038 = $90;
   $$sroa$051$0 = $90;
  }
 } else {
  $$038 = $17;
  $$sroa$051$0 = 0;
 }
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($$038, $18, $19, HEAP32[$3 + 4 >> 2] | 0, $$0, $$0 + ($$039 << 2) | 0, $32, $48, $10, HEAP32[$11 >> 2] | 0, HEAP32[$12 >> 2] | 0, $13, $14, $15, $49);
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 $99 = HEAP32[$18 >> 2] | 0;
 $100 = HEAP32[$19 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$20 >> 2];
 $101 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$038, $99, $100, $3, $4) | 0;
 if ($$sroa$051$0 | 0) _free($$sroa$051$0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($15);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__26localeD2Ev($9);
 if ($$sroa$059$0 | 0) _free($$sroa$059$0);
 if ($$sroa$068$0 | 0) _free($$sroa$068$0);
 STACKTOP = sp;
 return $101 | 0;
}

function __ZN6RepHFMD2Ev($0) {
 $0 = $0 | 0;
 var $100 = 0, $101 = 0, $103 = 0, $104 = 0, $105 = 0, $107 = 0, $109 = 0, $110 = 0, $117 = 0, $118 = 0, $119 = 0, $121 = 0, $122 = 0, $124 = 0, $125 = 0, $126 = 0, $128 = 0, $13 = 0, $130 = 0, $131 = 0, $138 = 0, $139 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $2 = 0, $24 = 0, $26 = 0, $27 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $46 = 0, $47 = 0, $5 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $67 = 0, $68 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $80 = 0, $82 = 0, $83 = 0, $84 = 0, $86 = 0, $88 = 0, $89 = 0, $96 = 0, $97 = 0, $98 = 0;
 $2 = HEAP32[$0 + 112 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 116 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -8 - $2 | 0) >>> 3) << 3);
  __ZdlPv($2);
 }
 $13 = HEAP32[$0 + 100 >> 2] | 0;
 if ($13 | 0) {
  $15 = $0 + 104 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $13 | 0) >>> 2) << 2);
  __ZdlPv($13);
 }
 $24 = HEAP32[$0 + 88 >> 2] | 0;
 if ($24 | 0) {
  $26 = $0 + 92 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  if (($27 | 0) != ($24 | 0)) HEAP32[$26 >> 2] = $27 + (~(($27 + -8 - $24 | 0) >>> 3) << 3);
  __ZdlPv($24);
 }
 $34 = $0 + 60 | 0;
 $35 = HEAP32[$34 >> 2] | 0;
 if ($35 | 0) {
  $37 = $0 + 64 | 0;
  $38 = HEAP32[$37 >> 2] | 0;
  if (($38 | 0) == ($35 | 0)) $54 = $35; else {
   $41 = $38;
   while (1) {
    $40 = $41 + -12 | 0;
    HEAP32[$37 >> 2] = $40;
    $42 = HEAP32[$40 >> 2] | 0;
    if (!$42) $44 = $40; else {
     $46 = $41 + -8 | 0;
     $47 = HEAP32[$46 >> 2] | 0;
     if (($47 | 0) != ($42 | 0)) HEAP32[$46 >> 2] = $47 + (~(($47 + -8 - $42 | 0) >>> 3) << 3);
     __ZdlPv($42);
     $44 = HEAP32[$37 >> 2] | 0;
    }
    if (($44 | 0) == ($35 | 0)) break; else $41 = $44;
   }
   $54 = HEAP32[$34 >> 2] | 0;
  }
  __ZdlPv($54);
 }
 $55 = $0 + 48 | 0;
 $56 = HEAP32[$55 >> 2] | 0;
 if ($56 | 0) {
  $58 = $0 + 52 | 0;
  $59 = HEAP32[$58 >> 2] | 0;
  if (($59 | 0) == ($56 | 0)) $75 = $56; else {
   $62 = $59;
   while (1) {
    $61 = $62 + -12 | 0;
    HEAP32[$58 >> 2] = $61;
    $63 = HEAP32[$61 >> 2] | 0;
    if (!$63) $65 = $61; else {
     $67 = $62 + -8 | 0;
     $68 = HEAP32[$67 >> 2] | 0;
     if (($68 | 0) != ($63 | 0)) HEAP32[$67 >> 2] = $68 + (~(($68 + -8 - $63 | 0) >>> 3) << 3);
     __ZdlPv($63);
     $65 = HEAP32[$58 >> 2] | 0;
    }
    if (($65 | 0) == ($56 | 0)) break; else $62 = $65;
   }
   $75 = HEAP32[$55 >> 2] | 0;
  }
  __ZdlPv($75);
 }
 $76 = $0 + 36 | 0;
 $77 = HEAP32[$76 >> 2] | 0;
 if ($77 | 0) {
  $79 = $0 + 40 | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  if (($80 | 0) == ($77 | 0)) $96 = $77; else {
   $83 = $80;
   while (1) {
    $82 = $83 + -12 | 0;
    HEAP32[$79 >> 2] = $82;
    $84 = HEAP32[$82 >> 2] | 0;
    if (!$84) $86 = $82; else {
     $88 = $83 + -8 | 0;
     $89 = HEAP32[$88 >> 2] | 0;
     if (($89 | 0) != ($84 | 0)) HEAP32[$88 >> 2] = $89 + (~(($89 + -8 - $84 | 0) >>> 3) << 3);
     __ZdlPv($84);
     $86 = HEAP32[$79 >> 2] | 0;
    }
    if (($86 | 0) == ($77 | 0)) break; else $83 = $86;
   }
   $96 = HEAP32[$76 >> 2] | 0;
  }
  __ZdlPv($96);
 }
 $97 = $0 + 24 | 0;
 $98 = HEAP32[$97 >> 2] | 0;
 if ($98 | 0) {
  $100 = $0 + 28 | 0;
  $101 = HEAP32[$100 >> 2] | 0;
  if (($101 | 0) == ($98 | 0)) $117 = $98; else {
   $104 = $101;
   while (1) {
    $103 = $104 + -12 | 0;
    HEAP32[$100 >> 2] = $103;
    $105 = HEAP32[$103 >> 2] | 0;
    if (!$105) $107 = $103; else {
     $109 = $104 + -8 | 0;
     $110 = HEAP32[$109 >> 2] | 0;
     if (($110 | 0) != ($105 | 0)) HEAP32[$109 >> 2] = $110 + (~(($110 + -8 - $105 | 0) >>> 3) << 3);
     __ZdlPv($105);
     $107 = HEAP32[$100 >> 2] | 0;
    }
    if (($107 | 0) == ($98 | 0)) break; else $104 = $107;
   }
   $117 = HEAP32[$97 >> 2] | 0;
  }
  __ZdlPv($117);
 }
 $118 = $0 + 12 | 0;
 $119 = HEAP32[$118 >> 2] | 0;
 if ($119 | 0) {
  $121 = $0 + 16 | 0;
  $122 = HEAP32[$121 >> 2] | 0;
  if (($122 | 0) == ($119 | 0)) $138 = $119; else {
   $125 = $122;
   while (1) {
    $124 = $125 + -12 | 0;
    HEAP32[$121 >> 2] = $124;
    $126 = HEAP32[$124 >> 2] | 0;
    if (!$126) $128 = $124; else {
     $130 = $125 + -8 | 0;
     $131 = HEAP32[$130 >> 2] | 0;
     if (($131 | 0) != ($126 | 0)) HEAP32[$130 >> 2] = $131 + (~(($131 + -8 - $126 | 0) >>> 3) << 3);
     __ZdlPv($126);
     $128 = HEAP32[$121 >> 2] | 0;
    }
    if (($128 | 0) == ($119 | 0)) break; else $125 = $128;
   }
   $138 = HEAP32[$118 >> 2] | 0;
  }
  __ZdlPv($138);
 }
 $139 = HEAP32[$0 >> 2] | 0;
 if (!$139) return;
 $141 = $0 + 4 | 0;
 $142 = HEAP32[$141 >> 2] | 0;
 if (($142 | 0) != ($139 | 0)) HEAP32[$141 >> 2] = $142 + (~(($142 + -8 - $139 | 0) >>> 3) << 3);
 __ZdlPv($139);
 return;
}

function __ZNSt3__227__insertion_sort_incompleteIRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEbT0_SO_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$06275 = 0, $$06474 = 0, $$06972 = 0, $$06972$phi = 0, $$1 = 0, $$165 = 0, $$170 = 0, $$170$phi = 0, $$3 = 0, $$5 = 0, $102 = 0, $12 = 0, $19 = 0, $23 = 0, $24 = 0, $25 = 0, $30 = 0, $37 = 0, $43 = 0, $50 = 0, $51 = 0, $55 = 0, $62 = 0, $68 = 0, $7 = 0, $70 = 0, $76 = 0, $83 = 0, $85 = 0, $88 = 0, $92 = 0, $98 = 0;
 switch ($1 - $0 >> 2 | 0) {
 case 2:
  {
   $7 = $1 + -4 | 0;
   $12 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 40 >> 2] & 63]($12, (HEAP32[$7 >> 2] | 0) + 32 | 0, (HEAP32[$0 >> 2] | 0) + 32 | 0) | 0)) {
    $$5 = 1;
    return $$5 | 0;
   }
   $19 = HEAP32[$0 >> 2] | 0;
   HEAP32[$0 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$7 >> 2] = $19;
   $$5 = 1;
   return $$5 | 0;
  }
 case 3:
  {
   __ZNSt3__27__sort3IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_T_($0, $0 + 4 | 0, $1 + -4 | 0, $2) | 0;
   $$5 = 1;
   return $$5 | 0;
  }
 case 4:
  {
   $23 = $0 + 4 | 0;
   $24 = $0 + 8 | 0;
   $25 = $1 + -4 | 0;
   __ZNSt3__27__sort3IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_T_($0, $23, $24, $2) | 0;
   $30 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$30 >> 2] | 0) + 40 >> 2] & 63]($30, (HEAP32[$25 >> 2] | 0) + 32 | 0, (HEAP32[$24 >> 2] | 0) + 32 | 0) | 0)) {
    $$5 = 1;
    return $$5 | 0;
   }
   $37 = HEAP32[$24 >> 2] | 0;
   HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
   HEAP32[$25 >> 2] = $37;
   $43 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$43 >> 2] | 0) + 40 >> 2] & 63]($43, (HEAP32[$24 >> 2] | 0) + 32 | 0, (HEAP32[$23 >> 2] | 0) + 32 | 0) | 0)) {
    $$5 = 1;
    return $$5 | 0;
   }
   $50 = HEAP32[$23 >> 2] | 0;
   $51 = HEAP32[$24 >> 2] | 0;
   HEAP32[$23 >> 2] = $51;
   HEAP32[$24 >> 2] = $50;
   $55 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$55 >> 2] | 0) + 40 >> 2] & 63]($55, $51 + 32 | 0, (HEAP32[$0 >> 2] | 0) + 32 | 0) | 0)) {
    $$5 = 1;
    return $$5 | 0;
   }
   $62 = HEAP32[$0 >> 2] | 0;
   HEAP32[$0 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$23 >> 2] = $62;
   $$5 = 1;
   return $$5 | 0;
  }
 case 5:
  {
   __ZNSt3__27__sort5IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_SO_SO_T_($0, $0 + 4 | 0, $0 + 8 | 0, $0 + 12 | 0, $1 + -4 | 0, $2) | 0;
   $$5 = 1;
   return $$5 | 0;
  }
 case 1:
 case 0:
  {
   $$5 = 1;
   return $$5 | 0;
  }
 default:
  {
   $68 = $0 + 8 | 0;
   __ZNSt3__27__sort3IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_T_($0, $0 + 4 | 0, $68, $2) | 0;
   $70 = $0 + 12 | 0;
   L3 : do if (($70 | 0) == ($1 | 0)) {
    $$1 = 1;
    $$3 = 0;
   } else {
    $$06275 = $70;
    $$06474 = 0;
    $$06972 = $68;
    while (1) {
     $76 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$76 >> 2] | 0) + 40 >> 2] & 63]($76, (HEAP32[$$06275 >> 2] | 0) + 32 | 0, (HEAP32[$$06972 >> 2] | 0) + 32 | 0) | 0) {
      $83 = HEAP32[$$06275 >> 2] | 0;
      $85 = $83 + 32 | 0;
      $$0 = $$06972;
      $$170 = $$06275;
      while (1) {
       HEAP32[$$170 >> 2] = HEAP32[$$0 >> 2];
       if (($$0 | 0) == ($0 | 0)) break;
       $88 = $$0 + -4 | 0;
       $92 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
       if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$92 >> 2] | 0) + 40 >> 2] & 63]($92, $85, (HEAP32[$88 >> 2] | 0) + 32 | 0) | 0) {
        $$170$phi = $$0;
        $$0 = $88;
        $$170 = $$170$phi;
       } else break;
      }
      HEAP32[$$0 >> 2] = $83;
      $98 = $$06474 + 1 | 0;
      if (($98 | 0) == 8) {
       $$1 = 0;
       $$3 = ($$06275 + 4 | 0) == ($1 | 0);
       break L3;
      } else $$165 = $98;
     } else $$165 = $$06474;
     $102 = $$06275 + 4 | 0;
     if (($102 | 0) == ($1 | 0)) {
      $$1 = 1;
      $$3 = 0;
      break;
     } else {
      $$06972$phi = $$06275;
      $$06275 = $102;
      $$06474 = $$165;
      $$06972 = $$06972$phi;
     }
    }
   } while (0);
   $$5 = $$3 | $$1;
   return $$5 | 0;
  }
 }
 return 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i42 = 0, $$0$i$i45 = 0, $$038 = 0, $$039 = 0, $$byval_copy = 0, $$sink1 = 0, $$sink76 = 0, $$sink77 = 0, $$sroa$054$0 = 0, $$sroa$062$0 = 0, $$sroa$071$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $31 = 0, $32 = 0, $47 = 0, $48 = 0, $53 = 0, $6 = 0, $61 = 0, $68 = 0, $7 = 0, $75 = 0, $8 = 0, $82 = 0, $84 = 0, $9 = 0, $93 = 0, $94 = 0, $95 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer1 = sp;
 $6 = sp + 284 | 0;
 $7 = sp + 72 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 68 | 0;
 $10 = sp + 180 | 0;
 $11 = sp + 177 | 0;
 $12 = sp + 176 | 0;
 $13 = sp + 56 | 0;
 $14 = sp + 44 | 0;
 $15 = sp + 32 | 0;
 $16 = sp + 28 | 0;
 $17 = sp + 76 | 0;
 $18 = sp + 24 | 0;
 $19 = sp + 16 | 0;
 $20 = sp + 20 | 0;
 HEAP32[$7 >> 2] = $6;
 HEAPF64[$$byval_copy >> 3] = $5;
 $21 = _snprintf($6, 100, 28320, $$byval_copy) | 0;
 if ($21 >>> 0 > 99) {
  $23 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[$vararg_buffer1 >> 3] = $5;
  $24 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $23, 28320, $vararg_buffer1) | 0;
  $25 = HEAP32[$7 >> 2] | 0;
  if (!$25) __ZSt17__throw_bad_allocv();
  $28 = _malloc($24) | 0;
  if (!$28) __ZSt17__throw_bad_allocv(); else {
   $$0 = $28;
   $$039 = $24;
   $$sroa$062$0 = $28;
   $$sroa$071$0 = $25;
  }
 } else {
  $$0 = $8;
  $$039 = $21;
  $$sroa$062$0 = 0;
  $$sroa$071$0 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv($9, $3);
 $31 = __ZNKSt3__26locale9use_facetERNS0_2idE($9, 34536) | 0;
 $32 = HEAP32[$7 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$31 >> 2] | 0) + 32 >> 2] & 31]($31, $32, $32 + $$039 | 0, $$0) | 0;
 if (!$$039) $47 = 0; else $47 = (HEAP8[HEAP32[$7 >> 2] >> 0] | 0) == 45;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$13 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 $$0$i$i42 = 0;
 while (1) {
  if (($$0$i$i42 | 0) == 3) break;
  HEAP32[$14 + ($$0$i$i42 << 2) >> 2] = 0;
  $$0$i$i42 = $$0$i$i42 + 1 | 0;
 }
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 $$0$i$i45 = 0;
 while (1) {
  if (($$0$i$i45 | 0) == 3) break;
  HEAP32[$15 + ($$0$i$i45 << 2) >> 2] = 0;
  $$0$i$i45 = $$0$i$i45 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($2, $47, $9, $10, $11, $12, $13, $14, $15, $16);
 $48 = HEAP32[$16 >> 2] | 0;
 if (($$039 | 0) > ($48 | 0)) {
  $53 = HEAP8[$15 + 11 >> 0] | 0;
  $61 = HEAP8[$14 + 11 >> 0] | 0;
  $$sink1 = 1;
  $$sink76 = ($53 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $53 & 255) + ($$039 - $48 << 1) | 0;
  $$sink77 = $61 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $61 & 255;
 } else {
  $68 = HEAP8[$15 + 11 >> 0] | 0;
  $75 = HEAP8[$14 + 11 >> 0] | 0;
  $$sink1 = 2;
  $$sink76 = $75 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $75 & 255;
  $$sink77 = $68 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $68 & 255;
 }
 $82 = $$sink77 + $48 + $$sink76 + $$sink1 | 0;
 if ($82 >>> 0 > 100) {
  $84 = _malloc($82) | 0;
  if (!$84) __ZSt17__throw_bad_allocv(); else {
   $$038 = $84;
   $$sroa$054$0 = $84;
  }
 } else {
  $$038 = $17;
  $$sroa$054$0 = 0;
 }
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($$038, $18, $19, HEAP32[$3 + 4 >> 2] | 0, $$0, $$0 + $$039 | 0, $31, $47, $10, HEAP8[$11 >> 0] | 0, HEAP8[$12 >> 0] | 0, $13, $14, $15, $48);
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 $93 = HEAP32[$18 >> 2] | 0;
 $94 = HEAP32[$19 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$20 >> 2];
 $95 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$038, $93, $94, $3, $4) | 0;
 if ($$sroa$054$0 | 0) _free($$sroa$054$0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__26localeD2Ev($9);
 if ($$sroa$062$0 | 0) _free($$sroa$062$0);
 if ($$sroa$071$0 | 0) _free($$sroa$071$0);
 STACKTOP = sp;
 return $95 | 0;
}

function __ZN3HFM18HFMProblemInstanceC2ERKNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$086 = 0, $$sink$i$i = 0, $$sink2$i$i = 0, $$sroa$0$0$copyload$i$i = 0, $$sroa$0$015$i$i = 0, $$sroa$0$i$i = 0, $$sroa$03$i = 0, $$sroa$03$i$0$$sroa$03$0$$sroa$03$0$418$i82 = 0, $100 = 0, $105 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $3 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $7 = 0, $71 = 0.0, $73 = 0.0, $75 = 0.0, $76 = 0.0, $79 = 0, $8 = 0, $83 = 0.0, $86 = 0, $9 = 0, $93 = 0.0, $98 = 0, $storemerge$i = 0.0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$sroa$0$i$i = sp + 8 | 0;
 $$sroa$03$i = sp;
 $2 = sp + 16 | 0;
 HEAP32[$0 >> 2] = 6140;
 $3 = $0 + 4 | 0;
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2ERKS5_($3, $1);
 $4 = $0 + 16 | 0;
 $5 = $0 + 28 | 0;
 $6 = $0 + 32 | 0;
 $7 = $0 + 40 | 0;
 $8 = $0 + 44 | 0;
 $9 = $0 + 8 | 0;
 dest = $4;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $12 = (HEAP32[$9 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0;
 $13 = ($12 | 0) / 12 | 0;
 HEAPF64[$$sroa$0$i$i >> 3] = 0.0;
 if (!$12) {
  $16 = 0;
  $17 = 0;
 } else {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEjRKd($4, $13, $$sroa$0$i$i);
  $16 = HEAP32[$7 >> 2] | 0;
  $17 = HEAP32[$8 >> 2] | 0;
 }
 HEAPF64[$$sroa$0$i$i >> 3] = 0.0;
 $18 = $17 - $16 >> 3;
 $20 = $16;
 $21 = $17;
 if ($13 >>> 0 > $18 >>> 0) __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEjRKd($7, $13 - $18 | 0, $$sroa$0$i$i); else if ($13 >>> 0 < $18 >>> 0) {
  $24 = $20 + ($13 << 3) | 0;
  if (($21 | 0) != ($24 | 0)) HEAP32[$8 >> 2] = $21 + (~(($21 + -8 - $24 | 0) >>> 3) << 3);
 }
 HEAPF64[$$sroa$0$i$i >> 3] = 0.0;
 $31 = HEAP32[$6 >> 2] | 0;
 $32 = HEAP32[$5 >> 2] | 0;
 $34 = $31 - $32 >> 3;
 $36 = $32;
 $37 = $31;
 if ($13 >>> 0 > $34 >>> 0) __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEjRKd($5, $13 - $34 | 0, $$sroa$0$i$i); else if ($13 >>> 0 < $34 >>> 0) {
  $40 = $36 + ($13 << 3) | 0;
  if (($37 | 0) != ($40 | 0)) HEAP32[$6 >> 2] = $37 + (~(($37 + -8 - $40 | 0) >>> 3) << 3);
 }
 if (($12 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $48 = $2 + 4 | 0;
 $$086 = 0;
 $50 = HEAP32[$3 >> 2] | 0;
 do {
  __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($2, $50 + ($$086 * 12 | 0) | 0);
  $51 = HEAP32[$48 >> 2] | 0;
  $52 = HEAP32[$2 >> 2] | 0;
  $54 = $51 - $52 >> 3;
  $55 = $52;
  $56 = $51;
  $57 = ($55 | 0) == ($56 | 0);
  if ($57) {
   $83 = 0.0;
   $93 = 0.0 / +($54 | 0);
  } else {
   $61 = $55;
   $63 = 0.0;
   $65 = 0.0;
   while (1) {
    $62 = +HEAPF64[$61 >> 3] - $63;
    $64 = $65 + $62;
    $61 = $61 + 8 | 0;
    if (($61 | 0) == ($56 | 0)) break; else {
     $63 = $64 - $65 - $62;
     $65 = $64;
    }
   }
   $71 = $64 / +($54 | 0);
   $$sroa$0$015$i$i = $55;
   $76 = 0.0;
   while (1) {
    $73 = +HEAPF64[$$sroa$0$015$i$i >> 3] - $71;
    $75 = $76 + $73 * $73;
    $$sroa$0$015$i$i = $$sroa$0$015$i$i + 8 | 0;
    if (($$sroa$0$015$i$i | 0) == ($56 | 0)) {
     $83 = $75;
     $93 = $71;
     break;
    } else $76 = $75;
   }
  }
  $79 = $54 + -1 | 0;
  if (!$79) $storemerge$i = 0.0; else $storemerge$i = +Math_sqrt(+($83 / +($79 | 0)));
  $86 = $52;
  if ($52 | 0) {
   if (!$57) HEAP32[$48 >> 2] = $56 + (~(($56 + -8 - $52 | 0) >>> 3) << 3);
   __ZdlPv($86);
  }
  HEAPF64[(HEAP32[$4 >> 2] | 0) + ($$086 << 3) >> 3] = $93;
  HEAPF64[(HEAP32[$7 >> 2] | 0) + ($$086 << 3) >> 3] = $storemerge$i;
  $50 = HEAP32[$3 >> 2] | 0;
  $98 = HEAP32[$50 + ($$086 * 12 | 0) >> 2] | 0;
  $100 = HEAP32[$50 + ($$086 * 12 | 0) + 4 >> 2] | 0;
  HEAP32[$$sroa$03$i >> 2] = $98;
  if (($98 | 0) == ($100 | 0)) $$sroa$0$0$copyload$i$i = $98; else {
   $$sink$i$i = $$sroa$03$i;
   $$sink2$i$i = $$sroa$0$i$i;
   L40 : while (1) {
    HEAP32[$$sink2$i$i >> 2] = HEAP32[$$sink$i$i >> 2];
    $$sroa$03$i$0$$sroa$03$0$$sroa$03$0$418$i82 = HEAP32[$$sroa$03$i >> 2] | 0;
    $105 = HEAP32[$$sroa$0$i$i >> 2] | 0;
    do {
     $105 = $105 + 8 | 0;
     if (($105 | 0) == ($100 | 0)) break L40;
    } while (!(+HEAPF64[$$sroa$03$i$0$$sroa$03$0$$sroa$03$0$418$i82 >> 3] < +HEAPF64[$105 >> 3]));
    HEAP32[$$sroa$0$i$i >> 2] = $105;
    $$sink$i$i = $$sroa$0$i$i;
    $$sink2$i$i = $$sroa$03$i;
   }
   $$sroa$0$0$copyload$i$i = $$sroa$03$i$0$$sroa$03$0$$sroa$03$0$418$i82;
  }
  HEAPF64[(HEAP32[$5 >> 2] | 0) + ($$086 << 3) >> 3] = +HEAPF64[$$sroa$0$0$copyload$i$i >> 3];
  $$086 = $$086 + 1 | 0;
 } while (($$086 | 0) < ($13 | 0));
 STACKTOP = sp;
 return;
}

function __ZNSt3__216__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1$lcssa = 0, $$193 = 0, $$phi$trans$insert = 0, $$pre$phi104Z2D = 0, $$pre$phiZ2D = 0, $$promoted94 = 0, $$sroa$speculated = 0, $$sroa$speculated65 = 0, $$sroa$speculated77 = 0, $101 = 0, $103 = 0, $108 = 0, $110 = 0, $112 = 0, $12 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $15 = 0, $17 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $35 = 0, $37 = 0, $38 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $87 = 0, $92 = 0, $93 = 0, $scevgep98 = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $12 = HEAP32[$1 + 4 >> 2] | 0;
 $13 = ((HEAP32[$2 >> 2] | 0) - $5 << 3) + (HEAP32[$2 + 4 >> 2] | 0) - $12 | 0;
 $15 = $5;
 if (($13 | 0) <= 0) {
  $$pre$phi104Z2D = $3 + 4 | 0;
  $121 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $121;
  $122 = $0 + 4 | 0;
  $123 = HEAP32[$$pre$phi104Z2D >> 2] | 0;
  HEAP32[$122 >> 2] = $123;
  return;
 }
 if (!$12) {
  $$phi$trans$insert = $3 + 4 | 0;
  $$0 = $13;
  $$pre$phiZ2D = $$phi$trans$insert;
  $62 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $87 = $15;
 } else {
  $17 = 32 - $12 | 0;
  $$sroa$speculated77 = ($13 | 0) < ($17 | 0) ? $13 : $17;
  $25 = -1 >>> ($17 - $$sroa$speculated77 | 0) & -1 << $12 & HEAP32[$15 >> 2];
  $26 = $3 + 4 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  $28 = 32 - $27 | 0;
  $$sroa$speculated65 = $28 >>> 0 < $$sroa$speculated77 >>> 0 ? $28 : $$sroa$speculated77;
  $35 = HEAP32[$3 >> 2] | 0;
  $37 = HEAP32[$35 >> 2] & ~(-1 >>> ($28 - $$sroa$speculated65 | 0) & -1 << $27);
  HEAP32[$35 >> 2] = $37;
  $38 = HEAP32[$26 >> 2] | 0;
  HEAP32[$35 >> 2] = ($38 >>> 0 > $12 >>> 0 ? $25 << $38 - $12 : $25 >>> ($12 - $38 | 0)) | $37;
  $46 = (HEAP32[$26 >> 2] | 0) + $$sroa$speculated65 | 0;
  $48 = $35 + ($46 >>> 5 << 2) | 0;
  HEAP32[$3 >> 2] = $48;
  $49 = $46 & 31;
  HEAP32[$26 >> 2] = $49;
  $50 = $$sroa$speculated77 - $$sroa$speculated65 | 0;
  if (($50 | 0) > 0) {
   HEAP32[$48 >> 2] = $25 >>> ($12 + $$sroa$speculated65 | 0) | HEAP32[$48 >> 2] & ~(-1 >>> (32 - $50 | 0));
   HEAP32[$26 >> 2] = $50;
   $124 = $50;
  } else $124 = $49;
  $60 = $15 + 4 | 0;
  HEAP32[$1 >> 2] = $60;
  $$0 = $13 - $$sroa$speculated77 | 0;
  $$pre$phiZ2D = $26;
  $62 = $124;
  $87 = $60;
 }
 $61 = 32 - $62 | 0;
 $63 = -1 << $62;
 if (($$0 | 0) > 31) {
  $65 = ~$63;
  $$promoted94 = HEAP32[$3 >> 2] | 0;
  $66 = $$0 + -32 | 0;
  $67 = $66 >>> 5;
  $68 = $67 + 1 | 0;
  $70 = $66 - ($67 << 5) | 0;
  $$193 = $$0;
  $72 = $87;
  $74 = HEAP32[$$promoted94 >> 2] | 0;
  $75 = $$promoted94;
  while (1) {
   $71 = HEAP32[$72 >> 2] | 0;
   $73 = $74 & $65;
   HEAP32[$75 >> 2] = $73;
   HEAP32[$75 >> 2] = $71 << HEAP32[$$pre$phiZ2D >> 2] | $73;
   $75 = $75 + 4 | 0;
   $74 = HEAP32[$75 >> 2] & $63 | $71 >>> $61;
   HEAP32[$75 >> 2] = $74;
   $$193 = $$193 + -32 | 0;
   if (($$193 | 0) <= 31) break; else $72 = $72 + 4 | 0;
  }
  $scevgep98 = $87 + ($68 << 2) | 0;
  HEAP32[$1 >> 2] = $scevgep98;
  HEAP32[$3 >> 2] = $$promoted94 + ($68 << 2);
  $$1$lcssa = $70;
  $92 = $scevgep98;
 } else {
  $$1$lcssa = $$0;
  $92 = $87;
 }
 if (($$1$lcssa | 0) <= 0) {
  $$pre$phi104Z2D = $$pre$phiZ2D;
  $121 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $121;
  $122 = $0 + 4 | 0;
  $123 = HEAP32[$$pre$phi104Z2D >> 2] | 0;
  HEAP32[$122 >> 2] = $123;
  return;
 }
 $93 = HEAP32[$92 >> 2] & -1 >>> (32 - $$1$lcssa | 0);
 $$sroa$speculated = ($61 | 0) < ($$1$lcssa | 0) ? $61 : $$1$lcssa;
 $101 = HEAP32[$3 >> 2] | 0;
 $103 = HEAP32[$101 >> 2] & ~(-1 << HEAP32[$$pre$phiZ2D >> 2] & -1 >>> ($61 - $$sroa$speculated | 0));
 HEAP32[$101 >> 2] = $103;
 HEAP32[$101 >> 2] = $103 | $93 << HEAP32[$$pre$phiZ2D >> 2];
 $108 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + $$sroa$speculated | 0;
 $110 = $101 + ($108 >>> 5 << 2) | 0;
 HEAP32[$3 >> 2] = $110;
 HEAP32[$$pre$phiZ2D >> 2] = $108 & 31;
 $112 = $$1$lcssa - $$sroa$speculated | 0;
 if (($112 | 0) <= 0) {
  $$pre$phi104Z2D = $$pre$phiZ2D;
  $121 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $121;
  $122 = $0 + 4 | 0;
  $123 = HEAP32[$$pre$phi104Z2D >> 2] | 0;
  HEAP32[$122 >> 2] = $123;
  return;
 }
 HEAP32[$110 >> 2] = HEAP32[$110 >> 2] & ~(-1 >>> (32 - $112 | 0)) | $93 >>> $$sroa$speculated;
 HEAP32[$$pre$phiZ2D >> 2] = $112;
 $$pre$phi104Z2D = $$pre$phiZ2D;
 $121 = HEAP32[$3 >> 2] | 0;
 HEAP32[$0 >> 2] = $121;
 $122 = $0 + 4 | 0;
 $123 = HEAP32[$$pre$phi104Z2D >> 2] | 0;
 HEAP32[$122 >> 2] = $123;
 return;
}

function __ZN3HFM14treatForecasts27getPartsForecastsEndToBeginEiii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $13 = 0, $14 = 0, $19 = 0, $23 = 0, $26 = 0, $29 = 0, $33 = 0, $38 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $53 = 0, $55 = 0, $6 = 0, $60 = 0, $64 = 0, $66 = 0, $71 = 0, $75 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $83 = 0, $84 = 0, $86 = 0, $87 = 0, $9 = 0, $90 = 0, $94 = 0, $96 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 $6 = $1 + 4 | 0;
 $9 = HEAP32[$6 >> 2] | 0;
 $13 = $9;
 if ((((HEAP32[$1 + 8 >> 2] | 0) - $9 | 0) / 12 | 0 | 0) <= ($2 | 0)) {
  $14 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21157, 37) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $14 + (HEAP32[(HEAP32[$14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $19 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
  $23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 63]($19, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($14, $23) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($14) | 0;
  _exit(1);
 }
 $26 = HEAP32[$13 + ($2 * 12 | 0) + 4 >> 2] | 0;
 $29 = $26 - (HEAP32[$13 + ($2 * 12 | 0) >> 2] | 0) >> 3;
 if (($29 - $4 | 0) < ($3 | 0)) {
  $33 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21195, 63) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $33 + (HEAP32[(HEAP32[$33 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $38 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
  $42 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$38 >> 2] | 0) + 28 >> 2] & 63]($38, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($33, $42) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($33) | 0;
  $44 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21259, 9) | 0, $29) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $44 + (HEAP32[(HEAP32[$44 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $49 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
  $53 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$49 >> 2] | 0) + 28 >> 2] & 63]($49, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($44, $53) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($44) | 0;
  $55 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21269, 16) | 0, $4) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $55 + (HEAP32[(HEAP32[$55 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $60 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
  $64 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$60 >> 2] | 0) + 28 >> 2] & 63]($60, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($55, $64) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($55) | 0;
  $66 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 21286, 2) | 0, $3) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $66 + (HEAP32[(HEAP32[$66 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $71 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
  $75 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$71 >> 2] | 0) + 28 >> 2] & 63]($71, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($66, $75) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($66) | 0;
  _getchar() | 0;
  $78 = HEAP32[(HEAP32[$6 >> 2] | 0) + ($2 * 12 | 0) + 4 >> 2] | 0;
 } else $78 = $26;
 $79 = 0 - $3 | 0;
 $80 = $78 + (0 - $4 << 3) + ($79 << 3) | 0;
 $81 = $78 + ($79 << 3) | 0;
 $83 = $80;
 HEAP32[$0 >> 2] = 0;
 $84 = $0 + 4 | 0;
 HEAP32[$84 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $86 = $81 - $83 | 0;
 $87 = $86 >> 3;
 if (!$87) {
  STACKTOP = sp;
  return;
 }
 if ($87 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $90 = __Znwj($86) | 0;
 HEAP32[$84 >> 2] = $90;
 HEAP32[$0 >> 2] = $90;
 HEAP32[$0 + 8 >> 2] = $90 + ($87 << 3);
 if (!$4) {
  STACKTOP = sp;
  return;
 }
 $94 = $81 + -8 | 0;
 $96 = $80;
 $97 = $90;
 while (1) {
  HEAPF64[$97 >> 3] = +HEAPF64[$96 >> 3];
  $96 = $96 + 8 | 0;
  if (($96 | 0) == ($81 | 0)) break; else $97 = $97 + 8 | 0;
 }
 HEAP32[$84 >> 2] = $90 + ((($94 - $83 | 0) >>> 3) + 1 << 3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__216__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1$lcssa = 0, $$193 = 0, $$phi$trans$insert = 0, $$pre$phi97Z2D = 0, $$pre$phiZ2D = 0, $$sroa$speculated = 0, $$sroa$speculated65 = 0, $$sroa$speculated77 = 0, $100 = 0, $102 = 0, $107 = 0, $109 = 0, $11 = 0, $111 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $15 = 0, $17 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $57 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $73 = 0, $77 = 0, $91 = 0, $92 = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $11 = $1 + 4 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $13 = ((HEAP32[$2 >> 2] | 0) - $5 << 3) + (HEAP32[$2 + 4 >> 2] | 0) - $12 | 0;
 $15 = $5;
 if (($13 | 0) <= 0) {
  $$pre$phi97Z2D = $3 + 4 | 0;
  $120 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $120;
  $121 = $0 + 4 | 0;
  $122 = HEAP32[$$pre$phi97Z2D >> 2] | 0;
  HEAP32[$121 >> 2] = $122;
  return;
 }
 if (!$12) {
  $$phi$trans$insert = $3 + 4 | 0;
  $$0 = $13;
  $$pre$phiZ2D = $$phi$trans$insert;
  $123 = $15;
  $65 = HEAP32[$$phi$trans$insert >> 2] | 0;
 } else {
  $17 = 32 - $12 | 0;
  $$sroa$speculated77 = ($13 | 0) < ($17 | 0) ? $13 : $17;
  $25 = -1 >>> ($17 - $$sroa$speculated77 | 0) & -1 << $12 & HEAP32[$15 >> 2];
  $26 = $3 + 4 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  $28 = 32 - $27 | 0;
  $$sroa$speculated65 = $28 >>> 0 < $$sroa$speculated77 >>> 0 ? $28 : $$sroa$speculated77;
  $35 = HEAP32[$3 >> 2] | 0;
  $37 = HEAP32[$35 >> 2] & ~(-1 >>> ($28 - $$sroa$speculated65 | 0) & -1 << $27);
  HEAP32[$35 >> 2] = $37;
  $38 = HEAP32[$26 >> 2] | 0;
  $39 = HEAP32[$11 >> 2] | 0;
  HEAP32[$35 >> 2] = ($38 >>> 0 > $39 >>> 0 ? $25 << $38 - $39 : $25 >>> ($39 - $38 | 0)) | $37;
  $47 = (HEAP32[$26 >> 2] | 0) + $$sroa$speculated65 | 0;
  $49 = $35 + ($47 >>> 5 << 2) | 0;
  HEAP32[$3 >> 2] = $49;
  $50 = $47 & 31;
  HEAP32[$26 >> 2] = $50;
  $51 = $$sroa$speculated77 - $$sroa$speculated65 | 0;
  if (($51 | 0) > 0) {
   $57 = HEAP32[$49 >> 2] & ~(-1 >>> (32 - $51 | 0));
   HEAP32[$49 >> 2] = $57;
   HEAP32[$49 >> 2] = $25 >>> ((HEAP32[$11 >> 2] | 0) + $$sroa$speculated65 | 0) | $57;
   HEAP32[$26 >> 2] = $51;
   $124 = $51;
  } else $124 = $50;
  $63 = (HEAP32[$1 >> 2] | 0) + 4 | 0;
  HEAP32[$1 >> 2] = $63;
  $$0 = $13 - $$sroa$speculated77 | 0;
  $$pre$phiZ2D = $26;
  $123 = $63;
  $65 = $124;
 }
 $64 = 32 - $65 | 0;
 $66 = -1 << $65;
 if (($$0 | 0) > 31) {
  $68 = ~$66;
  $$193 = $$0;
  $70 = $123;
  do {
   $69 = HEAP32[$70 >> 2] | 0;
   $71 = HEAP32[$3 >> 2] | 0;
   $73 = HEAP32[$71 >> 2] & $68;
   HEAP32[$71 >> 2] = $73;
   HEAP32[$71 >> 2] = $69 << HEAP32[$$pre$phiZ2D >> 2] | $73;
   $77 = $71 + 4 | 0;
   HEAP32[$3 >> 2] = $77;
   HEAP32[$77 >> 2] = HEAP32[$77 >> 2] & $66 | $69 >>> $64;
   $$193 = $$193 + -32 | 0;
   $70 = (HEAP32[$1 >> 2] | 0) + 4 | 0;
   HEAP32[$1 >> 2] = $70;
  } while (($$193 | 0) > 31);
  $$1$lcssa = $$0 & 31;
  $91 = $70;
 } else {
  $$1$lcssa = $$0;
  $91 = $123;
 }
 if (($$1$lcssa | 0) <= 0) {
  $$pre$phi97Z2D = $$pre$phiZ2D;
  $120 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $120;
  $121 = $0 + 4 | 0;
  $122 = HEAP32[$$pre$phi97Z2D >> 2] | 0;
  HEAP32[$121 >> 2] = $122;
  return;
 }
 $92 = HEAP32[$91 >> 2] & -1 >>> (32 - $$1$lcssa | 0);
 $$sroa$speculated = ($64 | 0) < ($$1$lcssa | 0) ? $64 : $$1$lcssa;
 $100 = HEAP32[$3 >> 2] | 0;
 $102 = HEAP32[$100 >> 2] & ~(-1 << HEAP32[$$pre$phiZ2D >> 2] & -1 >>> ($64 - $$sroa$speculated | 0));
 HEAP32[$100 >> 2] = $102;
 HEAP32[$100 >> 2] = $102 | $92 << HEAP32[$$pre$phiZ2D >> 2];
 $107 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + $$sroa$speculated | 0;
 $109 = $100 + ($107 >>> 5 << 2) | 0;
 HEAP32[$3 >> 2] = $109;
 HEAP32[$$pre$phiZ2D >> 2] = $107 & 31;
 $111 = $$1$lcssa - $$sroa$speculated | 0;
 if (($111 | 0) <= 0) {
  $$pre$phi97Z2D = $$pre$phiZ2D;
  $120 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $120;
  $121 = $0 + 4 | 0;
  $122 = HEAP32[$$pre$phi97Z2D >> 2] | 0;
  HEAP32[$121 >> 2] = $122;
  return;
 }
 HEAP32[$109 >> 2] = HEAP32[$109 >> 2] & ~(-1 >>> (32 - $111 | 0)) | $92 >>> $$sroa$speculated;
 HEAP32[$$pre$phiZ2D >> 2] = $111;
 $$pre$phi97Z2D = $$pre$phiZ2D;
 $120 = HEAP32[$3 >> 2] | 0;
 HEAP32[$0 >> 2] = $120;
 $121 = $0 + 4 | 0;
 $122 = HEAP32[$$pre$phi97Z2D >> 2] | 0;
 HEAP32[$121 >> 2] = $122;
 return;
}

function ___get_locale($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$093$lcssa = 0, $$093118 = 0, $$094114 = 0, $$1 = 0, $$1100111 = 0, $$195112 = 0, $$2122 = 0, $$2123 = 0, $$2124 = 0, $$4 = 0, $11 = 0, $15 = 0, $2 = 0, $21 = 0, $23 = 0, $3 = 0, $40 = 0, $48 = 0, $54 = 0, $58 = 0, $6 = 0, $62 = 0, $63 = 0, $64 = 0, $68 = 0, $70 = 0, $72 = 0, $76 = 0, $78 = 0, $80 = 0, $82 = 0, $86 = 0, $92 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 do if (!(HEAP8[$1 >> 0] | 0)) {
  $6 = _getenv(26055) | 0;
  if ($6 | 0) if (HEAP8[$6 >> 0] | 0) {
   $$1 = $6;
   break;
  }
  $11 = _getenv(26062 + ($0 * 12 | 0) | 0) | 0;
  if ($11 | 0) if (HEAP8[$11 >> 0] | 0) {
   $$1 = $11;
   break;
  }
  $15 = _getenv(26134) | 0;
  if ($15 | 0) if (HEAP8[$15 >> 0] | 0) {
   $$1 = $15;
   break;
  }
  $$1 = 26139;
 } else $$1 = $1; while (0);
 $$093118 = 0;
 L13 : while (1) {
  switch (HEAP8[$$1 + $$093118 >> 0] | 0) {
  case 47:
  case 0:
   {
    $$093$lcssa = $$093118;
    break L13;
    break;
   }
  default:
   {}
  }
  $21 = $$093118 + 1 | 0;
  if ($21 >>> 0 < 15) $$093118 = $21; else {
   $$093$lcssa = $21;
   break;
  }
 }
 $23 = HEAP8[$$1 >> 0] | 0;
 if ($23 << 24 >> 24 == 46) {
  $$2122 = 26139;
  label = 15;
 } else if (!(HEAP8[$$1 + $$093$lcssa >> 0] | 0)) if ($23 << 24 >> 24 == 67) {
  $$2122 = $$1;
  label = 15;
 } else {
  $$2123 = $$1;
  label = 16;
 } else {
  $$2122 = 26139;
  label = 15;
 }
 if ((label | 0) == 15) if (!(HEAP8[$$2122 + 1 >> 0] | 0)) {
  $$2124 = $$2122;
  label = 18;
 } else {
  $$2123 = $$2122;
  label = 16;
 }
 L22 : do if ((label | 0) == 16) if (!(_strcmp($$2123, 26139) | 0)) {
  $$2124 = $$2123;
  label = 18;
 } else if (!(_strcmp($$2123, 26147) | 0)) {
  $$2124 = $$2123;
  label = 18;
 } else {
  $40 = HEAP32[7736] | 0;
  if ($40 | 0) {
   $$094114 = $40;
   do {
    if (!(_strcmp($$2123, $$094114 + 8 | 0) | 0)) {
     $$0 = $$094114;
     break L22;
    }
    $$094114 = HEAP32[$$094114 + 24 >> 2] | 0;
   } while (($$094114 | 0) != 0);
  }
  ___lock(30948);
  $48 = HEAP32[7736] | 0;
  L32 : do if ($48 | 0) {
   $$195112 = $48;
   while (1) {
    if (!(_strcmp($$2123, $$195112 + 8 | 0) | 0)) break;
    $54 = HEAP32[$$195112 + 24 >> 2] | 0;
    if (!$54) break L32; else $$195112 = $54;
   }
   ___unlock(30948);
   $$0 = $$195112;
   break L22;
  } while (0);
  L39 : do if (!(HEAP32[7710] | 0)) {
   $58 = _getenv(26153) | 0;
   if (!$58) label = 41; else if (!(HEAP8[$58 >> 0] | 0)) label = 41; else {
    $62 = 254 - $$093$lcssa | 0;
    $63 = $$093$lcssa + 1 | 0;
    $$1100111 = $58;
    while (1) {
     $64 = ___strchrnul($$1100111, 58) | 0;
     $68 = HEAP8[$64 >> 0] | 0;
     $70 = (($68 << 24 >> 24 != 0) << 31 >> 31) + ($64 - $$1100111) | 0;
     if ($70 >>> 0 < $62 >>> 0) {
      _memcpy($2 | 0, $$1100111 | 0, $70 | 0) | 0;
      $72 = $2 + $70 | 0;
      HEAP8[$72 >> 0] = 47;
      _memcpy($72 + 1 | 0, $$2123 | 0, $$093$lcssa | 0) | 0;
      HEAP8[$2 + ($63 + $70) >> 0] = 0;
      $76 = ___map_file($2 | 0, $3 | 0) | 0;
      if ($76 | 0) break;
      $86 = HEAP8[$64 >> 0] | 0;
     } else $86 = $68;
     $$1100111 = $64 + ($86 << 24 >> 24 != 0 & 1) | 0;
     if (!(HEAP8[$$1100111 >> 0] | 0)) {
      label = 41;
      break L39;
     }
    }
    $78 = _malloc(28) | 0;
    $80 = HEAP32[$3 >> 2] | 0;
    if (!$78) {
     ___munmap($76, $80) | 0;
     label = 41;
     break;
    } else {
     HEAP32[$78 >> 2] = $76;
     HEAP32[$78 + 4 >> 2] = $80;
     $82 = $78 + 8 | 0;
     _memcpy($82 | 0, $$2123 | 0, $$093$lcssa | 0) | 0;
     HEAP8[$82 + $$093$lcssa >> 0] = 0;
     HEAP32[$78 + 24 >> 2] = HEAP32[7736];
     HEAP32[7736] = $78;
     $$4 = $78;
     break;
    }
   }
  } else label = 41; while (0);
  if ((label | 0) == 41) {
   $92 = _malloc(28) | 0;
   if (!$92) $$4 = $92; else {
    HEAP32[$92 >> 2] = HEAP32[1826];
    HEAP32[$92 + 4 >> 2] = HEAP32[1827];
    $97 = $92 + 8 | 0;
    _memcpy($97 | 0, $$2123 | 0, $$093$lcssa | 0) | 0;
    HEAP8[$97 + $$093$lcssa >> 0] = 0;
    HEAP32[$92 + 24 >> 2] = HEAP32[7736];
    HEAP32[7736] = $92;
    $$4 = $92;
   }
  }
  ___unlock(30948);
  $$0 = ($0 | 0) == 0 & ($$4 | 0) == 0 ? 7304 : $$4;
 } while (0);
 do if ((label | 0) == 18) {
  if (!$0) if ((HEAP8[$$2124 + 1 >> 0] | 0) == 46) {
   $$0 = 7304;
   break;
  }
  $$0 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIdNS_9allocatorIdEEE6insertINS_11__wrap_iterIPKdEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPdEEE4typeES8_SA_SA_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$017$i = 0, $$03$i$i = 0, $$sroa$079$0102 = 0, $$sroa$15$0$in = 0, $$sroa$15$1$in = 0, $$sroa$speculated$$i = 0, $10 = 0, $103 = 0, $106 = 0, $11 = 0, $111 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $59 = 0, $63 = 0, $64 = 0, $67 = 0, $7 = 0, $73 = 0, $75 = 0, $78 = 0, $80 = 0, $81 = 0, $84 = 0, $87 = 0, $88 = 0, $9 = 0, $90 = 0, $95 = 0, $97 = 0, $98 = 0, $scevgep10$i$i = 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = $4;
 $7 = (HEAP32[$1 >> 2] | 0) - $5 | 0;
 $9 = $4 + ($7 >> 3 << 3) | 0;
 $10 = HEAP32[$2 >> 2] | 0;
 $11 = HEAP32[$3 >> 2] | 0;
 $12 = $11 - $10 | 0;
 $13 = $12 >> 3;
 $15 = $10;
 $16 = $11;
 if (($12 | 0) <= 0) {
  $$0 = $9;
  return $$0 | 0;
 }
 $17 = $0 + 8 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 $19 = $0 + 4 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 $21 = $20;
 if (($13 | 0) <= ($18 - $21 >> 3 | 0)) {
  $25 = $9;
  $26 = $21 - $25 | 0;
  $27 = $26 >> 3;
  if (($13 | 0) > ($27 | 0)) {
   $29 = $15 + ($27 << 3) | 0;
   $30 = $29;
   if (($29 | 0) == ($16 | 0)) $111 = $20; else {
    $33 = $16 + -8 - $30 | 0;
    $35 = $29;
    $36 = $20;
    while (1) {
     HEAPF64[$36 >> 3] = +HEAPF64[$35 >> 3];
     $35 = $35 + 8 | 0;
     if (($35 | 0) == ($16 | 0)) break; else $36 = $36 + 8 | 0;
    }
    $scevgep10$i$i = $20 + (($33 >>> 3) + 1 << 3) | 0;
    HEAP32[$19 >> 2] = $scevgep10$i$i;
    $111 = $scevgep10$i$i;
   }
   if (($26 | 0) > 0) {
    $$sroa$079$0102 = $30;
    $44 = $111;
   } else {
    $$0 = $9;
    return $$0 | 0;
   }
  } else {
   $$sroa$079$0102 = $11;
   $44 = $20;
  }
  $47 = $44 - ($9 + ($13 << 3)) | 0;
  $48 = $47 >> 3;
  $49 = $9 + ($48 << 3) | 0;
  if ($49 >>> 0 < $20 >>> 0) {
   $53 = ($20 + (0 - $48 << 3) + ~$25 | 0) >>> 3;
   $$017$i = $49;
   $59 = $44;
   while (1) {
    HEAPF64[$59 >> 3] = +HEAPF64[$$017$i >> 3];
    $$017$i = $$017$i + 8 | 0;
    if ($$017$i >>> 0 >= $20 >>> 0) break; else $59 = $59 + 8 | 0;
   }
   HEAP32[$19 >> 2] = $44 + ($53 + 1 << 3);
  }
  if (!$48) $64 = $15; else {
   _memmove($44 + (0 - $48 << 3) | 0, $9 | 0, $47 | 0) | 0;
   $64 = HEAP32[$2 >> 2] | 0;
  }
  $63 = $$sroa$079$0102;
  if (($64 | 0) == ($63 | 0)) {
   $$0 = $9;
   return $$0 | 0;
  } else {
   $$03$i$i = $9;
   $67 = $64;
  }
  while (1) {
   HEAPF64[$$03$i$i >> 3] = +HEAPF64[$67 >> 3];
   $67 = $67 + 8 | 0;
   if (($67 | 0) == ($63 | 0)) {
    $$0 = $9;
    break;
   } else $$03$i$i = $$03$i$i + 8 | 0;
  }
  return $$0 | 0;
 }
 $73 = ($21 - $5 >> 3) + $13 | 0;
 if ($73 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $75 = $18 - $5 | 0;
 $78 = $75 >> 2;
 $$sroa$speculated$$i = $75 >> 3 >>> 0 < 268435455 ? ($78 >>> 0 < $73 >>> 0 ? $73 : $78) : 536870911;
 $80 = $9;
 $81 = $7 >> 3;
 do if (!$$sroa$speculated$$i) $88 = 0; else if ($$sroa$speculated$$i >>> 0 > 536870911) {
  $84 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($84, 15810);
  HEAP32[$84 >> 2] = 14216;
  ___cxa_throw($84 | 0, 3104, 246);
 } else {
  $88 = __Znwj($$sroa$speculated$$i << 3) | 0;
  break;
 } while (0);
 $87 = $88 + ($81 << 3) | 0;
 $90 = $88 + ($$sroa$speculated$$i << 3) | 0;
 if (($15 | 0) == ($16 | 0)) $$sroa$15$0$in = $87; else {
  $95 = (($16 + -8 - $10 | 0) >>> 3) + 1 | 0;
  $97 = $15;
  $98 = $87;
  while (1) {
   HEAPF64[$98 >> 3] = +HEAPF64[$97 >> 3];
   $97 = $97 + 8 | 0;
   if (($97 | 0) == ($16 | 0)) break; else $98 = $98 + 8 | 0;
  }
  $$sroa$15$0$in = $87 + ($95 << 3) | 0;
 }
 $103 = $87 + (0 - $81 << 3) | 0;
 if (($7 | 0) > 0) _memcpy($103 | 0, $4 | 0, $7 | 0) | 0;
 $106 = $21 - $80 | 0;
 if (($106 | 0) > 0) {
  _memcpy($$sroa$15$0$in | 0, $9 | 0, $106 | 0) | 0;
  $$sroa$15$1$in = $$sroa$15$0$in + ($106 >>> 3 << 3) | 0;
 } else $$sroa$15$1$in = $$sroa$15$0$in;
 HEAP32[$0 >> 2] = $103;
 HEAP32[$19 >> 2] = $$sroa$15$1$in;
 HEAP32[$17 >> 2] = $90;
 if (!$4) {
  $$0 = $87;
  return $$0 | 0;
 }
 __ZdlPv($4);
 $$0 = $87;
 return $$0 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$081$off0 = 0, $$084 = 0, $$085$off0 = 0, $$1 = 0, $$182$off0 = 0, $$186$off0 = 0, $$2 = 0, $$283$off0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $20 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $47 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, label = 0;
 L1 : do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $4) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, $1, $2, $3); else {
  $10 = $0 + 12 | 0;
  $11 = $1 + 24 | 0;
  $12 = $1 + 36 | 0;
  $13 = $1 + 54 | 0;
  $14 = $0 + 8 | 0;
  $15 = $0 + 16 | 0;
  if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 >> 2] | 0, $4) | 0)) {
   $55 = HEAP32[$10 >> 2] | 0;
   $56 = $0 + 16 + ($55 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($15, $1, $2, $3, $4);
   $57 = $0 + 24 | 0;
   if (($55 | 0) <= 1) break;
   $59 = HEAP32[$14 >> 2] | 0;
   if (!($59 & 2)) if ((HEAP32[$12 >> 2] | 0) == 1) $$0 = $57; else {
    if (!($59 & 1)) {
     $$2 = $57;
     while (1) {
      if (HEAP8[$13 >> 0] | 0) break L1;
      if ((HEAP32[$12 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$2, $1, $2, $3, $4);
      $$2 = $$2 + 8 | 0;
      if ($$2 >>> 0 >= $56 >>> 0) break L1;
     }
    } else $$1 = $57;
    while (1) {
     if (HEAP8[$13 >> 0] | 0) break L1;
     if ((HEAP32[$12 >> 2] | 0) == 1) if ((HEAP32[$11 >> 2] | 0) == 1) break L1;
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$1, $1, $2, $3, $4);
     $$1 = $$1 + 8 | 0;
     if ($$1 >>> 0 >= $56 >>> 0) break L1;
    }
   } else $$0 = $57;
   while (1) {
    if (HEAP8[$13 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$0, $1, $2, $3, $4);
    $$0 = $$0 + 8 | 0;
    if ($$0 >>> 0 >= $56 >>> 0) break L1;
   }
  }
  $19 = $1 + 32 | 0;
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $20 = $1 + 20 | 0;
   if ((HEAP32[$20 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$19 >> 2] = $3;
    $24 = $1 + 44 | 0;
    if ((HEAP32[$24 >> 2] | 0) == 4) break;
    $28 = $0 + 16 + (HEAP32[$10 >> 2] << 3) | 0;
    $29 = $1 + 52 | 0;
    $30 = $1 + 53 | 0;
    $$081$off0 = 0;
    $$084 = $15;
    $$085$off0 = 0;
    L29 : while (1) {
     if ($$084 >>> 0 >= $28 >>> 0) {
      $$283$off0 = $$081$off0;
      label = 18;
      break;
     }
     HEAP8[$29 >> 0] = 0;
     HEAP8[$30 >> 0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$084, $1, $2, $2, 1, $4);
     if (HEAP8[$13 >> 0] | 0) {
      $$283$off0 = $$081$off0;
      label = 18;
      break;
     }
     do if (!(HEAP8[$30 >> 0] | 0)) {
      $$182$off0 = $$081$off0;
      $$186$off0 = $$085$off0;
     } else {
      if (!(HEAP8[$29 >> 0] | 0)) if (!(HEAP32[$14 >> 2] & 1)) {
       $$283$off0 = 1;
       label = 18;
       break L29;
      } else {
       $$182$off0 = 1;
       $$186$off0 = $$085$off0;
       break;
      }
      if ((HEAP32[$11 >> 2] | 0) == 1) {
       label = 23;
       break L29;
      }
      if (!(HEAP32[$14 >> 2] & 2)) {
       label = 23;
       break L29;
      } else {
       $$182$off0 = 1;
       $$186$off0 = 1;
      }
     } while (0);
     $$081$off0 = $$182$off0;
     $$084 = $$084 + 8 | 0;
     $$085$off0 = $$186$off0;
    }
    do if ((label | 0) == 18) {
     if (!$$085$off0) {
      HEAP32[$20 >> 2] = $2;
      $47 = $1 + 40 | 0;
      HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 1;
      if ((HEAP32[$12 >> 2] | 0) == 1) if ((HEAP32[$11 >> 2] | 0) == 2) {
       HEAP8[$13 >> 0] = 1;
       if ($$283$off0) {
        label = 23;
        break;
       } else {
        $54 = 4;
        break;
       }
      }
     }
     if ($$283$off0) label = 23; else $54 = 4;
    } while (0);
    if ((label | 0) == 23) $54 = 3;
    HEAP32[$24 >> 2] = $54;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$19 >> 2] = 1;
 } while (0);
 return;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i27 = 0, $$0$i$i29 = 0, $$byval_copy = 0, $$sink1 = 0, $$sink47 = 0, $$sink48 = 0, $$sroa$041$0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $30 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $54 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $79 = 0, $8 = 0, $86 = 0, $89 = 0, $9 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 $$byval_copy = sp + 468 | 0;
 $6 = sp + 464 | 0;
 $7 = sp + 472 | 0;
 $8 = sp + 460 | 0;
 $9 = sp + 456 | 0;
 $10 = sp + 444 | 0;
 $11 = sp + 432 | 0;
 $12 = sp + 420 | 0;
 $13 = sp + 416 | 0;
 $14 = sp + 16 | 0;
 $15 = sp + 8 | 0;
 $16 = sp + 4 | 0;
 $17 = sp;
 __ZNKSt3__28ios_base6getlocEv($6, $3);
 $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34568) | 0;
 $20 = $5 + 8 + 3 | 0;
 $21 = HEAP8[$20 >> 0] | 0;
 $22 = $21 << 24 >> 24 < 0;
 $23 = $5 + 4 | 0;
 if (!(($22 ? HEAP32[$23 >> 2] | 0 : $21 & 255) | 0)) $42 = 0; else {
  $30 = HEAP32[($22 ? HEAP32[$5 >> 2] | 0 : $5) >> 2] | 0;
  $42 = ($30 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 44 >> 2] & 63]($18, 45) | 0);
 };
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 $$0$i$i27 = 0;
 while (1) {
  if (($$0$i$i27 | 0) == 3) break;
  HEAP32[$11 + ($$0$i$i27 << 2) >> 2] = 0;
  $$0$i$i27 = $$0$i$i27 + 1 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $$0$i$i29 = 0;
 while (1) {
  if (($$0$i$i29 | 0) == 3) break;
  HEAP32[$12 + ($$0$i$i29 << 2) >> 2] = 0;
  $$0$i$i29 = $$0$i$i29 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($2, $42, $6, $7, $8, $9, $10, $11, $12, $13);
 $43 = HEAP8[$20 >> 0] | 0;
 $44 = $43 << 24 >> 24 < 0;
 $47 = $44 ? HEAP32[$23 >> 2] | 0 : $43 & 255;
 $48 = HEAP32[$13 >> 2] | 0;
 if (($47 | 0) > ($48 | 0)) {
  $54 = HEAP8[$12 + 8 + 3 >> 0] | 0;
  $63 = HEAP8[$11 + 8 + 3 >> 0] | 0;
  $$sink1 = 1;
  $$sink47 = ($54 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $54 & 255) + ($47 - $48 << 1) | 0;
  $$sink48 = $63 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $63 & 255;
 } else {
  $71 = HEAP8[$12 + 8 + 3 >> 0] | 0;
  $79 = HEAP8[$11 + 8 + 3 >> 0] | 0;
  $$sink1 = 2;
  $$sink47 = $79 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $79 & 255;
  $$sink48 = $71 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $71 & 255;
 }
 $86 = $$sink48 + $48 + $$sink47 + $$sink1 | 0;
 if ($86 >>> 0 > 100) {
  $89 = _malloc($86 << 2) | 0;
  if (!$89) __ZSt17__throw_bad_allocv(); else {
   $$0 = $89;
   $$sroa$041$0 = $89;
  }
 } else {
  $$0 = $14;
  $$sroa$041$0 = 0;
 }
 $95 = $44 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($$0, $15, $16, HEAP32[$3 + 4 >> 2] | 0, $95, $95 + ($47 << 2) | 0, $18, $42, $7, HEAP32[$8 >> 2] | 0, HEAP32[$9 >> 2] | 0, $10, $11, $12, $48);
 HEAP32[$17 >> 2] = HEAP32[$1 >> 2];
 $100 = HEAP32[$15 >> 2] | 0;
 $101 = HEAP32[$16 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$17 >> 2];
 $102 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$0, $100, $101, $3, $4) | 0;
 if ($$sroa$041$0 | 0) _free($$sroa$041$0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($12);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__26localeD2Ev($6);
 STACKTOP = sp;
 return $102 | 0;
}

function __ZN3HFM17MoveHFMModifyRule5applyER6RepHFMPi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pn$in = 0, $$pre$phi52Z2D = 0, $$sink1$p$sink = 0.0, $$sink16 = 0, $$sink19 = 0, $$sink22 = 0.0, $$sink25 = 0, $$sink28 = 0, $$sink44$in = 0, $$sink64$in = 0, $$sink67 = 0, $10 = 0, $103 = 0, $104 = 0, $105 = 0, $16 = 0, $21 = 0, $26 = 0, $30 = 0, $4 = 0, $40 = 0.0, $51 = 0.0, $61 = 0, $62 = 0.0, $63 = 0, $65 = 0, $68 = 0, $72 = 0, $73 = 0, $76 = 0, $81 = 0, $87 = 0, $9 = 0, $90 = 0, label = 0;
 $4 = HEAP32[$0 + 20 >> 2] | 0;
 do if (($4 | 0) == -1) {
  $$sink16 = -1;
  $$sink19 = 1;
  $$sink22 = -1.0;
  $$sink25 = -1;
  $$sink28 = -1;
  $$sink44$in = __Znwj(48) | 0;
 } else {
  $9 = HEAP32[$0 + 44 >> 2] | 0;
  $10 = ($9 | 0) == 0;
  if (($4 | 0) == 5) {
   L6 : do if ($10) {
    $$sink67 = $1 + 12 | 0;
    label = 8;
   } else switch ($9 | 0) {
   case 1:
    {
     $$sink67 = $1 + 36 | 0;
     label = 8;
     break L6;
     break;
    }
   case 2:
    {
     $21 = HEAP32[$0 + 24 >> 2] | 0;
     $26 = (HEAP32[(HEAP32[$1 + 60 >> 2] | 0) + ($21 * 12 | 0) >> 2] | 0) + 40 | 0;
     HEAPF64[$26 >> 3] = +(+HEAPF64[$26 >> 3] == 0.0 & 1);
     $103 = $21;
     break L6;
     break;
    }
   default:
    {
     label = 9;
     break L6;
    }
   } while (0);
   if ((label | 0) == 8) {
    $16 = (HEAP32[(HEAP32[$$sink67 >> 2] | 0) + ((HEAP32[$0 + 24 >> 2] | 0) * 12 | 0) >> 2] | 0) + 40 | 0;
    HEAPF64[$16 >> 3] = +(+HEAPF64[$16 >> 3] == 0.0 & 1);
    label = 9;
   }
   if ((label | 0) == 9) $103 = HEAP32[$0 + 24 >> 2] | 0;
   $30 = __Znwj(48) | 0;
   $$sink16 = $9;
   $$sink19 = HEAP8[$0 + 40 >> 0] ^ 1;
   $$sink22 = +HEAPF64[$0 + 32 >> 3];
   $$sink25 = $103;
   $$sink28 = 5;
   $$sink44$in = $30;
   break;
  }
  L18 : do if ($10) {
   $40 = +HEAPF64[$0 + 32 >> 3];
   $$pn$in = (HEAP32[$1 + 12 >> 2] | 0) + ((HEAP32[$0 + 24 >> 2] | 0) * 12 | 0) | 0;
   $$sink1$p$sink = HEAP8[$0 + 40 >> 0] | 0 ? -$40 : $40;
   label = 16;
  } else {
   switch ($9 | 0) {
   case 1:
    {
     $51 = +HEAPF64[$0 + 32 >> 3];
     $$pn$in = (HEAP32[$1 + 36 >> 2] | 0) + ((HEAP32[$0 + 24 >> 2] | 0) * 12 | 0) | 0;
     $$sink1$p$sink = HEAP8[$0 + 40 >> 0] | 0 ? -$51 : $51;
     label = 16;
     break L18;
     break;
    }
   case 2:
    break;
   default:
    {
     label = 17;
     break L18;
    }
   }
   $61 = $0 + 32 | 0;
   $62 = +HEAPF64[$61 >> 3];
   $63 = $1 + 60 | 0;
   $65 = HEAP32[$0 + 24 >> 2] | 0;
   if (HEAP8[$0 + 40 >> 0] | 0) {
    $87 = (HEAP32[(HEAP32[$63 >> 2] | 0) + ($65 * 12 | 0) >> 2] | 0) + ($4 << 3) | 0;
    HEAPF64[$87 >> 3] = +HEAPF64[$87 >> 3] - $62;
    $$pre$phi52Z2D = $61;
    $104 = 0;
    $105 = $65;
    break;
   }
   $68 = HEAP32[$63 >> 2] | 0;
   if ((((HEAP32[$1 + 64 >> 2] | 0) - $68 | 0) / 12 | 0) >>> 0 <= $65 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($63);
   $72 = $68;
   $73 = $72 + ($65 * 12 | 0) | 0;
   $76 = HEAP32[$73 >> 2] | 0;
   if ((HEAP32[$72 + ($65 * 12 | 0) + 4 >> 2] | 0) - $76 >> 3 >>> 0 > $4 >>> 0) {
    $81 = $76 + ($4 << 3) | 0;
    HEAPF64[$81 >> 3] = $62 + +HEAPF64[$81 >> 3];
    $$pre$phi52Z2D = $61;
    $104 = 1;
    $105 = $65;
    break;
   } else __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($73);
  } while (0);
  if ((label | 0) == 16) {
   $$sink64$in = (HEAP32[$$pn$in >> 2] | 0) + ($4 << 3) | 0;
   HEAPF64[$$sink64$in >> 3] = $$sink1$p$sink + +HEAPF64[$$sink64$in >> 3];
   label = 17;
  }
  if ((label | 0) == 17) {
   $$pre$phi52Z2D = $0 + 32 | 0;
   $104 = HEAP8[$0 + 40 >> 0] ^ 1;
   $105 = HEAP32[$0 + 24 >> 2] | 0;
  }
  $90 = __Znwj(48) | 0;
  $$sink16 = $9;
  $$sink19 = $104;
  $$sink22 = +HEAPF64[$$pre$phi52Z2D >> 3];
  $$sink25 = $105;
  $$sink28 = $4;
  $$sink44$in = $90;
 } while (0);
 HEAP8[$$sink44$in + 16 >> 0] = 0;
 HEAP32[$$sink44$in + 8 >> 2] = 2;
 HEAP8[$$sink44$in + 15 >> 0] = 0;
 HEAP8[$$sink44$in + 12 >> 0] = 1;
 HEAP8[$$sink44$in + 13 >> 0] = 1;
 HEAP8[$$sink44$in + 14 >> 0] = 0;
 HEAP32[$$sink44$in >> 2] = 5964;
 HEAP32[$$sink44$in + 20 >> 2] = $$sink28;
 HEAP32[$$sink44$in + 24 >> 2] = $$sink25;
 HEAPF64[$$sink44$in + 32 >> 3] = $$sink22;
 HEAP8[$$sink44$in + 40 >> 0] = $$sink19;
 HEAP32[$$sink44$in + 44 >> 2] = $$sink16;
 return $$sink44$in | 0;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$0$lcssa$i = 0, $$025 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $$sroa$027$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $20 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $33 = 0, $39 = 0, $40 = 0, $42 = 0, $45 = 0, $59 = 0, $62 = 0, $7 = 0, $74 = 0, $77 = 0, $8 = 0, $9 = 0, $91 = 0, $94 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 $$byval_copy = sp + 424 | 0;
 $vararg_buffer = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 12 | 0;
 $10 = sp + 8 | 0;
 $11 = sp + 564 | 0;
 $12 = sp + 4 | 0;
 $13 = sp + 464 | 0;
 HEAP32[$8 >> 2] = $7;
 $15 = $8 + 4 | 0;
 HEAP32[$15 >> 2] = 266;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 34568) | 0;
 HEAP8[$11 >> 0] = 0;
 HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
 $20 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($1, $$byval_copy, $3, $10, $20, $5, $11, $17, $8, $9, $7 + 400 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 48 >> 2] & 31]($17, 28214, 28224, $$byval_copy) | 0;
  $25 = HEAP32[$9 >> 2] | 0;
  $26 = HEAP32[$8 >> 2] | 0;
  $27 = $25 - $26 | 0;
  $29 = $26;
  $30 = $25;
  if (($27 | 0) > 392) {
   $33 = _malloc(($27 >>> 2) + 2 | 0) | 0;
   if (!$33) __ZSt17__throw_bad_allocv(); else {
    $$025 = $33;
    $$sroa$027$0 = $33;
   }
  } else {
   $$025 = $13;
   $$sroa$027$0 = 0;
  }
  if (!(HEAP8[$11 >> 0] | 0)) $$1 = $$025; else {
   HEAP8[$$025 >> 0] = 45;
   $$1 = $$025 + 1 | 0;
  }
  $39 = $$byval_copy + 40 | 0;
  $40 = $$byval_copy;
  $$0 = $29;
  $$2 = $$1;
  $42 = $30;
  while (1) {
   if ($$0 >>> 0 >= $42 >>> 0) break;
   $45 = HEAP32[$$0 >> 2] | 0;
   $$0$i = $$byval_copy;
   while (1) {
    if (($$0$i | 0) == ($39 | 0)) {
     $$0$lcssa$i = $39;
     break;
    }
    if ((HEAP32[$$0$i >> 2] | 0) == ($45 | 0)) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $$0$i = $$0$i + 4 | 0;
   }
   HEAP8[$$2 >> 0] = HEAP8[28214 + ($$0$lcssa$i - $40 >> 2) >> 0] | 0;
   $$0 = $$0 + 4 | 0;
   $$2 = $$2 + 1 | 0;
   $42 = HEAP32[$9 >> 2] | 0;
  }
  HEAP8[$$2 >> 0] = 0;
  HEAP32[$vararg_buffer >> 2] = $6;
  if ((_sscanf($13, 28115, $vararg_buffer) | 0) != 1) __ZNSt3__221__throw_runtime_errorEPKc(0);
  if ($$sroa$027$0 | 0) _free($$sroa$027$0);
 }
 $59 = HEAP32[$1 >> 2] | 0;
 do if (!$59) $94 = 1; else {
  $62 = HEAP32[$59 + 12 >> 2] | 0;
  if (($62 | 0) == (HEAP32[$59 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$59 >> 2] | 0) + 36 >> 2] & 127]($59) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$62 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $94 = 1;
   break;
  } else {
   $94 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $74 = HEAP32[$2 >> 2] | 0;
 do if (!$74) label = 32; else {
  $77 = HEAP32[$74 + 12 >> 2] | 0;
  if (($77 | 0) == (HEAP32[$74 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$74 >> 2] | 0) + 36 >> 2] & 127]($74) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$77 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 32;
   break;
  } else if ($94) break; else {
   label = 34;
   break;
  }
 } while (0);
 if ((label | 0) == 32) if ($94) label = 34;
 if ((label | 0) == 34) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $91 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($91 | 0) FUNCTION_TABLE_vi[HEAP32[$15 >> 2] & 511]($91);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$0$lcssa$i = 0, $$025 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $$sroa$028$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $20 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $32 = 0, $38 = 0, $39 = 0, $41 = 0, $44 = 0, $57 = 0, $60 = 0, $7 = 0, $72 = 0, $75 = 0, $8 = 0, $89 = 0, $9 = 0, $92 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 24 | 0;
 $vararg_buffer = sp;
 $7 = sp + 140 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 12 | 0;
 $10 = sp + 8 | 0;
 $11 = sp + 136 | 0;
 $12 = sp + 4 | 0;
 $13 = sp + 36 | 0;
 HEAP32[$8 >> 2] = $7;
 $15 = $8 + 4 | 0;
 HEAP32[$15 >> 2] = 266;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 34536) | 0;
 HEAP8[$11 >> 0] = 0;
 HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
 $20 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($1, $$byval_copy, $3, $10, $20, $5, $11, $17, $8, $9, $7 + 100 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 32 >> 2] & 31]($17, 28104, 28114, $$byval_copy) | 0;
  $25 = HEAP32[$9 >> 2] | 0;
  $26 = HEAP32[$8 >> 2] | 0;
  $27 = $25 - $26 | 0;
  $29 = $26;
  $30 = $25;
  if (($27 | 0) > 98) {
   $32 = _malloc($27 + 2 | 0) | 0;
   if (!$32) __ZSt17__throw_bad_allocv(); else {
    $$025 = $32;
    $$sroa$028$0 = $32;
   }
  } else {
   $$025 = $13;
   $$sroa$028$0 = 0;
  }
  if (!(HEAP8[$11 >> 0] | 0)) $$1 = $$025; else {
   HEAP8[$$025 >> 0] = 45;
   $$1 = $$025 + 1 | 0;
  }
  $38 = $$byval_copy + 10 | 0;
  $39 = $$byval_copy;
  $$0 = $29;
  $$2 = $$1;
  $41 = $30;
  while (1) {
   if ($$0 >>> 0 >= $41 >>> 0) break;
   $44 = HEAP8[$$0 >> 0] | 0;
   $$0$i = $$byval_copy;
   while (1) {
    if (($$0$i | 0) == ($38 | 0)) {
     $$0$lcssa$i = $38;
     break;
    }
    if ((HEAP8[$$0$i >> 0] | 0) == $44 << 24 >> 24) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $$0$i = $$0$i + 1 | 0;
   }
   HEAP8[$$2 >> 0] = HEAP8[28104 + ($$0$lcssa$i - $39) >> 0] | 0;
   $$0 = $$0 + 1 | 0;
   $$2 = $$2 + 1 | 0;
   $41 = HEAP32[$9 >> 2] | 0;
  }
  HEAP8[$$2 >> 0] = 0;
  HEAP32[$vararg_buffer >> 2] = $6;
  if ((_sscanf($13, 28115, $vararg_buffer) | 0) != 1) __ZNSt3__221__throw_runtime_errorEPKc(0);
  if ($$sroa$028$0 | 0) _free($$sroa$028$0);
 }
 $57 = HEAP32[$1 >> 2] | 0;
 do if (!$57) $92 = 1; else {
  $60 = HEAP32[$57 + 12 >> 2] | 0;
  if (($60 | 0) == (HEAP32[$57 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$57 >> 2] | 0) + 36 >> 2] & 127]($57) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$60 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $92 = 1;
   break;
  } else {
   $92 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $72 = HEAP32[$2 >> 2] | 0;
 do if (!$72) label = 32; else {
  $75 = HEAP32[$72 + 12 >> 2] | 0;
  if (($75 | 0) == (HEAP32[$72 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 36 >> 2] & 127]($72) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$75 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 32;
   break;
  } else if ($92) break; else {
   label = 34;
   break;
  }
 } while (0);
 if ((label | 0) == 32) if ($92) label = 34;
 if ((label | 0) == 34) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $89 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($89 | 0) FUNCTION_TABLE_vi[HEAP32[$15 >> 2] & 511]($89);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i27 = 0, $$0$i$i30 = 0, $$byval_copy = 0, $$sink1 = 0, $$sink48 = 0, $$sink49 = 0, $$sroa$042$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $29 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $47 = 0, $52 = 0, $6 = 0, $60 = 0, $67 = 0, $7 = 0, $74 = 0, $8 = 0, $81 = 0, $83 = 0, $89 = 0, $9 = 0, $94 = 0, $95 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 56 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 164 | 0;
 $8 = sp + 161 | 0;
 $9 = sp + 160 | 0;
 $10 = sp + 40 | 0;
 $11 = sp + 28 | 0;
 $12 = sp + 16 | 0;
 $13 = sp + 12 | 0;
 $14 = sp + 60 | 0;
 $15 = sp + 8 | 0;
 $16 = sp + 4 | 0;
 $17 = sp;
 __ZNKSt3__28ios_base6getlocEv($6, $3);
 $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34536) | 0;
 $19 = $5 + 11 | 0;
 $20 = HEAP8[$19 >> 0] | 0;
 $21 = $20 << 24 >> 24 < 0;
 $22 = $5 + 4 | 0;
 if (!(($21 ? HEAP32[$22 >> 2] | 0 : $20 & 255) | 0)) $41 = 0; else {
  $29 = HEAP8[($21 ? HEAP32[$5 >> 2] | 0 : $5) >> 0] | 0;
  $41 = $29 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 28 >> 2] & 63]($18, 45) | 0) << 24 >> 24;
 };
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 $$0$i$i27 = 0;
 while (1) {
  if (($$0$i$i27 | 0) == 3) break;
  HEAP32[$11 + ($$0$i$i27 << 2) >> 2] = 0;
  $$0$i$i27 = $$0$i$i27 + 1 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $$0$i$i30 = 0;
 while (1) {
  if (($$0$i$i30 | 0) == 3) break;
  HEAP32[$12 + ($$0$i$i30 << 2) >> 2] = 0;
  $$0$i$i30 = $$0$i$i30 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($2, $41, $6, $7, $8, $9, $10, $11, $12, $13);
 $42 = HEAP8[$19 >> 0] | 0;
 $43 = $42 << 24 >> 24 < 0;
 $46 = $43 ? HEAP32[$22 >> 2] | 0 : $42 & 255;
 $47 = HEAP32[$13 >> 2] | 0;
 if (($46 | 0) > ($47 | 0)) {
  $52 = HEAP8[$12 + 11 >> 0] | 0;
  $60 = HEAP8[$11 + 11 >> 0] | 0;
  $$sink1 = 1;
  $$sink48 = ($52 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $52 & 255) + ($46 - $47 << 1) | 0;
  $$sink49 = $60 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $60 & 255;
 } else {
  $67 = HEAP8[$12 + 11 >> 0] | 0;
  $74 = HEAP8[$11 + 11 >> 0] | 0;
  $$sink1 = 2;
  $$sink48 = $74 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $74 & 255;
  $$sink49 = $67 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $67 & 255;
 }
 $81 = $$sink49 + $47 + $$sink48 + $$sink1 | 0;
 if ($81 >>> 0 > 100) {
  $83 = _malloc($81) | 0;
  if (!$83) __ZSt17__throw_bad_allocv(); else {
   $$0 = $83;
   $$sroa$042$0 = $83;
  }
 } else {
  $$0 = $14;
  $$sroa$042$0 = 0;
 }
 $89 = $43 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($$0, $15, $16, HEAP32[$3 + 4 >> 2] | 0, $89, $89 + $46 | 0, $18, $41, $7, HEAP8[$8 >> 0] | 0, HEAP8[$9 >> 0] | 0, $10, $11, $12, $47);
 HEAP32[$17 >> 2] = HEAP32[$1 >> 2];
 $94 = HEAP32[$15 >> 2] | 0;
 $95 = HEAP32[$16 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$17 >> 2];
 $96 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$0, $94, $95, $3, $4) | 0;
 if ($$sroa$042$0 | 0) _free($$sroa$042$0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__26localeD2Ev($6);
 STACKTOP = sp;
 return $96 | 0;
}

function __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i78 = 0, $$07$i$i = 0, $$07$i$i77 = 0, $$072 = 0, $$073 = 0, $$075 = 0, $$1 = 0, $$174 = 0, $$176 = 0, $100 = 0, $108 = 0, $13 = 0, $14 = 0, $16 = 0, $21 = 0, $22 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $41 = 0, $46 = 0, $47 = 0, $54 = 0, $55 = 0, $58 = 0, $60 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $75 = 0, $78 = 0, $79 = 0, $8 = 0, $83 = 0, $87 = 0, $9 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34568) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34576) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 127]($7, $9);
 $13 = $7 + 11 | 0;
 $14 = HEAP8[$13 >> 0] | 0;
 $16 = $7 + 4 | 0;
 $21 = $0;
 $22 = $2;
 if (!(($14 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $14 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 31]($8, $0, $2, $3) | 0;
  $27 = $3 + ($22 - $21 << 2) | 0;
  HEAP32[$5 >> 2] = $27;
  $108 = $27;
 } else {
  HEAP32[$5 >> 2] = $3;
  $28 = HEAP8[$0 >> 0] | 0;
  switch ($28 << 24 >> 24) {
  case 43:
  case 45:
   {
    $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, $28) | 0;
    $34 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $34 + 4;
    HEAP32[$34 >> 2] = $33;
    $$075 = $0 + 1 | 0;
    break;
   }
  default:
   $$075 = $0;
  }
  L7 : do if (($22 - $$075 | 0) > 1) if ((HEAP8[$$075 >> 0] | 0) == 48) {
   $41 = $$075 + 1 | 0;
   switch (HEAP8[$41 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $$176 = $$075;
     break L7;
    }
   }
   $46 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, 48) | 0;
   $47 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $47 + 4;
   HEAP32[$47 >> 2] = $46;
   $54 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$41 >> 0] | 0) | 0;
   $55 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $55 + 4;
   HEAP32[$55 >> 2] = $54;
   $$176 = $$075 + 2 | 0;
  } else $$176 = $$075; else $$176 = $$075; while (0);
  L12 : do if (($$176 | 0) != ($2 | 0)) {
   $$0$i$i = $2;
   $$07$i$i = $$176;
   while (1) {
    $58 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $58 >>> 0) break L12;
    $60 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$58 >> 0] | 0;
    HEAP8[$58 >> 0] = $60;
    $$0$i$i = $58;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $66 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$176;
  $$072 = 0;
  $$073 = 0;
  while (1) {
   if ($$0 >>> 0 >= $2 >>> 0) break;
   $78 = HEAP8[$13 >> 0] | 0;
   $79 = $78 << 24 >> 24 < 0;
   $83 = HEAP8[($79 ? HEAP32[$7 >> 2] | 0 : $7) + $$072 >> 0] | 0;
   if ($83 << 24 >> 24 != 0 & ($$073 | 0) == ($83 << 24 >> 24 | 0)) {
    $87 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $87 + 4;
    HEAP32[$87 >> 2] = $66;
    $$1 = ($$072 >>> 0 < (($79 ? HEAP32[$16 >> 2] | 0 : $78 & 255) + -1 | 0) >>> 0 & 1) + $$072 | 0;
    $$174 = 0;
   } else {
    $$1 = $$072;
    $$174 = $$073;
   }
   $99 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $100 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $100 + 4;
   HEAP32[$100 >> 2] = $99;
   $$0 = $$0 + 1 | 0;
   $$072 = $$1;
   $$073 = $$174 + 1 | 0;
  }
  $70 = $3 + ($$176 - $21 << 2) | 0;
  $71 = HEAP32[$5 >> 2] | 0;
  if (($70 | 0) == ($71 | 0)) $108 = $70; else {
   $$0$i$i78 = $71;
   $$07$i$i77 = $70;
   while (1) {
    $73 = $$0$i$i78 + -4 | 0;
    if ($$07$i$i77 >>> 0 >= $73 >>> 0) break;
    $75 = HEAP32[$$07$i$i77 >> 2] | 0;
    HEAP32[$$07$i$i77 >> 2] = HEAP32[$73 >> 2];
    HEAP32[$73 >> 2] = $75;
    $$0$i$i78 = $73;
    $$07$i$i77 = $$07$i$i77 + 4 | 0;
   }
   $108 = HEAP32[$5 >> 2] | 0;
  }
 }
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $108 : $3 + ($1 - $21 << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIdNS_9allocatorIdEEE6insertINS_11__wrap_iterIPdEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKdEES9_S9_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$017$i = 0, $$sroa$076$099 = 0, $$sroa$15$0$in = 0, $$sroa$15$1$in = 0, $$sroa$speculated$$i = 0, $10 = 0, $100 = 0, $103 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $30 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $59 = 0, $63 = 0, $64 = 0, $69 = 0, $7 = 0, $71 = 0, $74 = 0, $76 = 0, $77 = 0, $80 = 0, $83 = 0, $84 = 0, $86 = 0, $87 = 0, $9 = 0, $92 = 0, $94 = 0, $95 = 0, $scevgep10$i$i = 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = $4;
 $7 = (HEAP32[$1 >> 2] | 0) - $5 | 0;
 $9 = $4 + ($7 >> 3 << 3) | 0;
 $10 = HEAP32[$2 >> 2] | 0;
 $11 = HEAP32[$3 >> 2] | 0;
 $12 = $11 - $10 | 0;
 $13 = $12 >> 3;
 $15 = $11;
 if (($12 | 0) <= 0) {
  $$0 = $9;
  return $$0 | 0;
 }
 $16 = $0 + 8 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $0 + 4 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = $19;
 if (($13 | 0) <= ($17 - $20 >> 3 | 0)) {
  $24 = $9;
  $25 = $20 - $24 | 0;
  $26 = $25 >> 3;
  if (($13 | 0) > ($26 | 0)) {
   $29 = $10 + ($26 << 3) | 0;
   $30 = $29;
   if (($29 | 0) == ($15 | 0)) $108 = $19; else {
    $33 = $15 + -8 - $30 | 0;
    $35 = $29;
    $36 = $19;
    while (1) {
     HEAPF64[$36 >> 3] = +HEAPF64[$35 >> 3];
     $35 = $35 + 8 | 0;
     if (($35 | 0) == ($15 | 0)) break; else $36 = $36 + 8 | 0;
    }
    $scevgep10$i$i = $19 + (($33 >>> 3) + 1 << 3) | 0;
    HEAP32[$18 >> 2] = $scevgep10$i$i;
    $108 = $scevgep10$i$i;
   }
   if (($25 | 0) > 0) {
    $$sroa$076$099 = $30;
    $44 = $108;
   } else {
    $$0 = $9;
    return $$0 | 0;
   }
  } else {
   $$sroa$076$099 = $11;
   $44 = $19;
  }
  $47 = $44 - ($9 + ($13 << 3)) | 0;
  $48 = $47 >> 3;
  $49 = $9 + ($48 << 3) | 0;
  if ($49 >>> 0 < $19 >>> 0) {
   $53 = ($19 + (0 - $48 << 3) + ~$24 | 0) >>> 3;
   $$017$i = $49;
   $59 = $44;
   while (1) {
    HEAPF64[$59 >> 3] = +HEAPF64[$$017$i >> 3];
    $$017$i = $$017$i + 8 | 0;
    if ($$017$i >>> 0 >= $19 >>> 0) break; else $59 = $59 + 8 | 0;
   }
   HEAP32[$18 >> 2] = $44 + ($53 + 1 << 3);
  }
  if (!$48) $64 = $10; else {
   _memmove($44 + (0 - $48 << 3) | 0, $9 | 0, $47 | 0) | 0;
   $64 = HEAP32[$2 >> 2] | 0;
  }
  $63 = $$sroa$076$099 - $64 | 0;
  if (!$63) {
   $$0 = $9;
   return $$0 | 0;
  }
  _memmove($9 | 0, $64 | 0, $63 | 0) | 0;
  $$0 = $9;
  return $$0 | 0;
 }
 $69 = ($20 - $5 >> 3) + $13 | 0;
 if ($69 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $71 = $17 - $5 | 0;
 $74 = $71 >> 2;
 $$sroa$speculated$$i = $71 >> 3 >>> 0 < 268435455 ? ($74 >>> 0 < $69 >>> 0 ? $69 : $74) : 536870911;
 $76 = $9;
 $77 = $7 >> 3;
 do if (!$$sroa$speculated$$i) $84 = 0; else if ($$sroa$speculated$$i >>> 0 > 536870911) {
  $80 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($80, 15810);
  HEAP32[$80 >> 2] = 14216;
  ___cxa_throw($80 | 0, 3104, 246);
 } else {
  $84 = __Znwj($$sroa$speculated$$i << 3) | 0;
  break;
 } while (0);
 $83 = $84 + ($77 << 3) | 0;
 $86 = $84 + ($$sroa$speculated$$i << 3) | 0;
 $87 = $10;
 if (($87 | 0) == ($15 | 0)) $$sroa$15$0$in = $83; else {
  $92 = (($15 + -8 - $10 | 0) >>> 3) + 1 | 0;
  $94 = $87;
  $95 = $83;
  while (1) {
   HEAPF64[$95 >> 3] = +HEAPF64[$94 >> 3];
   $94 = $94 + 8 | 0;
   if (($94 | 0) == ($15 | 0)) break; else $95 = $95 + 8 | 0;
  }
  $$sroa$15$0$in = $83 + ($92 << 3) | 0;
 }
 $100 = $83 + (0 - $77 << 3) | 0;
 if (($7 | 0) > 0) _memcpy($100 | 0, $4 | 0, $7 | 0) | 0;
 $103 = $20 - $76 | 0;
 if (($103 | 0) > 0) {
  _memcpy($$sroa$15$0$in | 0, $9 | 0, $103 | 0) | 0;
  $$sroa$15$1$in = $$sroa$15$0$in + ($103 >>> 3 << 3) | 0;
 } else $$sroa$15$1$in = $$sroa$15$0$in;
 HEAP32[$0 >> 2] = $100;
 HEAP32[$18 >> 2] = $$sroa$15$1$in;
 HEAP32[$16 >> 2] = $86;
 if (!$4) {
  $$0 = $83;
  return $$0 | 0;
 }
 __ZdlPv($4);
 $$0 = $83;
 return $$0 | 0;
}

function __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i76 = 0, $$07$i$i = 0, $$07$i$i75 = 0, $$070 = 0, $$071 = 0, $$073 = 0, $$1 = 0, $$172 = 0, $$174 = 0, $101 = 0, $102 = 0, $110 = 0, $13 = 0, $14 = 0, $16 = 0, $21 = 0, $22 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $41 = 0, $46 = 0, $47 = 0, $54 = 0, $55 = 0, $58 = 0, $60 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $75 = 0, $8 = 0, $83 = 0, $87 = 0, $89 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34536) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34552) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 127]($7, $9);
 $13 = $7 + 11 | 0;
 $14 = HEAP8[$13 >> 0] | 0;
 $16 = $7 + 4 | 0;
 $21 = $0;
 $22 = $2;
 if (!(($14 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $14 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 31]($8, $0, $2, $3) | 0;
  $27 = $3 + ($22 - $21) | 0;
  HEAP32[$5 >> 2] = $27;
  $110 = $27;
 } else {
  HEAP32[$5 >> 2] = $3;
  $28 = HEAP8[$0 >> 0] | 0;
  switch ($28 << 24 >> 24) {
  case 43:
  case 45:
   {
    $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, $28) | 0;
    $34 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $34 + 1;
    HEAP8[$34 >> 0] = $33;
    $$073 = $0 + 1 | 0;
    break;
   }
  default:
   $$073 = $0;
  }
  L7 : do if (($22 - $$073 | 0) > 1) if ((HEAP8[$$073 >> 0] | 0) == 48) {
   $41 = $$073 + 1 | 0;
   switch (HEAP8[$41 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $$174 = $$073;
     break L7;
    }
   }
   $46 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, 48) | 0;
   $47 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $47 + 1;
   HEAP8[$47 >> 0] = $46;
   $54 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$41 >> 0] | 0) | 0;
   $55 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $55 + 1;
   HEAP8[$55 >> 0] = $54;
   $$174 = $$073 + 2 | 0;
  } else $$174 = $$073; else $$174 = $$073; while (0);
  L12 : do if (($$174 | 0) != ($2 | 0)) {
   $$0$i$i = $2;
   $$07$i$i = $$174;
   while (1) {
    $58 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $58 >>> 0) break L12;
    $60 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$58 >> 0] | 0;
    HEAP8[$58 >> 0] = $60;
    $$0$i$i = $58;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $66 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$174;
  $$070 = 0;
  $$071 = 0;
  while (1) {
   if ($$0 >>> 0 >= $2 >>> 0) break;
   $83 = HEAP8[((HEAP8[$13 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$070 >> 0] | 0;
   if ($83 << 24 >> 24 != 0 & ($$071 | 0) == ($83 << 24 >> 24 | 0)) {
    $87 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $87 + 1;
    HEAP8[$87 >> 0] = $66;
    $89 = HEAP8[$13 >> 0] | 0;
    $$1 = ($$070 >>> 0 < (($89 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $89 & 255) + -1 | 0) >>> 0 & 1) + $$070 | 0;
    $$172 = 0;
   } else {
    $$1 = $$070;
    $$172 = $$071;
   }
   $101 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $102 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $102 + 1;
   HEAP8[$102 >> 0] = $101;
   $$0 = $$0 + 1 | 0;
   $$070 = $$1;
   $$071 = $$172 + 1 | 0;
  }
  $70 = $3 + ($$174 - $21) | 0;
  $71 = HEAP32[$5 >> 2] | 0;
  if (($70 | 0) == ($71 | 0)) $110 = $70; else {
   $$0$i$i76 = $71;
   $$07$i$i75 = $70;
   while (1) {
    $73 = $$0$i$i76 + -1 | 0;
    if ($$07$i$i75 >>> 0 >= $73 >>> 0) break;
    $75 = HEAP8[$$07$i$i75 >> 0] | 0;
    HEAP8[$$07$i$i75 >> 0] = HEAP8[$73 >> 0] | 0;
    HEAP8[$73 >> 0] = $75;
    $$0$i$i76 = $73;
    $$07$i$i75 = $$07$i$i75 + 1 | 0;
   }
   $110 = HEAP32[$5 >> 2] | 0;
  }
 }
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $110 : $3 + ($1 - $21) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0$lcssa$i$i = 0, $$07$i$i = 0, $$07$i$i21 = 0, $$078$i$i = 0, $$09$i$i = 0, $$sroa$speculated$$i = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $26 = 0, $29 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $43 = 0, $52 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $69 = 0, $7 = 0, $71 = 0, $72 = 0, $74 = 0, $78 = 0, $79 = 0, $8 = 0, $82 = 0, $9 = 0;
 $6 = ($2 - $1 | 0) / 12 | 0;
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 if ($6 >>> 0 > (($8 - $9 | 0) / 12 | 0) >>> 0) {
  if (!$9) $72 = $8; else {
   $52 = $0 + 4 | 0;
   $53 = HEAP32[$52 >> 2] | 0;
   if (($53 | 0) == ($13 | 0)) $69 = $9; else {
    $56 = $53;
    while (1) {
     $55 = $56 + -12 | 0;
     HEAP32[$52 >> 2] = $55;
     $57 = HEAP32[$55 >> 2] | 0;
     if (!$57) $59 = $55; else {
      $61 = $56 + -8 | 0;
      $62 = HEAP32[$61 >> 2] | 0;
      if (($62 | 0) != ($57 | 0)) HEAP32[$61 >> 2] = $62 + (~(($62 + -8 - $57 | 0) >>> 3) << 3);
      __ZdlPv($57);
      $59 = HEAP32[$52 >> 2] | 0;
     }
     if (($59 | 0) == ($13 | 0)) break; else $56 = $59;
    }
    $69 = HEAP32[$0 >> 2] | 0;
   }
   __ZdlPv($69);
   HEAP32[$7 >> 2] = 0;
   HEAP32[$52 >> 2] = 0;
   HEAP32[$0 >> 2] = 0;
   $72 = 0;
  }
  if ($6 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $71 = ($72 | 0) / 12 | 0;
  $74 = $71 << 1;
  $$sroa$speculated$$i = $71 >>> 0 < 178956970 ? ($74 >>> 0 < $6 >>> 0 ? $6 : $74) : 357913941;
  if ($$sroa$speculated$$i >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $78 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  $79 = $0 + 4 | 0;
  HEAP32[$79 >> 2] = $78;
  HEAP32[$0 >> 2] = $78;
  HEAP32[$7 >> 2] = $78 + ($$sroa$speculated$$i * 12 | 0);
  if (($1 | 0) == ($2 | 0)) return;
  $$07$i$i = $1;
  $82 = $78;
  do {
   __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEEC2ERKS5_($82, $$07$i$i);
   $$07$i$i = $$07$i$i + 12 | 0;
   $82 = (HEAP32[$79 >> 2] | 0) + 12 | 0;
   HEAP32[$79 >> 2] = $82;
  } while (($$07$i$i | 0) != ($2 | 0));
  return;
 } else {
  $14 = $0 + 4 | 0;
  $17 = ((HEAP32[$14 >> 2] | 0) - $9 | 0) / 12 | 0;
  $18 = $6 >>> 0 > $17 >>> 0;
  $19 = $1 + ($17 * 12 | 0) | 0;
  $$ = $18 ? $19 : $2;
  if (($$ | 0) == ($1 | 0)) $$0$lcssa$i$i = $13; else {
   $$078$i$i = $1;
   $$09$i$i = $13;
   while (1) {
    if (($$09$i$i | 0) != ($$078$i$i | 0)) __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($$09$i$i, HEAP32[$$078$i$i >> 2] | 0, HEAP32[$$078$i$i + 4 >> 2] | 0);
    $$078$i$i = $$078$i$i + 12 | 0;
    $26 = $$09$i$i + 12 | 0;
    if (($$078$i$i | 0) == ($$ | 0)) {
     $$0$lcssa$i$i = $26;
     break;
    } else $$09$i$i = $26;
   }
  }
  if ($18) {
   if (($$ | 0) == ($2 | 0)) return;
   $$07$i$i21 = $19;
   $29 = HEAP32[$14 >> 2] | 0;
   do {
    __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEEC2ERKS5_($29, $$07$i$i21);
    $$07$i$i21 = $$07$i$i21 + 12 | 0;
    $29 = (HEAP32[$14 >> 2] | 0) + 12 | 0;
    HEAP32[$14 >> 2] = $29;
   } while (($$07$i$i21 | 0) != ($2 | 0));
   return;
  }
  $34 = HEAP32[$14 >> 2] | 0;
  if (($34 | 0) == ($$0$lcssa$i$i | 0)) return; else $37 = $34;
  while (1) {
   $36 = $37 + -12 | 0;
   HEAP32[$14 >> 2] = $36;
   $38 = HEAP32[$36 >> 2] | 0;
   if (!$38) $40 = $36; else {
    $42 = $37 + -8 | 0;
    $43 = HEAP32[$42 >> 2] | 0;
    if (($43 | 0) != ($38 | 0)) HEAP32[$42 >> 2] = $43 + (~(($43 + -8 - $38 | 0) >>> 3) << 3);
    __ZdlPv($38);
    $40 = HEAP32[$14 >> 2] | 0;
   }
   if (($40 | 0) == ($$0$lcssa$i$i | 0)) break; else $37 = $40;
  }
  return;
 }
}

function __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0$lcssa$i$i = 0, $$07$i$i = 0, $$07$i$i21 = 0, $$078$i$i = 0, $$09$i$i = 0, $$sroa$speculated$$i = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $26 = 0, $29 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $43 = 0, $52 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $69 = 0, $7 = 0, $71 = 0, $72 = 0, $74 = 0, $78 = 0, $79 = 0, $8 = 0, $82 = 0, $9 = 0;
 $6 = ($2 - $1 | 0) / 12 | 0;
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 if ($6 >>> 0 > (($8 - $9 | 0) / 12 | 0) >>> 0) {
  if (!$9) $72 = $8; else {
   $52 = $0 + 4 | 0;
   $53 = HEAP32[$52 >> 2] | 0;
   if (($53 | 0) == ($13 | 0)) $69 = $9; else {
    $56 = $53;
    while (1) {
     $55 = $56 + -12 | 0;
     HEAP32[$52 >> 2] = $55;
     $57 = HEAP32[$55 >> 2] | 0;
     if (!$57) $59 = $55; else {
      $61 = $56 + -8 | 0;
      $62 = HEAP32[$61 >> 2] | 0;
      if (($62 | 0) != ($57 | 0)) HEAP32[$61 >> 2] = $62 + (~(($62 + -8 - $57 | 0) >>> 3) << 3);
      __ZdlPv($57);
      $59 = HEAP32[$52 >> 2] | 0;
     }
     if (($59 | 0) == ($13 | 0)) break; else $56 = $59;
    }
    $69 = HEAP32[$0 >> 2] | 0;
   }
   __ZdlPv($69);
   HEAP32[$7 >> 2] = 0;
   HEAP32[$52 >> 2] = 0;
   HEAP32[$0 >> 2] = 0;
   $72 = 0;
  }
  if ($6 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $71 = ($72 | 0) / 12 | 0;
  $74 = $71 << 1;
  $$sroa$speculated$$i = $71 >>> 0 < 178956970 ? ($74 >>> 0 < $6 >>> 0 ? $6 : $74) : 357913941;
  if ($$sroa$speculated$$i >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $78 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  $79 = $0 + 4 | 0;
  HEAP32[$79 >> 2] = $78;
  HEAP32[$0 >> 2] = $78;
  HEAP32[$7 >> 2] = $78 + ($$sroa$speculated$$i * 12 | 0);
  if (($1 | 0) == ($2 | 0)) return;
  $$07$i$i = $1;
  $82 = $78;
  do {
   __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($82, $$07$i$i);
   $$07$i$i = $$07$i$i + 12 | 0;
   $82 = (HEAP32[$79 >> 2] | 0) + 12 | 0;
   HEAP32[$79 >> 2] = $82;
  } while (($$07$i$i | 0) != ($2 | 0));
  return;
 } else {
  $14 = $0 + 4 | 0;
  $17 = ((HEAP32[$14 >> 2] | 0) - $9 | 0) / 12 | 0;
  $18 = $6 >>> 0 > $17 >>> 0;
  $19 = $1 + ($17 * 12 | 0) | 0;
  $$ = $18 ? $19 : $2;
  if (($$ | 0) == ($1 | 0)) $$0$lcssa$i$i = $13; else {
   $$078$i$i = $1;
   $$09$i$i = $13;
   while (1) {
    if (($$09$i$i | 0) != ($$078$i$i | 0)) __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($$09$i$i, HEAP32[$$078$i$i >> 2] | 0, HEAP32[$$078$i$i + 4 >> 2] | 0);
    $$078$i$i = $$078$i$i + 12 | 0;
    $26 = $$09$i$i + 12 | 0;
    if (($$078$i$i | 0) == ($$ | 0)) {
     $$0$lcssa$i$i = $26;
     break;
    } else $$09$i$i = $26;
   }
  }
  if ($18) {
   if (($$ | 0) == ($2 | 0)) return;
   $$07$i$i21 = $19;
   $29 = HEAP32[$14 >> 2] | 0;
   do {
    __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($29, $$07$i$i21);
    $$07$i$i21 = $$07$i$i21 + 12 | 0;
    $29 = (HEAP32[$14 >> 2] | 0) + 12 | 0;
    HEAP32[$14 >> 2] = $29;
   } while (($$07$i$i21 | 0) != ($2 | 0));
   return;
  }
  $34 = HEAP32[$14 >> 2] | 0;
  if (($34 | 0) == ($$0$lcssa$i$i | 0)) return; else $37 = $34;
  while (1) {
   $36 = $37 + -12 | 0;
   HEAP32[$14 >> 2] = $36;
   $38 = HEAP32[$36 >> 2] | 0;
   if (!$38) $40 = $36; else {
    $42 = $37 + -8 | 0;
    $43 = HEAP32[$42 >> 2] | 0;
    if (($43 | 0) != ($38 | 0)) HEAP32[$42 >> 2] = $43 + (~(($43 + -8 - $38 | 0) >>> 3) << 3);
    __ZdlPv($38);
    $40 = HEAP32[$14 >> 2] | 0;
   }
   if (($40 | 0) == ($$0$lcssa$i$i | 0)) break; else $37 = $40;
  }
  return;
 }
}

function __ZNSt3__26vectorIbNS_9allocatorIbEEE6resizeEjb($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i10$i = 0, $$cast = 0, $$sroa$056$0 = 0, $$sroa$7$0 = 0, $$sroa$7$1$i = 0, $$sroa$speculated$i$i = 0, $$sroa$speculated$i8$i = 0, $10 = 0, $103 = 0, $104 = 0, $106 = 0, $108 = 0, $110 = 0, $111 = 0, $117 = 0, $18 = 0, $19 = 0, $20 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $33 = 0, $37 = 0, $4 = 0, $42 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $51 = 0, $58 = 0, $60 = 0, $62 = 0, $67 = 0, $68 = 0, $7 = 0, $70 = 0, $79 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $86 = 0, $87 = 0, $9 = 0, $93 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 >>> 0 >= $1 >>> 0) {
  HEAP32[$4 >> 2] = $1;
  STACKTOP = sp;
  return;
 }
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $8 << 5;
 $10 = $1 - $5 | 0;
 if ($9 >>> 0 < $10 >>> 0 | $5 >>> 0 > ($9 - $10 | 0) >>> 0) {
  HEAP32[$3 >> 2] = 0;
  $19 = $3 + 4 | 0;
  HEAP32[$19 >> 2] = 0;
  $20 = $3 + 8 | 0;
  HEAP32[$20 >> 2] = 0;
  if (($1 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $23 = $8 << 6;
  $25 = $1 + 31 & -32;
  __ZNSt3__26vectorIbNS_9allocatorIbEEE7reserveEj($3, $9 >>> 0 < 1073741823 ? ($23 >>> 0 < $25 >>> 0 ? $25 : $23) : 2147483647);
  $27 = HEAP32[$4 >> 2] | 0;
  HEAP32[$19 >> 2] = $27 + $10;
  $29 = HEAP32[$0 >> 2] | 0;
  $$cast = $29;
  $33 = HEAP32[$3 >> 2] | 0;
  $37 = ($$cast + ($27 >>> 5 << 2) - $29 << 3) + ($27 & 31) | 0;
  if (($37 | 0) > 0) {
   $42 = $37 >>> 5;
   _memmove($33 | 0, $29 | 0, $42 << 2 | 0) | 0;
   $45 = $37 - ($42 << 5) | 0;
   $46 = $33 + ($42 << 2) | 0;
   $48 = $46;
   if (($45 | 0) > 0) {
    $51 = -1 >>> (32 - $45 | 0);
    HEAP32[$46 >> 2] = HEAP32[$46 >> 2] & ~$51 | HEAP32[$$cast + ($42 << 2) >> 2] & $51;
    $$sroa$7$1$i = $45;
    $117 = $48;
   } else {
    $$sroa$7$1$i = 0;
    $117 = $48;
   }
  } else {
   $$sroa$7$1$i = 0;
   $117 = $33;
  }
  $58 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$3 >> 2] = $58;
  $60 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = HEAP32[$19 >> 2];
  HEAP32[$19 >> 2] = $60;
  $62 = HEAP32[$7 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$20 >> 2];
  HEAP32[$20 >> 2] = $62;
  if ($58 | 0) __ZdlPv($58);
  $$sroa$056$0 = $117;
  $$sroa$7$0 = $$sroa$7$1$i;
 } else {
  $18 = (HEAP32[$0 >> 2] | 0) + ($5 >>> 5 << 2) | 0;
  HEAP32[$4 >> 2] = $1;
  $$sroa$056$0 = $18;
  $$sroa$7$0 = $5 & 31;
 }
 if (!$10) {
  STACKTOP = sp;
  return;
 }
 $67 = ($$sroa$7$0 | 0) == 0;
 $68 = $$sroa$056$0;
 if ($2) {
  if ($67) {
   $$0$i10$i = $10;
   $82 = $$sroa$056$0;
   $87 = $68;
  } else {
   $70 = 32 - $$sroa$7$0 | 0;
   $$sroa$speculated$i8$i = $70 >>> 0 > $10 >>> 0 ? $10 : $70;
   HEAP32[$68 >> 2] = HEAP32[$68 >> 2] | -1 >>> ($70 - $$sroa$speculated$i8$i | 0) & -1 << $$sroa$7$0;
   $79 = $68 + 4 | 0;
   $$0$i10$i = $10 - $$sroa$speculated$i8$i | 0;
   $82 = $79;
   $87 = $79;
  }
  $80 = $$0$i10$i >>> 5;
  _memset($82 | 0, -1, $80 << 2 | 0) | 0;
  $84 = $$0$i10$i - ($80 << 5) | 0;
  $86 = $87 + ($80 << 2) | 0;
  if (!$84) {
   STACKTOP = sp;
   return;
  }
  HEAP32[$86 >> 2] = HEAP32[$86 >> 2] | -1 >>> (32 - $84 | 0);
  STACKTOP = sp;
  return;
 } else {
  if ($67) {
   $$0$i$i = $10;
   $106 = $$sroa$056$0;
   $111 = $68;
  } else {
   $93 = 32 - $$sroa$7$0 | 0;
   $$sroa$speculated$i$i = $93 >>> 0 > $10 >>> 0 ? $10 : $93;
   HEAP32[$68 >> 2] = HEAP32[$68 >> 2] & ~(-1 >>> ($93 - $$sroa$speculated$i$i | 0) & -1 << $$sroa$7$0);
   $103 = $68 + 4 | 0;
   $$0$i$i = $10 - $$sroa$speculated$i$i | 0;
   $106 = $103;
   $111 = $103;
  }
  $104 = $$0$i$i >>> 5;
  _memset($106 | 0, 0, $104 << 2 | 0) | 0;
  $108 = $$0$i$i - ($104 << 5) | 0;
  $110 = $111 + ($104 << 2) | 0;
  if (!$108) {
   STACKTOP = sp;
   return;
  }
  HEAP32[$110 >> 2] = HEAP32[$110 >> 2] & ~(-1 >>> (32 - $108 | 0));
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i11 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i17 = 0, $$pre$i4$i$i1925 = 0, $$sink3 = 0, $20 = 0, $23 = 0, $35 = 0, $37 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $63 = 0, $66 = 0, $8 = 0, $80 = 0, $94 = 0, $95 = 0, label = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 do if (!$5) $94 = 1; else {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$8 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $94 = 1;
   break;
  } else {
   $94 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $20 = HEAP32[$2 >> 2] | 0;
 do if (!$20) label = 14; else {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$23 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 14;
   break;
  } else if ($94) {
   $$pre$i4$i$i1925 = $20;
   label = 16;
   break;
  } else {
   $$sink3 = 6;
   label = 38;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($94) {
  $$sink3 = 6;
  label = 38;
 } else {
  $$pre$i4$i$i1925 = 0;
  label = 16;
 }
 L22 : do if ((label | 0) == 16) {
  $35 = HEAP32[$1 >> 2] | 0;
  $37 = HEAP32[$35 + 12 >> 2] | 0;
  if (($37 | 0) == (HEAP32[$35 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] & 127]($35) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$37 >> 2] | 0) | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, $$0$i$i, 0) | 0) << 24 >> 24 == 37) {
   $52 = HEAP32[$1 >> 2] | 0;
   $53 = $52 + 12 | 0;
   $54 = HEAP32[$53 >> 2] | 0;
   if (($54 | 0) == (HEAP32[$52 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$52 >> 2] | 0) + 40 >> 2] & 127]($52) | 0; else {
    HEAP32[$53 >> 2] = $54 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$54 >> 2] | 0) | 0;
   }
   $63 = HEAP32[$1 >> 2] | 0;
   do if (!$63) $95 = 1; else {
    $66 = HEAP32[$63 + 12 >> 2] | 0;
    if (($66 | 0) == (HEAP32[$63 + 16 >> 2] | 0)) $$0$i$i$i$i11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] & 127]($63) | 0; else $$0$i$i$i$i11 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$66 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i11, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$1 >> 2] = 0;
     $95 = 1;
     break;
    } else {
     $95 = (HEAP32[$1 >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if ($$pre$i4$i$i1925 | 0) {
    $80 = HEAP32[$$pre$i4$i$i1925 + 12 >> 2] | 0;
    if (($80 | 0) == (HEAP32[$$pre$i4$i$i1925 + 16 >> 2] | 0)) $$0$i$i2$i$i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i1925 >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i1925) | 0; else $$0$i$i2$i$i17 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$80 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i17, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$2 >> 2] = 0;
     break;
    } else if ($95) break L22; else {
     $$sink3 = 2;
     label = 38;
     break L22;
    }
   } while (0);
   if ($95) {
    $$sink3 = 2;
    label = 38;
   }
  } else {
   $$sink3 = 4;
   label = 38;
  }
 } while (0);
 if ((label | 0) == 38) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | $$sink3;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i11 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i17 = 0, $$pre$i4$i$i1925 = 0, $$sink3 = 0, $20 = 0, $23 = 0, $35 = 0, $37 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $64 = 0, $67 = 0, $8 = 0, $81 = 0, $95 = 0, $96 = 0, label = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 do if (!$5) $95 = 1; else {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$8 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $95 = 1;
   break;
  } else {
   $95 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $20 = HEAP32[$2 >> 2] | 0;
 do if (!$20) label = 14; else {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$23 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 14;
   break;
  } else if ($95) {
   $$pre$i4$i$i1925 = $20;
   label = 16;
   break;
  } else {
   $$sink3 = 6;
   label = 38;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($95) {
  $$sink3 = 6;
  label = 38;
 } else {
  $$pre$i4$i$i1925 = 0;
  label = 16;
 }
 L22 : do if ((label | 0) == 16) {
  $35 = HEAP32[$1 >> 2] | 0;
  $37 = HEAP32[$35 + 12 >> 2] | 0;
  if (($37 | 0) == (HEAP32[$35 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] & 127]($35) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$37 >> 0] | 0) | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, $$0$i$i & 255, 0) | 0) << 24 >> 24 == 37) {
   $53 = HEAP32[$1 >> 2] | 0;
   $54 = $53 + 12 | 0;
   $55 = HEAP32[$54 >> 2] | 0;
   if (($55 | 0) == (HEAP32[$53 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$53 >> 2] | 0) + 40 >> 2] & 127]($53) | 0; else {
    HEAP32[$54 >> 2] = $55 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$55 >> 0] | 0) | 0;
   }
   $64 = HEAP32[$1 >> 2] | 0;
   do if (!$64) $96 = 1; else {
    $67 = HEAP32[$64 + 12 >> 2] | 0;
    if (($67 | 0) == (HEAP32[$64 + 16 >> 2] | 0)) $$0$i$i$i$i11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$64 >> 2] | 0) + 36 >> 2] & 127]($64) | 0; else $$0$i$i$i$i11 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$67 >> 0] | 0) | 0;
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i11, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
     HEAP32[$1 >> 2] = 0;
     $96 = 1;
     break;
    } else {
     $96 = (HEAP32[$1 >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if ($$pre$i4$i$i1925 | 0) {
    $81 = HEAP32[$$pre$i4$i$i1925 + 12 >> 2] | 0;
    if (($81 | 0) == (HEAP32[$$pre$i4$i$i1925 + 16 >> 2] | 0)) $$0$i$i2$i$i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i1925 >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i1925) | 0; else $$0$i$i2$i$i17 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i17, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
     HEAP32[$2 >> 2] = 0;
     break;
    } else if ($96) break L22; else {
     $$sink3 = 2;
     label = 38;
     break L22;
    }
   } while (0);
   if ($96) {
    $$sink3 = 2;
    label = 38;
   }
  } else {
   $$sink3 = 4;
   label = 38;
  }
 } while (0);
 if ((label | 0) == 38) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | $$sink3;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i13 = 0, $$pre$i4$i$i15 = 0, $100 = 0, $21 = 0, $24 = 0, $36 = 0, $38 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $67 = 0, $70 = 0, $84 = 0, $9 = 0, $98 = 0, $99 = 0, label = 0;
 $5 = $4 + 8 | 0;
 L1 : while (1) {
  $6 = HEAP32[$1 >> 2] | 0;
  do if (!$6) $98 = 1; else {
   $9 = HEAP32[$6 + 12 >> 2] | 0;
   if (($9 | 0) == (HEAP32[$6 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 36 >> 2] & 127]($6) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$9 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $98 = 1;
    break;
   } else {
    $98 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $21 = HEAP32[$2 >> 2] | 0;
  do if (!$21) label = 15; else {
   $24 = HEAP32[$21 + 12 >> 2] | 0;
   if (($24 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 127]($21) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$24 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 15;
    break;
   } else if ($98) {
    $99 = $21;
    break;
   } else {
    $$pre$i4$i$i15 = $21;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($98) {
    $$pre$i4$i$i15 = 0;
    break;
   } else $99 = 0;
  }
  $36 = HEAP32[$1 >> 2] | 0;
  $38 = HEAP32[$36 + 12 >> 2] | 0;
  if (($38 | 0) == (HEAP32[$36 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$36 >> 2] | 0) + 36 >> 2] & 127]($36) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$38 >> 0] | 0) | 0;
  if (($$0$i$i & 255) << 24 >> 24 <= -1) {
   $$pre$i4$i$i15 = $99;
   break;
  }
  if (!(HEAP16[(HEAP32[$5 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
   $$pre$i4$i$i15 = $99;
   break;
  }
  $56 = HEAP32[$1 >> 2] | 0;
  $57 = $56 + 12 | 0;
  $58 = HEAP32[$57 >> 2] | 0;
  if (($58 | 0) == (HEAP32[$56 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 40 >> 2] & 127]($56) | 0;
   continue;
  } else {
   HEAP32[$57 >> 2] = $58 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$58 >> 0] | 0) | 0;
   continue;
  }
 }
 $67 = HEAP32[$1 >> 2] | 0;
 do if (!$67) $100 = 1; else {
  $70 = HEAP32[$67 + 12 >> 2] | 0;
  if (($70 | 0) == (HEAP32[$67 + 16 >> 2] | 0)) $$0$i$i$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$67 >> 2] | 0) + 36 >> 2] & 127]($67) | 0; else $$0$i$i$i$i7 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$70 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i7, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $100 = 1;
   break;
  } else {
   $100 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i4$i$i15) label = 38; else {
  $84 = HEAP32[$$pre$i4$i$i15 + 12 >> 2] | 0;
  if (($84 | 0) == (HEAP32[$$pre$i4$i$i15 + 16 >> 2] | 0)) $$0$i$i2$i$i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i15 >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i15) | 0; else $$0$i$i2$i$i13 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$84 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i13, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 38;
   break;
  } else if ($100) break; else {
   label = 40;
   break;
  }
 } while (0);
 if ((label | 0) == 38) if ($100) label = 40;
 if ((label | 0) == 40) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 return;
}

function __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$8 = 0, $$sink = 0, $10 = 0, $102 = 0, $11 = 0, $123 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $33 = 0, $38 = 0, $39 = 0, $42 = 0, $48 = 0, $52 = 0, $55 = 0, $56 = 0, $57 = 0, $62 = 0, $70 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $85 = 0, $88 = 0, $94 = 0, $99 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 $10 = $1;
 if ($7 & 4 | 0) {
  $11 = HEAP32[$2 >> 2] | 0;
  if (($10 - $11 | 0) > 2) if ((HEAP8[$11 >> 0] | 0) == -17) if ((HEAP8[$11 + 1 >> 0] | 0) == -69) if ((HEAP8[$11 + 2 >> 0] | 0) == -65) HEAP32[$2 >> 2] = $11 + 3;
 }
 $24 = $4;
 L8 : while (1) {
  $25 = HEAP32[$2 >> 2] | 0;
  $26 = $25 >>> 0 < $1 >>> 0;
  if (!$26) {
   label = 40;
   break;
  }
  $27 = HEAP32[$5 >> 2] | 0;
  if ($27 >>> 0 >= $4 >>> 0) {
   label = 40;
   break;
  }
  $29 = HEAP8[$25 >> 0] | 0;
  $30 = $29 & 255;
  if ($30 >>> 0 > $6 >>> 0) {
   $$8 = 2;
   break;
  }
  $33 = $25 + 1 | 0;
  do if ($29 << 24 >> 24 > -1) {
   HEAP16[$27 >> 1] = $29 & 255;
   $$sink = $33;
  } else {
   if (($29 & 255) < 194) {
    $$8 = 2;
    break L8;
   }
   $38 = $10 - $25 | 0;
   $39 = $25 + 2 | 0;
   if (($29 & 255) < 224) {
    if (($38 | 0) < 2) {
     $$8 = 1;
     break L8;
    }
    $42 = HEAPU8[$33 >> 0] | 0;
    if (($42 & 192 | 0) != 128) {
     $$8 = 2;
     break L8;
    }
    $48 = $42 & 63 | $30 << 6 & 1984;
    if ($48 >>> 0 > $6 >>> 0) {
     $$8 = 2;
     break L8;
    }
    HEAP16[$27 >> 1] = $48;
    $$sink = $39;
    break;
   }
   $52 = $25 + 3 | 0;
   if (($29 & 255) < 240) {
    if (($38 | 0) < 3) {
     $$8 = 1;
     break L8;
    }
    $55 = HEAP8[$39 >> 0] | 0;
    $56 = HEAPU8[$33 >> 0] | 0;
    $57 = $56 & 224;
    switch ($29 << 24 >> 24) {
    case -32:
     {
      if (($57 | 0) != 160) {
       $$8 = 2;
       break L8;
      }
      break;
     }
    case -19:
     {
      if (($57 | 0) != 128) {
       $$8 = 2;
       break L8;
      }
      break;
     }
    default:
     if (($56 & 192 | 0) != 128) {
      $$8 = 2;
      break L8;
     }
    }
    $62 = $55 & 255;
    if (($62 & 192 | 0) != 128) {
     $$8 = 2;
     break L8;
    }
    $70 = $56 << 6 & 4032 | $30 << 12 | $62 & 63;
    if (($70 & 65535) >>> 0 > $6 >>> 0) {
     $$8 = 2;
     break L8;
    }
    HEAP16[$27 >> 1] = $70;
    $$sink = $52;
    break;
   }
   if (($29 & 255) >= 245) {
    $$8 = 2;
    break L8;
   }
   if (($38 | 0) < 4) {
    $$8 = 1;
    break L8;
   }
   $76 = HEAP8[$33 >> 0] | 0;
   $77 = HEAP8[$39 >> 0] | 0;
   $78 = HEAP8[$52 >> 0] | 0;
   $79 = $76 & 255;
   switch ($29 << 24 >> 24) {
   case -16:
    {
     if (($76 + 112 & 255) >= 48) {
      $$8 = 2;
      break L8;
     }
     break;
    }
   case -12:
    {
     if (($79 & 240 | 0) != 128) {
      $$8 = 2;
      break L8;
     }
     break;
    }
   default:
    if (($79 & 192 | 0) != 128) {
     $$8 = 2;
     break L8;
    }
   }
   $85 = $77 & 255;
   if (($85 & 192 | 0) != 128) {
    $$8 = 2;
    break L8;
   }
   $88 = $78 & 255;
   if (($88 & 192 | 0) != 128) {
    $$8 = 2;
    break L8;
   }
   if (($24 - $27 | 0) < 4) {
    $$8 = 1;
    break L8;
   }
   $94 = $30 & 7;
   $99 = $85 << 6;
   $102 = $88 & 63;
   if (($79 << 12 & 258048 | $94 << 18 | $99 & 4032 | $102) >>> 0 > $6 >>> 0) {
    $$8 = 2;
    break L8;
   }
   HEAP16[$27 >> 1] = $79 << 2 & 60 | $85 >>> 4 & 3 | (($79 >>> 4 & 3 | $94 << 2) << 6) + 16320 | 55296;
   $123 = $27 + 2 | 0;
   HEAP32[$5 >> 2] = $123;
   HEAP16[$123 >> 1] = $102 | $99 & 960 | 56320;
   $$sink = (HEAP32[$2 >> 2] | 0) + 4 | 0;
  } while (0);
  HEAP32[$2 >> 2] = $$sink;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2;
 }
 if ((label | 0) == 40) $$8 = $26 & 1;
 return $$8 | 0;
}

function __ZNK8optframe10Evaluation8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$019 = 0, $11 = 0, $17 = 0, $2 = 0, $22 = 0, $26 = 0, $3 = 0, $31 = 0, $37 = 0, $4 = 0, $42 = 0, $47 = 0, $5 = 0, $50 = 0, $51 = 0, $58 = 0, $6 = 0, $63 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 144 | 0;
 $3 = sp;
 $4 = $3 + 64 | 0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $3 + 12 | 0;
 HEAP32[$3 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$3 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($3 + 64 | 0, $6);
 HEAP32[$3 + 136 >> 2] = 0;
 HEAP32[$3 + 140 >> 2] = -1;
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $3 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$3 + 60 >> 2] = 24;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 $17 = $3 + 8 | 0;
 $22 = $17 + (HEAP32[(HEAP32[$17 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[$22 >> 2] = HEAP32[$22 >> 2] & -261 | 4;
 $26 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 17039, 28) | 0;
 $31 = $1 + 32 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($26, +HEAPF64[$1 + 24 >> 3] + +HEAPF64[$1 + 64 >> 3] * +HEAPF64[$31 >> 3]) | 0;
 $37 = +Math_abs(+(+HEAPF64[$31 >> 3])) <= .0001;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, $37 ? 17068 : 17070, $37 ? 1 : 16) | 0;
 $42 = (HEAP8[$1 + 56 >> 0] | 0) != 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, $42 ? 17087 : 17068, $42 ? 10 : 1) | 0;
 $47 = (HEAP8[$1 + 57 >> 0] | 0) != 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, $47 ? 17098 : 17068, $47 ? 11 : 1) | 0;
 $50 = $1 + 40 | 0;
 $51 = $1 + 44 | 0;
 if ((HEAP32[$51 >> 2] | 0) != (HEAP32[$50 >> 2] | 0)) {
  __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 17110, 20) | 0;
  if ((HEAP32[$51 >> 2] | 0) != (HEAP32[$50 >> 2] | 0)) {
   $$019 = 0;
   do {
    $58 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 15618, 1) | 0;
    $63 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($58, +HEAPF64[(HEAP32[$50 >> 2] | 0) + ($$019 << 4) >> 3]) | 0, 17131, 1) | 0;
    __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($63, +HEAPF64[(HEAP32[$50 >> 2] | 0) + ($$019 << 4) + 8 >> 3]) | 0, 17133, 2) | 0;
    $$019 = $$019 + 1 | 0;
   } while ($$019 >>> 0 < (HEAP32[$51 >> 2] | 0) - (HEAP32[$50 >> 2] | 0) >> 4 >>> 0);
  }
 }
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$17 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i13 = 0, $$pre$i4$i$i15 = 0, $20 = 0, $23 = 0, $35 = 0, $37 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $62 = 0, $65 = 0, $79 = 0, $8 = 0, $93 = 0, $94 = 0, $95 = 0, label = 0;
 L1 : while (1) {
  $5 = HEAP32[$1 >> 2] | 0;
  do if (!$5) $93 = 1; else {
   $8 = HEAP32[$5 + 12 >> 2] | 0;
   if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$8 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $93 = 1;
    break;
   } else {
    $93 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $20 = HEAP32[$2 >> 2] | 0;
  do if (!$20) label = 15; else {
   $23 = HEAP32[$20 + 12 >> 2] | 0;
   if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$23 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 15;
    break;
   } else if ($93) {
    $94 = $20;
    break;
   } else {
    $$pre$i4$i$i15 = $20;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($93) {
    $$pre$i4$i$i15 = 0;
    break;
   } else $94 = 0;
  }
  $35 = HEAP32[$1 >> 2] | 0;
  $37 = HEAP32[$35 + 12 >> 2] | 0;
  if (($37 | 0) == (HEAP32[$35 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] & 127]($35) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$37 >> 2] | 0) | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, $$0$i$i) | 0)) {
   $$pre$i4$i$i15 = $94;
   break;
  }
  $51 = HEAP32[$1 >> 2] | 0;
  $52 = $51 + 12 | 0;
  $53 = HEAP32[$52 >> 2] | 0;
  if (($53 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 40 >> 2] & 127]($51) | 0;
   continue;
  } else {
   HEAP32[$52 >> 2] = $53 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$53 >> 2] | 0) | 0;
   continue;
  }
 }
 $62 = HEAP32[$1 >> 2] | 0;
 do if (!$62) $95 = 1; else {
  $65 = HEAP32[$62 + 12 >> 2] | 0;
  if (($65 | 0) == (HEAP32[$62 + 16 >> 2] | 0)) $$0$i$i$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$62 >> 2] | 0) + 36 >> 2] & 127]($62) | 0; else $$0$i$i$i$i7 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$65 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i7, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $95 = 1;
   break;
  } else {
   $95 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i4$i$i15) label = 37; else {
  $79 = HEAP32[$$pre$i4$i$i15 + 12 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$$pre$i4$i$i15 + 16 >> 2] | 0)) $$0$i$i2$i$i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i15 >> 2] | 0) + 36 >> 2] & 127]($$pre$i4$i$i15) | 0; else $$0$i$i2$i$i13 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$79 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i13, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 37;
   break;
  } else if ($95) break; else {
   label = 39;
   break;
  }
 } while (0);
 if ((label | 0) == 37) if ($95) label = 39;
 if ((label | 0) == 39) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 return;
}

function __ZN3HFM19NSSeqHFMModifyRules10randomMoveERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$04584 = 0, $$04883 = 0, $$3 = 0, $$352 = 0, $$sink = 0, $$sink57 = 0, $$sink60 = 0.0, $$sink63 = 0, $$sink66 = 0, $$sink82$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $3 = 0, $36 = 0, $39 = 0, $4 = 0, $43 = 0, $44 = 0, $51 = 0, $54 = 0, $58 = 0, $59 = 0, $69 = 0, $73 = 0, $74 = 0, $79 = 0, $8 = 0, $81 = 0, $87 = 0.0, $88 = 0, $9 = 0, $93 = 0;
 $3 = $0 + 24 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 44 >> 2] & 63]($4, 3) | 0;
 $8 = $1 + 12 | 0;
 $9 = $1 + 16 | 0;
 $10 = $1 + 36 | 0;
 $11 = $1 + 40 | 0;
 $12 = $1 + 60 | 0;
 $13 = $1 + 64 | 0;
 $$04584 = -1;
 $$04883 = 1;
 while (1) {
  $14 = HEAP32[$3 >> 2] | 0;
  $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$14 >> 2] | 0) + 44 >> 2] & 63]($14, 3) | 0;
  switch ($18 | 0) {
  case 0:
   {
    $21 = (HEAP32[$9 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) | 0;
    if (!$21) {
     $$3 = $$04584;
     $$352 = -1;
    } else {
     $24 = HEAP32[$3 >> 2] | 0;
     $28 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$24 >> 2] | 0) + 44 >> 2] & 63]($24, ($21 | 0) / 12 | 0) | 0;
     $29 = HEAP32[$3 >> 2] | 0;
     $$3 = $28;
     $$352 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$29 >> 2] | 0) + 44 >> 2] & 63]($29, 6) | 0;
    }
    break;
   }
  case 1:
   {
    $36 = (HEAP32[$11 >> 2] | 0) - (HEAP32[$10 >> 2] | 0) | 0;
    if (!$36) {
     $$3 = $$04584;
     $$352 = -1;
    } else {
     $39 = HEAP32[$3 >> 2] | 0;
     $43 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$39 >> 2] | 0) + 44 >> 2] & 63]($39, ($36 | 0) / 12 | 0) | 0;
     $44 = HEAP32[$3 >> 2] | 0;
     $$3 = $43;
     $$352 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$44 >> 2] | 0) + 44 >> 2] & 63]($44, 6) | 0;
    }
    break;
   }
  case 2:
   {
    $51 = (HEAP32[$13 >> 2] | 0) - (HEAP32[$12 >> 2] | 0) | 0;
    if (!$51) {
     $$3 = $$04584;
     $$352 = -1;
    } else {
     $54 = HEAP32[$3 >> 2] | 0;
     $58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$54 >> 2] | 0) + 44 >> 2] & 63]($54, ($51 | 0) / 12 | 0) | 0;
     $59 = HEAP32[$3 >> 2] | 0;
     $$3 = $58;
     $$352 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$59 >> 2] | 0) + 44 >> 2] & 63]($59, 6) | 0;
    }
    break;
   }
  default:
   {
    $$3 = $$04584;
    $$352 = -1;
   }
  }
  $$04883 = $$04883 + 1 | 0;
  if (!(($$352 | 0) == -1 & ($$04883 | 0) < 1e3)) break; else $$04584 = $$3;
 }
 do if (($$04883 | 0) == 1e3) {
  $$sink = -1;
  $$sink57 = 1;
  $$sink60 = -1.0;
  $$sink63 = -1;
  $$sink66 = -1;
  $$sink82$in = __Znwj(48) | 0;
 } else {
  $69 = HEAP32[$3 >> 2] | 0;
  $73 = $0 + 28 | 0;
  $74 = $0 + 32 | 0;
  $79 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$69 >> 2] | 0) + 44 >> 2] & 63]($69, (HEAP32[$74 >> 2] | 0) - (HEAP32[$73 >> 2] | 0) >> 3) | 0;
  $81 = HEAP32[$73 >> 2] | 0;
  if ((HEAP32[$74 >> 2] | 0) - $81 >> 3 >>> 0 > $79 >>> 0) {
   $87 = +HEAPF64[$81 + ($79 << 3) >> 3];
   $88 = HEAP32[$3 >> 2] | 0;
   $93 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$88 >> 2] | 0) + 44 >> 2] & 63]($88, 2) | 0) != 0;
   $$sink = $18;
   $$sink57 = $93 & 1;
   $$sink60 = $87;
   $$sink63 = $$3;
   $$sink66 = $$352;
   $$sink82$in = __Znwj(48) | 0;
   break;
  } else __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($73);
 } while (0);
 HEAP8[$$sink82$in + 16 >> 0] = 0;
 HEAP32[$$sink82$in + 8 >> 2] = 2;
 HEAP8[$$sink82$in + 15 >> 0] = 0;
 HEAP8[$$sink82$in + 12 >> 0] = 1;
 HEAP8[$$sink82$in + 13 >> 0] = 1;
 HEAP8[$$sink82$in + 14 >> 0] = 0;
 HEAP32[$$sink82$in >> 2] = 5964;
 HEAP32[$$sink82$in + 20 >> 2] = $$sink66;
 HEAP32[$$sink82$in + 24 >> 2] = $$sink63;
 HEAPF64[$$sink82$in + 32 >> 3] = $$sink60;
 HEAP8[$$sink82$in + 40 >> 0] = $$sink57;
 HEAP32[$$sink82$in + 44 >> 2] = $$sink;
 return $$sink82$in | 0;
}

function __ZN8autocorr3ACFEPKdjR9acorrInfo($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$06392 = 0, $$06681 = 0, $$06681$us = 0, $$093 = 0.0, $$1$lcssa = 0.0, $$16486 = 0, $$187 = 0.0, $$2$lcssa = 0.0, $$26579 = 0, $$280 = 0.0, $15 = 0, $17 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0, $33 = 0.0, $35 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0, $4 = 0, $42 = 0, $46 = 0.0, $47 = 0, $5 = 0, $56 = 0.0, $57 = 0, $59 = 0, $6 = 0, $63 = 0, $65 = 0, $7 = 0, $72 = 0.0, $8 = 0, $80 = 0, $indvars$iv$in = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 $6 = HEAP32[$3 >> 2] | 0;
 $7 = $3 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($6 | 0) != ($8 | 0)) HEAP32[$7 >> 2] = $8 + (~(($8 + -8 - $6 | 0) >>> 3) << 3);
 HEAP32[$4 >> 2] = 0;
 $15 = $4 + 4 | 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $17 = ($2 | 0) == 0;
 if ($17) {
  $$1$lcssa = 0.0;
  $38 = +($2 >>> 0);
 } else {
  if ($2 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($4);
  $20 = $2 << 3;
  $21 = __Znwj($20) | 0;
  HEAP32[$4 >> 2] = $21;
  $22 = $21 + ($2 << 3) | 0;
  HEAP32[$4 + 8 >> 2] = $22;
  _memset($21 | 0, 0, $20 | 0) | 0;
  HEAP32[$15 >> 2] = $22;
  $$06392 = 0;
  $$093 = 0.0;
  do {
   $25 = +HEAPF64[$1 + ($$06392 << 3) >> 3];
   $$093 = $$093 + $25;
   HEAPF64[$21 + ($$06392 << 3) >> 3] = $25;
   $$06392 = $$06392 + 1 | 0;
  } while (($$06392 | 0) != ($2 | 0));
  $29 = +($2 >>> 0);
  $30 = $$093 / $29;
  if ($17) {
   $$1$lcssa = 0.0;
   $38 = $29;
  } else {
   $$16486 = 0;
   $$187 = 0.0;
   while (1) {
    $31 = $21 + ($$16486 << 3) | 0;
    $33 = +HEAPF64[$31 >> 3] - $30;
    HEAPF64[$31 >> 3] = $33;
    $35 = $$187 + $33 * $33;
    $$16486 = $$16486 + 1 | 0;
    if (($$16486 | 0) == ($2 | 0)) {
     $$1$lcssa = $35;
     $38 = $29;
     break;
    } else $$187 = $35;
   }
  }
 }
 $37 = $$1$lcssa / $38;
 HEAPF64[$5 >> 3] = 1.0;
 $39 = $0 + 8 | 0;
 L16 : do if (HEAP32[$39 >> 2] | 0) {
  $42 = $3 + 8 | 0;
  if ($37 == 0.0) {
   $$06681$us = 1;
   $46 = 1.0;
   while (1) {
    if (!($46 > +HEAPF64[$0 >> 3])) break L16;
    $47 = HEAP32[$7 >> 2] | 0;
    if (($47 | 0) == (HEAP32[$42 >> 2] | 0)) __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($3, $5); else {
     HEAPF64[$47 >> 3] = $46;
     HEAP32[$7 >> 2] = $47 + 8;
    }
    HEAPF64[$5 >> 3] = 0.0;
    $$06681$us = $$06681$us + 1 | 0;
    if ($$06681$us >>> 0 > (HEAP32[$39 >> 2] | 0) >>> 0) break L16; else $46 = 0.0;
   }
  } else {
   $$06681 = 1;
   $56 = 1.0;
   $indvars$iv$in = $2;
  }
  do {
   $indvars$iv$in = $indvars$iv$in + -1 | 0;
   if (!($56 > +HEAPF64[$0 >> 3])) break L16;
   $59 = HEAP32[$7 >> 2] | 0;
   if (($59 | 0) == (HEAP32[$42 >> 2] | 0)) __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($3, $5); else {
    HEAPF64[$59 >> 3] = $56;
    HEAP32[$7 >> 2] = $59 + 8;
   }
   $63 = $2 - $$06681 | 0;
   if (!$63) $$2$lcssa = 0.0; else {
    $65 = HEAP32[$4 >> 2] | 0;
    $$26579 = 0;
    $$280 = 0.0;
    while (1) {
     $72 = $$280 + +HEAPF64[$65 + ($$26579 << 3) >> 3] * +HEAPF64[$65 + ($$26579 + $$06681 << 3) >> 3];
     $$26579 = $$26579 + 1 | 0;
     if (($$26579 | 0) == ($indvars$iv$in | 0)) {
      $$2$lcssa = $72;
      break;
     } else $$280 = $72;
    }
   }
   $56 = $$2$lcssa / +($63 >>> 0) / $37;
   HEAPF64[$5 >> 3] = $56;
   $$06681 = $$06681 + 1 | 0;
  } while ($$06681 >>> 0 <= (HEAP32[$39 >> 2] | 0) >>> 0);
 } while (0);
 __ZN8autocorr10acorrSlopeER9acorrInfo(0, $3);
 $57 = HEAP32[$4 >> 2] | 0;
 if (!$57) {
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$15 >> 2] | 0;
 if (($80 | 0) != ($57 | 0)) HEAP32[$15 >> 2] = $80 + (~(($80 + -8 - $57 | 0) >>> 3) << 3);
 __ZdlPv($57);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $26 = 0, $37 = 0, $39 = 0, $40 = 0, $45 = 0, $48 = 0, $62 = 0, $7 = 0, $77 = 0, $8 = 0, $80 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 $$byval_copy = sp + 424 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 8 | 0;
 $10 = sp;
 $11 = sp + 428 | 0;
 $12 = sp + 4 | 0;
 HEAP32[$8 >> 2] = $7;
 $14 = $8 + 4 | 0;
 HEAP32[$14 >> 2] = 266;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 34568) | 0;
 HEAP8[$11 >> 0] = 0;
 $17 = HEAP32[$2 >> 2] | 0;
 HEAP32[$12 >> 2] = $17;
 $19 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 $21 = $17;
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($1, $$byval_copy, $3, $10, $19, $5, $11, $16, $8, $9, $7 + 400 | 0) | 0) {
  $23 = $6 + 8 + 3 | 0;
  if ((HEAP8[$23 >> 0] | 0) < 0) {
   $26 = HEAP32[$6 >> 2] | 0;
   HEAP32[$$byval_copy >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($26, $$byval_copy);
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP32[$$byval_copy >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6, $$byval_copy);
   HEAP8[$23 >> 0] = 0;
  }
  if (HEAP8[$11 >> 0] | 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 44 >> 2] & 63]($16, 45) | 0);
  $37 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 44 >> 2] & 63]($16, 48) | 0;
  $39 = HEAP32[$9 >> 2] | 0;
  $40 = $39 + -4 | 0;
  $$0 = HEAP32[$8 >> 2] | 0;
  while (1) {
   if ($$0 >>> 0 >= $40 >>> 0) break;
   if ((HEAP32[$$0 >> 2] | 0) != ($37 | 0)) break;
   $$0 = $$0 + 4 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_($6, $$0, $39) | 0;
 }
 $45 = HEAP32[$1 >> 2] | 0;
 do if (!$45) $80 = 1; else {
  $48 = HEAP32[$45 + 12 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $80 = 1;
   break;
  } else {
   $80 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$17) label = 25; else {
  $62 = HEAP32[$21 + 12 >> 2] | 0;
  if (($62 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 127]($21) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$62 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 25;
   break;
  } else if ($80) break; else {
   label = 27;
   break;
  }
 } while (0);
 if ((label | 0) == 25) if ($80) label = 27;
 if ((label | 0) == 27) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $77 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($77 | 0) FUNCTION_TABLE_vi[HEAP32[$14 >> 2] & 511]($77);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $25 = 0, $36 = 0, $38 = 0, $39 = 0, $44 = 0, $47 = 0, $61 = 0, $7 = 0, $76 = 0, $79 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy = sp + 24 | 0;
 $7 = sp + 32 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 8 | 0;
 $10 = sp;
 $11 = sp + 28 | 0;
 $12 = sp + 4 | 0;
 HEAP32[$8 >> 2] = $7;
 $14 = $8 + 4 | 0;
 HEAP32[$14 >> 2] = 266;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 34536) | 0;
 HEAP8[$11 >> 0] = 0;
 $17 = HEAP32[$2 >> 2] | 0;
 HEAP32[$12 >> 2] = $17;
 $19 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 $21 = $17;
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($1, $$byval_copy, $3, $10, $19, $5, $11, $16, $8, $9, $7 + 100 | 0) | 0) {
  $22 = $6 + 11 | 0;
  if ((HEAP8[$22 >> 0] | 0) < 0) {
   $25 = HEAP32[$6 >> 2] | 0;
   HEAP8[$$byval_copy >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($25, $$byval_copy);
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP8[$$byval_copy >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $$byval_copy);
   HEAP8[$22 >> 0] = 0;
  }
  if (HEAP8[$11 >> 0] | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 45) | 0);
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 48) | 0;
  $38 = HEAP32[$9 >> 2] | 0;
  $39 = $38 + -1 | 0;
  $$0 = HEAP32[$8 >> 2] | 0;
  while (1) {
   if ($$0 >>> 0 >= $39 >>> 0) break;
   if ((HEAP8[$$0 >> 0] | 0) != $36 << 24 >> 24) break;
   $$0 = $$0 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_($6, $$0, $38) | 0;
 }
 $44 = HEAP32[$1 >> 2] | 0;
 do if (!$44) $79 = 1; else {
  $47 = HEAP32[$44 + 12 >> 2] | 0;
  if (($47 | 0) == (HEAP32[$44 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$44 >> 2] | 0) + 36 >> 2] & 127]($44) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$47 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $79 = 1;
   break;
  } else {
   $79 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$17) label = 25; else {
  $61 = HEAP32[$21 + 12 >> 2] | 0;
  if (($61 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 127]($21) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$61 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 25;
   break;
  } else if ($79) break; else {
   label = 27;
   break;
  }
 } while (0);
 if ((label | 0) == 25) if ($79) label = 27;
 if ((label | 0) == 27) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $76 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($76 | 0) FUNCTION_TABLE_vi[HEAP32[$14 >> 2] & 511]($76);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$4 = 0, $10 = 0, $106 = 0, $111 = 0, $114 = 0, $119 = 0, $121 = 0, $124 = 0, $15 = 0, $17 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0, $26 = 0, $33 = 0, $35 = 0, $36 = 0, $44 = 0, $49 = 0, $53 = 0, $54 = 0, $59 = 0, $61 = 0, $67 = 0, $69 = 0, $75 = 0, $84 = 0, $88 = 0, $97 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 $10 = $4;
 if (!($7 & 2)) label = 4; else if (($10 - $3 | 0) < 3) $$4 = 1; else {
  HEAP32[$5 >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = -17;
  $15 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $15 + 1;
  HEAP8[$15 >> 0] = -69;
  $17 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $17 + 1;
  HEAP8[$17 >> 0] = -65;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $19 = $1;
  $20 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if ($20 >>> 0 >= $1 >>> 0) {
    $$4 = 0;
    break L4;
   }
   $22 = HEAP16[$20 >> 1] | 0;
   $23 = $22 & 65535;
   if ($23 >>> 0 > $6 >>> 0) {
    $$4 = 2;
    break L4;
   }
   do if (($22 & 65535) < 128) {
    $26 = HEAP32[$5 >> 2] | 0;
    if (($10 - $26 | 0) < 1) {
     $$4 = 1;
     break L4;
    }
    HEAP32[$5 >> 2] = $26 + 1;
    HEAP8[$26 >> 0] = $22;
   } else {
    $33 = $23 & 63;
    $35 = ($33 | 128) & 255;
    if (($22 & 65535) < 2048) {
     $36 = HEAP32[$5 >> 2] | 0;
     if (($10 - $36 | 0) < 2) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $36 + 1;
     HEAP8[$36 >> 0] = $23 >>> 6 | 192;
     $44 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $44 + 1;
     HEAP8[$44 >> 0] = $35;
     break;
    }
    $49 = ($23 >>> 12 | 224) & 255;
    $53 = ($23 >>> 6 & 63 | 128) & 255;
    if (($22 & 65535) < 55296) {
     $54 = HEAP32[$5 >> 2] | 0;
     if (($10 - $54 | 0) < 3) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $54 + 1;
     HEAP8[$54 >> 0] = $49;
     $59 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $59 + 1;
     HEAP8[$59 >> 0] = $53;
     $61 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $61 + 1;
     HEAP8[$61 >> 0] = $35;
     break;
    }
    if (($22 & 65535) >= 56320) {
     if (($22 & 65535) < 57344) {
      $$4 = 2;
      break L4;
     }
     $114 = HEAP32[$5 >> 2] | 0;
     if (($10 - $114 | 0) < 3) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $114 + 1;
     HEAP8[$114 >> 0] = $49;
     $119 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $119 + 1;
     HEAP8[$119 >> 0] = $53;
     $121 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $121 + 1;
     HEAP8[$121 >> 0] = $35;
     break;
    }
    if (($19 - $20 | 0) < 4) {
     $$4 = 1;
     break L4;
    }
    $67 = $20 + 2 | 0;
    $69 = HEAPU16[$67 >> 1] | 0;
    if (($69 & 64512 | 0) != 56320) {
     $$4 = 2;
     break L4;
    }
    if (($10 - (HEAP32[$5 >> 2] | 0) | 0) < 4) {
     $$4 = 1;
     break L4;
    }
    $75 = $23 & 960;
    if ((($75 << 10) + 65536 | $33 << 10 | $69 & 1023) >>> 0 > $6 >>> 0) {
     $$4 = 2;
     break L4;
    }
    HEAP32[$2 >> 2] = $67;
    $84 = ($75 >>> 6) + 1 | 0;
    $88 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $88 + 1;
    HEAP8[$88 >> 0] = $84 >>> 2 | 240;
    $97 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $97 + 1;
    HEAP8[$97 >> 0] = $23 >>> 2 & 15 | $84 << 4 & 48 | 128;
    $106 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $106 + 1;
    HEAP8[$106 >> 0] = $23 << 4 & 48 | $69 >>> 6 & 15 | 128;
    $111 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $111 + 1;
    HEAP8[$111 >> 0] = $69 & 63 | 128;
   } while (0);
   $124 = (HEAP32[$2 >> 2] | 0) + 2 | 0;
   HEAP32[$2 >> 2] = $124;
   $20 = $124;
  }
 } while (0);
 return $$4 | 0;
}

function __ZNSt3__26vectorIN8optframe10EvaluationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$$i = 0, $102 = 0, $103 = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $29 = 0, $4 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $60 = 0, $64 = 0, $7 = 0, $9 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $97 = 0, $99 = 0, $97$looptemp = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 72 | 0;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 59652323) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 72 | 0;
 $14 = $12 << 1;
 $$sroa$speculated$$i = $12 >>> 0 < 29826161 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 59652323;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 59652323) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i * 72 | 0) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 * 72 | 0) | 0;
 $23 = $21;
 $25 = $22 + ($$sroa$speculated$$i * 72 | 0) | 0;
 $29 = $22 + ($6 * 72 | 0) + 12 | 0;
 HEAP8[$29 + 4 >> 0] = 0;
 HEAP32[$22 + ($6 * 72 | 0) + 8 >> 2] = 2;
 HEAP8[$22 + ($6 * 72 | 0) + 15 >> 0] = 0;
 HEAP8[$29 >> 0] = 1;
 HEAP8[$22 + ($6 * 72 | 0) + 13 >> 0] = 1;
 HEAP8[$22 + ($6 * 72 | 0) + 14 >> 0] = 0;
 HEAP32[$21 >> 2] = 4920;
 HEAPF64[$22 + ($6 * 72 | 0) + 24 >> 3] = +HEAPF64[$1 + 24 >> 3];
 HEAPF64[$22 + ($6 * 72 | 0) + 32 >> 3] = +HEAPF64[$1 + 32 >> 3];
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($22 + ($6 * 72 | 0) + 40 | 0, $1 + 40 | 0);
 HEAP32[$22 + ($6 * 72 | 0) + 52 >> 2] = HEAP32[$1 + 52 >> 2];
 HEAP8[$22 + ($6 * 72 | 0) + 56 >> 0] = HEAP8[$1 + 56 >> 0] | 0;
 HEAP8[$22 + ($6 * 72 | 0) + 57 >> 0] = HEAP8[$1 + 57 >> 0] | 0;
 HEAPF64[$22 + ($6 * 72 | 0) + 64 >> 3] = +HEAPF64[$1 + 64 >> 3];
 $53 = $21 + 72 | 0;
 $54 = HEAP32[$0 >> 2] | 0;
 $55 = HEAP32[$2 >> 2] | 0;
 if (($55 | 0) == ($54 | 0)) {
  $91 = $23;
  $92 = $54;
  $94 = $54;
 } else {
  $$06$i$i = $55;
  $$sroa$7$0 = $23;
  $60 = $21;
  do {
   $64 = $60 + -60 | 0;
   HEAP8[$64 + 4 >> 0] = 0;
   HEAP32[$60 + -64 >> 2] = 2;
   HEAP8[$60 + -57 >> 0] = 0;
   HEAP8[$64 >> 0] = 1;
   HEAP8[$60 + -59 >> 0] = 1;
   HEAP8[$60 + -58 >> 0] = 0;
   HEAP32[$60 + -72 >> 2] = 4920;
   HEAPF64[$60 + -48 >> 3] = +HEAPF64[$$06$i$i + -48 >> 3];
   HEAPF64[$60 + -40 >> 3] = +HEAPF64[$$06$i$i + -40 >> 3];
   __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($60 + -32 | 0, $$06$i$i + -32 | 0);
   HEAP32[$60 + -20 >> 2] = HEAP32[$$06$i$i + -20 >> 2];
   HEAP8[$60 + -16 >> 0] = HEAP8[$$06$i$i + -16 >> 0] | 0;
   HEAP8[$60 + -15 >> 0] = HEAP8[$$06$i$i + -15 >> 0] | 0;
   HEAPF64[$60 + -8 >> 3] = +HEAPF64[$$06$i$i + -8 >> 3];
   $$06$i$i = $$06$i$i + -72 | 0;
   $60 = $$sroa$7$0 + -72 | 0;
   $$sroa$7$0 = $60;
  } while (($$06$i$i | 0) != ($54 | 0));
  $91 = $$sroa$7$0;
  $92 = HEAP32[$0 >> 2] | 0;
  $94 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $91;
 HEAP32[$2 >> 2] = $53;
 HEAP32[$9 >> 2] = $25;
 $93 = $92;
 if (($94 | 0) != ($93 | 0)) {
  $97 = $94;
  do {
   $97$looptemp = $97;
   $97 = $97 + -72 | 0;
   HEAP32[$97 >> 2] = 4920;
   $99 = HEAP32[$97$looptemp + -32 >> 2] | 0;
   if ($99 | 0) {
    $102 = $97$looptemp + -28 | 0;
    $103 = HEAP32[$102 >> 2] | 0;
    if (($103 | 0) != ($99 | 0)) HEAP32[$102 >> 2] = $103 + (~(($103 + -16 - $99 | 0) >>> 4) << 4);
    __ZdlPv($99);
   }
  } while (($97 | 0) != ($93 | 0));
 }
 if (!$92) return;
 __ZdlPv($92);
 return;
}

function __ZN9scannerpp4FileC2ENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $30 = 0, $34 = 0, $39 = 0, $4 = 0, $43 = 0, $46 = 0, $5 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $6 = 0, $60 = 0, $63 = 0, $64 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $2 = sp + 16 | 0;
 $3 = sp;
 HEAP32[$0 >> 2] = 3212;
 $4 = $0 + 8 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($4, $1) | 0;
 $5 = $2 + 112 | 0;
 $6 = $2 + 8 | 0;
 HEAP32[$6 >> 2] = 3252;
 $7 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 172;
 HEAP32[$5 >> 2] = 192;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 112 | 0, $7);
 HEAP32[$2 + 184 >> 2] = 0;
 HEAP32[$2 + 188 >> 2] = -1;
 HEAP32[$2 >> 2] = 3232;
 HEAP32[$5 >> 2] = 3272;
 HEAP32[$6 >> 2] = 3252;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEEC2Ev($7);
 $12 = $4 + 11 | 0;
 if ((HEAP8[$12 >> 0] | 0) < 0) $19 = HEAP32[$4 >> 2] | 0; else $19 = $4;
 $16 = $2 + 76 | 0;
 if (!(HEAP32[$16 >> 2] | 0)) {
  $20 = _fopen($19, 15284) | 0;
  HEAP32[$16 >> 2] = $20;
  if (!$20) label = 6; else {
   HEAP32[$2 + 100 >> 2] = 24;
   __ZNSt3__28ios_base5clearEj($2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0, 0);
   $43 = $2;
  }
 } else label = 6;
 if ((label | 0) == 6) {
  $30 = $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj($30, HEAP32[$30 + 16 >> 2] | 4);
  $43 = $2;
 }
 $34 = HEAP32[$16 >> 2] | 0;
 if (!$34) {
  $50 = ___cxa_allocate_exception(12) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $4);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($50, $3);
  ___cxa_throw($50 | 0, 80, 252);
 }
 $39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 24 >> 2] & 127]($7) | 0;
 if (!(_fclose($34) | 0)) {
  HEAP32[$16 >> 2] = 0;
  if ($39 | 0) label = 10;
 } else label = 10;
 if ((label | 0) == 10) {
  $46 = $2 + (HEAP32[(HEAP32[$43 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj($46, HEAP32[$46 + 16 >> 2] | 4);
 }
 $51 = __Znwj(188) | 0;
 if ((HEAP8[$12 >> 0] | 0) < 0) $63 = HEAP32[$4 >> 2] | 0; else $63 = $4;
 $55 = $51 + 108 | 0;
 $56 = $51 + 8 | 0;
 HEAP32[$51 >> 2] = 284;
 HEAP32[$55 >> 2] = 304;
 HEAP32[$51 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($55, $56);
 HEAP32[$51 + 180 >> 2] = 0;
 HEAP32[$51 + 184 >> 2] = -1;
 HEAP32[$51 >> 2] = 3396;
 HEAP32[$55 >> 2] = 3416;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEEC2Ev($56);
 $60 = $51 + 72 | 0;
 if (!(HEAP32[$60 >> 2] | 0)) {
  $64 = _fopen($63, 15282) | 0;
  HEAP32[$60 >> 2] = $64;
  if ($64 | 0) {
   HEAP32[$51 + 96 >> 2] = 8;
   $74 = $0 + 4 | 0;
   HEAP32[$74 >> 2] = $51;
   HEAP32[$2 >> 2] = 3232;
   HEAP32[$5 >> 2] = 3272;
   $75 = $2 + 8 | 0;
   HEAP32[$75 >> 2] = 3252;
   __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($7);
   __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3284);
   __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
   STACKTOP = sp;
   return;
  }
 }
 $70 = $51 + (HEAP32[(HEAP32[$51 >> 2] | 0) + -12 >> 2] | 0) | 0;
 __ZNSt3__28ios_base5clearEj($70, HEAP32[$70 + 16 >> 2] | 4);
 $74 = $0 + 4 | 0;
 HEAP32[$74 >> 2] = $51;
 HEAP32[$2 >> 2] = 3232;
 HEAP32[$5 >> 2] = 3272;
 $75 = $2 + 8 | 0;
 HEAP32[$75 >> 2] = 3252;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($7);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3284);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$sroa$7$0 = 0, $$sroa$speculated$$i = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $2 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $38 = 0, $4 = 0, $41 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $59 = 0, $6 = 0, $61 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, sp = 0, $$06$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 24 | 0;
 $$byval_copy = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$0 >> 2] | 0;
 $8 = ($5 - $6 | 0) / 12 | 0;
 $9 = $8 + 1 | 0;
 $11 = $6;
 $12 = $5;
 if ($9 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $13 = $0 + 8 | 0;
 $16 = ((HEAP32[$13 >> 2] | 0) - $6 | 0) / 12 | 0;
 $18 = $16 << 1;
 $$sroa$speculated$$i = $16 >>> 0 < 178956970 ? ($18 >>> 0 < $9 >>> 0 ? $9 : $18) : 357913941;
 do if (!$$sroa$speculated$$i) $26 = 0; else if ($$sroa$speculated$$i >>> 0 > 357913941) {
  $22 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($22, 15810);
  HEAP32[$22 >> 2] = 14216;
  ___cxa_throw($22 | 0, 3104, 246);
 } else {
  $26 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  break;
 } while (0);
 $25 = $26 + ($8 * 12 | 0) | 0;
 $27 = $25;
 $29 = $26 + ($$sroa$speculated$$i * 12 | 0) | 0;
 HEAP32[$25 >> 2] = 0;
 $30 = $26 + ($8 * 12 | 0) + 4 | 0;
 HEAP32[$30 >> 2] = 0;
 $31 = $26 + ($8 * 12 | 0) + 8 | 0;
 HEAP32[$31 >> 2] = 0;
 $33 = HEAP32[$1 + 4 >> 2] | 0;
 do if (!$33) {
  $50 = $12;
  $52 = $11;
 } else if (($33 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($25); else {
  $38 = (($33 + -1 | 0) >>> 5) + 1 | 0;
  HEAP32[$25 >> 2] = __Znwj($38 << 2) | 0;
  HEAP32[$30 >> 2] = 0;
  HEAP32[$31 >> 2] = $38;
  $41 = HEAP32[$1 >> 2] | 0;
  HEAP32[$2 >> 2] = $41;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$3 >> 2] = $41 + ($33 >>> 5 << 2);
  HEAP32[$3 + 4 >> 2] = $33 & 31;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb1ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($25, $$byval_copy, $$byval_copy1);
  $50 = HEAP32[$4 >> 2] | 0;
  $52 = HEAP32[$0 >> 2] | 0;
  break;
 } while (0);
 $49 = $25 + 12 | 0;
 if (($50 | 0) == ($52 | 0)) {
  $68 = $27;
  $69 = $52;
  $71 = $50;
 } else {
  $$06$i$i = $50;
  $$sroa$7$0 = $27;
  $55 = $25;
  do {
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$55 + -12 >> 2] = HEAP32[$$06$i$i >> 2];
   $59 = $$06$i$i$looptemp + -8 | 0;
   HEAP32[$55 + -8 >> 2] = HEAP32[$59 >> 2];
   $61 = $$06$i$i$looptemp + -4 | 0;
   HEAP32[$55 + -4 >> 2] = HEAP32[$61 >> 2];
   HEAP32[$$06$i$i >> 2] = 0;
   HEAP32[$59 >> 2] = 0;
   HEAP32[$61 >> 2] = 0;
   $55 = $$sroa$7$0 + -12 | 0;
   $$sroa$7$0 = $55;
  } while (($$06$i$i | 0) != ($52 | 0));
  $68 = $$sroa$7$0;
  $69 = HEAP32[$0 >> 2] | 0;
  $71 = HEAP32[$4 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $68;
 HEAP32[$4 >> 2] = $49;
 HEAP32[$13 >> 2] = $29;
 $70 = $69;
 if (($71 | 0) != ($70 | 0)) {
  $74 = $71;
  do {
   $74 = $74 + -12 | 0;
   $75 = HEAP32[$74 >> 2] | 0;
   if ($75 | 0) __ZdlPv($75);
  } while (($74 | 0) != ($70 | 0));
 }
 if (!$69) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($69);
 STACKTOP = sp;
 return;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE4syncEv($0) {
 $0 = $0 | 0;
 var $$129$off0 = 0, $$131 = 0, $$4 = 0, $1 = 0, $10 = 0, $109 = 0, $114 = 0, $115 = 0, $120 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $33 = 0, $35 = 0, $37 = 0, $47 = 0, $5 = 0, $52 = 0, $53 = 0, $6 = 0, $68 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $84 = 0, $88 = 0, $89 = 0, $9 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 64 | 0;
 if (!(HEAP32[$2 >> 2] | 0)) {
  $$4 = 0;
  STACKTOP = sp;
  return $$4 | 0;
 }
 $5 = $0 + 68 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) {
  $8 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($8);
  ___cxa_throw($8 | 0, 3120, 249);
 }
 $9 = $0 + 92 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 do if (!($10 & 16)) {
  if ($10 & 8 | 0) {
   $47 = $0 + 80 | 0;
   $52 = HEAP32[$47 + 4 >> 2] | 0;
   $53 = $1;
   HEAP32[$53 >> 2] = HEAP32[$47 >> 2];
   HEAP32[$53 + 4 >> 2] = $52;
   do if (!(HEAP8[$0 + 98 >> 0] | 0)) {
    $68 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 24 >> 2] & 127]($6) | 0;
    $71 = $0 + 36 | 0;
    $72 = HEAP32[$71 >> 2] | 0;
    $73 = (HEAP32[$0 + 40 >> 2] | 0) - $72 | 0;
    if (($68 | 0) > 0) {
     $$129$off0 = 0;
     $$131 = (Math_imul((HEAP32[$0 + 16 >> 2] | 0) - (HEAP32[$0 + 12 >> 2] | 0) | 0, $68) | 0) + $73 | 0;
     break;
    }
    $84 = HEAP32[$0 + 12 >> 2] | 0;
    if (($84 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) {
     $$129$off0 = 0;
     $$131 = $73;
    } else {
     $88 = HEAP32[$5 >> 2] | 0;
     $89 = $0 + 32 | 0;
     $98 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$88 >> 2] | 0) + 32 >> 2] & 31]($88, $1, HEAP32[$89 >> 2] | 0, $72, $84 - (HEAP32[$0 + 8 >> 2] | 0) | 0) | 0;
     $$129$off0 = 1;
     $$131 = $73 - $98 + (HEAP32[$71 >> 2] | 0) - (HEAP32[$89 >> 2] | 0) | 0;
    }
   } else {
    $$129$off0 = 0;
    $$131 = (HEAP32[$0 + 16 >> 2] | 0) - (HEAP32[$0 + 12 >> 2] | 0) | 0;
   } while (0);
   if (___fseeko(HEAP32[$2 >> 2] | 0, 0 - $$131 | 0, 1) | 0) {
    $$4 = -1;
    STACKTOP = sp;
    return $$4 | 0;
   }
   if ($$129$off0) {
    $109 = $1;
    $114 = HEAP32[$109 + 4 >> 2] | 0;
    $115 = $0 + 72 | 0;
    HEAP32[$115 >> 2] = HEAP32[$109 >> 2];
    HEAP32[$115 + 4 >> 2] = $114;
   }
   $120 = HEAP32[$0 + 32 >> 2] | 0;
   HEAP32[$0 + 40 >> 2] = $120;
   HEAP32[$0 + 36 >> 2] = $120;
   HEAP32[$0 + 8 >> 2] = 0;
   HEAP32[$0 + 12 >> 2] = 0;
   HEAP32[$0 + 16 >> 2] = 0;
   HEAP32[$9 >> 2] = 0;
  }
 } else {
  if ((HEAP32[$0 + 24 >> 2] | 0) != (HEAP32[$0 + 20 >> 2] | 0)) if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 63]($0, -1) | 0) == -1) {
   $$4 = -1;
   STACKTOP = sp;
   return $$4 | 0;
  }
  $23 = $0 + 72 | 0;
  $24 = $0 + 32 | 0;
  $25 = $0 + 52 | 0;
  L30 : while (1) {
   $26 = HEAP32[$5 >> 2] | 0;
   $27 = HEAP32[$24 >> 2] | 0;
   $33 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 31]($26, $23, $27, $27 + (HEAP32[$25 >> 2] | 0) | 0, $1) | 0;
   $35 = HEAP32[$24 >> 2] | 0;
   $37 = (HEAP32[$1 >> 2] | 0) - $35 | 0;
   if ((_fwrite($35, 1, $37, HEAP32[$2 >> 2] | 0) | 0) != ($37 | 0)) {
    $$4 = -1;
    label = 24;
    break;
   }
   switch ($33 | 0) {
   case 1:
    break;
   case 2:
    {
     $$4 = -1;
     label = 24;
     break L30;
     break;
    }
   default:
    {
     label = 10;
     break L30;
    }
   }
  }
  if ((label | 0) == 10) {
   if (!(_fflush(HEAP32[$2 >> 2] | 0) | 0)) break; else $$4 = -1;
   STACKTOP = sp;
   return $$4 | 0;
  } else if ((label | 0) == 24) {
   STACKTOP = sp;
   return $$4 | 0;
  }
 } while (0);
 $$4 = 0;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$069 = 0, $$070 = 0, $$070$lcssa = 0, $$077 = 0, $$079 = 0, $$171 = 0, $$173 = 0, $$178 = 0, $$2 = 0, $$2$lcssa = 0, $$375$ph = 0, $$476 = 0, $$5$ph85 = 0, $14 = 0, $15 = 0, $18 = 0, $23 = 0, $24 = 0, $35 = 0, $36 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $48 = 0, $51 = 0, $55 = 0, $56 = 0, $64 = 0, $66 = 0, $67 = 0, $74 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp;
 $9 = sp + 8 | 0;
 $$070 = $2;
 while (1) {
  if (($$070 | 0) == ($3 | 0)) {
   $$070$lcssa = $3;
   break;
  }
  if (!(HEAP32[$$070 >> 2] | 0)) {
   $$070$lcssa = $$070;
   break;
  }
  $$070 = $$070 + 4 | 0;
 }
 HEAP32[$7 >> 2] = $5;
 HEAP32[$4 >> 2] = $2;
 $14 = $6;
 $15 = $0 + 8 | 0;
 $$077 = $2;
 $$079 = $5;
 $$171 = $$070$lcssa;
 L6 : while (1) {
  if (($$079 | 0) == ($6 | 0) | ($$077 | 0) == ($3 | 0)) {
   $74 = $$077;
   label = 35;
   break;
  }
  $18 = $1;
  $23 = HEAP32[$18 + 4 >> 2] | 0;
  $24 = $8;
  HEAP32[$24 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$24 + 4 >> 2] = $23;
  $35 = ___uselocale(HEAP32[$15 >> 2] | 0) | 0;
  $36 = _wcsnrtombs($$079, $4, $$171 - $$077 >> 2, $14 - $$079 | 0, $1) | 0;
  if ($35 | 0) ___uselocale($35) | 0;
  switch ($36 | 0) {
  case -1:
   {
    label = 10;
    break L6;
    break;
   }
  case 0:
   {
    $$375$ph = 1;
    label = 32;
    break L6;
    break;
   }
  default:
   {}
  }
  $51 = (HEAP32[$7 >> 2] | 0) + $36 | 0;
  HEAP32[$7 >> 2] = $51;
  if (($51 | 0) == ($6 | 0)) {
   label = 33;
   break;
  }
  if (($$171 | 0) == ($3 | 0)) {
   $$5$ph85 = $3;
   $76 = $51;
   $77 = HEAP32[$4 >> 2] | 0;
  } else {
   $55 = ___uselocale(HEAP32[$15 >> 2] | 0) | 0;
   $56 = _wcrtomb($9, 0, $1) | 0;
   if ($55 | 0) ___uselocale($55) | 0;
   if (($56 | 0) == -1) {
    $$173 = 2;
    label = 31;
    break;
   }
   if ($56 >>> 0 > ($14 - (HEAP32[$7 >> 2] | 0) | 0) >>> 0) {
    $$173 = 1;
    label = 31;
    break;
   } else {
    $$0 = $9;
    $$069 = $56;
   }
   while (1) {
    if (!$$069) break;
    $66 = HEAP8[$$0 >> 0] | 0;
    $67 = HEAP32[$7 >> 2] | 0;
    HEAP32[$7 >> 2] = $67 + 1;
    HEAP8[$67 >> 0] = $66;
    $$0 = $$0 + 1 | 0;
    $$069 = $$069 + -1 | 0;
   }
   $64 = (HEAP32[$4 >> 2] | 0) + 4 | 0;
   HEAP32[$4 >> 2] = $64;
   $$2 = $64;
   while (1) {
    if (($$2 | 0) == ($3 | 0)) {
     $$2$lcssa = $3;
     break;
    }
    if (!(HEAP32[$$2 >> 2] | 0)) {
     $$2$lcssa = $$2;
     break;
    }
    $$2 = $$2 + 4 | 0;
   }
   $$5$ph85 = $$2$lcssa;
   $76 = HEAP32[$7 >> 2] | 0;
   $77 = $64;
  }
  $$077 = $77;
  $$079 = $76;
  $$171 = $$5$ph85;
 }
 if ((label | 0) == 10) {
  HEAP32[$7 >> 2] = $$079;
  $$178 = $$077;
  $43 = $$079;
  while (1) {
   if (($$178 | 0) == (HEAP32[$4 >> 2] | 0)) break;
   $40 = HEAP32[$$178 >> 2] | 0;
   $42 = ___uselocale(HEAP32[$15 >> 2] | 0) | 0;
   $44 = _wcrtomb($43, $40, $8) | 0;
   if ($42 | 0) ___uselocale($42) | 0;
   if (($44 | 0) == -1) break;
   $48 = (HEAP32[$7 >> 2] | 0) + $44 | 0;
   HEAP32[$7 >> 2] = $48;
   $$178 = $$178 + 4 | 0;
   $43 = $48;
  }
  HEAP32[$4 >> 2] = $$178;
  $$375$ph = 2;
  label = 32;
 } else if ((label | 0) == 31) {
  $$375$ph = $$173;
  label = 32;
 } else if ((label | 0) == 33) {
  $74 = HEAP32[$4 >> 2] | 0;
  label = 35;
 }
 if ((label | 0) == 32) $$476 = $$375$ph; else if ((label | 0) == 35) $$476 = ($74 | 0) != ($3 | 0) & 1;
 STACKTOP = sp;
 return $$476 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$070 = 0, $$070$lcssa = 0, $$074 = 0, $$077 = 0, $$1 = 0, $$172$ph = 0, $$175 = 0, $$2 = 0, $$2$lcssa = 0, $$273 = 0, $$4$ph = 0, $$pre = 0, $$sink = 0, $13 = 0, $14 = 0, $17 = 0, $22 = 0, $23 = 0, $27 = 0, $34 = 0, $35 = 0, $43 = 0, $44 = 0, $51 = 0, $55 = 0, $56 = 0, $62 = 0, $67 = 0, $69 = 0, $70 = 0, $8 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp;
 $$070 = $2;
 while (1) {
  if (($$070 | 0) == ($3 | 0)) {
   $$070$lcssa = $3;
   break;
  }
  if (!(HEAP8[$$070 >> 0] | 0)) {
   $$070$lcssa = $$070;
   break;
  }
  $$070 = $$070 + 1 | 0;
 }
 HEAP32[$7 >> 2] = $5;
 HEAP32[$4 >> 2] = $2;
 $13 = $6;
 $14 = $0 + 8 | 0;
 $$074 = $2;
 $$077 = $5;
 $$1 = $$070$lcssa;
 while (1) {
  if (($$077 | 0) == ($6 | 0) | ($$074 | 0) == ($3 | 0)) {
   $67 = $$074;
   label = 32;
   break;
  }
  $17 = $1;
  $22 = HEAP32[$17 + 4 >> 2] | 0;
  $23 = $8;
  HEAP32[$23 >> 2] = HEAP32[$17 >> 2];
  HEAP32[$23 + 4 >> 2] = $22;
  $27 = $$1;
  $34 = ___uselocale(HEAP32[$14 >> 2] | 0) | 0;
  $35 = _mbsnrtowcs($$077, $4, $27 - $$074 | 0, $13 - $$077 >> 2, $1) | 0;
  if ($34 | 0) ___uselocale($34) | 0;
  if (($35 | 0) == -1) {
   $$175 = $$074;
   $storemerge = $$077;
   label = 10;
   break;
  }
  $51 = (HEAP32[$7 >> 2] | 0) + ($35 << 2) | 0;
  HEAP32[$7 >> 2] = $51;
  if (($51 | 0) == ($6 | 0)) {
   label = 29;
   break;
  }
  $$pre = HEAP32[$4 >> 2] | 0;
  if (($$1 | 0) == ($3 | 0)) {
   $$4$ph = $3;
   $69 = $51;
   $70 = $$pre;
  } else {
   $55 = ___uselocale(HEAP32[$14 >> 2] | 0) | 0;
   $56 = _mbrtowc($51, $$pre, 1, $1) | 0;
   if ($55 | 0) ___uselocale($55) | 0;
   if ($56 | 0) {
    $$172$ph = 2;
    label = 28;
    break;
   }
   HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 4;
   $62 = (HEAP32[$4 >> 2] | 0) + 1 | 0;
   HEAP32[$4 >> 2] = $62;
   $$2 = $62;
   while (1) {
    if (($$2 | 0) == ($3 | 0)) {
     $$2$lcssa = $3;
     break;
    }
    if (!(HEAP8[$$2 >> 0] | 0)) {
     $$2$lcssa = $$2;
     break;
    }
    $$2 = $$2 + 1 | 0;
   }
   $$4$ph = $$2$lcssa;
   $69 = HEAP32[$7 >> 2] | 0;
   $70 = $62;
  }
  $$074 = $70;
  $$077 = $69;
  $$1 = $$4$ph;
 }
 do if ((label | 0) == 10) {
  L28 : while (1) {
   label = 0;
   HEAP32[$7 >> 2] = $storemerge;
   if (($$175 | 0) == (HEAP32[$4 >> 2] | 0)) {
    label = 18;
    break;
   }
   $43 = ___uselocale(HEAP32[$14 >> 2] | 0) | 0;
   $44 = _mbrtowc($storemerge, $$175, $27 - $$175 | 0, $8) | 0;
   if ($43 | 0) ___uselocale($43) | 0;
   switch ($44 | 0) {
   case -1:
    {
     label = 15;
     break L28;
     break;
    }
   case -2:
    {
     label = 16;
     break L28;
     break;
    }
   case 0:
    {
     $$sink = 1;
     break;
    }
   default:
    $$sink = $44;
   }
   $$175 = $$175 + $$sink | 0;
   $storemerge = (HEAP32[$7 >> 2] | 0) + 4 | 0;
   label = 10;
  }
  if ((label | 0) == 15) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = 2;
   label = 28;
   break;
  } else if ((label | 0) == 16) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = 1;
   label = 28;
   break;
  } else if ((label | 0) == 18) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = ($$175 | 0) != ($3 | 0) & 1;
   label = 28;
   break;
  }
 } else if ((label | 0) == 29) {
  $67 = HEAP32[$4 >> 2] | 0;
  label = 32;
 } while (0);
 if ((label | 0) == 28) $$273 = $$172$ph; else if ((label | 0) == 32) $$273 = ($67 | 0) != ($3 | 0) & 1;
 STACKTOP = sp;
 return $$273 | 0;
}

function __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0100 = 0, $$194 = 0, $$2102 = 0, $$598 = 0, $$lcssa125$sink = 0, $22 = 0, $23 = 0, $26 = 0, $29 = 0, $30 = 0, $31 = 0, $34 = 0, $43 = 0, $46 = 0, $47 = 0, $48 = 0, $53 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $77 = 0, $8 = 0, $80 = 0, label = 0;
 $7 = $1;
 $8 = $0;
 if (($7 - $8 | 0) > 2 & ($4 & 4 | 0) != 0) if ((HEAP8[$0 >> 0] | 0) == -17) if ((HEAP8[$0 + 1 >> 0] | 0) == -69) {
  $$0100 = 0;
  $$194 = (HEAP8[$0 + 2 >> 0] | 0) == -65 ? $0 + 3 | 0 : $0;
 } else {
  $$0100 = 0;
  $$194 = $0;
 } else {
  $$0100 = 0;
  $$194 = $0;
 } else {
  $$0100 = 0;
  $$194 = $0;
 }
 L5 : while (1) {
  if (!($$0100 >>> 0 < $2 >>> 0 & $$194 >>> 0 < $1 >>> 0)) {
   label = 31;
   break;
  }
  $22 = HEAP8[$$194 >> 0] | 0;
  $23 = $22 & 255;
  if ($23 >>> 0 > $3 >>> 0) {
   label = 31;
   break;
  }
  $26 = $$194 + 1 | 0;
  do if ($22 << 24 >> 24 > -1) {
   $$2102 = $$0100;
   $$598 = $26;
  } else {
   if (($22 & 255) < 194) {
    label = 31;
    break L5;
   }
   $29 = $$194 + 2 | 0;
   $30 = $$194;
   $31 = $7 - $30 | 0;
   if (($22 & 255) < 224) {
    if (($31 | 0) < 2) {
     label = 31;
     break L5;
    }
    $34 = HEAPU8[$26 >> 0] | 0;
    if (($34 & 192 | 0) != 128) {
     label = 31;
     break L5;
    }
    if (($34 & 63 | $23 << 6 & 1984) >>> 0 > $3 >>> 0) {
     label = 31;
     break L5;
    } else {
     $$2102 = $$0100;
     $$598 = $29;
     break;
    }
   }
   $43 = $$194 + 3 | 0;
   if (($22 & 255) < 240) {
    if (($31 | 0) < 3) {
     label = 31;
     break L5;
    }
    $46 = HEAP8[$29 >> 0] | 0;
    $47 = HEAPU8[$26 >> 0] | 0;
    $48 = $47 & 224;
    switch ($22 << 24 >> 24) {
    case -32:
     {
      if (($48 | 0) != 160) {
       $$lcssa125$sink = $30;
       break L5;
      }
      break;
     }
    case -19:
     {
      if (($48 | 0) != 128) {
       $$lcssa125$sink = $30;
       break L5;
      }
      break;
     }
    default:
     if (($47 & 192 | 0) != 128) {
      $$lcssa125$sink = $30;
      break L5;
     }
    }
    $53 = $46 & 255;
    if (($53 & 192 | 0) != 128) {
     label = 31;
     break L5;
    }
    if (($47 << 6 & 4032 | $23 << 12 & 61440 | $53 & 63) >>> 0 > $3 >>> 0) {
     label = 31;
     break L5;
    } else {
     $$2102 = $$0100;
     $$598 = $43;
     break;
    }
   }
   if (($22 & 255) >= 245) {
    label = 31;
    break L5;
   }
   if (($2 - $$0100 | 0) >>> 0 < 2 | ($31 | 0) < 4) {
    label = 31;
    break L5;
   }
   $68 = HEAP8[$26 >> 0] | 0;
   $69 = HEAP8[$29 >> 0] | 0;
   $70 = HEAP8[$43 >> 0] | 0;
   $71 = $68 & 255;
   switch ($22 << 24 >> 24) {
   case -16:
    {
     if (($68 + 112 & 255) >= 48) {
      $$lcssa125$sink = $30;
      break L5;
     }
     break;
    }
   case -12:
    {
     if (($71 & 240 | 0) != 128) {
      $$lcssa125$sink = $30;
      break L5;
     }
     break;
    }
   default:
    if (($71 & 192 | 0) != 128) {
     $$lcssa125$sink = $30;
     break L5;
    }
   }
   $77 = $69 & 255;
   if (($77 & 192 | 0) != 128) {
    label = 31;
    break L5;
   }
   $80 = $70 & 255;
   if (($80 & 192 | 0) != 128) {
    label = 31;
    break L5;
   }
   if (($71 << 12 & 258048 | $23 << 18 & 1835008 | $77 << 6 & 4032 | $80 & 63) >>> 0 > $3 >>> 0) {
    label = 31;
    break L5;
   } else {
    $$2102 = $$0100 + 1 | 0;
    $$598 = $$194 + 4 | 0;
   }
  } while (0);
  $$0100 = $$2102 + 1 | 0;
  $$194 = $$598;
 }
 if ((label | 0) == 31) $$lcssa125$sink = $$194;
 return $$lcssa125$sink - $8 | 0;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$$sroa$026$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i12 = 0, $$pre$phiZ2D = 0, $$sroa$026$136 = 0, $12 = 0, $17 = 0, $22 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $67 = 0, $7 = 0, $78 = 0, $9 = 0, $94 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP8[$0 >> 0] = 0;
 $7 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 $9 = HEAP32[$7 + 16 >> 2] | 0;
 if (!$9) {
  $12 = HEAP32[$7 + 72 >> 2] | 0;
  if ($12 | 0) __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  do if (!$2) {
   $17 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
   if (HEAP32[$17 + 4 >> 2] & 4096 | 0) {
    __ZNKSt3__28ios_base6getlocEv($3, $17);
    $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 34536) | 0;
    __ZNSt3__26localeD2Ev($3);
    $28 = HEAP32[$1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
    $29 = $22 + 8 | 0;
    $30 = $28;
    $31 = ($28 | 0) == 0;
    $32 = $30 + 12 | 0;
    $33 = $30 + 16 | 0;
    $34 = $28;
    while (1) {
     if ($31) {
      $$pre$phiZ2D = 0;
      $$sroa$026$136 = 0;
      break;
     }
     $35 = HEAP32[$32 >> 2] | 0;
     if (($35 | 0) == (HEAP32[$33 >> 2] | 0)) $$0$i$i$i$i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i12 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$35 >> 0] | 0) | 0;
     $45 = __ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i12, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
     $$$sroa$026$0 = $45 ? 0 : $28;
     if ($45) {
      $$pre$phiZ2D = 0;
      $$sroa$026$136 = 0;
      break;
     }
     $46 = $$$sroa$026$0;
     $47 = $46 + 12 | 0;
     $48 = HEAP32[$47 >> 2] | 0;
     $49 = $46 + 16 | 0;
     if (($48 | 0) == (HEAP32[$49 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$$sroa$026$0 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
     if (($$0$i$i & 255) << 24 >> 24 <= -1) {
      $$pre$phiZ2D = $46;
      $$sroa$026$136 = $28;
      break;
     }
     if (!(HEAP16[(HEAP32[$29 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
      $$pre$phiZ2D = $46;
      $$sroa$026$136 = $28;
      break;
     }
     $67 = HEAP32[$47 >> 2] | 0;
     if (($67 | 0) == (HEAP32[$49 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$$sroa$026$0 >> 2] | 0) + 40 >> 2] & 127]($46) | 0;
      continue;
     } else {
      HEAP32[$47 >> 2] = $67 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$67 >> 0] | 0) | 0;
      continue;
     }
    }
    if ($$sroa$026$136 | 0) {
     $78 = HEAP32[$$pre$phiZ2D + 12 >> 2] | 0;
     if (($78 | 0) == (HEAP32[$$pre$phiZ2D + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$sroa$026$136 >> 2] | 0) + 36 >> 2] & 127]($$pre$phiZ2D) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$78 >> 0] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) break;
    }
    $94 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
    __ZNSt3__28ios_base5clearEj($94, HEAP32[$94 + 16 >> 2] | 6);
   }
  } while (0);
  HEAP8[$0 >> 0] = (HEAP32[$1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] | 0) == 0 & 1;
 } else __ZNSt3__28ios_base5clearEj($7, $9 | 4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$9 = 0, $$sink = 0, $10 = 0, $11 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $31 = 0, $36 = 0, $37 = 0, $40 = 0, $46 = 0, $49 = 0, $52 = 0, $53 = 0, $54 = 0, $59 = 0, $68 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $81 = 0, $84 = 0, $96 = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 $10 = $1;
 if ($7 & 4 | 0) {
  $11 = HEAP32[$2 >> 2] | 0;
  if (($10 - $11 | 0) > 2) if ((HEAP8[$11 >> 0] | 0) == -17) if ((HEAP8[$11 + 1 >> 0] | 0) == -69) if ((HEAP8[$11 + 2 >> 0] | 0) == -65) HEAP32[$2 >> 2] = $11 + 3;
 }
 L7 : while (1) {
  $24 = HEAP32[$2 >> 2] | 0;
  if ($24 >>> 0 >= $1 >>> 0) {
   $$9 = 0;
   break;
  }
  $26 = HEAP32[$5 >> 2] | 0;
  if ($26 >>> 0 >= $4 >>> 0) {
   $$9 = 1;
   break;
  }
  $28 = HEAP8[$24 >> 0] | 0;
  $29 = $28 & 255;
  $31 = $24 + 1 | 0;
  do if ($28 << 24 >> 24 > -1) {
   if ($29 >>> 0 > $6 >>> 0) {
    $$9 = 2;
    break L7;
   }
   HEAP32[$26 >> 2] = $29;
   $$sink = $31;
  } else {
   if (($28 & 255) < 194) {
    $$9 = 2;
    break L7;
   }
   $36 = $24 + 2 | 0;
   $37 = $10 - $24 | 0;
   if (($28 & 255) < 224) {
    if (($37 | 0) < 2) {
     $$9 = 1;
     break L7;
    }
    $40 = HEAPU8[$31 >> 0] | 0;
    if (($40 & 192 | 0) != 128) {
     $$9 = 2;
     break L7;
    }
    $46 = $40 & 63 | $29 << 6 & 1984;
    if ($46 >>> 0 > $6 >>> 0) {
     $$9 = 2;
     break L7;
    }
    HEAP32[$26 >> 2] = $46;
    $$sink = $36;
    break;
   }
   $49 = $24 + 3 | 0;
   if (($28 & 255) < 240) {
    if (($37 | 0) < 3) {
     $$9 = 1;
     break L7;
    }
    $52 = HEAP8[$36 >> 0] | 0;
    $53 = HEAPU8[$31 >> 0] | 0;
    $54 = $53 & 224;
    switch ($28 << 24 >> 24) {
    case -32:
     {
      if (($54 | 0) != 160) {
       $$9 = 2;
       break L7;
      }
      break;
     }
    case -19:
     {
      if (($54 | 0) != 128) {
       $$9 = 2;
       break L7;
      }
      break;
     }
    default:
     if (($53 & 192 | 0) != 128) {
      $$9 = 2;
      break L7;
     }
    }
    $59 = $52 & 255;
    if (($59 & 192 | 0) != 128) {
     $$9 = 2;
     break L7;
    }
    $68 = $53 << 6 & 4032 | $29 << 12 & 61440 | $59 & 63;
    if ($68 >>> 0 > $6 >>> 0) {
     $$9 = 2;
     break L7;
    }
    HEAP32[$26 >> 2] = $68;
    $$sink = $49;
    break;
   }
   if (($28 & 255) >= 245) {
    $$9 = 2;
    break L7;
   }
   if (($37 | 0) < 4) {
    $$9 = 1;
    break L7;
   }
   $72 = HEAP8[$31 >> 0] | 0;
   $73 = HEAP8[$36 >> 0] | 0;
   $74 = HEAP8[$49 >> 0] | 0;
   $75 = $72 & 255;
   switch ($28 << 24 >> 24) {
   case -16:
    {
     if (($72 + 112 & 255) >= 48) {
      $$9 = 2;
      break L7;
     }
     break;
    }
   case -12:
    {
     if (($75 & 240 | 0) != 128) {
      $$9 = 2;
      break L7;
     }
     break;
    }
   default:
    if (($75 & 192 | 0) != 128) {
     $$9 = 2;
     break L7;
    }
   }
   $81 = $73 & 255;
   if (($81 & 192 | 0) != 128) {
    $$9 = 2;
    break L7;
   }
   $84 = $74 & 255;
   if (($84 & 192 | 0) != 128) {
    $$9 = 2;
    break L7;
   }
   $96 = $75 << 12 & 258048 | $29 << 18 & 1835008 | $81 << 6 & 4032 | $84 & 63;
   if ($96 >>> 0 > $6 >>> 0) {
    $$9 = 2;
    break L7;
   }
   HEAP32[$26 >> 2] = $96;
   $$sink = $24 + 4 | 0;
  } while (0);
  HEAP32[$2 >> 2] = $$sink;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 4;
 }
 return $$9 | 0;
}

function __ZNK8optframe15MultiEvaluation8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$022 = 0, $$in = 0, $12 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $37 = 0, $38 = 0, $4 = 0, $44 = 0, $49 = 0, $5 = 0, $53 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $2 = sp + 160 | 0;
 $3 = sp + 16 | 0;
 $4 = sp;
 $5 = $3 + 64 | 0;
 $6 = $3 + 8 | 0;
 HEAP32[$6 >> 2] = 3472;
 $7 = $3 + 12 | 0;
 HEAP32[$3 >> 2] = 404;
 HEAP32[$5 >> 2] = 424;
 HEAP32[$3 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($3 + 64 | 0, $7);
 HEAP32[$3 + 136 >> 2] = 0;
 HEAP32[$3 + 140 >> 2] = -1;
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$5 >> 2] = 3492;
 HEAP32[$6 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($7);
 HEAP32[$7 >> 2] = 3548;
 $12 = $3 + 44 | 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 HEAP32[$12 + 12 >> 2] = 0;
 HEAP32[$3 + 60 >> 2] = 24;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($7, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 $18 = $3 + 8 | 0;
 $19 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($18, 17172, 17) | 0;
 $20 = $1 + 20 | 0;
 $21 = $1 + 24 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($19, ((HEAP32[$21 >> 2] | 0) - (HEAP32[$20 >> 2] | 0) | 0) / 72 | 0) | 0, 17190, 2) | 0;
 $28 = HEAP32[$20 >> 2] | 0;
 if ((HEAP32[$21 >> 2] | 0) != ($28 | 0)) {
  $30 = $4 + 11 | 0;
  $31 = $4 + 4 | 0;
  $$022 = 0;
  $$in = $28;
  do {
   __ZNK8optframe10Evaluation8toStringEv($4, $$in + ($$022 * 72 | 0) | 0);
   $37 = HEAP8[$30 >> 0] | 0;
   $38 = $37 << 24 >> 24 < 0;
   $44 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($18, $38 ? HEAP32[$4 >> 2] | 0 : $4, $38 ? HEAP32[$31 >> 2] | 0 : $37 & 255) | 0;
   __ZNKSt3__28ios_base6getlocEv($2, $44 + (HEAP32[(HEAP32[$44 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $49 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
   $53 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$49 >> 2] | 0) + 28 >> 2] & 63]($49, 10) | 0;
   __ZNSt3__26localeD2Ev($2);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($44, $53) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($44) | 0;
   if ((HEAP8[$30 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
   $$022 = $$022 + 1 | 0;
   $$in = HEAP32[$20 >> 2] | 0;
  } while ($$022 >>> 0 < (((HEAP32[$21 >> 2] | 0) - $$in | 0) / 72 | 0) >>> 0);
 }
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $7);
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$5 >> 2] = 3492;
 HEAP32[$18 >> 2] = 3472;
 HEAP32[$7 >> 2] = 3548;
 if ((HEAP8[$12 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($7);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$12 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($7);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 STACKTOP = sp;
 return;
}

function _scanexp($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$04861 = 0, $$049 = 0, $$1$be = 0, $$160 = 0, $$2$be = 0, $$2$lcssa = 0, $$254 = 0, $$3$be = 0, $$lcssa = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $22 = 0, $3 = 0, $38 = 0, $4 = 0, $50 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $62 = 0, $64 = 0, $65 = 0, $66 = 0, $81 = 0, $83 = 0, $87 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 100 | 0;
 if ($3 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
  HEAP32[$2 >> 2] = $3 + 1;
  $11 = HEAPU8[$3 >> 0] | 0;
 } else $11 = ___shgetc($0) | 0;
 switch ($11 | 0) {
 case 43:
 case 45:
  {
   $13 = ($11 | 0) == 45 & 1;
   $14 = HEAP32[$2 >> 2] | 0;
   if ($14 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$2 >> 2] = $14 + 1;
    $22 = HEAPU8[$14 >> 0] | 0;
   } else $22 = ___shgetc($0) | 0;
   if (($1 | 0) != 0 & ($22 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$4 >> 2] | 0)) {
    $$0 = $13;
    $$049 = $22;
   } else {
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
    $$0 = $13;
    $$049 = $22;
   } else {
    $$0 = $13;
    $$049 = $22;
   }
   break;
  }
 default:
  {
   $$0 = 0;
   $$049 = $11;
  }
 }
 if (($$049 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$4 >> 2] | 0)) {
  $100 = -2147483648;
  $101 = 0;
 } else {
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
  $100 = -2147483648;
  $101 = 0;
 } else {
  $$04861 = 0;
  $$160 = $$049;
  while (1) {
   $$04861 = $$160 + -48 + ($$04861 * 10 | 0) | 0;
   $38 = HEAP32[$2 >> 2] | 0;
   if ($38 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$2 >> 2] = $38 + 1;
    $$1$be = HEAPU8[$38 >> 0] | 0;
   } else $$1$be = ___shgetc($0) | 0;
   if (!(($$1$be + -48 | 0) >>> 0 < 10 & ($$04861 | 0) < 214748364)) break; else $$160 = $$1$be;
  }
  $50 = (($$04861 | 0) < 0) << 31 >> 31;
  if (($$1$be + -48 | 0) >>> 0 < 10) {
   $$254 = $$1$be;
   $56 = $$04861;
   $57 = $50;
   while (1) {
    $58 = ___muldi3($56 | 0, $57 | 0, 10, 0) | 0;
    $59 = tempRet0;
    $62 = _i64Add($$254 | 0, (($$254 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    $64 = _i64Add($62 | 0, tempRet0 | 0, $58 | 0, $59 | 0) | 0;
    $65 = tempRet0;
    $66 = HEAP32[$2 >> 2] | 0;
    if ($66 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$2 >> 2] = $66 + 1;
     $$2$be = HEAPU8[$66 >> 0] | 0;
    } else $$2$be = ___shgetc($0) | 0;
    if (($$2$be + -48 | 0) >>> 0 < 10 & (($65 | 0) < 21474836 | ($65 | 0) == 21474836 & $64 >>> 0 < 2061584302)) {
     $$254 = $$2$be;
     $56 = $64;
     $57 = $65;
    } else {
     $$2$lcssa = $$2$be;
     $94 = $64;
     $95 = $65;
     break;
    }
   }
  } else {
   $$2$lcssa = $$1$be;
   $94 = $$04861;
   $95 = $50;
  }
  $55 = HEAP32[$4 >> 2] | 0;
  if (($$2$lcssa + -48 | 0) >>> 0 < 10) {
   $83 = $55;
   while (1) {
    $81 = HEAP32[$2 >> 2] | 0;
    if ($81 >>> 0 < $83 >>> 0) {
     HEAP32[$2 >> 2] = $81 + 1;
     $$3$be = HEAPU8[$81 >> 0] | 0;
     $102 = $83;
    } else {
     $87 = ___shgetc($0) | 0;
     $$3$be = $87;
     $102 = HEAP32[$4 >> 2] | 0;
    }
    if (($$3$be + -48 | 0) >>> 0 < 10) $83 = $102; else {
     $$lcssa = $102;
     break;
    }
   }
  } else $$lcssa = $55;
  if ($$lcssa | 0) HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
  $93 = ($$0 | 0) != 0;
  $96 = _i64Subtract(0, 0, $94 | 0, $95 | 0) | 0;
  $100 = $93 ? tempRet0 : $95;
  $101 = $93 ? $96 : $94;
 }
 tempRet0 = $100;
 return $101 | 0;
}

function __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$091 = 0, $$185 = 0, $$488 = 0, $$lcssa112$sink = 0, $22 = 0, $23 = 0, $25 = 0, $29 = 0, $30 = 0, $31 = 0, $34 = 0, $43 = 0, $46 = 0, $47 = 0, $48 = 0, $53 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $75 = 0, $78 = 0, $8 = 0, label = 0;
 $7 = $1;
 $8 = $0;
 if (($7 - $8 | 0) > 2 & ($4 & 4 | 0) != 0) if ((HEAP8[$0 >> 0] | 0) == -17) if ((HEAP8[$0 + 1 >> 0] | 0) == -69) {
  $$091 = 0;
  $$185 = (HEAP8[$0 + 2 >> 0] | 0) == -65 ? $0 + 3 | 0 : $0;
 } else {
  $$091 = 0;
  $$185 = $0;
 } else {
  $$091 = 0;
  $$185 = $0;
 } else {
  $$091 = 0;
  $$185 = $0;
 }
 L5 : while (1) {
  if (!($$091 >>> 0 < $2 >>> 0 & $$185 >>> 0 < $1 >>> 0)) {
   label = 30;
   break;
  }
  $22 = HEAP8[$$185 >> 0] | 0;
  $23 = $22 & 255;
  $25 = $$185 + 1 | 0;
  do if ($22 << 24 >> 24 > -1) if ($23 >>> 0 > $3 >>> 0) {
   label = 30;
   break L5;
  } else $$488 = $25; else {
   if (($22 & 255) < 194) {
    label = 30;
    break L5;
   }
   $29 = $$185 + 2 | 0;
   $30 = $$185;
   $31 = $7 - $30 | 0;
   if (($22 & 255) < 224) {
    if (($31 | 0) < 2) {
     label = 30;
     break L5;
    }
    $34 = HEAPU8[$25 >> 0] | 0;
    if (($34 & 192 | 0) != 128) {
     label = 30;
     break L5;
    }
    if (($34 & 63 | $23 << 6 & 1984) >>> 0 > $3 >>> 0) {
     label = 30;
     break L5;
    } else {
     $$488 = $29;
     break;
    }
   }
   $43 = $$185 + 3 | 0;
   if (($22 & 255) < 240) {
    if (($31 | 0) < 3) {
     label = 30;
     break L5;
    }
    $46 = HEAP8[$29 >> 0] | 0;
    $47 = HEAPU8[$25 >> 0] | 0;
    $48 = $47 & 224;
    switch ($22 << 24 >> 24) {
    case -32:
     {
      if (($48 | 0) != 160) {
       $$lcssa112$sink = $30;
       break L5;
      }
      break;
     }
    case -19:
     {
      if (($48 | 0) != 128) {
       $$lcssa112$sink = $30;
       break L5;
      }
      break;
     }
    default:
     if (($47 & 192 | 0) != 128) {
      $$lcssa112$sink = $30;
      break L5;
     }
    }
    $53 = $46 & 255;
    if (($53 & 192 | 0) != 128) {
     label = 30;
     break L5;
    }
    if (($47 << 6 & 4032 | $23 << 12 & 61440 | $53 & 63) >>> 0 > $3 >>> 0) {
     label = 30;
     break L5;
    } else {
     $$488 = $43;
     break;
    }
   }
   if (($31 | 0) < 4 | ($22 & 255) > 244) {
    label = 30;
    break L5;
   }
   $66 = HEAP8[$25 >> 0] | 0;
   $67 = HEAP8[$29 >> 0] | 0;
   $68 = HEAP8[$43 >> 0] | 0;
   $69 = $66 & 255;
   switch ($22 << 24 >> 24) {
   case -16:
    {
     if (($66 + 112 & 255) >= 48) {
      $$lcssa112$sink = $30;
      break L5;
     }
     break;
    }
   case -12:
    {
     if (($69 & 240 | 0) != 128) {
      $$lcssa112$sink = $30;
      break L5;
     }
     break;
    }
   default:
    if (($69 & 192 | 0) != 128) {
     $$lcssa112$sink = $30;
     break L5;
    }
   }
   $75 = $67 & 255;
   if (($75 & 192 | 0) != 128) {
    label = 30;
    break L5;
   }
   $78 = $68 & 255;
   if (($78 & 192 | 0) != 128) {
    label = 30;
    break L5;
   }
   if (($69 << 12 & 258048 | $23 << 18 & 1835008 | $75 << 6 & 4032 | $78 & 63) >>> 0 > $3 >>> 0) {
    label = 30;
    break L5;
   } else $$488 = $$185 + 4 | 0;
  } while (0);
  $$091 = $$091 + 1 | 0;
  $$185 = $$488;
 }
 if ((label | 0) == 30) $$lcssa112$sink = $$185;
 return $$lcssa112$sink - $8 | 0;
}

function __ZN8optframe19MORandomImprovementI6RepHFMiE4execERNS_6ParetoIS1_iEERNS_8SolutionIS1_iEERNS_15MultiEvaluationERNS_13paretoManagerIS1_iEERNS_4MOSCE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$037 = 0, $$phi$trans$insert39 = 0, $$pre$phi41Z2D = 0, $100 = 0, $15 = 0, $18 = 0, $20 = 0, $24 = 0, $27 = 0, $28 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $47 = 0, $53 = 0, $6 = 0, $65 = 0, $7 = 0, $71 = 0, $8 = 0, $86 = 0, $87 = 0.0, $89 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer = sp;
 $6 = sp + 48 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 8 | 0;
 $9 = $0 + 40 | 0;
 HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
 $15 = $8 + 12 | 0;
 HEAP8[$15 + 4 >> 0] = 0;
 HEAP32[$8 + 8 >> 2] = 2;
 HEAP8[$8 + 15 >> 0] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$8 + 13 >> 0] = 1;
 HEAP8[$8 + 14 >> 0] = 0;
 HEAP32[$8 >> 2] = 5092;
 $18 = $8 + 17 | 0;
 HEAP8[$18 >> 0] = 0;
 _gettimeofday($8 + 20 | 0, $6 | 0) | 0;
 $20 = $0 + 44 | 0;
 L1 : do if ((HEAP32[$20 >> 2] | 0) > 0) {
  $24 = HEAP32[$8 + 20 >> 2] | 0;
  $27 = $8 + 24 | 0;
  $28 = HEAP32[$27 >> 2] | 0;
  $30 = +($24 | 0) * 1.0e6 + +($28 | 0);
  $31 = $6 + 4 | 0;
  $32 = $5 + 24 | 0;
  $33 = $0 + 24 | 0;
  $34 = $2 + 20 | 0;
  $35 = $2 + 24 | 0;
  $$037 = 0;
  while (1) {
   _gettimeofday($6 | 0, $7 | 0) | 0;
   if (!((+(HEAP32[$6 >> 2] | 0) * 1.0e6 + +(HEAP32[$31 >> 2] | 0) - $30) * 1.0e-06 - +HEAPF64[$32 >> 3] < 0.0)) {
    $$pre$phi41Z2D = $27;
    $86 = $24;
    $89 = $28;
    break L1;
   }
   $47 = HEAP32[$33 >> 2] | 0;
   $53 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] & 63]($47, HEAP32[$34 >> 2] | 0, HEAP32[$35 >> 2] | 0) | 0;
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$53 >> 2] | 0) + 36 >> 2] & 63]($53, HEAP32[$34 >> 2] | 0, HEAP32[$35 >> 2] | 0) | 0) {
    $65 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$53 >> 2] | 0) + 44 >> 2] & 63]($53, HEAP32[$34 >> 2] | 0, HEAP32[$35 >> 2] | 0) | 0;
    __ZN8optframe13paretoManagerI6RepHFMiE11addSolutionERNS_6ParetoIS1_iEERKNS_8SolutionIS1_iEE($4, $1, $2) | 0;
    $71 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$65 >> 2] | 0) + 44 >> 2] & 63]($65, HEAP32[$34 >> 2] | 0, HEAP32[$35 >> 2] | 0) | 0;
    if ($71 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$71 >> 2] | 0) + 4 >> 2] & 511]($71);
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$65 >> 2] | 0) + 4 >> 2] & 511]($65);
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$53 >> 2] | 0) + 4 >> 2] & 511]($53);
   $$037 = $$037 + 1 | 0;
   if (($$037 | 0) >= (HEAP32[$20 >> 2] | 0)) {
    $$pre$phi41Z2D = $27;
    $86 = $24;
    $89 = $28;
    break;
   }
  }
 } else {
  $$phi$trans$insert39 = $8 + 24 | 0;
  $$pre$phi41Z2D = $$phi$trans$insert39;
  $86 = HEAP32[$8 + 20 >> 2] | 0;
  $89 = HEAP32[$$phi$trans$insert39 >> 2] | 0;
 } while (0);
 _gettimeofday($6 | 0, $7 | 0) | 0;
 $87 = +($86 | 0) * 1.0e6;
 $100 = $0 + 32 | 0;
 HEAPF64[$100 >> 3] = +HEAPF64[$100 >> 3] + (+(HEAP32[$6 >> 2] | 0) * 1.0e6 + +(HEAP32[$6 + 4 >> 2] | 0) - ($87 + +($89 | 0))) * .001;
 HEAP32[$8 >> 2] = 5092;
 if (!(HEAP8[$18 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 _gettimeofday($6 | 0, $7 | 0) | 0;
 HEAPF64[$vararg_buffer >> 3] = (+(HEAP32[$6 >> 2] | 0) * 1.0e6 + +(HEAP32[$6 + 4 >> 2] | 0) - ($87 + +(HEAP32[$$pre$phi41Z2D >> 2] | 0))) * 1.0e-06;
 _printf(17801, $vararg_buffer) | 0;
 STACKTOP = sp;
 return;
}

function __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$01012$i$i1241 = 0, $$014$i$i = 0, $$014$i$i1039 = 0, $$02028$i = 0, $$02028$i1544 = 0, $$02127$i = 0, $$02127$i1645 = 0, $$029$i = 0, $$029$i1443 = 0, $$0913$i$i = 0, $$0913$i$i1140 = 0, $$ph = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $2 = 0, $23 = 0, $24 = 0, $3 = 0, $41 = 0, $49 = 0, $65 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] & 127]($2, $0);
 $8 = HEAP8[$1 + 11 >> 0] | 0;
 $9 = $8 << 24 >> 24 < 0;
 $11 = HEAP32[$1 + 4 >> 2] | 0;
 $12 = $8 & 255;
 $13 = $9 ? $11 : $12;
 $15 = HEAP8[$2 + 11 >> 0] | 0;
 $16 = $15 << 24 >> 24 < 0;
 L1 : do if (($13 | 0) == (($16 ? HEAP32[$2 + 4 >> 2] | 0 : $15 & 255) | 0)) {
  $23 = $16 ? HEAP32[$2 >> 2] | 0 : $2;
  $24 = ($13 | 0) == 0;
  if ($9) {
   if ($24) {
    $65 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $11;
   $$0913$i$i = $23;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $65 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($24) {
    $65 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $12;
   $$029$i = $23;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $65 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  HEAP8[$3 + 11 >> 0] = 8;
  $41 = $3;
  HEAP32[$41 >> 2] = 1182036047;
  HEAP32[$41 + 4 >> 2] = 1701667186;
  HEAP8[$3 + 8 >> 0] = 0;
  L16 : do if (($13 | 0) == 8) if ($9) {
   $49 = HEAP32[$1 >> 2] | 0;
   if ((HEAP8[$49 >> 0] | 0) == 79) {
    $$01012$i$i1241 = $49;
    $$014$i$i1039 = $11;
    $$0913$i$i1140 = $3;
   } else {
    $$ph = 0;
    break;
   }
   while (1) {
    $$014$i$i1039 = $$014$i$i1039 + -1 | 0;
    $$0913$i$i1140 = $$0913$i$i1140 + 1 | 0;
    if (!$$014$i$i1039) {
     $$ph = 1;
     break L16;
    }
    $$01012$i$i1241 = $$01012$i$i1241 + 1 | 0;
    if ((HEAP8[$$0913$i$i1140 >> 0] | 0) != (HEAP8[$$01012$i$i1241 >> 0] | 0)) {
     $$ph = 0;
     break;
    }
   }
  } else {
   if ((HEAP8[$1 >> 0] | 0) == 79) {
    $$02028$i1544 = $1;
    $$02127$i1645 = $12;
    $$029$i1443 = $3;
   } else {
    $$ph = 0;
    break;
   }
   while (1) {
    $$02127$i1645 = $$02127$i1645 + -1 | 0;
    $$029$i1443 = $$029$i1443 + 1 | 0;
    if (!$$02127$i1645) {
     $$ph = 1;
     break L16;
    }
    $$02028$i1544 = $$02028$i1544 + 1 | 0;
    if ((HEAP8[$$02028$i1544 >> 0] | 0) != (HEAP8[$$029$i1443 >> 0] | 0)) {
     $$ph = 0;
     break;
    }
   }
  } else $$ph = 0; while (0);
  $65 = $$ph;
 }
 if (!$16) {
  STACKTOP = sp;
  return $65 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $65 | 0;
}

function __ZN8optframe13paretoManagerI6RepHFMiE18addSolutionWithMEVERNS_6ParetoIS1_iEERKNS_8SolutionIS1_iEERKNS_15MultiEvaluationE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$02633 = 0, $$228$ph = 0, $$3 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $28 = 0, $39 = 0, $4 = 0, $5 = 0, $51 = 0, $58 = 0, $6 = 0, $64 = 0, $65 = 0, $66 = 0, $68 = 0, $69 = 0, $72 = 0, $73 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $89 = 0, $90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $5 = $1 + 4 | 0;
 $6 = $1 + 8 | 0;
 L1 : do if (((HEAP32[$6 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) | 0) > 0) {
  $11 = $1 + 16 | 0;
  $12 = $1 + 20 | 0;
  $13 = $0 + 28 | 0;
  $14 = $4 + 4 | 0;
  $15 = $0 + 8 | 0;
  $16 = $4 + 4 | 0;
  $17 = $3 + 20 | 0;
  $18 = $3 + 24 | 0;
  $19 = $1 + 4 | 0;
  $20 = $1 + 16 | 0;
  $$02633 = 0;
  while (1) {
   $22 = HEAP32[$11 >> 2] | 0;
   if ((HEAP32[$12 >> 2] | 0) - $22 >> 2 >>> 0 <= $$02633 >>> 0) {
    label = 4;
    break;
   }
   $28 = HEAP32[$22 + ($$02633 << 2) >> 2] | 0;
   __ZN8optframe15ParetoDominanceI6RepHFMiE14checkDominatesERKNS_15MultiEvaluationES5_($4, $13, $28, $3);
   if (((HEAP32[$14 >> 2] | 0) + (HEAP32[$4 >> 2] | 0) | 0) == (((HEAP32[$28 + 24 >> 2] | 0) - (HEAP32[$28 + 20 >> 2] | 0) | 0) / 72 | 0 | 0)) {
    $$3 = 0;
    label = 22;
    break;
   }
   __ZN8optframe15ParetoDominanceI6RepHFMiE14checkDominatesERKNS_15MultiEvaluationES5_($4, $15, $3, $28);
   $39 = HEAP32[$4 >> 2] | 0;
   if (($39 | 0) > 0 ? ((HEAP32[$16 >> 2] | 0) + $39 | 0) == (((HEAP32[$18 >> 2] | 0) - (HEAP32[$17 >> 2] | 0) | 0) / 72 | 0 | 0) : 0) {
    $51 = HEAP32[(HEAP32[$19 >> 2] | 0) + ($$02633 << 2) >> 2] | 0;
    if ($51 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$51 >> 2] | 0) + 4 >> 2] & 511]($51);
    $58 = HEAP32[(HEAP32[$20 >> 2] | 0) + ($$02633 << 2) >> 2] | 0;
    if ($58 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$58 >> 2] | 0) + 4 >> 2] & 511]($58);
    $64 = (HEAP32[$19 >> 2] | 0) + ($$02633 << 2) | 0;
    $65 = $64 + 4 | 0;
    $66 = HEAP32[$6 >> 2] | 0;
    $68 = $66 - $65 | 0;
    $69 = $68 >> 2;
    if (!$69) $73 = $66; else {
     _memmove($64 | 0, $65 | 0, $68 | 0) | 0;
     $73 = HEAP32[$6 >> 2] | 0;
    }
    $72 = $64 + ($69 << 2) | 0;
    if (($73 | 0) != ($72 | 0)) HEAP32[$6 >> 2] = $73 + (~(($73 + -4 - $72 | 0) >>> 2) << 2);
    $81 = (HEAP32[$20 >> 2] | 0) + ($$02633 << 2) | 0;
    $82 = $81 + 4 | 0;
    $83 = HEAP32[$12 >> 2] | 0;
    $85 = $83 - $82 | 0;
    $86 = $85 >> 2;
    if (!$86) $90 = $83; else {
     _memmove($81 | 0, $82 | 0, $85 | 0) | 0;
     $90 = HEAP32[$12 >> 2] | 0;
    }
    $89 = $81 + ($86 << 2) | 0;
    if (($90 | 0) != ($89 | 0)) HEAP32[$12 >> 2] = $90 + (~(($90 + -4 - $89 | 0) >>> 2) << 2);
    $$228$ph = $$02633 + -1 | 0;
   } else $$228$ph = $$02633;
   $$02633 = $$228$ph + 1 | 0;
   if (($$02633 | 0) >= ((HEAP32[$6 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) >> 2 | 0)) break L1;
  }
  if ((label | 0) == 4) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($11); else if ((label | 0) == 22) {
   STACKTOP = sp;
   return $$3 | 0;
  }
 } while (0);
 __ZN8optframe6ParetoI6RepHFMiE14add_indWithMevERKNS_8SolutionIS1_iEERKNS_15MultiEvaluationE($1, $2, $3);
 $$3 = 1;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i18 = 0, $$0$i21 = 0, $$016$i = 0, $$017$i = 0, $$019$i = 0, $$020$i = 0, $10 = 0, $11 = 0, $12 = 0, $18 = 0, $19 = 0, $21 = 0, $26 = 0, $27 = 0, $34 = 0, $51 = 0, $52 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $6 = sp + 168 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 32 | 0;
 $10 = sp;
 $11 = sp + 24 | 0;
 $12 = sp + 16 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 >> 2] = 13464;
 $18 = HEAP8[$5 + 8 + 3 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 $21 = $19 ? HEAP32[$5 >> 2] | 0 : $5;
 $26 = $21 + (($19 ? HEAP32[$5 + 4 >> 2] | 0 : $18 & 255) << 2) | 0;
 $27 = $7 + 32 | 0;
 $$016$i = $21;
 $$017$i = 0;
 while (1) {
  if (!(($$017$i | 0) != 2 & $$016$i >>> 0 < $26 >>> 0)) break;
  HEAP32[$9 >> 2] = $$016$i;
  $34 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 15]($11, $6, $$016$i, $26, $9, $7, $27, $8) | 0;
  if (($34 | 0) == 2 ? 1 : (HEAP32[$9 >> 2] | 0) == ($$016$i | 0)) {
   label = 7;
   break;
  } else $$0$i21 = $7;
  while (1) {
   if ($$0$i21 >>> 0 >= (HEAP32[$8 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($10, HEAP8[$$0$i21 >> 0] | 0);
   $$0$i21 = $$0$i21 + 1 | 0;
  }
  $$016$i = HEAP32[$9 >> 2] | 0;
  $$017$i = $34;
 }
 if ((label | 0) == 7) __ZNSt3__221__throw_runtime_errorEPKc(0);
 __ZNSt3__26locale5facetD2Ev($11);
 $51 = (HEAP8[$10 + 11 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 $52 = _catgets(($2 | 0) == -1 ? -1 : $2 << 1, $3, $4, $51) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i18 = 0;
 while (1) {
  if (($$0$i$i18 | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i18 << 2) >> 2] = 0;
  $$0$i$i18 = $$0$i$i18 + 1 | 0;
 }
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 >> 2] = 13512;
 $57 = $51 + (_strlen($52) | 0) | 0;
 $58 = $57;
 $59 = $7 + 128 | 0;
 $$019$i = $51;
 $$020$i = 0;
 while (1) {
  if (!(($$020$i | 0) != 2 & $$019$i >>> 0 < $57 >>> 0)) {
   label = 21;
   break;
  }
  HEAP32[$9 >> 2] = $$019$i;
  $71 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 15]($12, $6, $$019$i, ($58 - $$019$i | 0) > 32 ? $$019$i + 32 | 0 : $57, $9, $7, $59, $8) | 0;
  if (($71 | 0) == 2 ? 1 : (HEAP32[$9 >> 2] | 0) == ($$019$i | 0)) {
   label = 17;
   break;
  } else $$0$i = $7;
  while (1) {
   if ($$0$i >>> 0 >= (HEAP32[$8 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($0, HEAP32[$$0$i >> 2] | 0);
   $$0$i = $$0$i + 4 | 0;
  }
  $$019$i = HEAP32[$9 >> 2] | 0;
  $$020$i = $71;
 }
 if ((label | 0) == 17) __ZNSt3__221__throw_runtime_errorEPKc(0); else if ((label | 0) == 21) {
  __ZNSt3__26locale5facetD2Ev($12);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  STACKTOP = sp;
  return;
 }
}

function __ZN9scannerpp7Scanner4nextEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$07$i = 0, $$07$i23 = 0, $$07$us$i = 0, $$07$us$i20 = 0, $$pre$i = 0, $$pre$i18 = 0, $10 = 0, $12 = 0, $2 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $1 + 28 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($3, 38537) | 0;
 $4 = $0 + 11 | 0;
 $5 = $1 + 12 | 0;
 $6 = $5 + 11 | 0;
 $7 = $1 + 16 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 L1 : while (1) {
  if (!(__ZNK9scannerpp7Scanner11hasNextCharEv($1) | 0)) break;
  $9 = __ZN9scannerpp7Scanner8nextCharEv($1) | 0;
  $10 = HEAP8[$6 >> 0] | 0;
  $12 = $10 & 255;
  if ($10 << 24 >> 24 < 0) {
   $$pre$i = HEAP32[$7 >> 2] | 0;
   $$07$us$i = 0;
   while (1) {
    if ($$07$us$i >>> 0 >= $$pre$i >>> 0) {
     label = 9;
     break L1;
    }
    if ((HEAP8[(HEAP32[$5 >> 2] | 0) + $$07$us$i >> 0] | 0) == $9 << 24 >> 24) break; else $$07$us$i = $$07$us$i + 1 | 0;
   }
  } else {
   $$07$i = 0;
   while (1) {
    if ($$07$i >>> 0 >= $12 >>> 0) {
     label = 9;
     break L1;
    }
    if ((HEAP8[$5 + $$07$i >> 0] | 0) == $9 << 24 >> 24) break; else $$07$i = $$07$i + 1 | 0;
   }
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($3, $9);
 }
 if ((label | 0) == 9) {
  __ZNSt3__2plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_($2, $0, $9);
  if ((HEAP8[$4 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
  } else {
   HEAP8[$0 >> 0] = 0;
   HEAP8[$4 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, 0);
  HEAP32[$0 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 }
 $28 = $0 + 4 | 0;
 L20 : while (1) {
  if (!(__ZNK9scannerpp7Scanner11hasNextCharEv($1) | 0)) {
   label = 27;
   break;
  }
  $30 = __ZN9scannerpp7Scanner8nextCharEv($1) | 0;
  $31 = HEAP8[$6 >> 0] | 0;
  $33 = $31 & 255;
  L23 : do if ($31 << 24 >> 24 < 0) {
   $$pre$i18 = HEAP32[$7 >> 2] | 0;
   $$07$us$i20 = 0;
   while (1) {
    if ($$07$us$i20 >>> 0 >= $$pre$i18 >>> 0) break L23;
    if ((HEAP8[(HEAP32[$5 >> 2] | 0) + $$07$us$i20 >> 0] | 0) == $30 << 24 >> 24) break L20; else $$07$us$i20 = $$07$us$i20 + 1 | 0;
   }
  } else {
   $$07$i23 = 0;
   while (1) {
    if ($$07$i23 >>> 0 >= $33 >>> 0) break L23;
    if ((HEAP8[$5 + $$07$i23 >> 0] | 0) == $30 << 24 >> 24) break L20; else $$07$i23 = $$07$i23 + 1 | 0;
   }
  } while (0);
  __ZNSt3__2plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_($2, $0, $30);
  if ((HEAP8[$4 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
   HEAP32[$28 >> 2] = 0;
  } else {
   HEAP8[$0 >> 0] = 0;
   HEAP8[$4 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, 0);
  HEAP32[$0 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 }
 if ((label | 0) == 27) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE7putbackEc(HEAP32[$1 + 4 >> 2] | 0, $30) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$2 = 0, $13 = 0, $16 = 0, $19 = 0, $26 = 0, $30 = 0, $34 = 0, $43 = 0, $47 = 0, $49 = 0, $55 = 0, $58 = 0, $59 = 0, $68 = 0, $71 = 0, $80 = 0, $87 = 0, $91 = 0, $93 = 0;
 $13 = $8;
 L1 : do if ($0 << 24 >> 24 == $5 << 24 >> 24) if (!(HEAP8[$1 >> 0] | 0)) $$2 = -1; else {
  HEAP8[$1 >> 0] = 0;
  $16 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $16 + 1;
  HEAP8[$16 >> 0] = 46;
  $19 = HEAP8[$7 + 11 >> 0] | 0;
  if (!(($19 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $19 & 255) | 0)) $$2 = 0; else {
   $26 = HEAP32[$9 >> 2] | 0;
   if (($26 - $13 | 0) < 160) {
    $30 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $26 + 4;
    HEAP32[$26 >> 2] = $30;
    $$2 = 0;
   } else $$2 = 0;
  }
 } else {
  if ($0 << 24 >> 24 == $6 << 24 >> 24) {
   $34 = HEAP8[$7 + 11 >> 0] | 0;
   if (($34 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $34 & 255) | 0) {
    if (!(HEAP8[$1 >> 0] | 0)) {
     $$2 = -1;
     break;
    }
    $43 = HEAP32[$9 >> 2] | 0;
    if (($43 - $13 | 0) >= 160) {
     $$2 = 0;
     break;
    }
    $47 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $43 + 4;
    HEAP32[$43 >> 2] = $47;
    HEAP32[$10 >> 2] = 0;
    $$2 = 0;
    break;
   }
  }
  $49 = $11 + 32 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $11 + $$0$i$idx | 0;
   if (($$0$i$idx | 0) == 32) {
    $$0$lcssa$i = $49;
    break;
   }
   if ((HEAP8[$$0$i$ptr >> 0] | 0) == $0 << 24 >> 24) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $55 = $$0$lcssa$i - $11 | 0;
  if (($55 | 0) > 31) $$2 = -1; else {
   $58 = HEAP8[26800 + $55 >> 0] | 0;
   switch ($55 | 0) {
   case 24:
   case 25:
    {
     $59 = HEAP32[$4 >> 2] | 0;
     if (($59 | 0) != ($3 | 0)) if ((HEAP8[$59 + -1 >> 0] & 95) != (HEAP8[$2 >> 0] & 127)) {
      $$2 = -1;
      break L1;
     }
     HEAP32[$4 >> 2] = $59 + 1;
     HEAP8[$59 >> 0] = $58;
     $$2 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[$2 >> 0] = 80;
     $68 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = $68 + 1;
     HEAP8[$68 >> 0] = $58;
     $$2 = 0;
     break L1;
     break;
    }
   default:
    {
     $71 = $58 & 95;
     if (($71 | 0) == (HEAP8[$2 >> 0] | 0)) {
      HEAP8[$2 >> 0] = $71 | 128;
      if (HEAP8[$1 >> 0] | 0) {
       HEAP8[$1 >> 0] = 0;
       $80 = HEAP8[$7 + 11 >> 0] | 0;
       if (($80 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $80 & 255) | 0) {
        $87 = HEAP32[$9 >> 2] | 0;
        if (($87 - $13 | 0) < 160) {
         $91 = HEAP32[$10 >> 2] | 0;
         HEAP32[$9 >> 2] = $87 + 4;
         HEAP32[$87 >> 2] = $91;
        }
       }
      }
     }
     $93 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = $93 + 1;
     HEAP8[$93 >> 0] = $58;
     if (($55 | 0) > 21) {
      $$2 = 0;
      break L1;
     }
     HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
     $$2 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return $$2 | 0;
}

function __ZN9scannerpp7ScanneraSERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$phi$trans$insert = 0, $$pre = 0, $$pre$phi18Z2D = 0, $$pre$phi20Z2D = 0, $$pre$phi21Z2D = 0, $11 = 0, $13 = 0, $2 = 0, $20 = 0, $26 = 0, $28 = 0, $3 = 0, $35 = 0, $39 = 0, $40 = 0, $41 = 0, $45 = 0, $5 = 0, $50 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 if (($1 | 0) == ($0 | 0)) {
  STACKTOP = sp;
  return $0 | 0;
 }
 $5 = $0 + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) {
  $$phi$trans$insert = $0 + 4 | 0;
  $$pre = HEAP32[$$phi$trans$insert >> 2] | 0;
  if (!$$pre) {
   $$pre$phi21Z2D = $$phi$trans$insert;
   label = 5;
  } else {
   $13 = $0 + 24 | 0;
   if (!(HEAP8[$13 >> 0] | 0)) {
    $$pre$phi18Z2D = $13;
    $$pre$phi20Z2D = $$phi$trans$insert;
   } else {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$pre >> 2] | 0) + 4 >> 2] & 511]($$pre);
    $$pre$phi18Z2D = $13;
    $$pre$phi20Z2D = $$phi$trans$insert;
   }
  }
 } else {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$6 >> 2] | 0) + 4 >> 2] & 511]($6);
  HEAP32[$5 >> 2] = 0;
  $11 = $0 + 4 | 0;
  HEAP32[$11 >> 2] = 0;
  $$pre$phi21Z2D = $11;
  label = 5;
 }
 if ((label | 0) == 5) {
  $$pre$phi18Z2D = $0 + 24 | 0;
  $$pre$phi20Z2D = $$pre$phi21Z2D;
 }
 $20 = $0 + 40 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($20, $1 + 40 | 0) | 0;
 HEAP8[$$pre$phi18Z2D >> 0] = HEAP8[$1 + 24 >> 0] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0 + 28 | 0, $1 + 28 | 0) | 0;
 $26 = HEAP32[$1 + 8 >> 2] | 0;
 if ($26 | 0) {
  $28 = __Znwj(20) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $26 + 8 | 0);
  __ZN9scannerpp4FileC2ENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($28, $3);
  HEAP32[$5 >> 2] = $28;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $35 = HEAP32[$5 >> 2] | 0;
  } else $35 = $28;
  HEAP32[$$pre$phi20Z2D >> 2] = HEAP32[$35 + 4 >> 2];
 }
 if (!(HEAP8[$$pre$phi18Z2D >> 0] | 0)) label = 14; else {
  $39 = __Znwj(140) | 0;
  $40 = $39 + 60 | 0;
  $41 = $39 + 8 | 0;
  HEAP32[$39 >> 2] = 516;
  HEAP32[$40 >> 2] = 536;
  HEAP32[$39 + 4 >> 2] = 0;
  __ZNSt3__28ios_base4initEPv($40, $41);
  HEAP32[$39 + 132 >> 2] = 0;
  HEAP32[$39 + 136 >> 2] = -1;
  HEAP32[$39 >> 2] = 3616;
  HEAP32[$40 >> 2] = 3636;
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($41);
  HEAP32[$41 >> 2] = 3548;
  $45 = $39 + 40 | 0;
  HEAP32[$45 >> 2] = 0;
  HEAP32[$45 + 4 >> 2] = 0;
  HEAP32[$45 + 8 >> 2] = 0;
  HEAP32[$45 + 12 >> 2] = 0;
  HEAP32[$39 + 56 >> 2] = 8;
  __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($41, $20);
  HEAP32[$$pre$phi20Z2D >> 2] = $39;
  if (!(HEAP8[$$pre$phi18Z2D >> 0] | 0)) label = 14;
 }
 if ((label | 0) == 14) HEAP32[$$pre$phi20Z2D >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $50 = $2 + 11 | 0;
 HEAP8[$50 >> 0] = 4;
 HEAP32[$2 >> 2] = 537464074;
 HEAP8[$2 + 4 >> 0] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0 + 12 | 0, $2) | 0;
 if ((HEAP8[$50 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNK8optframe27VariableNeighborhoodDescentI6RepHFMiE8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$022 = 0, $$in = 0, $11 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $3 = 0, $30 = 0, $34 = 0, $35 = 0, $4 = 0, $44 = 0, $45 = 0, $5 = 0, $52 = 0, $53 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 144 | 0;
 $3 = sp;
 $4 = $3 + 64 | 0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $3 + 12 | 0;
 HEAP32[$3 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$3 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($3 + 64 | 0, $6);
 HEAP32[$3 + 136 >> 2] = 0;
 HEAP32[$3 + 140 >> 2] = -1;
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $3 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$3 + 60 >> 2] = 24;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 $17 = $3 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 18615, 7) | 0;
 $18 = $1 + 24 | 0;
 $19 = $1 + 28 | 0;
 $21 = HEAP32[$18 >> 2] | 0;
 if ((HEAP32[$19 >> 2] | 0) != ($21 | 0)) {
  $23 = $2 + 11 | 0;
  $24 = $2 + 4 | 0;
  $$022 = 0;
  $$in = $21;
  while (1) {
   $30 = HEAP32[$$in + ($$022 << 2) >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$30 >> 2] | 0) + 16 >> 2] & 127]($2, $30);
   $34 = HEAP8[$23 >> 0] | 0;
   $35 = $34 << 24 >> 24 < 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, $35 ? HEAP32[$2 >> 2] | 0 : $2, $35 ? HEAP32[$24 >> 2] | 0 : $34 & 255) | 0;
   if ((HEAP8[$23 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
   $44 = HEAP32[$19 >> 2] | 0;
   $45 = HEAP32[$18 >> 2] | 0;
   if (($$022 | 0) == (($44 - $45 >> 2) + -1 | 0)) {
    $52 = $45;
    $53 = $44;
   } else {
    __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 15620, 1) | 0;
    $52 = HEAP32[$18 >> 2] | 0;
    $53 = HEAP32[$19 >> 2] | 0;
   }
   $$022 = $$022 + 1 | 0;
   if ($$022 >>> 0 >= $53 - $52 >> 2 >>> 0) break; else $$in = $52;
  }
 }
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 15680, 1) | 0;
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$17 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__210__stdinbufIcE9__getcharEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$048 = 0, $$052 = 0, $$10 = 0, $$11 = 0, $$351 = 0, $$9 = 0, $$sroa$speculated = 0, $10 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $5 = 0, $51 = 0, $6 = 0, $61 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = $0 + 52 | 0;
 $9 = $0 + 48 | 0;
 if (!(HEAP8[$6 >> 0] | 0)) {
  $13 = HEAP32[$0 + 44 >> 2] | 0;
  $$sroa$speculated = ($13 | 0) > 1 ? $13 : 1;
  $15 = $0 + 32 | 0;
  $$052 = 0;
  while (1) {
   if (($$052 | 0) >= ($$sroa$speculated | 0)) {
    label = 9;
    break;
   }
   $18 = _getc(HEAP32[$15 >> 2] | 0) | 0;
   if (($18 | 0) == -1) {
    label = 8;
    break;
   }
   HEAP8[$2 + $$052 >> 0] = $18;
   $$052 = $$052 + 1 | 0;
  }
  if ((label | 0) == 8) $$10 = __ZNSt3__211char_traitsIcE3eofEv() | 0; else if ((label | 0) == 9) {
   do if (!(HEAP8[$0 + 53 >> 0] | 0)) {
    $28 = $0 + 40 | 0;
    $29 = $0 + 36 | 0;
    $30 = $3 + 1 | 0;
    $$048 = $$sroa$speculated;
    L11 : while (1) {
     $31 = HEAP32[$28 >> 2] | 0;
     $32 = $31;
     $34 = HEAP32[$32 >> 2] | 0;
     $37 = HEAP32[$32 + 4 >> 2] | 0;
     $38 = HEAP32[$29 >> 2] | 0;
     $39 = $2 + $$048 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$38 >> 2] | 0) + 16 >> 2] & 15]($38, $31, $2, $39, $4, $3, $30, $5) | 0) {
     case 3:
      {
       label = 16;
       break L11;
       break;
      }
     case 2:
      {
       label = 18;
       break L11;
       break;
      }
     case 1:
      break;
     default:
      break L11;
     }
     $45 = HEAP32[$28 >> 2] | 0;
     HEAP32[$45 >> 2] = $34;
     HEAP32[$45 + 4 >> 2] = $37;
     if (($$048 | 0) == 8) {
      label = 18;
      break;
     }
     $51 = _getc(HEAP32[$15 >> 2] | 0) | 0;
     if (($51 | 0) == -1) {
      label = 18;
      break;
     }
     HEAP8[$39 >> 0] = $51;
     $$048 = $$048 + 1 | 0;
    }
    if ((label | 0) == 16) HEAP8[$3 >> 0] = HEAP8[$2 >> 0] | 0; else if ((label | 0) == 18) {
     $$9 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
     break;
    }
    $$351 = $$048;
    label = 19;
   } else {
    HEAP8[$3 >> 0] = HEAP8[$2 >> 0] | 0;
    $$351 = $$sroa$speculated;
    label = 19;
   } while (0);
   L21 : do if ((label | 0) == 19) {
    L23 : do if ($1) HEAP32[$9 >> 2] = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$3 >> 0] | 0) | 0; else {
     $$0 = $$351;
     do {
      if (($$0 | 0) <= 0) break L23;
      $$0 = $$0 + -1 | 0;
      $61 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$2 + $$0 >> 0] | 0) | 0;
     } while ((_ungetc($61, HEAP32[$15 >> 2] | 0) | 0) != -1);
     $$9 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
     break L21;
    } while (0);
    $$9 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$3 >> 0] | 0) | 0;
   } while (0);
   $$10 = $$9;
  }
  $$11 = $$10;
 } else {
  $10 = HEAP32[$9 >> 2] | 0;
  if ($1) {
   HEAP32[$9 >> 2] = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   HEAP8[$6 >> 0] = 0;
   $$11 = $10;
  } else $$11 = $10;
 }
 STACKTOP = sp;
 return $$11 | 0;
}

function __ZNSt3__210__stdinbufIwE9__getcharEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$048 = 0, $$052 = 0, $$10 = 0, $$11 = 0, $$351 = 0, $$9 = 0, $$sroa$speculated = 0, $10 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $46 = 0, $5 = 0, $52 = 0, $6 = 0, $64 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = $0 + 52 | 0;
 $9 = $0 + 48 | 0;
 if (!(HEAP8[$6 >> 0] | 0)) {
  $13 = HEAP32[$0 + 44 >> 2] | 0;
  $$sroa$speculated = ($13 | 0) > 1 ? $13 : 1;
  $15 = $0 + 32 | 0;
  $$052 = 0;
  while (1) {
   if (($$052 | 0) >= ($$sroa$speculated | 0)) {
    label = 9;
    break;
   }
   $18 = _getc(HEAP32[$15 >> 2] | 0) | 0;
   if (($18 | 0) == -1) {
    label = 8;
    break;
   }
   HEAP8[$2 + $$052 >> 0] = $18;
   $$052 = $$052 + 1 | 0;
  }
  if ((label | 0) == 8) $$10 = __ZNSt3__211char_traitsIwE3eofEv() | 0; else if ((label | 0) == 9) {
   do if (!(HEAP8[$0 + 53 >> 0] | 0)) {
    $29 = $0 + 40 | 0;
    $30 = $0 + 36 | 0;
    $31 = $3 + 4 | 0;
    $$048 = $$sroa$speculated;
    L11 : while (1) {
     $32 = HEAP32[$29 >> 2] | 0;
     $33 = $32;
     $35 = HEAP32[$33 >> 2] | 0;
     $38 = HEAP32[$33 + 4 >> 2] | 0;
     $39 = HEAP32[$30 >> 2] | 0;
     $40 = $2 + $$048 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$39 >> 2] | 0) + 16 >> 2] & 15]($39, $32, $2, $40, $4, $3, $31, $5) | 0) {
     case 3:
      {
       label = 16;
       break L11;
       break;
      }
     case 2:
      {
       label = 18;
       break L11;
       break;
      }
     case 1:
      break;
     default:
      break L11;
     }
     $46 = HEAP32[$29 >> 2] | 0;
     HEAP32[$46 >> 2] = $35;
     HEAP32[$46 + 4 >> 2] = $38;
     if (($$048 | 0) == 8) {
      label = 18;
      break;
     }
     $52 = _getc(HEAP32[$15 >> 2] | 0) | 0;
     if (($52 | 0) == -1) {
      label = 18;
      break;
     }
     HEAP8[$40 >> 0] = $52;
     $$048 = $$048 + 1 | 0;
    }
    if ((label | 0) == 16) HEAP32[$3 >> 2] = HEAP8[$2 >> 0]; else if ((label | 0) == 18) {
     $$9 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
     break;
    }
    $$351 = $$048;
    label = 19;
   } else {
    HEAP32[$3 >> 2] = HEAP8[$2 >> 0];
    $$351 = $$sroa$speculated;
    label = 19;
   } while (0);
   L21 : do if ((label | 0) == 19) {
    L23 : do if ($1) HEAP32[$9 >> 2] = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$3 >> 2] | 0) | 0; else {
     $$0 = $$351;
     do {
      if (($$0 | 0) <= 0) break L23;
      $$0 = $$0 + -1 | 0;
      $64 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP8[$2 + $$0 >> 0] | 0) | 0;
     } while ((_ungetc($64, HEAP32[$15 >> 2] | 0) | 0) != -1);
     $$9 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
     break L21;
    } while (0);
    $$9 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$3 >> 2] | 0) | 0;
   } while (0);
   $$10 = $$9;
  }
  $$11 = $$10;
 } else {
  $10 = HEAP32[$9 >> 2] | 0;
  if ($1) {
   HEAP32[$9 >> 2] = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   HEAP8[$6 >> 0] = 0;
   $$11 = $10;
  } else $$11 = $10;
 }
 STACKTOP = sp;
 return $$11 | 0;
}

function __ZN3HFM24NSSeqNEIGHAddSingleInput10randomMoveERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $17 = 0, $22 = 0, $26 = 0, $27 = 0, $3 = 0, $34 = 0, $38 = 0.0, $39 = 0, $4 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0, $5 = 0, $50 = 0.0, $51 = 0, $55 = 0.0, $56 = 0, $60 = 0.0, $61 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $76 = 0, $79 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $93 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 24 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $9 = $0 + 20 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$5 >> 2] | 0) + 44 >> 2] & 63]($5, ((HEAP32[$10 + 8 >> 2] | 0) - (HEAP32[$10 + 4 >> 2] | 0) | 0) / 12 | 0) | 0;
 $22 = HEAP32[$4 >> 2] | 0;
 $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$22 >> 2] | 0) + 44 >> 2] & 63]($22, HEAP32[(HEAP32[$0 + 28 >> 2] | 0) + ($17 << 2) >> 2] | 0) | 0;
 $27 = HEAP32[$9 >> 2] | 0;
 $34 = HEAP32[$27 + 40 >> 2] | 0;
 $38 = +HEAPF64[$34 >> 3];
 $39 = HEAP32[$4 >> 2] | 0;
 $43 = +(~~+HEAPF64[(HEAP32[$27 + 16 >> 2] | 0) + ($17 << 3) >> 3] | 0);
 $44 = +(~~+HEAPF64[$34 + ($17 << 3) >> 3] | 0);
 $45 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$39 >> 2] | 0) + 68 >> 2] & 1]($39, $43, $44);
 $46 = HEAP32[$4 >> 2] | 0;
 $50 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$46 >> 2] | 0) + 68 >> 2] & 1]($46, $43, $44);
 $51 = HEAP32[$4 >> 2] | 0;
 $55 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$51 >> 2] | 0) + 68 >> 2] & 1]($51, $38, $38);
 $56 = HEAP32[$4 >> 2] | 0;
 $60 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$56 >> 2] | 0) + 68 >> 2] & 1]($56, $38, $38);
 $61 = HEAP32[$4 >> 2] | 0;
 $65 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$61 >> 2] | 0) + 44 >> 2] & 63]($61, 2) | 0;
 $66 = __Znwj(48) | 0;
 HEAPF64[$66 >> 3] = $45;
 HEAPF64[$66 + 8 >> 3] = $55;
 HEAPF64[$66 + 16 >> 3] = $50;
 HEAPF64[$66 + 24 >> 3] = $60;
 HEAPF64[$66 + 32 >> 3] = 1.0;
 HEAPF64[$66 + 40 >> 3] = +($65 | 0);
 $73 = __Znwj(44) | 0;
 HEAP32[$3 >> 2] = 0;
 $74 = $3 + 4 | 0;
 HEAP32[$74 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $76 = __Znwj(48) | 0;
 HEAP32[$3 >> 2] = $76;
 HEAP32[$3 + 8 >> 2] = $76 + 48;
 $79 = $76 + 48 | 0;
 dest = $76;
 src = $66;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$74 >> 2] = $79;
 HEAP8[$73 + 16 >> 0] = 0;
 HEAP32[$73 + 8 >> 2] = 2;
 HEAP8[$73 + 15 >> 0] = 0;
 HEAP8[$73 + 12 >> 0] = 1;
 HEAP8[$73 + 13 >> 0] = 1;
 HEAP8[$73 + 14 >> 0] = 0;
 HEAP32[$73 >> 2] = 5408;
 HEAP32[$73 + 20 >> 2] = $17;
 HEAP32[$73 + 24 >> 2] = $26;
 $88 = $73 + 28 | 0;
 HEAP32[$88 >> 2] = 0;
 $89 = $73 + 32 | 0;
 HEAP32[$89 >> 2] = 0;
 $90 = $73 + 36 | 0;
 HEAP32[$90 >> 2] = 0;
 $91 = __Znwj(48) | 0;
 HEAP32[$89 >> 2] = $91;
 HEAP32[$88 >> 2] = $91;
 HEAP32[$90 >> 2] = $91 + 48;
 $93 = $91 + 48 | 0;
 dest = $91;
 src = $76;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$89 >> 2] = $93;
 HEAP8[$73 + 40 >> 0] = 0;
 HEAP32[$74 >> 2] = $76;
 __ZdlPv($76);
 __ZdlPv($66);
 STACKTOP = sp;
 return $73 | 0;
}

function __ZN8optframe7NGESIndI6RepHFMiEC2ERNS_8SolutionIS1_iEERNS_10EvaluationERNSt3__26vectorINS_16NGESIndStructureIS1_iEENS8_9allocatorISB_EEEEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $14 = 0, $17 = 0, $23 = 0, $46 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $64 = 0, $67 = 0, $storemerge11 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $5 = sp + 4 | 0;
 $6 = sp;
 $10 = $0 + 12 | 0;
 HEAP8[$10 + 4 >> 0] = 0;
 HEAP32[$0 + 8 >> 2] = 2;
 HEAP8[$0 + 15 >> 0] = 0;
 HEAP8[$10 >> 0] = 1;
 HEAP8[$0 + 13 >> 0] = 1;
 HEAP8[$0 + 14 >> 0] = 0;
 HEAP32[$0 >> 2] = 5136;
 $14 = $1 + 20 | 0;
 HEAP32[$0 + 20 >> 2] = HEAP32[$14 >> 2];
 $17 = $1 + 24 | 0;
 HEAP32[$0 + 24 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$14 >> 2] = 0;
 HEAP32[$17 >> 2] = 0;
 $23 = $0 + 44 | 0;
 HEAP8[$23 + 4 >> 0] = 0;
 HEAP32[$0 + 40 >> 2] = 2;
 HEAP8[$0 + 47 >> 0] = 0;
 HEAP8[$23 >> 0] = 1;
 HEAP8[$0 + 45 >> 0] = 1;
 HEAP8[$0 + 46 >> 0] = 0;
 HEAP32[$0 + 32 >> 2] = 4920;
 HEAPF64[$0 + 56 >> 3] = +HEAPF64[$2 + 24 >> 3];
 HEAPF64[$0 + 64 >> 3] = +HEAPF64[$2 + 32 >> 3];
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($0 + 72 | 0, $2 + 40 | 0);
 HEAP32[$0 + 84 >> 2] = HEAP32[$2 + 52 >> 2];
 HEAP8[$0 + 88 >> 0] = HEAP8[$2 + 56 >> 0] | 0;
 HEAP8[$0 + 89 >> 0] = HEAP8[$2 + 57 >> 0] | 0;
 HEAPF64[$0 + 96 >> 3] = +HEAPF64[$2 + 64 >> 3];
 $46 = $0 + 104 | 0;
 HEAP32[$46 >> 2] = 0;
 $47 = $0 + 108 | 0;
 HEAP32[$47 >> 2] = 0;
 HEAP32[$0 + 112 >> 2] = 0;
 HEAP32[$46 >> 2] = HEAP32[$3 >> 2];
 $50 = $3 + 4 | 0;
 HEAP32[$47 >> 2] = HEAP32[$50 >> 2];
 $52 = $3 + 8 | 0;
 HEAP32[$0 + 112 >> 2] = HEAP32[$52 >> 2];
 HEAP32[$52 >> 2] = 0;
 HEAP32[$50 >> 2] = 0;
 HEAP32[$3 >> 2] = 0;
 $55 = $0 + 116 | 0;
 HEAP32[$55 >> 2] = 0;
 $56 = $0 + 120 | 0;
 HEAP32[$56 >> 2] = 0;
 HEAP32[$0 + 124 >> 2] = 0;
 HEAP32[$$byval_copy1 >> 2] = 0;
 if (($4 | 0) <= 0) {
  $60 = 0;
  $61 = 0;
  HEAP32[$5 >> 2] = $60;
  HEAP32[$6 >> 2] = $61;
  HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$6 >> 2];
  __ZNSt3__214random_shuffleINS_11__wrap_iterIPiEEEEvT_S4_($$byval_copy, $$byval_copy1);
  STACKTOP = sp;
  return;
 }
 $59 = $0 + 124 | 0;
 $62 = 0;
 $64 = 0;
 $storemerge11 = 0;
 while (1) {
  if (($62 | 0) == ($64 | 0)) __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_($55, $$byval_copy1); else {
   HEAP32[$62 >> 2] = $storemerge11;
   HEAP32[$56 >> 2] = $62 + 4;
  }
  $67 = (HEAP32[$$byval_copy1 >> 2] | 0) + 1 | 0;
  HEAP32[$$byval_copy1 >> 2] = $67;
  if (($67 | 0) >= ($4 | 0)) break;
  $62 = HEAP32[$56 >> 2] | 0;
  $64 = HEAP32[$59 >> 2] | 0;
  $storemerge11 = $67;
 }
 $60 = HEAP32[$55 >> 2] | 0;
 $61 = HEAP32[$56 >> 2] | 0;
 HEAP32[$5 >> 2] = $60;
 HEAP32[$6 >> 2] = $61;
 HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$6 >> 2];
 __ZNSt3__214random_shuffleINS_11__wrap_iterIPiEEEEvT_S4_($$byval_copy, $$byval_copy1);
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$2 = 0, $13 = 0, $16 = 0, $19 = 0, $26 = 0, $30 = 0, $34 = 0, $43 = 0, $47 = 0, $49 = 0, $55 = 0, $56 = 0, $59 = 0, $60 = 0, $70 = 0, $79 = 0, $86 = 0, $90 = 0, $92 = 0;
 $13 = $8;
 L1 : do if (($0 | 0) == ($5 | 0)) if (!(HEAP8[$1 >> 0] | 0)) $$2 = -1; else {
  HEAP8[$1 >> 0] = 0;
  $16 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $16 + 1;
  HEAP8[$16 >> 0] = 46;
  $19 = HEAP8[$7 + 11 >> 0] | 0;
  if (!(($19 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $19 & 255) | 0)) $$2 = 0; else {
   $26 = HEAP32[$9 >> 2] | 0;
   if (($26 - $13 | 0) < 160) {
    $30 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $26 + 4;
    HEAP32[$26 >> 2] = $30;
    $$2 = 0;
   } else $$2 = 0;
  }
 } else {
  if (($0 | 0) == ($6 | 0)) {
   $34 = HEAP8[$7 + 11 >> 0] | 0;
   if (($34 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $34 & 255) | 0) {
    if (!(HEAP8[$1 >> 0] | 0)) {
     $$2 = -1;
     break;
    }
    $43 = HEAP32[$9 >> 2] | 0;
    if (($43 - $13 | 0) >= 160) {
     $$2 = 0;
     break;
    }
    $47 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $43 + 4;
    HEAP32[$43 >> 2] = $47;
    HEAP32[$10 >> 2] = 0;
    $$2 = 0;
    break;
   }
  }
  $49 = $11 + 128 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $11 + ($$0$i$idx << 2) | 0;
   if (($$0$i$idx | 0) == 32) {
    $$0$lcssa$i = $49;
    break;
   }
   if ((HEAP32[$$0$i$ptr >> 2] | 0) == ($0 | 0)) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $55 = $$0$lcssa$i - $11 | 0;
  $56 = $55 >> 2;
  if (($55 | 0) > 124) $$2 = -1; else {
   $59 = HEAP8[26800 + $56 >> 0] | 0;
   switch ($56 | 0) {
   case 24:
   case 25:
    {
     $60 = HEAP32[$4 >> 2] | 0;
     if (($60 | 0) != ($3 | 0)) if ((HEAP8[$60 + -1 >> 0] & 95) != (HEAP8[$2 >> 0] & 127)) {
      $$2 = -1;
      break L1;
     }
     HEAP32[$4 >> 2] = $60 + 1;
     HEAP8[$60 >> 0] = $59;
     $$2 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[$2 >> 0] = 80;
     break;
    }
   default:
    {
     $70 = $59 & 95;
     if (($70 | 0) == (HEAP8[$2 >> 0] | 0)) {
      HEAP8[$2 >> 0] = $70 | 128;
      if (HEAP8[$1 >> 0] | 0) {
       HEAP8[$1 >> 0] = 0;
       $79 = HEAP8[$7 + 11 >> 0] | 0;
       if (($79 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $79 & 255) | 0) {
        $86 = HEAP32[$9 >> 2] | 0;
        if (($86 - $13 | 0) < 160) {
         $90 = HEAP32[$10 >> 2] | 0;
         HEAP32[$9 >> 2] = $86 + 4;
         HEAP32[$86 >> 2] = $90;
        }
       }
      }
     }
    }
   }
   $92 = HEAP32[$4 >> 2] | 0;
   HEAP32[$4 >> 2] = $92 + 1;
   HEAP8[$92 >> 0] = $59;
   if (($55 | 0) > 84) $$2 = 0; else {
    HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
    $$2 = 0;
   }
  }
 } while (0);
 return $$2 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$039$0 = 0, $$sroa$046$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 $$byval_copy = sp + 300 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $5 = sp;
 $6 = sp + 304 | 0;
 $7 = sp + 296 | 0;
 $8 = sp + 68 | 0;
 $9 = sp + 64 | 0;
 $10 = sp + 60 | 0;
 $11 = sp + 56 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 27049, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$046$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$046$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 do if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$039$0 = 1;
  $44 = 0;
 } else {
  $38 = _malloc($$2 << 3) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$039$0 = 0;
   $44 = $38;
   break;
  }
 } while (0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 HEAP32[$1 >> 2] = $43;
 if (!$$sroa$039$0) _free($44);
 _free($$sroa$046$0);
 STACKTOP = sp;
 return $43 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$039$0 = 0, $$sroa$046$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 $$byval_copy = sp + 300 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $5 = sp;
 $6 = sp + 304 | 0;
 $7 = sp + 296 | 0;
 $8 = sp + 68 | 0;
 $9 = sp + 64 | 0;
 $10 = sp + 60 | 0;
 $11 = sp + 56 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 38537, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$046$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$046$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 do if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$039$0 = 1;
  $44 = 0;
 } else {
  $38 = _malloc($$2 << 3) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$039$0 = 0;
   $44 = $38;
   break;
  }
 } while (0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 HEAP32[$1 >> 2] = $43;
 if (!$$sroa$039$0) _free($44);
 _free($$sroa$046$0);
 STACKTOP = sp;
 return $43 | 0;
}

function __ZN8optframe4NGESI6RepHFMiE14mutateESParamsERNSt3__26vectorINS_16NGESIndStructureIS1_iEENS3_9allocatorIS6_EEEERNS4_IiNS7_IiEEEEi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$076 = 0, $$1 = 0, $10 = 0, $15 = 0, $19 = 0, $20 = 0, $24 = 0, $27 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $44 = 0.0, $46 = 0, $48 = 0.0, $5 = 0, $51 = 0, $55 = 0.0, $57 = 0, $59 = 0.0, $62 = 0, $67 = 0.0, $69 = 0, $71 = 0.0, $74 = 0, $78 = 0, $80 = 0, $82 = 0, $83 = 0, $87 = 0, $9 = 0.0, $storemerge81 = 0.0, $storemerge82 = 0.0, $storemerge83 = 0.0;
 $4 = $0 + 44 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $9 = +FUNCTION_TABLE_di[HEAP32[(HEAP32[$5 >> 2] | 0) + 56 >> 2] & 7]($5);
 $10 = $0 + 48 | 0;
 if ($9 <= +HEAPF64[(HEAP32[$10 >> 2] | 0) + 16 >> 3]) {
  $15 = HEAP32[$4 >> 2] | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 44 >> 2] & 63]($15, $3) | 0;
  $20 = HEAP32[$4 >> 2] | 0;
  $24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$20 >> 2] | 0) + 44 >> 2] & 63]($20, $3) | 0;
  if (($3 | 0) > 1 & ($24 | 0) == ($19 | 0)) {
   do {
    $27 = HEAP32[$4 >> 2] | 0;
    $31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 44 >> 2] & 63]($27, $3) | 0;
   } while (($31 | 0) == ($19 | 0));
   $$1 = $31;
  } else $$1 = $24;
  $33 = HEAP32[$2 >> 2] | 0;
  $34 = $33 + ($19 << 2) | 0;
  $35 = $33 + ($$1 << 2) | 0;
  $36 = HEAP32[$34 >> 2] | 0;
  HEAP32[$34 >> 2] = HEAP32[$35 >> 2];
  HEAP32[$35 >> 2] = $36;
 }
 if (($3 | 0) <= 0) return;
 $$076 = 0;
 do {
  $39 = HEAP32[$4 >> 2] | 0;
  $44 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$39 >> 2] | 0) + 68 >> 2] & 1]($39, 0.0, .1) / 100.0;
  $46 = (HEAP32[$1 >> 2] | 0) + ($$076 << 5) + 16 | 0;
  $48 = $44 + +HEAPF64[$46 >> 3];
  if ($48 < 0.0) $storemerge83 = 0.0; else if ($48 > 3.0) $storemerge83 = 3.0; else $storemerge83 = $48;
  HEAPF64[$46 >> 3] = $storemerge83;
  $51 = HEAP32[$4 >> 2] | 0;
  $55 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$51 >> 2] | 0) + 68 >> 2] & 1]($51, 0.0, $storemerge83);
  $57 = (HEAP32[$1 >> 2] | 0) + ($$076 << 5) | 0;
  $59 = $55 + +HEAPF64[$57 >> 3];
  if ($59 < 0.0) $storemerge82 = 0.0; else if ($59 > 1.0) $storemerge82 = 1.0; else $storemerge82 = $59;
  HEAPF64[$57 >> 3] = $storemerge82;
  $62 = HEAP32[$4 >> 2] | 0;
  $67 = +FUNCTION_TABLE_didd[HEAP32[(HEAP32[$62 >> 2] | 0) + 68 >> 2] & 1]($62, 0.0, .1) / 100.0;
  $69 = (HEAP32[$1 >> 2] | 0) + ($$076 << 5) + 24 | 0;
  $71 = $67 + +HEAPF64[$69 >> 3];
  if ($71 < 0.0) $storemerge81 = 0.0; else if ($71 > 1.0) $storemerge81 = 1.0; else $storemerge81 = $71;
  HEAPF64[$69 >> 3] = $storemerge81;
  $74 = HEAP32[$4 >> 2] | 0;
  $78 = FUNCTION_TABLE_iidi[HEAP32[(HEAP32[$74 >> 2] | 0) + 64 >> 2] & 3]($74, $storemerge81, 10) | 0;
  $80 = (HEAP32[$1 >> 2] | 0) + ($$076 << 5) + 8 | 0;
  $82 = (HEAP32[$80 >> 2] | 0) + $78 | 0;
  $83 = ($82 | 0) < 1;
  $$ = $83 ? 1 : $82;
  HEAP32[$80 >> 2] = $$;
  $87 = HEAP32[(HEAP32[HEAP32[$10 >> 2] >> 2] | 0) + ($$076 << 2) >> 2] | 0;
  HEAP32[$80 >> 2] = (($83 ? 1 : $82) | 0) > ($87 | 0) ? $87 : $$;
  $$076 = $$076 + 1 | 0;
 } while (($$076 | 0) != ($3 | 0));
 return;
}

function __ZNSt3__27__sort5IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_SO_SO_T_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i = 0, $103 = 0, $11 = 0, $18 = 0, $20 = 0, $25 = 0, $32 = 0, $39 = 0, $47 = 0, $53 = 0, $6 = 0, $60 = 0, $67 = 0, $74 = 0, $81 = 0, $88 = 0, $95 = 0;
 $6 = __ZNSt3__27__sort3IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_T_($0, $1, $2, $5) | 0;
 $11 = HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] | 0;
 if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 40 >> 2] & 63]($11, (HEAP32[$3 >> 2] | 0) + 32 | 0, (HEAP32[$2 >> 2] | 0) + 32 | 0) | 0) {
  $18 = HEAP32[$2 >> 2] | 0;
  HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$3 >> 2] = $18;
  $20 = $6 + 1 | 0;
  $25 = HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] | 0;
  if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] & 63]($25, (HEAP32[$2 >> 2] | 0) + 32 | 0, (HEAP32[$1 >> 2] | 0) + 32 | 0) | 0) {
   $32 = HEAP32[$1 >> 2] | 0;
   HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$2 >> 2] = $32;
   $39 = HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] | 0;
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$39 >> 2] | 0) + 40 >> 2] & 63]($39, (HEAP32[$1 >> 2] | 0) + 32 | 0, (HEAP32[$0 >> 2] | 0) + 32 | 0) | 0) {
    $47 = HEAP32[$0 >> 2] | 0;
    HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
    HEAP32[$1 >> 2] = $47;
    $$0$i = $6 + 3 | 0;
   } else $$0$i = $6 + 2 | 0;
  } else $$0$i = $20;
 } else $$0$i = $6;
 $53 = HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] | 0;
 if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$53 >> 2] | 0) + 40 >> 2] & 63]($53, (HEAP32[$4 >> 2] | 0) + 32 | 0, (HEAP32[$3 >> 2] | 0) + 32 | 0) | 0)) {
  $$0 = $$0$i;
  return $$0 | 0;
 }
 $60 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$4 >> 2] = $60;
 $67 = HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] | 0;
 if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$67 >> 2] | 0) + 40 >> 2] & 63]($67, (HEAP32[$3 >> 2] | 0) + 32 | 0, (HEAP32[$2 >> 2] | 0) + 32 | 0) | 0)) {
  $$0 = $$0$i + 1 | 0;
  return $$0 | 0;
 }
 $74 = HEAP32[$2 >> 2] | 0;
 HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$3 >> 2] = $74;
 $81 = HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] | 0;
 if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 63]($81, (HEAP32[$2 >> 2] | 0) + 32 | 0, (HEAP32[$1 >> 2] | 0) + 32 | 0) | 0)) {
  $$0 = $$0$i + 2 | 0;
  return $$0 | 0;
 }
 $88 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$2 >> 2] = $88;
 $95 = HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] | 0;
 if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$95 >> 2] | 0) + 40 >> 2] & 63]($95, (HEAP32[$1 >> 2] | 0) + 32 | 0, (HEAP32[$0 >> 2] | 0) + 32 | 0) | 0)) {
  $$0 = $$0$i + 3 | 0;
  return $$0 | 0;
 }
 $103 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$1 >> 2] = $103;
 $$0 = $$0$i + 4 | 0;
 return $$0 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$041$0 = 0, $$sroa$048$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 72 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $5 = sp;
 $6 = sp + 134 | 0;
 $7 = sp + 68 | 0;
 $8 = sp + 76 | 0;
 $9 = sp + 64 | 0;
 $10 = sp + 60 | 0;
 $11 = sp + 56 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 27049, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$048$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$048$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$041$0 = 0;
 } else {
  $38 = _malloc($$2 << 1) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$041$0 = $38;
  }
 }
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 _free($$sroa$041$0);
 _free($$sroa$048$0);
 STACKTOP = sp;
 return $43 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$041$0 = 0, $$sroa$048$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 72 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $5 = sp;
 $6 = sp + 134 | 0;
 $7 = sp + 68 | 0;
 $8 = sp + 76 | 0;
 $9 = sp + 64 | 0;
 $10 = sp + 60 | 0;
 $11 = sp + 56 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 38537, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$048$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$048$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$041$0 = 0;
 } else {
  $38 = _malloc($$2 << 1) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$041$0 = $38;
  }
 }
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 _free($$sroa$041$0);
 _free($$sroa$048$0);
 STACKTOP = sp;
 return $43 | 0;
}

function __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb1ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$sroa$7$0$i = 0, $$sroa$7$1$i = 0, $$sroa$speculated$i$i = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $20 = 0, $22 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $44 = 0, $5 = 0, $51 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $75 = 0, $77 = 0, $8 = 0, $81 = 0, $9 = 0, $tmpcast$i$byval_copy = 0, $tmpcast1$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast1$i$byval_copy = sp + 40 | 0;
 $tmpcast$i$byval_copy = sp + 32 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $5 = sp + 24 | 0;
 $6 = sp + 16 | 0;
 $7 = $0 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $1;
 $11 = HEAP32[$9 >> 2] | 0;
 $14 = HEAP32[$9 + 4 >> 2] | 0;
 $15 = $2;
 $17 = HEAP32[$15 >> 2] | 0;
 $20 = HEAP32[$15 + 4 >> 2] | 0;
 $22 = $17 - $11 << 3;
 HEAP32[$7 >> 2] = $8 - $14 + $20 + $22;
 $28 = (HEAP32[$0 >> 2] | 0) + ($8 >>> 5 << 2) | 0;
 $29 = $8 & 31;
 $30 = $28;
 if (($14 | 0) != ($29 | 0)) {
  $77 = $3;
  HEAP32[$77 >> 2] = $11;
  HEAP32[$77 + 4 >> 2] = $14;
  $81 = $4;
  HEAP32[$81 >> 2] = $17;
  HEAP32[$81 + 4 >> 2] = $20;
  HEAP32[$5 >> 2] = $30;
  HEAP32[$5 + 4 >> 2] = $29;
  HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$3 >> 2];
  HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$tmpcast1$i$byval_copy >> 2] = HEAP32[$4 >> 2];
  HEAP32[$tmpcast1$i$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZNSt3__216__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_($6, $tmpcast$i$byval_copy, $tmpcast1$i$byval_copy, $5);
  STACKTOP = sp;
  return;
 }
 $33 = $20 - $14 + $22 | 0;
 $35 = $11;
 if (($33 | 0) > 0) {
  if (!$14) {
   $$0$i$i = $33;
   $$sroa$7$0$i = 0;
   $58 = $28;
   $59 = $11;
   $66 = $35;
  } else {
   $38 = 32 - $14 | 0;
   $$sroa$speculated$i$i = ($33 | 0) < ($38 | 0) ? $33 : $38;
   $44 = -1 >>> ($38 - $$sroa$speculated$i$i | 0) & -1 << $14;
   HEAP32[$28 >> 2] = HEAP32[$28 >> 2] & ~$44 | HEAP32[$35 >> 2] & $44;
   $51 = $$sroa$speculated$i$i + $14 | 0;
   $55 = $35 + 4 | 0;
   $$0$i$i = $33 - $$sroa$speculated$i$i | 0;
   $$sroa$7$0$i = $51 & 31;
   $58 = $28 + ($51 >>> 5 << 2) | 0;
   $59 = $55;
   $66 = $55;
  }
  $56 = ($$0$i$i | 0) / 32 | 0;
  _memmove($58 | 0, $59 | 0, $56 << 2 | 0) | 0;
  $61 = $$0$i$i - ($56 << 5) | 0;
  $62 = $58 + ($56 << 2) | 0;
  $64 = $62;
  if (($61 | 0) > 0) {
   $68 = -1 >>> (32 - $61 | 0);
   HEAP32[$62 >> 2] = HEAP32[$62 >> 2] & ~$68 | HEAP32[$66 + ($56 << 2) >> 2] & $68;
   $$sroa$7$1$i = $61;
   $75 = $64;
  } else {
   $$sroa$7$1$i = $$sroa$7$0$i;
   $75 = $64;
  }
 } else {
  $$sroa$7$1$i = $14;
  $75 = $30;
 }
 HEAP32[$6 >> 2] = $75;
 HEAP32[$6 + 4 >> 2] = $$sroa$7$1$i;
 STACKTOP = sp;
 return;
}

function _wcsrtombs($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$05675 = 0, $$057$lcssa = 0, $$05785 = 0, $$05874 = 0, $$1 = 0, $$159 = 0, $$260$lcssa = 0, $$26084 = 0, $$279 = 0, $$3 = 0, $$361 = 0, $$478 = 0, $$5 = 0, $$pn = 0, $10 = 0, $12 = 0, $18 = 0, $19 = 0, $24 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $40 = 0, $51 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 L1 : do if (!$0) {
  $7 = HEAP32[$1 >> 2] | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (!$8) $$0 = 0; else {
   $$05675 = $7;
   $$05874 = 0;
   $10 = $8;
   while (1) {
    if ($10 >>> 0 > 127) {
     $12 = _wcrtomb($4, $10, 0) | 0;
     if (($12 | 0) == -1) {
      $$0 = -1;
      break L1;
     } else $$pn = $12;
    } else $$pn = 1;
    $$159 = $$pn + $$05874 | 0;
    $$05675 = $$05675 + 4 | 0;
    $10 = HEAP32[$$05675 >> 2] | 0;
    if (!$10) {
     $$0 = $$159;
     break;
    } else $$05874 = $$159;
   }
  }
 } else {
  L9 : do if ($2 >>> 0 > 3) {
   $$05785 = $0;
   $$26084 = $2;
   $19 = HEAP32[$1 >> 2] | 0;
   while (1) {
    $18 = HEAP32[$19 >> 2] | 0;
    if (($18 + -1 | 0) >>> 0 > 126) {
     if (!$18) break;
     $24 = _wcrtomb($$05785, $18, 0) | 0;
     if (($24 | 0) == -1) {
      $$0 = -1;
      break L1;
     }
     $$1 = $$05785 + $24 | 0;
     $$361 = $$26084 - $24 | 0;
     $32 = $19;
    } else {
     HEAP8[$$05785 >> 0] = $18;
     $$1 = $$05785 + 1 | 0;
     $$361 = $$26084 + -1 | 0;
     $32 = HEAP32[$1 >> 2] | 0;
    }
    $19 = $32 + 4 | 0;
    HEAP32[$1 >> 2] = $19;
    if ($$361 >>> 0 <= 3) {
     $$057$lcssa = $$1;
     $$260$lcssa = $$361;
     break L9;
    } else {
     $$05785 = $$1;
     $$26084 = $$361;
    }
   }
   HEAP8[$$05785 >> 0] = 0;
   HEAP32[$1 >> 2] = 0;
   $$0 = $2 - $$26084 | 0;
   break L1;
  } else {
   $$057$lcssa = $0;
   $$260$lcssa = $2;
  } while (0);
  if (!$$260$lcssa) $$0 = $2; else {
   $$279 = $$057$lcssa;
   $$478 = $$260$lcssa;
   $35 = HEAP32[$1 >> 2] | 0;
   while (1) {
    $34 = HEAP32[$35 >> 2] | 0;
    if (($34 + -1 | 0) >>> 0 > 126) {
     if (!$34) {
      label = 19;
      break;
     }
     $40 = _wcrtomb($4, $34, 0) | 0;
     if (($40 | 0) == -1) {
      $$0 = -1;
      break L1;
     }
     if ($$478 >>> 0 < $40 >>> 0) {
      label = 22;
      break;
     }
     _wcrtomb($$279, HEAP32[$35 >> 2] | 0, 0) | 0;
     $$3 = $$279 + $40 | 0;
     $$5 = $$478 - $40 | 0;
     $51 = $35;
    } else {
     HEAP8[$$279 >> 0] = $34;
     $$3 = $$279 + 1 | 0;
     $$5 = $$478 + -1 | 0;
     $51 = HEAP32[$1 >> 2] | 0;
    }
    $35 = $51 + 4 | 0;
    HEAP32[$1 >> 2] = $35;
    if (!$$5) {
     $$0 = $2;
     break L1;
    } else {
     $$279 = $$3;
     $$478 = $$5;
    }
   }
   if ((label | 0) == 19) {
    HEAP8[$$279 >> 0] = 0;
    HEAP32[$1 >> 2] = 0;
    $$0 = $2 - $$478 | 0;
    break;
   } else if ((label | 0) == 22) {
    $$0 = $2 - $$478 | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$$i = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $29 = 0, $31 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $46 = 0, $48 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $61 = 0, $62 = 0, $65 = 0, $66 = 0, $7 = 0, $9 = 0, $$06$i$i$looptemp = 0, $61$looptemp = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 12 | 0;
 $14 = $12 << 1;
 $$sroa$speculated$$i = $12 >>> 0 < 178956970 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 357913941;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 357913941) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 * 12 | 0) | 0;
 $23 = $21;
 $25 = $22 + ($$sroa$speculated$$i * 12 | 0) | 0;
 HEAP32[$22 + ($6 * 12 | 0) + 8 >> 2] = 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $1 + 4 | 0;
 HEAP32[$22 + ($6 * 12 | 0) + 4 >> 2] = HEAP32[$29 >> 2];
 $31 = $1 + 8 | 0;
 HEAP32[$22 + ($6 * 12 | 0) + 8 >> 2] = HEAP32[$31 >> 2];
 HEAP32[$31 >> 2] = 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$1 >> 2] = 0;
 $35 = $21 + 12 | 0;
 $36 = HEAP32[$0 >> 2] | 0;
 $37 = HEAP32[$2 >> 2] | 0;
 if (($37 | 0) == ($36 | 0)) {
  $55 = $23;
  $56 = $36;
  $58 = $36;
 } else {
  $$06$i$i = $37;
  $$sroa$7$0 = $23;
  $41 = $21;
  do {
   $40 = $41 + -12 | 0;
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$40 >> 2] = 0;
   $43 = $41 + -8 | 0;
   HEAP32[$43 >> 2] = 0;
   HEAP32[$41 + -4 >> 2] = 0;
   HEAP32[$40 >> 2] = HEAP32[$$06$i$i >> 2];
   $46 = $$06$i$i$looptemp + -8 | 0;
   HEAP32[$43 >> 2] = HEAP32[$46 >> 2];
   $48 = $$06$i$i$looptemp + -4 | 0;
   HEAP32[$41 + -4 >> 2] = HEAP32[$48 >> 2];
   HEAP32[$48 >> 2] = 0;
   HEAP32[$46 >> 2] = 0;
   HEAP32[$$06$i$i >> 2] = 0;
   $41 = $$sroa$7$0 + -12 | 0;
   $$sroa$7$0 = $41;
  } while (($$06$i$i | 0) != ($36 | 0));
  $55 = $$sroa$7$0;
  $56 = HEAP32[$0 >> 2] | 0;
  $58 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $55;
 HEAP32[$2 >> 2] = $35;
 HEAP32[$9 >> 2] = $25;
 $57 = $56;
 if (($58 | 0) != ($57 | 0)) {
  $61 = $58;
  do {
   $61$looptemp = $61;
   $61 = $61 + -12 | 0;
   $62 = HEAP32[$61 >> 2] | 0;
   if ($62 | 0) {
    $65 = $61$looptemp + -8 | 0;
    $66 = HEAP32[$65 >> 2] | 0;
    if (($66 | 0) != ($62 | 0)) HEAP32[$65 >> 2] = $66 + (~(($66 + -8 - $62 | 0) >>> 3) << 3);
    __ZdlPv($62);
   }
  } while (($61 | 0) != ($57 | 0));
 }
 if (!$56) return;
 __ZdlPv($56);
 return;
}

function __ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiE7perturbERNS_8SolutionIS1_iEERNS_15MultiEvaluationERNS_4MOSCEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$ph26 = 0, $$pre$phi38Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $21 = 0, $24 = 0, $30 = 0, $36 = 0, $41 = 0, $45 = 0, $47 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 if (($4 | 0) <= -2) {
  $$pre$phi38Z2D = $1 + 24 | 0;
  $$pre$phiZ2D = $1 + 20 | 0;
  $56 = $0 + 36 | 0;
  $57 = HEAP32[$56 >> 2] | 0;
  $58 = HEAP32[$57 >> 2] | 0;
  $59 = $58 + 56 | 0;
  $60 = HEAP32[$59 >> 2] | 0;
  $61 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  $62 = HEAP32[$$pre$phi38Z2D >> 2] | 0;
  FUNCTION_TABLE_viiii[$60 & 31]($57, $2, $61, $62);
  STACKTOP = sp;
  return;
 }
 $7 = $0 + 40 | 0;
 $8 = $0 + 24 | 0;
 $9 = $0 + 28 | 0;
 $10 = $1 + 20 | 0;
 $11 = $1 + 24 | 0;
 $12 = $0 + 13 | 0;
 $$0$ph26 = 0;
 while (1) {
  while (1) {
   $13 = HEAP32[$7 >> 2] | 0;
   $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$13 >> 2] | 0) + 44 >> 2] & 63]($13, (HEAP32[$9 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 2) | 0;
   $24 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($21 << 2) >> 2] | 0;
   $30 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$24 >> 2] | 0) + 40 >> 2] & 63]($24, HEAP32[$10 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0;
   if ($30 | 0) break;
   if (!(HEAP8[$12 >> 0] | 0)) continue;
   $36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16872, 49) | 0, $$0$ph26) | 0, 16922, 1) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $36 + (HEAP32[(HEAP32[$36 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $41 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
   $45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$41 >> 2] | 0) + 28 >> 2] & 63]($41, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($36, $45) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($36) | 0;
  }
  $47 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$30 >> 2] | 0) + 52 >> 2] & 31]($30, $2, HEAP32[$10 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0;
  if ($47 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$47 >> 2] | 0) + 4 >> 2] & 511]($47);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$30 >> 2] | 0) + 4 >> 2] & 511]($30);
  if (($$0$ph26 | 0) > ($4 | 0)) {
   $$pre$phi38Z2D = $11;
   $$pre$phiZ2D = $10;
   break;
  } else $$0$ph26 = $$0$ph26 + 1 | 0;
 }
 $56 = $0 + 36 | 0;
 $57 = HEAP32[$56 >> 2] | 0;
 $58 = HEAP32[$57 >> 2] | 0;
 $59 = $58 + 56 | 0;
 $60 = HEAP32[$59 >> 2] | 0;
 $61 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $62 = HEAP32[$$pre$phi38Z2D >> 2] | 0;
 FUNCTION_TABLE_viiii[$60 & 31]($57, $2, $61, $62);
 STACKTOP = sp;
 return;
}

function __ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiE7perturbERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$ph26 = 0, $$pre$phi38Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $21 = 0, $24 = 0, $30 = 0, $36 = 0, $41 = 0, $45 = 0, $47 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 if (($4 | 0) <= -2) {
  $$pre$phi38Z2D = $1 + 24 | 0;
  $$pre$phiZ2D = $1 + 20 | 0;
  $56 = $0 + 36 | 0;
  $57 = HEAP32[$56 >> 2] | 0;
  $58 = HEAP32[$57 >> 2] | 0;
  $59 = $58 + 80 | 0;
  $60 = HEAP32[$59 >> 2] | 0;
  $61 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  $62 = HEAP32[$$pre$phi38Z2D >> 2] | 0;
  FUNCTION_TABLE_viiii[$60 & 31]($57, $2, $61, $62);
  STACKTOP = sp;
  return;
 }
 $7 = $0 + 40 | 0;
 $8 = $0 + 24 | 0;
 $9 = $0 + 28 | 0;
 $10 = $1 + 20 | 0;
 $11 = $1 + 24 | 0;
 $12 = $0 + 13 | 0;
 $$0$ph26 = 0;
 while (1) {
  while (1) {
   $13 = HEAP32[$7 >> 2] | 0;
   $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$13 >> 2] | 0) + 44 >> 2] & 63]($13, (HEAP32[$9 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 2) | 0;
   $24 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($21 << 2) >> 2] | 0;
   $30 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$24 >> 2] | 0) + 40 >> 2] & 63]($24, HEAP32[$10 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0;
   if ($30 | 0) break;
   if (!(HEAP8[$12 >> 0] | 0)) continue;
   $36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16872, 49) | 0, $$0$ph26) | 0, 16922, 1) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $36 + (HEAP32[(HEAP32[$36 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $41 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
   $45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$41 >> 2] | 0) + 28 >> 2] & 63]($41, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($36, $45) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($36) | 0;
  }
  $47 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$30 >> 2] | 0) + 48 >> 2] & 31]($30, $2, HEAP32[$10 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0;
  if ($47 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$47 >> 2] | 0) + 4 >> 2] & 511]($47);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$30 >> 2] | 0) + 4 >> 2] & 511]($30);
  if (($$0$ph26 | 0) > ($4 | 0)) {
   $$pre$phi38Z2D = $11;
   $$pre$phiZ2D = $10;
   break;
  } else $$0$ph26 = $$0$ph26 + 1 | 0;
 }
 $56 = $0 + 36 | 0;
 $57 = HEAP32[$56 >> 2] | 0;
 $58 = HEAP32[$57 >> 2] | 0;
 $59 = $58 + 80 | 0;
 $60 = HEAP32[$59 >> 2] | 0;
 $61 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $62 = HEAP32[$$pre$phi38Z2D >> 2] | 0;
 FUNCTION_TABLE_viiii[$60 & 31]($57, $2, $61, $62);
 STACKTOP = sp;
 return;
}

function __ZN3HFM14treatForecasts15readFromScannerERNSt3__26vectorIPN9scannerpp7ScannerENS1_9allocatorIS5_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02544 = 0, $$043 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $43 = 0, $53 = 0, $59 = 0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $2 = sp + 60 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $8 = (HEAP32[$1 + 4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $9 = $8 >> 2;
 HEAP32[$2 >> 2] = 0;
 $10 = $2 + 4 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 if ($9 | 0) __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEj($2, $9);
 $13 = $0 + 4 | 0;
 $14 = $0 + 8 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $16 = HEAP32[$13 >> 2] | 0;
 $18 = ($15 - $16 | 0) / 12 | 0;
 $20 = $16;
 $21 = $15;
 if ($9 >>> 0 > $18 >>> 0) __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE8__appendEj($13, $9 - $18 | 0); else if ($9 >>> 0 < $18 >>> 0) {
  $24 = $20 + ($9 * 12 | 0) | 0;
  if (($21 | 0) != ($24 | 0)) {
   $27 = $21;
   while (1) {
    $26 = $27 + -12 | 0;
    HEAP32[$14 >> 2] = $26;
    $28 = HEAP32[$26 >> 2] | 0;
    if (!$28) $30 = $26; else {
     $33 = $27 + -8 | 0;
     $34 = HEAP32[$33 >> 2] | 0;
     if (($34 | 0) != ($28 | 0)) HEAP32[$33 >> 2] = $34 + (~(($34 + -8 - $28 | 0) >>> 3) << 3);
     __ZdlPv($28);
     $30 = HEAP32[$14 >> 2] | 0;
    }
    if (($30 | 0) == ($24 | 0)) break; else $27 = $30;
   }
  }
 }
 if (($8 | 0) > 0) {
  $$02544 = 0;
  do {
   __ZN9scannerpp7ScannerC2ERKS0_($3, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$02544 << 2) >> 2] | 0);
   $53 = __ZN9scannerpp7Scanner7nextIntEv($3) | 0;
   HEAP32[(HEAP32[$2 >> 2] | 0) + ($$02544 << 2) >> 2] = $53;
   if (($53 | 0) > 0) {
    $$043 = 0;
    do {
     $61 = +__ZN9scannerpp7Scanner10nextDoubleEv($3);
     HEAPF64[$4 >> 3] = $61;
     $62 = HEAP32[$13 >> 2] | 0;
     $63 = $62 + ($$02544 * 12 | 0) + 4 | 0;
     $64 = HEAP32[$63 >> 2] | 0;
     if (($64 | 0) == (HEAP32[$62 + ($$02544 * 12 | 0) + 8 >> 2] | 0)) __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($62 + ($$02544 * 12 | 0) | 0, $4); else {
      HEAPF64[$64 >> 3] = $61;
      HEAP32[$63 >> 2] = $64 + 8;
     }
     $$043 = $$043 + 1 | 0;
    } while (($$043 | 0) < (HEAP32[(HEAP32[$2 >> 2] | 0) + ($$02544 << 2) >> 2] | 0));
   }
   $59 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($$02544 << 2) >> 2] | 0;
   if ($59 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$59 >> 2] | 0) + 4 >> 2] & 511]($59);
   __ZN9scannerpp7ScannerD2Ev($3);
   $$02544 = $$02544 + 1 | 0;
  } while (($$02544 | 0) < ($9 | 0));
 }
 $41 = HEAP32[$2 >> 2] | 0;
 if (!$41) {
  STACKTOP = sp;
  return;
 }
 $43 = HEAP32[$10 >> 2] | 0;
 if (($43 | 0) != ($41 | 0)) HEAP32[$10 >> 2] = $43 + (~(($43 + -4 - $41 | 0) >>> 2) << 2);
 __ZdlPv($41);
 STACKTOP = sp;
 return;
}

function __ZN8optframe18MOILSLPerturbationI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $1 = sp;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = $2 + 64 | 0;
 $5 = $2 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $6);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $2 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $17 = $1 + 11 | 0;
 HEAP8[$17 >> 0] = 8;
 $18 = $1;
 HEAP32[$18 >> 2] = 1182036047;
 HEAP32[$18 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $23 = $2 + 8 | 0;
 $24 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($23, $1, 8) | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $25 = $3 + 11 | 0;
 HEAP8[$25 >> 0] = 6;
 HEAP8[$3 >> 0] = HEAP8[16924] | 0;
 HEAP8[$3 + 1 >> 0] = HEAP8[16925] | 0;
 HEAP8[$3 + 2 >> 0] = HEAP8[16926] | 0;
 HEAP8[$3 + 3 >> 0] = HEAP8[16927] | 0;
 HEAP8[$3 + 4 >> 0] = HEAP8[16928] | 0;
 HEAP8[$3 + 5 >> 0] = HEAP8[16929] | 0;
 HEAP8[$3 + 6 >> 0] = 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($24, $3, 6) | 0, 16931, 9) | 0;
 if ((HEAP8[$25 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$23 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i = 0, $$021$i$i = 0, $$021$ph$i$i = 0, $$034 = 0, $16 = 0, $18 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $33 = 0, $4 = 0, $41 = 0, $42 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $scevgep39 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = $1;
 $4 = sp + 12 | 0;
 $5 = sp;
 $6 = $0 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 if ($8) {
  $50 = HEAP32[$0 + 4 >> 2] | 0;
  $51 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $50 = $7 & 255;
  $51 = 10;
 }
 $16 = $2 - $3 | 0;
 do if ($16 | 0) {
  if ($8) {
   $18 = HEAP32[$0 >> 2] | 0;
   $23 = $18;
   $24 = HEAP32[$0 + 4 >> 2] | 0;
   $25 = $18;
  } else {
   $23 = $0;
   $24 = $7 & 255;
   $25 = $0;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($1, $25, $23 + $24 | 0) | 0) {
   HEAP32[$5 >> 2] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   HEAP32[$5 + 8 >> 2] = 0;
   if ($16 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($5);
   if ($16 >>> 0 < 11) {
    HEAP8[$5 + 11 >> 0] = $16;
    $$021$ph$i$i = $5;
   } else {
    $32 = $16 + 16 & -16;
    $33 = __Znwj($32) | 0;
    HEAP32[$5 >> 2] = $33;
    HEAP32[$5 + 8 >> 2] = $32 | -2147483648;
    HEAP32[$5 + 4 >> 2] = $16;
    $$021$ph$i$i = $33;
   }
   $$0$i$i = $1;
   $$021$i$i = $$021$ph$i$i;
   while (1) {
    if (($$0$i$i | 0) == ($2 | 0)) break;
    __ZNSt3__211char_traitsIcE6assignERcRKc($$021$i$i, $$0$i$i);
    $$0$i$i = $$0$i$i + 1 | 0;
    $$021$i$i = $$021$i$i + 1 | 0;
   }
   HEAP8[$4 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($$021$ph$i$i + $16 | 0, $4);
   $41 = HEAP8[$5 + 11 >> 0] | 0;
   $42 = $41 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $42 ? HEAP32[$5 >> 2] | 0 : $5, $42 ? HEAP32[$5 + 4 >> 2] | 0 : $41 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   break;
  }
  $53 = $50 + $16 | 0;
  if (($51 - $50 | 0) >>> 0 < $16 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $51, $53 - $51 | 0, $50, $50, 0, 0);
  if ((HEAP8[$6 >> 0] | 0) < 0) $59 = HEAP32[$0 >> 2] | 0; else $59 = $0;
  $scevgep39 = $2 + ($50 - $3) | 0;
  $$0 = $59 + $50 | 0;
  $$034 = $1;
  while (1) {
   if (($$034 | 0) == ($2 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc($$0, $$034);
   $$0 = $$0 + 1 | 0;
   $$034 = $$034 + 1 | 0;
  }
  HEAP8[$4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($59 + $scevgep39 | 0, $4);
  if ((HEAP8[$6 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $53;
   break;
  } else {
   HEAP8[$6 >> 0] = $53;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i = 0, $$021$i$i = 0, $$034 = 0, $17 = 0, $19 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $34 = 0, $37 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $55 = 0, $56 = 0, $58 = 0, $6 = 0, $64 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $5 = $0 + 8 | 0;
 $6 = $5 + 3 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 if ($8) {
  $55 = HEAP32[$0 + 4 >> 2] | 0;
  $56 = (HEAP32[$5 >> 2] & 2147483647) + -1 | 0;
 } else {
  $55 = $7 & 255;
  $56 = 1;
 }
 $17 = $2 - $1 >> 2;
 do if ($17 | 0) {
  if ($8) {
   $19 = HEAP32[$0 >> 2] | 0;
   $24 = $19;
   $25 = HEAP32[$0 + 4 >> 2] | 0;
   $26 = $19;
  } else {
   $24 = $0;
   $25 = $7 & 255;
   $26 = $0;
  }
  if (__ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_($1, $26, $24 + ($25 << 2) | 0) | 0) {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   if ($17 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($4);
   do if ($17 >>> 0 < 2) {
    HEAP8[$4 + 8 + 3 >> 0] = $17;
    $$0$i$i = $1;
    $$021$i$i = $4;
   } else {
    $34 = $17 + 4 & -4;
    if ($34 >>> 0 > 1073741823) _abort(); else {
     $37 = __Znwj($34 << 2) | 0;
     HEAP32[$4 >> 2] = $37;
     HEAP32[$4 + 8 >> 2] = $34 | -2147483648;
     HEAP32[$4 + 4 >> 2] = $17;
     $$0$i$i = $1;
     $$021$i$i = $37;
     break;
    }
   } while (0);
   while (1) {
    if (($$0$i$i | 0) == ($2 | 0)) break;
    __ZNSt3__211char_traitsIwE6assignERwRKw($$021$i$i, $$0$i$i);
    $$0$i$i = $$0$i$i + 4 | 0;
    $$021$i$i = $$021$i$i + 4 | 0;
   }
   HEAP32[$3 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($$021$i$i, $3);
   $46 = HEAP8[$4 + 8 + 3 >> 0] | 0;
   $47 = $46 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwj($0, $47 ? HEAP32[$4 >> 2] | 0 : $4, $47 ? HEAP32[$4 + 4 >> 2] | 0 : $46 & 255) | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
   break;
  }
  $58 = $55 + $17 | 0;
  if (($56 - $55 | 0) >>> 0 < $17 >>> 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($0, $56, $58 - $56 | 0, $55, $55, 0, 0);
  if ((HEAP8[$6 >> 0] | 0) < 0) $64 = HEAP32[$0 >> 2] | 0; else $64 = $0;
  $$0 = $64 + ($55 << 2) | 0;
  $$034 = $1;
  while (1) {
   if (($$034 | 0) == ($2 | 0)) break;
   __ZNSt3__211char_traitsIwE6assignERwRKw($$0, $$034);
   $$0 = $$0 + 4 | 0;
   $$034 = $$034 + 4 | 0;
  }
  HEAP32[$3 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($$0, $3);
  if ((HEAP8[$6 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $58;
   break;
  } else {
   HEAP8[$6 >> 0] = $58;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE8__appendEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$0$i16 = 0, $$06$i$i = 0, $$in = 0, $$sroa$16$0 = 0, $$sroa$7$0 = 0, $$sroa$speculated$$i = 0, $10 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ((($3 - $5 | 0) / 12 | 0) >>> 0 >= $1 >>> 0) {
  $$0$i = $1;
  $10 = $5;
  do {
   HEAP32[$10 >> 2] = 0;
   HEAP32[$10 + 4 >> 2] = 0;
   HEAP32[$10 + 8 >> 2] = 0;
   $10 = (HEAP32[$4 >> 2] | 0) + 12 | 0;
   HEAP32[$4 >> 2] = $10;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
  return;
 }
 $15 = HEAP32[$0 >> 2] | 0;
 $17 = ($5 - $15 | 0) / 12 | 0;
 $18 = $17 + $1 | 0;
 if ($18 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $21 = ($3 - $15 | 0) / 12 | 0;
 $23 = $21 << 1;
 $$sroa$speculated$$i = $21 >>> 0 < 178956970 ? ($23 >>> 0 < $18 >>> 0 ? $18 : $23) : 357913941;
 do if (!$$sroa$speculated$$i) $31 = 0; else if ($$sroa$speculated$$i >>> 0 > 357913941) {
  $27 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($27, 15810);
  HEAP32[$27 >> 2] = 14216;
  ___cxa_throw($27 | 0, 3104, 246);
 } else {
  $31 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  break;
 } while (0);
 $30 = $31 + ($17 * 12 | 0) | 0;
 $32 = $30;
 $33 = $31 + ($$sroa$speculated$$i * 12 | 0) | 0;
 $$0$i16 = $1;
 $$in = $30;
 $$sroa$16$0 = $32;
 do {
  HEAP32[$$in >> 2] = 0;
  HEAP32[$$in + 4 >> 2] = 0;
  HEAP32[$$in + 8 >> 2] = 0;
  $$in = $$sroa$16$0 + 12 | 0;
  $$sroa$16$0 = $$in;
  $$0$i16 = $$0$i16 + -1 | 0;
 } while (($$0$i16 | 0) != 0);
 $39 = $33;
 $40 = HEAP32[$0 >> 2] | 0;
 $41 = HEAP32[$4 >> 2] | 0;
 if (($41 | 0) == ($40 | 0)) {
  $51 = $32;
  $52 = $40;
  $54 = $40;
 } else {
  $$06$i$i = $41;
  $$sroa$7$0 = $32;
  $45 = $30;
  do {
   $44 = $45 + -12 | 0;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$44 >> 2] = HEAP32[$$06$i$i >> 2];
   HEAP32[$44 + 4 >> 2] = HEAP32[$$06$i$i + 4 >> 2];
   HEAP32[$44 + 8 >> 2] = HEAP32[$$06$i$i + 8 >> 2];
   HEAP32[$$06$i$i >> 2] = 0;
   HEAP32[$$06$i$i + 4 >> 2] = 0;
   HEAP32[$$06$i$i + 8 >> 2] = 0;
   $45 = $$sroa$7$0 + -12 | 0;
   $$sroa$7$0 = $45;
  } while (($$06$i$i | 0) != ($40 | 0));
  $51 = $$sroa$7$0;
  $52 = HEAP32[$0 >> 2] | 0;
  $54 = HEAP32[$4 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $51;
 HEAP32[$4 >> 2] = $$sroa$16$0;
 HEAP32[$2 >> 2] = $39;
 $53 = $52;
 if (($54 | 0) != ($53 | 0)) {
  $57 = $54;
  do {
   $57 = $57 + -12 | 0;
   if ((HEAP8[$57 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$57 >> 2] | 0);
  } while (($57 | 0) != ($53 | 0));
 }
 if (!$52) return;
 __ZdlPv($52);
 return;
}

function __ZN3HFM30NSIteratorHFMChangeSingleInput5firstEv($0) {
 $0 = $0 | 0;
 var $$03335 = 0, $$pre$phi38Z2D = 0, $$pre$phiZ2D = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $39 = 0, $44 = 0, $45 = 0, $58 = 0, $76 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 40 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (((HEAP32[$3 + 4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0) > 0) {
  $9 = $0 + 44 | 0;
  $10 = $0 + 56 | 0;
  $11 = $0 + 24 | 0;
  $12 = $0 + 28 | 0;
  $13 = $0 + 32 | 0;
  $$03335 = 0;
  $18 = $3;
  do {
   $20 = HEAP32[(HEAP32[$18 >> 2] | 0) + ($$03335 << 3) >> 2] | 0;
   $23 = HEAP32[(HEAP32[$9 >> 2] | 0) + ($20 << 2) >> 2] | 0;
   $26 = HEAP32[(HEAP32[$10 >> 2] | 0) + ($20 << 2) >> 2] | 0;
   $27 = __Znwj(40) | 0;
   HEAP8[$27 + 16 >> 0] = 0;
   HEAP32[$27 + 8 >> 2] = 2;
   HEAP8[$27 + 15 >> 0] = 0;
   HEAP8[$27 + 12 >> 0] = 1;
   HEAP8[$27 + 13 >> 0] = 1;
   HEAP8[$27 + 14 >> 0] = 0;
   HEAP32[$27 >> 2] = 5736;
   HEAP32[$27 + 20 >> 2] = $$03335;
   HEAP8[$27 + 24 >> 0] = 0;
   HEAP32[$27 + 28 >> 2] = $23;
   HEAP32[$27 + 32 >> 2] = $26;
   HEAP32[$27 + 36 >> 2] = 1;
   HEAP32[$1 >> 2] = $27;
   $39 = HEAP32[$12 >> 2] | 0;
   if ($39 >>> 0 < (HEAP32[$13 >> 2] | 0) >>> 0) {
    HEAP32[$39 >> 2] = $27;
    $44 = (HEAP32[$12 >> 2] | 0) + 4 | 0;
    HEAP32[$12 >> 2] = $44;
    $58 = $44;
   } else {
    __ZNSt3__26vectorIPN3HFM24MoveHFMChangeSingleInputENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($11, $1);
    $58 = HEAP32[$12 >> 2] | 0;
   }
   $45 = __Znwj(40) | 0;
   HEAP8[$45 + 16 >> 0] = 0;
   HEAP32[$45 + 8 >> 2] = 2;
   HEAP8[$45 + 15 >> 0] = 0;
   HEAP8[$45 + 12 >> 0] = 1;
   HEAP8[$45 + 13 >> 0] = 1;
   HEAP8[$45 + 14 >> 0] = 0;
   HEAP32[$45 >> 2] = 5736;
   HEAP32[$45 + 20 >> 2] = $$03335;
   HEAP8[$45 + 24 >> 0] = 1;
   HEAP32[$45 + 28 >> 2] = $23;
   HEAP32[$45 + 32 >> 2] = $26;
   HEAP32[$45 + 36 >> 2] = 1;
   HEAP32[$1 >> 2] = $45;
   if ($58 >>> 0 < (HEAP32[$13 >> 2] | 0) >>> 0) {
    HEAP32[$58 >> 2] = $45;
    HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 4;
   } else __ZNSt3__26vectorIPN3HFM24MoveHFMChangeSingleInputENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($11, $1);
   $$03335 = $$03335 + 1 | 0;
   $18 = HEAP32[$2 >> 2] | 0;
  } while (($$03335 | 0) < ((HEAP32[$18 + 4 >> 2] | 0) - (HEAP32[$18 >> 2] | 0) >> 3 | 0));
  $$pre$phi38Z2D = $12;
  $$pre$phiZ2D = $11;
 } else {
  $$pre$phi38Z2D = $0 + 28 | 0;
  $$pre$phiZ2D = $0 + 24 | 0;
 }
 $15 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if ((HEAP32[$$pre$phi38Z2D >> 2] | 0) == ($15 | 0)) {
  $$sink = 0;
  $76 = $0 + 20 | 0;
  HEAP32[$76 >> 2] = $$sink;
  STACKTOP = sp;
  return;
 }
 $$sink = HEAP32[$15 + (HEAP32[$0 + 36 >> 2] << 2) >> 2] | 0;
 $76 = $0 + 20 | 0;
 HEAP32[$76 >> 2] = $$sink;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE8__appendEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$$i = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, $43 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $60 = 0, $61 = 0, $9 = 0, $$06$i$i$looptemp = 0, $56$looptemp = 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $9 = $5;
 if ((($3 - $5 | 0) / 12 | 0) >>> 0 >= $1 >>> 0) {
  _memset($5 | 0, 0, $1 * 12 | 0) | 0;
  HEAP32[$4 >> 2] = $9 + ($1 * 12 | 0);
  return;
 }
 $11 = HEAP32[$0 >> 2] | 0;
 $13 = ($5 - $11 | 0) / 12 | 0;
 $14 = $13 + $1 | 0;
 $16 = $11;
 if ($14 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $18 = ($3 - $11 | 0) / 12 | 0;
 $20 = $18 << 1;
 $$sroa$speculated$$i = $18 >>> 0 < 178956970 ? ($20 >>> 0 < $14 >>> 0 ? $14 : $20) : 357913941;
 do if (!$$sroa$speculated$$i) $28 = 0; else if ($$sroa$speculated$$i >>> 0 > 357913941) {
  $24 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($24, 15810);
  HEAP32[$24 >> 2] = 14216;
  ___cxa_throw($24 | 0, 3104, 246);
 } else {
  $28 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  break;
 } while (0);
 $27 = $28 + ($13 * 12 | 0) | 0;
 $29 = $27;
 $31 = $28 + ($$sroa$speculated$$i * 12 | 0) | 0;
 _memset($27 | 0, 0, $1 * 12 | 0) | 0;
 $33 = $27 + ($1 * 12 | 0) | 0;
 if (($9 | 0) == ($16 | 0)) {
  $50 = $29;
  $51 = $11;
  $53 = $9;
 } else {
  $$06$i$i = $9;
  $$sroa$7$0 = $29;
  $36 = $27;
  do {
   $35 = $36 + -12 | 0;
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$35 >> 2] = 0;
   $38 = $36 + -8 | 0;
   HEAP32[$38 >> 2] = 0;
   HEAP32[$36 + -4 >> 2] = 0;
   HEAP32[$35 >> 2] = HEAP32[$$06$i$i >> 2];
   $41 = $$06$i$i$looptemp + -8 | 0;
   HEAP32[$38 >> 2] = HEAP32[$41 >> 2];
   $43 = $$06$i$i$looptemp + -4 | 0;
   HEAP32[$36 + -4 >> 2] = HEAP32[$43 >> 2];
   HEAP32[$43 >> 2] = 0;
   HEAP32[$41 >> 2] = 0;
   HEAP32[$$06$i$i >> 2] = 0;
   $36 = $$sroa$7$0 + -12 | 0;
   $$sroa$7$0 = $36;
  } while (($$06$i$i | 0) != ($16 | 0));
  $50 = $$sroa$7$0;
  $51 = HEAP32[$0 >> 2] | 0;
  $53 = HEAP32[$4 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $50;
 HEAP32[$4 >> 2] = $33;
 HEAP32[$2 >> 2] = $31;
 $52 = $51;
 if (($53 | 0) != ($52 | 0)) {
  $56 = $53;
  do {
   $56$looptemp = $56;
   $56 = $56 + -12 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   if ($57 | 0) {
    $60 = $56$looptemp + -8 | 0;
    $61 = HEAP32[$60 >> 2] | 0;
    if (($61 | 0) != ($57 | 0)) HEAP32[$60 >> 2] = $61 + (~(($61 + -8 - $57 | 0) >>> 3) << 3);
    __ZdlPv($57);
   }
  } while (($56 | 0) != ($52 | 0));
 }
 if (!$51) return;
 __ZdlPv($51);
 return;
}

function _pop_arg_60($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $108 = 0, $109 = 0.0, $115 = 0, $116 = 0.0, $16 = 0, $17 = 0, $20 = 0, $29 = 0, $30 = 0, $31 = 0, $40 = 0, $41 = 0, $43 = 0, $46 = 0, $47 = 0, $56 = 0, $57 = 0, $59 = 0, $62 = 0, $71 = 0, $72 = 0, $73 = 0, $82 = 0, $83 = 0, $85 = 0, $88 = 0, $9 = 0, $97 = 0, $98 = 0, $99 = 0;
 L1 : do if ($1 >>> 0 <= 20) do switch ($1 | 0) {
 case 9:
  {
   $9 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $10 = HEAP32[$9 >> 2] | 0;
   HEAP32[$2 >> 2] = $9 + 4;
   HEAP32[$0 >> 2] = $10;
   break L1;
   break;
  }
 case 10:
  {
   $16 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $17 = HEAP32[$16 >> 2] | 0;
   HEAP32[$2 >> 2] = $16 + 4;
   $20 = $0;
   HEAP32[$20 >> 2] = $17;
   HEAP32[$20 + 4 >> 2] = (($17 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 11:
  {
   $29 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $30 = HEAP32[$29 >> 2] | 0;
   HEAP32[$2 >> 2] = $29 + 4;
   $31 = $0;
   HEAP32[$31 >> 2] = $30;
   HEAP32[$31 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 12:
  {
   $40 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $41 = $40;
   $43 = HEAP32[$41 >> 2] | 0;
   $46 = HEAP32[$41 + 4 >> 2] | 0;
   HEAP32[$2 >> 2] = $40 + 8;
   $47 = $0;
   HEAP32[$47 >> 2] = $43;
   HEAP32[$47 + 4 >> 2] = $46;
   break L1;
   break;
  }
 case 13:
  {
   $56 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $57 = HEAP32[$56 >> 2] | 0;
   HEAP32[$2 >> 2] = $56 + 4;
   $59 = ($57 & 65535) << 16 >> 16;
   $62 = $0;
   HEAP32[$62 >> 2] = $59;
   HEAP32[$62 + 4 >> 2] = (($59 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 14:
  {
   $71 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $72 = HEAP32[$71 >> 2] | 0;
   HEAP32[$2 >> 2] = $71 + 4;
   $73 = $0;
   HEAP32[$73 >> 2] = $72 & 65535;
   HEAP32[$73 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 15:
  {
   $82 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $83 = HEAP32[$82 >> 2] | 0;
   HEAP32[$2 >> 2] = $82 + 4;
   $85 = ($83 & 255) << 24 >> 24;
   $88 = $0;
   HEAP32[$88 >> 2] = $85;
   HEAP32[$88 + 4 >> 2] = (($85 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 16:
  {
   $97 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $98 = HEAP32[$97 >> 2] | 0;
   HEAP32[$2 >> 2] = $97 + 4;
   $99 = $0;
   HEAP32[$99 >> 2] = $98 & 255;
   HEAP32[$99 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 17:
  {
   $108 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $109 = +HEAPF64[$108 >> 3];
   HEAP32[$2 >> 2] = $108 + 8;
   HEAPF64[$0 >> 3] = $109;
   break L1;
   break;
  }
 case 18:
  {
   $115 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $116 = +HEAPF64[$115 >> 3];
   HEAP32[$2 >> 2] = $115 + 8;
   HEAPF64[$0 >> 3] = $116;
   break L1;
   break;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function __ZN8optframe22BasicMOILSPerturbationI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $1 = sp;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = $2 + 64 | 0;
 $5 = $2 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $6);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $2 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $17 = $1 + 11 | 0;
 HEAP8[$17 >> 0] = 8;
 $18 = $1;
 HEAP32[$18 >> 2] = 1182036047;
 HEAP32[$18 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $23 = $2 + 8 | 0;
 $25 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($23, $1, 8) | 0, 16793, 1) | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $26 = $3 + 11 | 0;
 HEAP8[$26 >> 0] = 4;
 HEAP32[$3 >> 2] = 978537545;
 HEAP8[$3 + 4 >> 0] = 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($25, $3, 4) | 0, 16795, 12) | 0;
 if ((HEAP8[$26 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$23 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__2L12init_wmonthsEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[29808] | 0)) if (___cxa_guard_acquire(29808) | 0) {
  $4 = 35760;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 36048);
  ___cxa_atexit(264, 0, ___dso_handle | 0) | 0;
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35760, 11956) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35772, 11988) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35784, 12024) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35796, 12048) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35808, 12072) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35820, 12088) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35832, 12108) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35844, 12128) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35856, 12156) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35868, 12196) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35880, 12228) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35892, 12264) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35904, 12300) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35916, 12316) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35928, 12332) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35940, 12348) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35952, 12072) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35964, 12364) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35976, 12380) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35988, 12396) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36e3, 12412) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36012, 12428) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36024, 12444) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36036, 12460) | 0;
 return;
}

function __ZNSt3__2L11init_monthsEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[29728] | 0)) if (___cxa_guard_acquire(29728) | 0) {
  $4 = 34948;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 35236);
  ___cxa_atexit(260, 0, ___dso_handle | 0) | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(34948, 27324) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(34960, 27332) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(34972, 27341) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(34984, 27347) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(34996, 27353) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35008, 27357) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35020, 27362) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35032, 27367) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35044, 27374) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35056, 27384) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35068, 27392) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35080, 27401) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35092, 27410) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35104, 27414) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35116, 27418) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35128, 27422) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35140, 27353) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35152, 27426) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35164, 27430) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35176, 27434) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35188, 27438) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35200, 27442) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35212, 27446) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35224, 27450) | 0;
 return;
}

function _mbsnrtowcs($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$ = 0, $$04975 = 0, $$05274 = 0, $$055$ = 0, $$05573 = 0, $$064 = 0, $$076 = 0, $$1 = 0, $$150 = 0, $$153 = 0, $$156 = 0, $$25170 = 0, $$25469 = 0, $$257 = 0, $$271 = 0, $$3 = 0, $$35868 = 0, $$59 = 0, $$cast = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $18 = 0, $21 = 0, $22 = 0, $25 = 0, $30 = 0, $31 = 0, $39 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP32[$6 >> 2] = $7;
 $8 = ($0 | 0) != 0;
 $$ = $8 ? $3 : 256;
 $$59 = $8 ? $0 : $5;
 $$cast = $7;
 L1 : do if (($$ | 0) != 0 & ($7 | 0) != 0) {
  $$04975 = 0;
  $$05274 = $2;
  $$05573 = $$;
  $$076 = $$59;
  $44 = $$cast;
  while (1) {
   $11 = $$05274 >>> 2;
   $12 = $11 >>> 0 >= $$05573 >>> 0;
   if (!($$05274 >>> 0 > 131 | $12)) {
    $$064 = $$076;
    $$150 = $$04975;
    $$153 = $$05274;
    $$257 = $$05573;
    $25 = $44;
    break L1;
   }
   $$055$ = $12 ? $$05573 : $11;
   $15 = $$05274 - $$055$ | 0;
   $16 = _mbsrtowcs($$076, $6, $$055$, $4) | 0;
   if (($16 | 0) == -1) break;
   $18 = ($$076 | 0) == ($5 | 0);
   $$156 = $$05573 - ($18 ? 0 : $16) | 0;
   $$1 = $18 ? $$076 : $$076 + ($16 << 2) | 0;
   $21 = $16 + $$04975 | 0;
   $22 = HEAP32[$6 >> 2] | 0;
   if (($$156 | 0) != 0 & ($22 | 0) != 0) {
    $$04975 = $21;
    $$05274 = $15;
    $$05573 = $$156;
    $$076 = $$1;
    $44 = $22;
   } else {
    $$064 = $$1;
    $$150 = $21;
    $$153 = $15;
    $$257 = $$156;
    $25 = $22;
    break L1;
   }
  }
  $$064 = $$076;
  $$150 = -1;
  $$153 = $15;
  $$257 = 0;
  $25 = HEAP32[$6 >> 2] | 0;
 } else {
  $$064 = $$59;
  $$150 = 0;
  $$153 = $2;
  $$257 = $$;
  $25 = $$cast;
 } while (0);
 L8 : do if (!$25) $$3 = $$150; else if (($$257 | 0) != 0 & ($$153 | 0) != 0) {
  $$25170 = $$150;
  $$25469 = $$153;
  $$271 = $$064;
  $$35868 = $$257;
  $30 = $25;
  while (1) {
   $31 = _mbrtowc($$271, $30, $$25469, $4) | 0;
   if (($31 + 2 | 0) >>> 0 < 3) break;
   $30 = (HEAP32[$6 >> 2] | 0) + $31 | 0;
   HEAP32[$6 >> 2] = $30;
   $$25469 = $$25469 - $31 | 0;
   $$35868 = $$35868 + -1 | 0;
   $39 = $$25170 + 1 | 0;
   if (!(($$35868 | 0) != 0 & ($$25469 | 0) != 0)) {
    $$3 = $39;
    break L8;
   } else {
    $$25170 = $39;
    $$271 = $$271 + 4 | 0;
   }
  }
  switch ($31 | 0) {
  case -1:
   {
    $$3 = -1;
    break L8;
    break;
   }
  case 0:
   {
    HEAP32[$6 >> 2] = 0;
    $$3 = $$25170;
    break L8;
    break;
   }
  default:
   {
    HEAP32[$4 >> 2] = 0;
    $$3 = $$25170;
    break L8;
   }
  }
 } else $$3 = $$150; while (0);
 if ($8) HEAP32[$1 >> 2] = HEAP32[$6 >> 2];
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNSt3__26vectorINS0_INS_4pairIddEENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$$i = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $9 = 0, $$06$i$i$looptemp = 0, $53$looptemp = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 12 | 0;
 $14 = $12 << 1;
 $$sroa$speculated$$i = $12 >>> 0 < 178956970 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 357913941;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 357913941) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 * 12 | 0) | 0;
 $23 = $21;
 $25 = $22 + ($$sroa$speculated$$i * 12 | 0) | 0;
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($21, $1);
 $27 = $21 + 12 | 0;
 $28 = HEAP32[$0 >> 2] | 0;
 $29 = HEAP32[$2 >> 2] | 0;
 if (($29 | 0) == ($28 | 0)) {
  $47 = $23;
  $48 = $28;
  $50 = $28;
 } else {
  $$06$i$i = $29;
  $$sroa$7$0 = $23;
  $33 = $21;
  do {
   $32 = $33 + -12 | 0;
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$32 >> 2] = 0;
   $35 = $33 + -8 | 0;
   HEAP32[$35 >> 2] = 0;
   HEAP32[$33 + -4 >> 2] = 0;
   HEAP32[$32 >> 2] = HEAP32[$$06$i$i >> 2];
   $38 = $$06$i$i$looptemp + -8 | 0;
   HEAP32[$35 >> 2] = HEAP32[$38 >> 2];
   $40 = $$06$i$i$looptemp + -4 | 0;
   HEAP32[$33 + -4 >> 2] = HEAP32[$40 >> 2];
   HEAP32[$40 >> 2] = 0;
   HEAP32[$38 >> 2] = 0;
   HEAP32[$$06$i$i >> 2] = 0;
   $33 = $$sroa$7$0 + -12 | 0;
   $$sroa$7$0 = $33;
  } while (($$06$i$i | 0) != ($28 | 0));
  $47 = $$sroa$7$0;
  $48 = HEAP32[$0 >> 2] | 0;
  $50 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $47;
 HEAP32[$2 >> 2] = $27;
 HEAP32[$9 >> 2] = $25;
 $49 = $48;
 if (($50 | 0) != ($49 | 0)) {
  $53 = $50;
  do {
   $53$looptemp = $53;
   $53 = $53 + -12 | 0;
   $54 = HEAP32[$53 >> 2] | 0;
   if ($54 | 0) {
    $57 = $53$looptemp + -8 | 0;
    $58 = HEAP32[$57 >> 2] | 0;
    if (($58 | 0) != ($54 | 0)) HEAP32[$57 >> 2] = $58 + (~(($58 + -16 - $54 | 0) >>> 4) << 4);
    __ZdlPv($54);
   }
  } while (($53 | 0) != ($49 | 0));
 }
 if (!$48) return;
 __ZdlPv($48);
 return;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$phi$trans$insert = 0, $$pre$phi26Z2D = 0, $$pre$phi28Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $32 = 0, $33 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $49 = 0, $53 = 0, $59 = 0, $6 = 0, $62 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 if (($1 | 0) == -1) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $4 = $0 + 12 | 0;
 $6 = $0 + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $0 + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $0 + 28 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 if (($10 | 0) == ($12 | 0)) {
  $14 = $0 + 48 | 0;
  if (!(HEAP32[$14 >> 2] & 16)) {
   $$1 = -1;
   STACKTOP = sp;
   return $$1 | 0;
  }
  $18 = $0 + 20 | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  $22 = $0 + 44 | 0;
  $24 = (HEAP32[$22 >> 2] | 0) - $19 | 0;
  $25 = $0 + 32 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($25, 0);
  $26 = $25 + 11 | 0;
  if ((HEAP8[$26 >> 0] | 0) < 0) $32 = (HEAP32[$0 + 40 >> 2] & 2147483647) + -1 | 0; else $32 = 10;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($25, $32, 0);
  $33 = HEAP8[$26 >> 0] | 0;
  if ($33 << 24 >> 24 < 0) {
   $40 = HEAP32[$25 >> 2] | 0;
   $41 = HEAP32[$0 + 36 >> 2] | 0;
  } else {
   $40 = $25;
   $41 = $33 & 255;
  }
  $39 = $40 + $41 | 0;
  HEAP32[$18 >> 2] = $40;
  HEAP32[$11 >> 2] = $39;
  $42 = $40 + ($10 - $19) | 0;
  HEAP32[$9 >> 2] = $42;
  $43 = $40 + $24 | 0;
  HEAP32[$22 >> 2] = $43;
  $$pre$phi26Z2D = $22;
  $$pre$phi28Z2D = $14;
  $$pre$phiZ2D = $22;
  $45 = $42;
  $47 = $43;
  $62 = $39;
 } else {
  $$phi$trans$insert = $0 + 44 | 0;
  $$pre$phi26Z2D = $$phi$trans$insert;
  $$pre$phi28Z2D = $0 + 48 | 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $45 = $10;
  $47 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $62 = $12;
 }
 $44 = $45 + 1 | 0;
 HEAP32[$2 >> 2] = $44;
 $49 = HEAP32[($44 >>> 0 < $47 >>> 0 ? $$pre$phiZ2D : $2) >> 2] | 0;
 HEAP32[$$pre$phi26Z2D >> 2] = $49;
 if (HEAP32[$$pre$phi28Z2D >> 2] & 8 | 0) {
  $53 = $0 + 32 | 0;
  if ((HEAP8[$53 + 11 >> 0] | 0) < 0) $59 = HEAP32[$53 >> 2] | 0; else $59 = $53;
  HEAP32[$6 >> 2] = $59;
  HEAP32[$4 >> 2] = $59 + $8;
  HEAP32[$0 + 16 >> 2] = $49;
 }
 if (($45 | 0) == ($62 | 0)) {
  $$1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 63]($0, $1 & 255) | 0;
  STACKTOP = sp;
  return $$1 | 0;
 } else {
  HEAP32[$9 >> 2] = $44;
  HEAP8[$45 >> 0] = $1;
  $$1 = $1 & 255;
  STACKTOP = sp;
  return $$1 | 0;
 }
 return 0;
}

function __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$$i = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $9 = 0, $$06$i$i$looptemp = 0, $53$looptemp = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 12 | 0;
 $14 = $12 << 1;
 $$sroa$speculated$$i = $12 >>> 0 < 178956970 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 357913941;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 357913941) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 * 12 | 0) | 0;
 $23 = $21;
 $25 = $22 + ($$sroa$speculated$$i * 12 | 0) | 0;
 __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEEC2ERKS5_($21, $1);
 $27 = $21 + 12 | 0;
 $28 = HEAP32[$0 >> 2] | 0;
 $29 = HEAP32[$2 >> 2] | 0;
 if (($29 | 0) == ($28 | 0)) {
  $47 = $23;
  $48 = $28;
  $50 = $28;
 } else {
  $$06$i$i = $29;
  $$sroa$7$0 = $23;
  $33 = $21;
  do {
   $32 = $33 + -12 | 0;
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$32 >> 2] = 0;
   $35 = $33 + -8 | 0;
   HEAP32[$35 >> 2] = 0;
   HEAP32[$33 + -4 >> 2] = 0;
   HEAP32[$32 >> 2] = HEAP32[$$06$i$i >> 2];
   $38 = $$06$i$i$looptemp + -8 | 0;
   HEAP32[$35 >> 2] = HEAP32[$38 >> 2];
   $40 = $$06$i$i$looptemp + -4 | 0;
   HEAP32[$33 + -4 >> 2] = HEAP32[$40 >> 2];
   HEAP32[$40 >> 2] = 0;
   HEAP32[$38 >> 2] = 0;
   HEAP32[$$06$i$i >> 2] = 0;
   $33 = $$sroa$7$0 + -12 | 0;
   $$sroa$7$0 = $33;
  } while (($$06$i$i | 0) != ($28 | 0));
  $47 = $$sroa$7$0;
  $48 = HEAP32[$0 >> 2] | 0;
  $50 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $47;
 HEAP32[$2 >> 2] = $27;
 HEAP32[$9 >> 2] = $25;
 $49 = $48;
 if (($50 | 0) != ($49 | 0)) {
  $53 = $50;
  do {
   $53$looptemp = $53;
   $53 = $53 + -12 | 0;
   $54 = HEAP32[$53 >> 2] | 0;
   if ($54 | 0) {
    $57 = $53$looptemp + -8 | 0;
    $58 = HEAP32[$57 >> 2] | 0;
    if (($58 | 0) != ($54 | 0)) HEAP32[$57 >> 2] = $58 + (~(($58 + -8 - $54 | 0) >>> 3) << 3);
    __ZdlPv($54);
   }
  } while (($53 | 0) != ($49 | 0));
 }
 if (!$48) return;
 __ZdlPv($48);
 return;
}

function __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$$i = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $9 = 0, $$06$i$i$looptemp = 0, $53$looptemp = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 12 | 0;
 $14 = $12 << 1;
 $$sroa$speculated$$i = $12 >>> 0 < 178956970 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 357913941;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 357913941) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 * 12 | 0) | 0;
 $23 = $21;
 $25 = $22 + ($$sroa$speculated$$i * 12 | 0) | 0;
 __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($21, $1);
 $27 = $21 + 12 | 0;
 $28 = HEAP32[$0 >> 2] | 0;
 $29 = HEAP32[$2 >> 2] | 0;
 if (($29 | 0) == ($28 | 0)) {
  $47 = $23;
  $48 = $28;
  $50 = $28;
 } else {
  $$06$i$i = $29;
  $$sroa$7$0 = $23;
  $33 = $21;
  do {
   $32 = $33 + -12 | 0;
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$32 >> 2] = 0;
   $35 = $33 + -8 | 0;
   HEAP32[$35 >> 2] = 0;
   HEAP32[$33 + -4 >> 2] = 0;
   HEAP32[$32 >> 2] = HEAP32[$$06$i$i >> 2];
   $38 = $$06$i$i$looptemp + -8 | 0;
   HEAP32[$35 >> 2] = HEAP32[$38 >> 2];
   $40 = $$06$i$i$looptemp + -4 | 0;
   HEAP32[$33 + -4 >> 2] = HEAP32[$40 >> 2];
   HEAP32[$40 >> 2] = 0;
   HEAP32[$38 >> 2] = 0;
   HEAP32[$$06$i$i >> 2] = 0;
   $33 = $$sroa$7$0 + -12 | 0;
   $$sroa$7$0 = $33;
  } while (($$06$i$i | 0) != ($28 | 0));
  $47 = $$sroa$7$0;
  $48 = HEAP32[$0 >> 2] | 0;
  $50 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $47;
 HEAP32[$2 >> 2] = $27;
 HEAP32[$9 >> 2] = $25;
 $49 = $48;
 if (($50 | 0) != ($49 | 0)) {
  $53 = $50;
  do {
   $53$looptemp = $53;
   $53 = $53 + -12 | 0;
   $54 = HEAP32[$53 >> 2] | 0;
   if ($54 | 0) {
    $57 = $53$looptemp + -8 | 0;
    $58 = HEAP32[$57 >> 2] | 0;
    if (($58 | 0) != ($54 | 0)) HEAP32[$57 >> 2] = $58 + (~(($58 + -8 - $54 | 0) >>> 3) << 3);
    __ZdlPv($54);
   }
  } while (($53 | 0) != ($49 | 0));
 }
 if (!$48) return;
 __ZdlPv($48);
 return;
}

function __ZN9scannerpp7ScannerC2ERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $10 = 0, $13 = 0, $15 = 0, $17 = 0, $2 = 0, $23 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $36 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 HEAP32[$0 >> 2] = 3192;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $5 = $0 + 28 | 0;
 $6 = $0 + 40 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$5 + 12 >> 2] = 0;
 HEAP32[$5 + 16 >> 2] = 0;
 HEAP32[$5 + 20 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($6, $1 + 40 | 0) | 0;
 $10 = $0 + 24 | 0;
 HEAP8[$10 >> 0] = HEAP8[$1 + 24 >> 0] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($5, $1 + 28 | 0) | 0;
 $13 = HEAP32[$1 + 8 >> 2] | 0;
 if ($13 | 0) {
  $15 = __Znwj(20) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $13 + 8 | 0);
  __ZN9scannerpp4FileC2ENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($15, $3);
  $17 = $0 + 8 | 0;
  HEAP32[$17 >> 2] = $15;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $23 = HEAP32[$17 >> 2] | 0;
  } else $23 = $15;
  HEAP32[$0 + 4 >> 2] = HEAP32[$23 + 4 >> 2];
 }
 if (!(HEAP8[$10 >> 0] | 0)) {
  $$pre$phiZ2D = $0 + 4 | 0;
  label = 8;
 } else {
  $28 = __Znwj(140) | 0;
  $29 = $28 + 60 | 0;
  $30 = $28 + 8 | 0;
  HEAP32[$28 >> 2] = 516;
  HEAP32[$29 >> 2] = 536;
  HEAP32[$28 + 4 >> 2] = 0;
  __ZNSt3__28ios_base4initEPv($29, $30);
  HEAP32[$28 + 132 >> 2] = 0;
  HEAP32[$28 + 136 >> 2] = -1;
  HEAP32[$28 >> 2] = 3616;
  HEAP32[$29 >> 2] = 3636;
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($30);
  HEAP32[$30 >> 2] = 3548;
  $34 = $28 + 40 | 0;
  HEAP32[$34 >> 2] = 0;
  HEAP32[$34 + 4 >> 2] = 0;
  HEAP32[$34 + 8 >> 2] = 0;
  HEAP32[$34 + 12 >> 2] = 0;
  HEAP32[$28 + 56 >> 2] = 8;
  __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($30, $6);
  $36 = $0 + 4 | 0;
  HEAP32[$36 >> 2] = $28;
  if (!(HEAP8[$10 >> 0] | 0)) {
   $$pre$phiZ2D = $36;
   label = 8;
  }
 }
 if ((label | 0) == 8) HEAP32[$$pre$phiZ2D >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $40 = $2 + 11 | 0;
 HEAP8[$40 >> 0] = 4;
 HEAP32[$2 >> 2] = 537464074;
 HEAP8[$2 + 4 >> 0] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($4, $2) | 0;
 if ((HEAP8[$40 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZN8optframe19IteratedLocalSearchINSt3__24pairINS2_IiiEES3_EE6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $1 = sp + 160 | 0;
 $2 = sp + 16 | 0;
 $3 = sp;
 $4 = $2 + 64 | 0;
 $5 = $2 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $6);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $2 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe15SingleObjSearchI6RepHFMiE11idComponentEv($1);
 $17 = $2 + 8 | 0;
 $18 = $1 + 11 | 0;
 $19 = HEAP8[$18 >> 0] | 0;
 $20 = $19 << 24 >> 24 < 0;
 $28 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, $20 ? HEAP32[$1 >> 2] | 0 : $1, $20 ? HEAP32[$1 + 4 >> 2] | 0 : $19 & 255) | 0, 16793, 1) | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $29 = $3 + 11 | 0;
 HEAP8[$29 >> 0] = 4;
 HEAP32[$3 >> 2] = 978537545;
 HEAP8[$3 + 4 >> 0] = 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($28, $3, 4) | 0;
 if ((HEAP8[$29 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
 if ((HEAP8[$18 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$17 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZN3HFM24NSSeqNEIGHAddSingleInput11getIteratorERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $45 = 0, $47 = 0, $5 = 0, $55 = 0, $57 = 0, $63 = 0, $65 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $5 = __Znwj(72) | 0;
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($3, $0 + 28 | 0);
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($4, $0 + 40 | 0);
 $9 = HEAP32[$0 + 20 >> 2] | 0;
 $11 = HEAP32[$0 + 24 >> 2] | 0;
 HEAP8[$5 + 16 >> 0] = 0;
 HEAP32[$5 + 8 >> 2] = 2;
 HEAP8[$5 + 15 >> 0] = 0;
 HEAP8[$5 + 12 >> 0] = 1;
 HEAP8[$5 + 13 >> 0] = 1;
 HEAP8[$5 + 14 >> 0] = 0;
 HEAP32[$5 >> 2] = 5336;
 $18 = $5 + 20 | 0;
 HEAP32[$18 >> 2] = 0;
 $19 = $5 + 24 | 0;
 HEAP32[$19 >> 2] = 0;
 $20 = $5 + 28 | 0;
 HEAP32[$20 >> 2] = 0;
 $21 = $3 + 4 | 0;
 $23 = HEAP32[$3 >> 2] | 0;
 $24 = (HEAP32[$21 >> 2] | 0) - $23 | 0;
 $25 = $24 >> 2;
 $27 = $23;
 if ($25 | 0) {
  if ($25 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($18);
  $29 = __Znwj($24) | 0;
  HEAP32[$19 >> 2] = $29;
  HEAP32[$18 >> 2] = $29;
  HEAP32[$20 >> 2] = $29 + ($25 << 2);
  if (($24 | 0) > 0) {
   _memcpy($29 | 0, $23 | 0, $24 | 0) | 0;
   HEAP32[$19 >> 2] = $29 + ($24 >>> 2 << 2);
  }
 }
 $35 = $5 + 32 | 0;
 HEAP32[$35 >> 2] = 0;
 $36 = $5 + 36 | 0;
 HEAP32[$36 >> 2] = 0;
 $37 = $5 + 40 | 0;
 HEAP32[$37 >> 2] = 0;
 $38 = $4 + 4 | 0;
 $39 = HEAP32[$38 >> 2] | 0;
 $40 = HEAP32[$4 >> 2] | 0;
 $41 = $39 - $40 | 0;
 $42 = $41 >> 2;
 $44 = $40;
 $45 = $39;
 if ($42 | 0) {
  if ($42 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($35);
  $47 = __Znwj($41) | 0;
  HEAP32[$36 >> 2] = $47;
  HEAP32[$35 >> 2] = $47;
  HEAP32[$37 >> 2] = $47 + ($42 << 2);
  if (($41 | 0) > 0) {
   _memcpy($47 | 0, $40 | 0, $41 | 0) | 0;
   HEAP32[$36 >> 2] = $47 + ($41 >>> 2 << 2);
  }
 }
 HEAP32[$5 + 44 >> 2] = $9;
 HEAP32[$5 + 48 >> 2] = $11;
 $55 = $5 + 52 | 0;
 HEAP32[$55 >> 2] = 0;
 HEAP32[$55 + 4 >> 2] = 0;
 HEAP32[$55 + 8 >> 2] = 0;
 HEAP32[$55 + 12 >> 2] = 0;
 HEAP32[$55 + 16 >> 2] = 0;
 $57 = $40;
 if (!$40) $63 = $27; else {
  if (($45 | 0) != ($44 | 0)) HEAP32[$38 >> 2] = $45 + (~(($45 + -4 - $40 | 0) >>> 2) << 2);
  __ZdlPv($57);
  $63 = HEAP32[$3 >> 2] | 0;
 }
 if (!$63) {
  STACKTOP = sp;
  return $5 | 0;
 }
 $65 = HEAP32[$21 >> 2] | 0;
 if (($65 | 0) != ($63 | 0)) HEAP32[$21 >> 2] = $65 + (~(($65 + -4 - $63 | 0) >>> 2) << 2);
 __ZdlPv($63);
 STACKTOP = sp;
 return $5 | 0;
}

function __ZNSt3__28ios_base4InitC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $22 = 0, $38 = 0, $4 = 0, $45 = 0, $7 = 0;
 $1 = HEAP32[1617] | 0;
 __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(34168, $1, 34224);
 HEAP32[8372] = 10780;
 HEAP32[8374] = 10800;
 HEAP32[8373] = 0;
 __ZNSt3__28ios_base4initEPv(33496, 34168);
 HEAP32[8392] = 0;
 HEAP32[8393] = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(34232, $1, 34288);
 HEAP32[8394] = 10828;
 HEAP32[8396] = 10848;
 HEAP32[8395] = 0;
 __ZNSt3__28ios_base4initEPv(33584, 34232);
 HEAP32[8414] = 0;
 HEAP32[8415] = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 $4 = HEAP32[1742] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(34296, $4, 34344);
 HEAP32[8416] = 28;
 HEAP32[8417] = 48;
 __ZNSt3__28ios_base4initEPv(33668, 34296);
 HEAP32[8435] = 0;
 HEAP32[8436] = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(34352, $4, 34400);
 HEAP32[8437] = 10884;
 HEAP32[8438] = 10904;
 __ZNSt3__28ios_base4initEPv(33752, 34352);
 HEAP32[8456] = 0;
 HEAP32[8457] = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 $7 = HEAP32[1710] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(34408, $7, 34456);
 HEAP32[8458] = 28;
 HEAP32[8459] = 48;
 __ZNSt3__28ios_base4initEPv(33836, 34408);
 HEAP32[8477] = 0;
 HEAP32[8478] = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 $14 = HEAP32[33832 + (HEAP32[(HEAP32[8458] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[8500] = 28;
 HEAP32[8501] = 48;
 __ZNSt3__28ios_base4initEPv(34004, $14);
 HEAP32[8519] = 0;
 HEAP32[8520] = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(34464, $7, 34512);
 HEAP32[8479] = 10884;
 HEAP32[8480] = 10904;
 __ZNSt3__28ios_base4initEPv(33920, 34464);
 HEAP32[8498] = 0;
 HEAP32[8499] = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 $22 = HEAP32[33916 + (HEAP32[(HEAP32[8479] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[8521] = 10884;
 HEAP32[8522] = 10904;
 __ZNSt3__28ios_base4initEPv(34088, $22);
 HEAP32[8540] = 0;
 HEAP32[8541] = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[33488 + (HEAP32[(HEAP32[8372] | 0) + -12 >> 2] | 0) + 72 >> 2] = 33664;
 HEAP32[33576 + (HEAP32[(HEAP32[8394] | 0) + -12 >> 2] | 0) + 72 >> 2] = 33748;
 $38 = 33832 + (HEAP32[(HEAP32[8458] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[$38 >> 2] = HEAP32[$38 >> 2] | 8192;
 $45 = 33916 + (HEAP32[(HEAP32[8479] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[$45 >> 2] = HEAP32[$45 >> 2] | 8192;
 HEAP32[33832 + (HEAP32[(HEAP32[8458] | 0) + -12 >> 2] | 0) + 72 >> 2] = 33664;
 HEAP32[33916 + (HEAP32[(HEAP32[8479] | 0) + -12 >> 2] | 0) + 72 >> 2] = 33748;
 return;
}

function __ZN8optframe16ILSLPerturbationI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $1 = sp;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = $2 + 64 | 0;
 $5 = $2 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $6);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $2 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $17 = $1 + 11 | 0;
 HEAP8[$17 >> 0] = 8;
 $18 = $1;
 HEAP32[$18 >> 2] = 1182036047;
 HEAP32[$18 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $23 = $2 + 8 | 0;
 $24 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($23, $1, 8) | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $25 = $3 + 11 | 0;
 HEAP8[$25 >> 0] = 4;
 HEAP32[$3 >> 2] = 978537545;
 HEAP8[$3 + 4 >> 0] = 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($24, $3, 4) | 0, 16931, 9) | 0;
 if ((HEAP8[$25 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$23 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i$i = 0, $$038 = 0, $$pre$phi41Z2D = 0, $$pre$phi43Z2D = 0, $$sroa$0$2 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $20 = 0, $32 = 0, $34 = 0, $37 = 0, $39 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp;
 $8 = HEAP32[$0 >> 2] | 0;
 L1 : do if (!$8) $$sroa$0$2 = 0; else {
  $10 = $3;
  $11 = $1;
  $13 = $10 - $11 >> 2;
  $14 = $4 + 12 | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  $$038 = ($15 | 0) > ($13 | 0) ? $15 - $13 | 0 : 0;
  $18 = $2;
  $19 = $18 - $11 | 0;
  $20 = $19 >> 2;
  if (($19 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 63]($8, $1, $20) | 0) != ($20 | 0)) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  do if (($$038 | 0) > 0) {
   HEAP32[$7 >> 2] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
   HEAP32[$7 + 8 >> 2] = 0;
   if ($$038 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($7);
   do if ($$038 >>> 0 < 2) {
    $32 = $7 + 8 + 3 | 0;
    HEAP8[$32 >> 0] = $$038;
    $$0$i$i = $7;
    $$pre$phi41Z2D = $32;
    $$pre$phi43Z2D = $7;
   } else {
    $34 = $$038 + 4 & 2147483644;
    if ($34 >>> 0 > 1073741823) _abort(); else {
     $37 = __Znwj($34 << 2) | 0;
     HEAP32[$7 >> 2] = $37;
     $39 = $7 + 8 | 0;
     HEAP32[$39 >> 2] = $34 | -2147483648;
     HEAP32[$7 + 4 >> 2] = $$038;
     $$0$i$i = $37;
     $$pre$phi41Z2D = $39 + 3 | 0;
     $$pre$phi43Z2D = $7;
     break;
    }
   } while (0);
   __ZNSt3__211char_traitsIwE6assignEPwjw($$0$i$i, $$038, $5) | 0;
   HEAP32[$6 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($$0$i$i + ($$038 << 2) | 0, $6);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 63]($8, (HEAP8[$$pre$phi41Z2D >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $$pre$phi43Z2D, $$038) | 0) == ($$038 | 0)) {
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
    break;
   } else {
    HEAP32[$0 >> 2] = 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
    $$sroa$0$2 = 0;
    break L1;
   }
  } while (0);
  $51 = $10 - $18 | 0;
  $52 = $51 >> 2;
  if (($51 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 63]($8, $2, $52) | 0) != ($52 | 0)) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  HEAP32[$14 >> 2] = 0;
  $$sroa$0$2 = $8;
 } while (0);
 STACKTOP = sp;
 return $$sroa$0$2 | 0;
}

function __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$2 = 0, $10 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $26 = 0, $35 = 0, $36 = 0, $44 = 0, $47 = 0, $49 = 0, $53 = 0, $54 = 0, $59 = 0, $61 = 0, $71 = 0, $73 = 0, $75 = 0, $78 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 $10 = $4;
 if (!($7 & 2)) label = 4; else if (($10 - $3 | 0) < 3) $$2 = 1; else {
  HEAP32[$5 >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = -17;
  $15 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $15 + 1;
  HEAP8[$15 >> 0] = -69;
  $17 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $17 + 1;
  HEAP8[$17 >> 0] = -65;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $19 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if ($19 >>> 0 >= $1 >>> 0) {
    $$2 = 0;
    break L4;
   }
   $21 = HEAP32[$19 >> 2] | 0;
   if ($21 >>> 0 > $6 >>> 0 | ($21 & -2048 | 0) == 55296) {
    $$2 = 2;
    break L4;
   }
   do if ($21 >>> 0 < 128) {
    $26 = HEAP32[$5 >> 2] | 0;
    if (($10 - $26 | 0) < 1) {
     $$2 = 1;
     break L4;
    }
    HEAP32[$5 >> 2] = $26 + 1;
    HEAP8[$26 >> 0] = $21;
   } else {
    $35 = ($21 & 63 | 128) & 255;
    if ($21 >>> 0 < 2048) {
     $36 = HEAP32[$5 >> 2] | 0;
     if (($10 - $36 | 0) < 2) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $36 + 1;
     HEAP8[$36 >> 0] = $21 >>> 6 | 192;
     $44 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $44 + 1;
     HEAP8[$44 >> 0] = $35;
     break;
    }
    $47 = HEAP32[$5 >> 2] | 0;
    $49 = $10 - $47 | 0;
    $53 = $47 + 1 | 0;
    $54 = ($21 >>> 6 & 63 | 128) & 255;
    if ($21 >>> 0 < 65536) {
     if (($49 | 0) < 3) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $53;
     HEAP8[$47 >> 0] = $21 >>> 12 | 224;
     $59 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $59 + 1;
     HEAP8[$59 >> 0] = $54;
     $61 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $61 + 1;
     HEAP8[$61 >> 0] = $35;
     break;
    } else {
     if (($49 | 0) < 4) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $53;
     HEAP8[$47 >> 0] = $21 >>> 18 | 240;
     $71 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $71 + 1;
     HEAP8[$71 >> 0] = $21 >>> 12 & 63 | 128;
     $73 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $73 + 1;
     HEAP8[$73 >> 0] = $54;
     $75 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $75 + 1;
     HEAP8[$75 >> 0] = $35;
     break;
    }
   } while (0);
   $78 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
   HEAP32[$2 >> 2] = $78;
   $19 = $78;
  }
 } while (0);
 return $$2 | 0;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$pre = 0, $12 = 0, $13 = 0, $23 = 0, $28 = 0, $31 = 0, $36 = 0, $38 = 0, $39 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $83 = 0, $88 = 0, $9 = 0, $90 = 0, $93 = 0;
 $6 = $1 + 44 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $1 + 24 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $12 = $9;
 if ($7 >>> 0 < $9 >>> 0) {
  HEAP32[$6 >> 2] = $9;
  $39 = $12;
 } else $39 = $7;
 $13 = $5 & 24;
 L4 : do if (!$13) {
  $90 = -1;
  $93 = -1;
 } else if (($4 | 0) == 1 & ($13 | 0) == 24) {
  $90 = -1;
  $93 = -1;
 } else {
  L7 : do switch ($4 | 0) {
  case 0:
   {
    $42 = 0;
    $43 = 0;
    break;
   }
  case 1:
   {
    if (!($5 & 8)) {
     $28 = $12 - (HEAP32[$1 + 20 >> 2] | 0) | 0;
     $42 = $28;
     $43 = (($28 | 0) < 0) << 31 >> 31;
     break L7;
    } else {
     $23 = (HEAP32[$1 + 12 >> 2] | 0) - (HEAP32[$1 + 8 >> 2] | 0) | 0;
     $42 = $23;
     $43 = (($23 | 0) < 0) << 31 >> 31;
     break L7;
    }
    break;
   }
  case 2:
   {
    $31 = $1 + 32 | 0;
    if ((HEAP8[$31 + 11 >> 0] | 0) < 0) $36 = HEAP32[$31 >> 2] | 0; else $36 = $31;
    $38 = $39 - $36 | 0;
    $42 = $38;
    $43 = (($38 | 0) < 0) << 31 >> 31;
    break;
   }
  default:
   {
    $90 = -1;
    $93 = -1;
    break L4;
   }
  } while (0);
  $44 = _i64Add($42 | 0, $43 | 0, $2 | 0, $3 | 0) | 0;
  $45 = tempRet0;
  if (($45 | 0) < 0) {
   $90 = -1;
   $93 = -1;
  } else {
   $47 = $1 + 32 | 0;
   if ((HEAP8[$47 + 11 >> 0] | 0) < 0) $52 = HEAP32[$47 >> 2] | 0; else $52 = $47;
   $54 = $39 - $52 | 0;
   $56 = (($54 | 0) < 0) << 31 >> 31;
   if (($56 | 0) < ($45 | 0) | ($56 | 0) == ($45 | 0) & $54 >>> 0 < $44 >>> 0) {
    $90 = -1;
    $93 = -1;
   } else {
    $$pre = $5 & 8;
    if (!(($44 | 0) == 0 & ($45 | 0) == 0)) {
     if ($$pre | 0) if (!(HEAP32[$1 + 12 >> 2] | 0)) {
      $90 = -1;
      $93 = -1;
      break;
     }
     if (($5 & 16 | 0) != 0 & ($9 | 0) == 0) {
      $90 = -1;
      $93 = -1;
      break;
     }
    }
    if ($$pre | 0) {
     HEAP32[$1 + 12 >> 2] = (HEAP32[$1 + 8 >> 2] | 0) + $44;
     HEAP32[$1 + 16 >> 2] = $39;
    }
    if (!($5 & 16)) {
     $90 = $44;
     $93 = $45;
    } else {
     HEAP32[$8 >> 2] = (HEAP32[$1 + 20 >> 2] | 0) + $44;
     $90 = $44;
     $93 = $45;
    }
   }
  }
 } while (0);
 $83 = $0;
 HEAP32[$83 >> 2] = 0;
 HEAP32[$83 + 4 >> 2] = 0;
 $88 = $0 + 8 | 0;
 HEAP32[$88 >> 2] = $90;
 HEAP32[$88 + 4 >> 2] = $93;
 return;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$byval_copy = 0, $$pr = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$09$0 = 0, $$sroa$09$0$ph = 0, $12 = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $46 = 0, $47 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $5 = sp;
 if (!(HEAP32[$2 + 4 >> 2] & 1)) {
  $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$12 & 31]($0, $$byval_copy, $2, $3, $4 & 1) | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34552) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $17 = HEAP32[$16 >> 2] | 0;
  if ($4) FUNCTION_TABLE_vii[HEAP32[$17 + 24 >> 2] & 127]($$byval_copy, $16); else FUNCTION_TABLE_vii[HEAP32[$17 + 28 >> 2] & 127]($$byval_copy, $16);
  $22 = $$byval_copy + 11 | 0;
  $23 = HEAP8[$22 >> 0] | 0;
  if ($23 << 24 >> 24 < 0) {
   $$pr = $23;
   $$sroa$09$0$ph = HEAP32[$$byval_copy >> 2] | 0;
   label = 8;
  } else {
   $$sroa$09$0 = $$byval_copy;
   $26 = $23;
  }
  while (1) {
   if ((label | 0) == 8) {
    label = 0;
    $$sroa$09$0 = $$sroa$09$0$ph;
    $26 = $$pr;
   }
   $27 = $26 << 24 >> 24 < 0;
   if (($$sroa$09$0 | 0) == (($27 ? HEAP32[$$byval_copy >> 2] | 0 : $$byval_copy) + ($27 ? HEAP32[$$byval_copy + 4 >> 2] | 0 : $26 & 255) | 0)) break;
   $36 = HEAP8[$$sroa$09$0 >> 0] | 0;
   $37 = HEAP32[$1 >> 2] | 0;
   if ($37 | 0) {
    $39 = $37 + 24 | 0;
    $40 = HEAP32[$39 >> 2] | 0;
    if (($40 | 0) == (HEAP32[$37 + 28 >> 2] | 0)) {
     $46 = HEAP32[(HEAP32[$37 >> 2] | 0) + 52 >> 2] | 0;
     $47 = __ZNSt3__211char_traitsIcE11to_int_typeEc($36) | 0;
     $$0$i$i = FUNCTION_TABLE_iii[$46 & 63]($37, $47) | 0;
    } else {
     HEAP32[$39 >> 2] = $40 + 1;
     HEAP8[$40 >> 0] = $36;
     $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc($36) | 0;
    }
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) HEAP32[$1 >> 2] = 0;
   }
   $$pr = HEAP8[$22 >> 0] | 0;
   $$sroa$09$0$ph = $$sroa$09$0 + 1 | 0;
   label = 8;
  }
  $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$byval_copy);
  $$sroa$0$0 = $$sroa$0$0$copyload;
 }
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$sroa$0$0$$sroa$0$0$113$i$in = 0, $$sroa$7$0$i = 0, $$sroa$7$1$i = 0, $$sroa$speculated$i$i = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $22 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $38 = 0, $4 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 16 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 $7 = $0 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = HEAP32[$1 >> 2] | 0;
 $11 = HEAP32[$1 + 4 >> 2] | 0;
 $12 = HEAP32[$2 >> 2] | 0;
 $14 = HEAP32[$2 + 4 >> 2] | 0;
 $16 = $12 - $9 << 3;
 HEAP32[$7 >> 2] = $8 - $11 + $14 + $16;
 $22 = (HEAP32[$0 >> 2] | 0) + ($8 >>> 5 << 2) | 0;
 $23 = $8 & 31;
 $24 = $22;
 if (($11 | 0) != ($23 | 0)) {
  HEAP32[$3 >> 2] = $9;
  HEAP32[$3 + 4 >> 2] = $11;
  HEAP32[$4 >> 2] = $12;
  HEAP32[$4 + 4 >> 2] = $14;
  HEAP32[$5 >> 2] = $24;
  HEAP32[$5 + 4 >> 2] = $23;
  __ZNSt3__216__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_($6, $3, $4, $5);
  STACKTOP = sp;
  return;
 }
 $27 = $14 - $11 + $16 | 0;
 $29 = $9;
 if (($27 | 0) > 0) {
  if (!$11) {
   $$0$i$i = $27;
   $$sroa$0$0$$sroa$0$0$113$i$in = $22;
   $$sroa$7$0$i = 0;
   $52 = $9;
   $59 = $29;
  } else {
   $32 = 32 - $11 | 0;
   $$sroa$speculated$i$i = ($27 | 0) < ($32 | 0) ? $27 : $32;
   $38 = -1 >>> ($32 - $$sroa$speculated$i$i | 0) & -1 << $11;
   HEAP32[$22 >> 2] = HEAP32[$22 >> 2] & ~$38 | HEAP32[$29 >> 2] & $38;
   $45 = $$sroa$speculated$i$i + $11 | 0;
   $49 = $29 + 4 | 0;
   $$0$i$i = $27 - $$sroa$speculated$i$i | 0;
   $$sroa$0$0$$sroa$0$0$113$i$in = $22 + ($45 >>> 5 << 2) | 0;
   $$sroa$7$0$i = $45 & 31;
   $52 = $49;
   $59 = $49;
  }
  $50 = ($$0$i$i | 0) / 32 | 0;
  _memmove($$sroa$0$0$$sroa$0$0$113$i$in | 0, $52 | 0, $50 << 2 | 0) | 0;
  $54 = $$0$i$i - ($50 << 5) | 0;
  $55 = $$sroa$0$0$$sroa$0$0$113$i$in + ($50 << 2) | 0;
  $57 = $55;
  if (($54 | 0) > 0) {
   $61 = -1 >>> (32 - $54 | 0);
   HEAP32[$55 >> 2] = HEAP32[$55 >> 2] & ~$61 | HEAP32[$59 + ($50 << 2) >> 2] & $61;
   $$sroa$7$1$i = $54;
   $68 = $57;
  } else {
   $$sroa$7$1$i = $$sroa$7$0$i;
   $68 = $57;
  }
 } else {
  $$sroa$7$1$i = $11;
  $68 = $24;
 }
 HEAP32[$6 >> 2] = $68;
 HEAP32[$6 + 4 >> 2] = $$sroa$7$1$i;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021$lcssa$i$i = 0, $$021$lcssa$i$i8 = 0, $$021$ph$i$i = 0, $$021$ph$i$i1 = 0, $$02122$i$i = 0, $$02122$i$i4 = 0, $$023$i$i = 0, $$023$i$i3 = 0, $12 = 0, $14 = 0, $16 = 0, $22 = 0, $23 = 0, $3 = 0, $35 = 0, $37 = 0, $40 = 0, $46 = 0, $47 = 0, $6 = 0, $7 = 0, $9 = 0;
 $3 = HEAP32[$1 + 48 >> 2] | 0;
 if ($3 & 16 | 0) {
  $6 = $1 + 44 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $9 = HEAP32[$1 + 24 >> 2] | 0;
  if ($7 >>> 0 < $9 >>> 0) {
   HEAP32[$6 >> 2] = $9;
   $14 = $9;
  } else $14 = $7;
  $12 = HEAP32[$1 + 20 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  $16 = $14 - $12 | 0;
  if ($16 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  if ($16 >>> 0 < 11) {
   HEAP8[$0 + 11 >> 0] = $16;
   $$021$ph$i$i1 = $0;
  } else {
   $22 = $16 + 16 & -16;
   $23 = __Znwj($22) | 0;
   HEAP32[$0 >> 2] = $23;
   HEAP32[$0 + 8 >> 2] = $22 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $16;
   $$021$ph$i$i1 = $23;
  }
  if (($12 | 0) == ($14 | 0)) $$021$lcssa$i$i8 = $$021$ph$i$i1; else {
   $$02122$i$i4 = $$021$ph$i$i1;
   $$023$i$i3 = $12;
   while (1) {
    HEAP8[$$02122$i$i4 >> 0] = HEAP8[$$023$i$i3 >> 0] | 0;
    $$023$i$i3 = $$023$i$i3 + 1 | 0;
    if (($$023$i$i3 | 0) == ($14 | 0)) break; else $$02122$i$i4 = $$02122$i$i4 + 1 | 0;
   }
   $$021$lcssa$i$i8 = $$021$ph$i$i1 + $16 | 0;
  }
  HEAP8[$$021$lcssa$i$i8 >> 0] = 0;
  return;
 }
 if (!($3 & 8)) {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  return;
 }
 $35 = HEAP32[$1 + 8 >> 2] | 0;
 $37 = HEAP32[$1 + 16 >> 2] | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $40 = $37 - $35 | 0;
 if ($40 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($40 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $40;
  $$021$ph$i$i = $0;
 } else {
  $46 = $40 + 16 & -16;
  $47 = __Znwj($46) | 0;
  HEAP32[$0 >> 2] = $47;
  HEAP32[$0 + 8 >> 2] = $46 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $40;
  $$021$ph$i$i = $47;
 }
 if (($35 | 0) == ($37 | 0)) $$021$lcssa$i$i = $$021$ph$i$i; else {
  $$02122$i$i = $$021$ph$i$i;
  $$023$i$i = $35;
  while (1) {
   HEAP8[$$02122$i$i >> 0] = HEAP8[$$023$i$i >> 0] | 0;
   $$023$i$i = $$023$i$i + 1 | 0;
   if (($$023$i$i | 0) == ($37 | 0)) break; else $$02122$i$i = $$02122$i$i + 1 | 0;
  }
  $$021$lcssa$i$i = $$021$ph$i$i + $40 | 0;
 }
 HEAP8[$$021$lcssa$i$i >> 0] = 0;
 return;
}

function __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0$lcssa$i$i = 0, $$078$i$i = 0, $$09$i$i = 0, $$sroa$speculated$$i = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $24 = 0, $3 = 0, $35 = 0, $4 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $57 = 0, $59 = 0, $6 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0;
 $3 = $2;
 $4 = $1;
 $5 = $3 - $4 | 0;
 $6 = $5 >> 4;
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 if ($6 >>> 0 > $8 - $9 >> 4 >>> 0) {
  $47 = $9;
  if (!$9) $57 = $8; else {
   $48 = $0 + 4 | 0;
   $49 = HEAP32[$48 >> 2] | 0;
   if (($49 | 0) != ($13 | 0)) HEAP32[$48 >> 2] = $49 + (~(($49 + -16 - $9 | 0) >>> 4) << 4);
   __ZdlPv($47);
   HEAP32[$7 >> 2] = 0;
   HEAP32[$48 >> 2] = 0;
   HEAP32[$0 >> 2] = 0;
   $57 = 0;
  }
  if ($6 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $59 = $57 >> 3;
  $$sroa$speculated$$i = $57 >> 4 >>> 0 < 134217727 ? ($59 >>> 0 < $6 >>> 0 ? $6 : $59) : 268435455;
  if ($$sroa$speculated$$i >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $63 = __Znwj($$sroa$speculated$$i << 4) | 0;
  $64 = $0 + 4 | 0;
  HEAP32[$64 >> 2] = $63;
  HEAP32[$0 >> 2] = $63;
  HEAP32[$7 >> 2] = $63 + ($$sroa$speculated$$i << 4);
  if (($5 | 0) <= 0) return;
  _memcpy($63 | 0, $1 | 0, $5 | 0) | 0;
  HEAP32[$64 >> 2] = $63 + ($5 >>> 4 << 4);
  return;
 }
 $14 = $0 + 4 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $17 = $15 - $9 >> 4;
 $18 = $6 >>> 0 > $17 >>> 0;
 $$ = $18 ? $1 + ($17 << 4) | 0 : $2;
 $21 = $15;
 $22 = $15;
 if (($$ | 0) == ($1 | 0)) $$0$lcssa$i$i = $13; else {
  $24 = $$ + -16 - $4 | 0;
  $$078$i$i = $1;
  $$09$i$i = $13;
  while (1) {
   HEAPF64[$$09$i$i >> 3] = +HEAPF64[$$078$i$i >> 3];
   HEAPF64[$$09$i$i + 8 >> 3] = +HEAPF64[$$078$i$i + 8 >> 3];
   $$078$i$i = $$078$i$i + 16 | 0;
   if (($$078$i$i | 0) == ($$ | 0)) break; else $$09$i$i = $$09$i$i + 16 | 0;
  }
  $$0$lcssa$i$i = $13 + (($24 >>> 4) + 1 << 4) | 0;
 }
 if ($18) {
  $35 = $3 - $$ | 0;
  if (($35 | 0) <= 0) return;
  _memcpy($22 | 0, $$ | 0, $35 | 0) | 0;
  HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + ($35 >>> 4 << 4);
  return;
 } else {
  if (($21 | 0) == ($$0$lcssa$i$i | 0)) return;
  HEAP32[$14 >> 2] = $21 + (~(($21 + -16 - $$0$lcssa$i$i | 0) >>> 4) << 4);
  return;
 }
}

function __ZNSt3__26vectorINS_4pairIdiEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0$lcssa$i$i = 0, $$078$i$i = 0, $$09$i$i = 0, $$sroa$speculated$$i = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $24 = 0, $3 = 0, $35 = 0, $4 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $57 = 0, $59 = 0, $6 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0;
 $3 = $2;
 $4 = $1;
 $5 = $3 - $4 | 0;
 $6 = $5 >> 4;
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 if ($6 >>> 0 > $8 - $9 >> 4 >>> 0) {
  $47 = $9;
  if (!$9) $57 = $8; else {
   $48 = $0 + 4 | 0;
   $49 = HEAP32[$48 >> 2] | 0;
   if (($49 | 0) != ($13 | 0)) HEAP32[$48 >> 2] = $49 + (~(($49 + -16 - $9 | 0) >>> 4) << 4);
   __ZdlPv($47);
   HEAP32[$7 >> 2] = 0;
   HEAP32[$48 >> 2] = 0;
   HEAP32[$0 >> 2] = 0;
   $57 = 0;
  }
  if ($6 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $59 = $57 >> 3;
  $$sroa$speculated$$i = $57 >> 4 >>> 0 < 134217727 ? ($59 >>> 0 < $6 >>> 0 ? $6 : $59) : 268435455;
  if ($$sroa$speculated$$i >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $63 = __Znwj($$sroa$speculated$$i << 4) | 0;
  $64 = $0 + 4 | 0;
  HEAP32[$64 >> 2] = $63;
  HEAP32[$0 >> 2] = $63;
  HEAP32[$7 >> 2] = $63 + ($$sroa$speculated$$i << 4);
  if (($5 | 0) <= 0) return;
  _memcpy($63 | 0, $1 | 0, $5 | 0) | 0;
  HEAP32[$64 >> 2] = $63 + ($5 >>> 4 << 4);
  return;
 }
 $14 = $0 + 4 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $17 = $15 - $9 >> 4;
 $18 = $6 >>> 0 > $17 >>> 0;
 $$ = $18 ? $1 + ($17 << 4) | 0 : $2;
 $21 = $15;
 $22 = $15;
 if (($$ | 0) == ($1 | 0)) $$0$lcssa$i$i = $13; else {
  $24 = $$ + -16 - $4 | 0;
  $$078$i$i = $1;
  $$09$i$i = $13;
  while (1) {
   HEAPF64[$$09$i$i >> 3] = +HEAPF64[$$078$i$i >> 3];
   HEAP32[$$09$i$i + 8 >> 2] = HEAP32[$$078$i$i + 8 >> 2];
   $$078$i$i = $$078$i$i + 16 | 0;
   if (($$078$i$i | 0) == ($$ | 0)) break; else $$09$i$i = $$09$i$i + 16 | 0;
  }
  $$0$lcssa$i$i = $13 + (($24 >>> 4) + 1 << 4) | 0;
 }
 if ($18) {
  $35 = $3 - $$ | 0;
  if (($35 | 0) <= 0) return;
  _memcpy($22 | 0, $$ | 0, $35 | 0) | 0;
  HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + ($35 >>> 4 << 4);
  return;
 } else {
  if (($21 | 0) == ($$0$lcssa$i$i | 0)) return;
  HEAP32[$14 >> 2] = $21 + (~(($21 + -16 - $$0$lcssa$i$i | 0) >>> 4) << 4);
  return;
 }
}

function _wcsnrtombs($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$ = 0, $$04773 = 0, $$05072 = 0, $$053$$050 = 0, $$05371 = 0, $$062 = 0, $$074 = 0, $$1 = 0, $$148 = 0, $$151 = 0, $$154 = 0, $$24968 = 0, $$25267 = 0, $$255 = 0, $$269 = 0, $$3 = 0, $$35666 = 0, $$57 = 0, $$cast = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $20 = 0, $21 = 0, $24 = 0, $30 = 0, $31 = 0, $40 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP32[$6 >> 2] = $7;
 $8 = ($0 | 0) != 0;
 $$ = $8 ? $3 : 256;
 $$57 = $8 ? $0 : $5;
 $$cast = $7;
 L1 : do if (($$ | 0) != 0 & ($7 | 0) != 0) {
  $$04773 = 0;
  $$05072 = $2;
  $$05371 = $$;
  $$074 = $$57;
  $45 = $$cast;
  while (1) {
   $11 = $$05072 >>> 0 >= $$05371 >>> 0;
   if (!($11 | $$05072 >>> 0 > 32)) {
    $$062 = $$074;
    $$148 = $$04773;
    $$151 = $$05072;
    $$255 = $$05371;
    $24 = $45;
    break L1;
   }
   $$053$$050 = $11 ? $$05371 : $$05072;
   $14 = $$05072 - $$053$$050 | 0;
   $15 = _wcsrtombs($$074, $6, $$053$$050, 0) | 0;
   if (($15 | 0) == -1) break;
   $17 = ($$074 | 0) == ($5 | 0);
   $$154 = $$05371 - ($17 ? 0 : $15) | 0;
   $$1 = $17 ? $$074 : $$074 + $15 | 0;
   $20 = $15 + $$04773 | 0;
   $21 = HEAP32[$6 >> 2] | 0;
   if (($$154 | 0) != 0 & ($21 | 0) != 0) {
    $$04773 = $20;
    $$05072 = $14;
    $$05371 = $$154;
    $$074 = $$1;
    $45 = $21;
   } else {
    $$062 = $$1;
    $$148 = $20;
    $$151 = $14;
    $$255 = $$154;
    $24 = $21;
    break L1;
   }
  }
  $$062 = $$074;
  $$148 = -1;
  $$151 = $14;
  $$255 = 0;
  $24 = HEAP32[$6 >> 2] | 0;
 } else {
  $$062 = $$57;
  $$148 = 0;
  $$151 = $2;
  $$255 = $$;
  $24 = $$cast;
 } while (0);
 L8 : do if (!$24) $$3 = $$148; else if (($$255 | 0) != 0 & ($$151 | 0) != 0) {
  $$24968 = $$148;
  $$25267 = $$151;
  $$269 = $$062;
  $$35666 = $$255;
  $30 = $24;
  while (1) {
   $31 = _wcrtomb($$269, HEAP32[$30 >> 2] | 0, 0) | 0;
   if (($31 + 1 | 0) >>> 0 < 2) break;
   $30 = (HEAP32[$6 >> 2] | 0) + 4 | 0;
   HEAP32[$6 >> 2] = $30;
   $$25267 = $$25267 + -1 | 0;
   $$35666 = $$35666 - $31 | 0;
   $40 = $31 + $$24968 | 0;
   if (!(($$35666 | 0) != 0 & ($$25267 | 0) != 0)) {
    $$3 = $40;
    break L8;
   } else {
    $$24968 = $40;
    $$269 = $$269 + $31 | 0;
   }
  }
  if (!$31) {
   HEAP32[$6 >> 2] = 0;
   $$3 = $$24968;
  } else $$3 = -1;
 } else $$3 = $$148; while (0);
 if ($8) HEAP32[$1 >> 2] = HEAP32[$6 >> 2];
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0$lcssa$i$i = 0, $$078$i$i = 0, $$09$i$i = 0, $$sroa$speculated$$i = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $24 = 0, $3 = 0, $35 = 0, $4 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $57 = 0, $59 = 0, $6 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0;
 $3 = $2;
 $4 = $1;
 $5 = $3 - $4 | 0;
 $6 = $5 >> 3;
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 if ($6 >>> 0 > $8 - $9 >> 3 >>> 0) {
  $47 = $9;
  if (!$9) $57 = $8; else {
   $48 = $0 + 4 | 0;
   $49 = HEAP32[$48 >> 2] | 0;
   if (($49 | 0) != ($13 | 0)) HEAP32[$48 >> 2] = $49 + (~(($49 + -8 - $9 | 0) >>> 3) << 3);
   __ZdlPv($47);
   HEAP32[$7 >> 2] = 0;
   HEAP32[$48 >> 2] = 0;
   HEAP32[$0 >> 2] = 0;
   $57 = 0;
  }
  if ($6 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $59 = $57 >> 2;
  $$sroa$speculated$$i = $57 >> 3 >>> 0 < 268435455 ? ($59 >>> 0 < $6 >>> 0 ? $6 : $59) : 536870911;
  if ($$sroa$speculated$$i >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $63 = __Znwj($$sroa$speculated$$i << 3) | 0;
  $64 = $0 + 4 | 0;
  HEAP32[$64 >> 2] = $63;
  HEAP32[$0 >> 2] = $63;
  HEAP32[$7 >> 2] = $63 + ($$sroa$speculated$$i << 3);
  if (($5 | 0) <= 0) return;
  _memcpy($63 | 0, $1 | 0, $5 | 0) | 0;
  HEAP32[$64 >> 2] = $63 + ($5 >>> 3 << 3);
  return;
 }
 $14 = $0 + 4 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $17 = $15 - $9 >> 3;
 $18 = $6 >>> 0 > $17 >>> 0;
 $$ = $18 ? $1 + ($17 << 3) | 0 : $2;
 $21 = $15;
 $22 = $15;
 if (($$ | 0) == ($1 | 0)) $$0$lcssa$i$i = $13; else {
  $24 = $$ + -8 - $4 | 0;
  $$078$i$i = $1;
  $$09$i$i = $13;
  while (1) {
   HEAP32[$$09$i$i >> 2] = HEAP32[$$078$i$i >> 2];
   HEAP32[$$09$i$i + 4 >> 2] = HEAP32[$$078$i$i + 4 >> 2];
   $$078$i$i = $$078$i$i + 8 | 0;
   if (($$078$i$i | 0) == ($$ | 0)) break; else $$09$i$i = $$09$i$i + 8 | 0;
  }
  $$0$lcssa$i$i = $13 + (($24 >>> 3) + 1 << 3) | 0;
 }
 if ($18) {
  $35 = $3 - $$ | 0;
  if (($35 | 0) <= 0) return;
  _memcpy($22 | 0, $$ | 0, $35 | 0) | 0;
  HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + ($35 >>> 3 << 3);
  return;
 } else {
  if (($21 | 0) == ($$0$lcssa$i$i | 0)) return;
  HEAP32[$14 >> 2] = $21 + (~(($21 + -8 - $$0$lcssa$i$i | 0) >>> 3) << 3);
  return;
 }
}

function __ZN8optframelsINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEERNS1_13basic_ostreamIcS4_EESA_RKNS1_6vectorIT_NS5_ISC_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$020 = 0, $$lcssa1826 = 0, $$lcssa27 = 0, $10 = 0, $12 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $47 = 0, $9 = 0, label = 0;
 $2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 17924, 7) | 0;
 $3 = $1 + 4 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($2, ((HEAP32[$3 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0) / 12 | 0) | 0, 17932, 3) | 0;
 $9 = HEAP32[$3 >> 2] | 0;
 $10 = HEAP32[$1 >> 2] | 0;
 if (($9 | 0) == ($10 | 0)) {
  __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15680, 1) | 0;
  return $0 | 0;
 }
 $12 = $9 - $10 | 0;
 if (($12 | 0) == 12) {
  $$lcssa1826 = $10;
  $$lcssa27 = 0;
 } else {
  $$020 = 0;
  $28 = ($12 | 0) / 12 | 0;
  $30 = $10;
  do {
   if ($28 >>> 0 <= $$020 >>> 0) {
    label = 8;
    break;
   }
   $31 = $30;
   $32 = $31 + ($$020 * 12 | 0) | 0;
   $34 = HEAP8[$32 + 11 >> 0] | 0;
   $35 = $34 << 24 >> 24 < 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, $35 ? HEAP32[$32 >> 2] | 0 : $32, $35 ? HEAP32[$31 + ($$020 * 12 | 0) + 4 >> 2] | 0 : $34 & 255) | 0, 17936, 3) | 0;
   $$020 = $$020 + 1 | 0;
   $30 = HEAP32[$1 >> 2] | 0;
   $15 = (HEAP32[$3 >> 2] | 0) - $30 | 0;
   $28 = ($15 | 0) / 12 | 0;
   $47 = $28 + -1 | 0;
  } while ($$020 >>> 0 < $47 >>> 0);
  if ((label | 0) == 8) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1);
  if (!$15) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1); else {
   $$lcssa1826 = $30;
   $$lcssa27 = $47;
  }
 }
 $17 = $$lcssa1826;
 $18 = $17 + ($$lcssa27 * 12 | 0) | 0;
 $20 = HEAP8[$18 + 11 >> 0] | 0;
 $21 = $20 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, $21 ? HEAP32[$18 >> 2] | 0 : $18, $21 ? HEAP32[$17 + ($$lcssa27 * 12 | 0) + 4 >> 2] | 0 : $20 & 255) | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15680, 1) | 0;
 return $0 | 0;
}

function __ZN8optframe19MORandomImprovementI6RepHFMiE4execERNS_6ParetoIS1_iEERNS_8SolutionIS1_iEERNS_13paretoManagerIS1_iEERNS_4MOSCE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$phi$trans$insert$i44 = 0, $$pre$phi$i48Z2D = 0, $19 = 0, $24 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $43 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $68 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $5 = sp + 32 | 0;
 $6 = sp;
 $8 = HEAP32[$0 + 20 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] & 31]($6, $8, HEAP32[$2 + 20 >> 2] | 0, HEAP32[$2 + 24 >> 2] | 0);
 $19 = $5 + 12 | 0;
 HEAP8[$19 + 4 >> 0] = 0;
 HEAP32[$5 + 8 >> 2] = 2;
 HEAP8[$5 + 15 >> 0] = 0;
 HEAP8[$19 >> 0] = 1;
 HEAP8[$5 + 13 >> 0] = 1;
 HEAP8[$5 + 14 >> 0] = 0;
 HEAP32[$5 >> 2] = 4868;
 $24 = $5 + 24 | 0;
 HEAP32[$5 + 20 >> 2] = HEAP32[$6 + 20 >> 2];
 HEAP32[$24 >> 2] = HEAP32[$6 + 24 >> 2];
 HEAP32[$5 + 28 >> 2] = HEAP32[$6 + 28 >> 2];
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 15]($0, $1, $2, $5, $3, $4);
 HEAP32[$5 >> 2] = 4868;
 $32 = HEAP32[$5 + 20 >> 2] | 0;
 $33 = HEAP32[$24 >> 2] | 0;
 if (($33 | 0) == ($32 | 0)) {
  $$pre$phi$i48Z2D = $5 + 20 | 0;
  $50 = $32;
 } else {
  $36 = $33;
  while (1) {
   $35 = $36 + -72 | 0;
   HEAP32[$24 >> 2] = $35;
   HEAP32[$35 >> 2] = 4920;
   $38 = HEAP32[$36 + -32 >> 2] | 0;
   if (!$38) $40 = $35; else {
    $42 = $36 + -28 | 0;
    $43 = HEAP32[$42 >> 2] | 0;
    if (($43 | 0) != ($38 | 0)) HEAP32[$42 >> 2] = $43 + (~(($43 + -16 - $38 | 0) >>> 4) << 4);
    __ZdlPv($38);
    $40 = HEAP32[$24 >> 2] | 0;
   }
   if (($40 | 0) == ($32 | 0)) break; else $36 = $40;
  }
  $$phi$trans$insert$i44 = $5 + 20 | 0;
  $$pre$phi$i48Z2D = $$phi$trans$insert$i44;
  $50 = HEAP32[$$phi$trans$insert$i44 >> 2] | 0;
 }
 if (!$50) {
  STACKTOP = sp;
  return;
 }
 if (($32 | 0) == ($50 | 0)) $68 = $50; else {
  $54 = $32;
  while (1) {
   $53 = $54 + -72 | 0;
   HEAP32[$24 >> 2] = $53;
   HEAP32[$53 >> 2] = 4920;
   $56 = HEAP32[$54 + -32 >> 2] | 0;
   if (!$56) $58 = $53; else {
    $60 = $54 + -28 | 0;
    $61 = HEAP32[$60 >> 2] | 0;
    if (($61 | 0) != ($56 | 0)) HEAP32[$60 >> 2] = $61 + (~(($61 + -16 - $56 | 0) >>> 4) << 4);
    __ZdlPv($56);
    $58 = HEAP32[$24 >> 2] | 0;
   }
   if (($58 | 0) == ($50 | 0)) break; else $54 = $58;
  }
  $68 = HEAP32[$$pre$phi$i48Z2D >> 2] | 0;
 }
 __ZdlPv($68);
 STACKTOP = sp;
 return;
}

function __ZNK8optframe8MoveCost5printEv($0) {
 $0 = $0 | 0;
 var $$06 = 0, $1 = 0, $10 = 0, $19 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $41 = 0, $45 = 0, $46 = 0, $51 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $6 = 33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[$6 >> 2] = HEAP32[$6 >> 2] & -261 | 4;
 $10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 20986, 12) | 0;
 $19 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($10, +HEAPF64[$0 + 24 >> 3] + +HEAPF64[$0 + 40 >> 3] * +HEAPF64[$0 + 32 >> 3]) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, $19 + (HEAP32[(HEAP32[$19 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $24 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $28 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] & 63]($24, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($19, $28) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($19) | 0;
 $29 = $0 + 52 | 0;
 $30 = $0 + 56 | 0;
 if ((HEAP32[$30 >> 2] | 0) == (HEAP32[$29 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 20999, 19) | 0;
 if ((HEAP32[$30 >> 2] | 0) != (HEAP32[$29 >> 2] | 0)) {
  $$06 = 0;
  do {
   $46 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 15618, 1) | 0;
   $51 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($46, +HEAPF64[(HEAP32[$29 >> 2] | 0) + ($$06 << 4) >> 3]) | 0, 17131, 1) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($51, +HEAPF64[(HEAP32[$29 >> 2] | 0) + ($$06 << 4) + 8 >> 3]) | 0, 17133, 2) | 0;
   $$06 = $$06 + 1 | 0;
  } while ($$06 >>> 0 < (HEAP32[$30 >> 2] | 0) - (HEAP32[$29 >> 2] | 0) >> 4 >>> 0);
 }
 __ZNKSt3__28ios_base6getlocEv($1, 33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) | 0);
 $41 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$41 >> 2] | 0) + 28 >> 2] & 63]($41, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(33664, $45) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(33664) | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$byval_copy = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$09$0 = 0, $12 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $47 = 0, $48 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $5 = sp;
 if (!(HEAP32[$2 + 4 >> 2] & 1)) {
  $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$12 & 31]($0, $$byval_copy, $2, $3, $4 & 1) | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34576) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $17 = HEAP32[$16 >> 2] | 0;
  if ($4) FUNCTION_TABLE_vii[HEAP32[$17 + 24 >> 2] & 127]($$byval_copy, $16); else FUNCTION_TABLE_vii[HEAP32[$17 + 28 >> 2] & 127]($$byval_copy, $16);
  $23 = $$byval_copy + 8 + 3 | 0;
  $24 = HEAP8[$23 >> 0] | 0;
  $26 = HEAP32[$$byval_copy >> 2] | 0;
  $27 = $$byval_copy + 4 | 0;
  $$sroa$09$0 = $24 << 24 >> 24 < 0 ? $26 : $$byval_copy;
  $28 = $24;
  $32 = $26;
  while (1) {
   $29 = $28 << 24 >> 24 < 0;
   if (($$sroa$09$0 | 0) == (($29 ? $32 : $$byval_copy) + (($29 ? HEAP32[$27 >> 2] | 0 : $28 & 255) << 2) | 0)) break;
   $37 = HEAP32[$$sroa$09$0 >> 2] | 0;
   $38 = HEAP32[$1 >> 2] | 0;
   if ($38 | 0) {
    $40 = $38 + 24 | 0;
    $41 = HEAP32[$40 >> 2] | 0;
    if (($41 | 0) == (HEAP32[$38 + 28 >> 2] | 0)) {
     $47 = HEAP32[(HEAP32[$38 >> 2] | 0) + 52 >> 2] | 0;
     $48 = __ZNSt3__211char_traitsIwE11to_int_typeEw($37) | 0;
     $$0$i$i = FUNCTION_TABLE_iii[$47 & 63]($38, $48) | 0;
    } else {
     HEAP32[$40 >> 2] = $41 + 4;
     HEAP32[$41 >> 2] = $37;
     $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw($37) | 0;
    }
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) HEAP32[$1 >> 2] = 0;
   }
   $$sroa$09$0 = $$sroa$09$0 + 4 | 0;
   $28 = HEAP8[$23 >> 0] | 0;
   $32 = HEAP32[$$byval_copy >> 2] | 0;
  }
  $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($$byval_copy);
  $$sroa$0$0 = $$sroa$0$0$copyload;
 }
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function _memchr($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$13745 = 0, $$140 = 0, $$2 = 0, $$23839 = 0, $$3 = 0, $$lcssa = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $20 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $7 = 0, $8 = 0, label = 0;
 $3 = $1 & 255;
 $7 = ($2 | 0) != 0;
 L1 : do if ($7 & ($0 & 3 | 0) != 0) {
  $8 = $1 & 255;
  $$03555 = $0;
  $$03654 = $2;
  while (1) {
   if ((HEAP8[$$03555 >> 0] | 0) == $8 << 24 >> 24) {
    $$035$lcssa65 = $$03555;
    $$036$lcssa64 = $$03654;
    label = 6;
    break L1;
   }
   $11 = $$03555 + 1 | 0;
   $12 = $$03654 + -1 | 0;
   $16 = ($12 | 0) != 0;
   if ($16 & ($11 & 3 | 0) != 0) {
    $$03555 = $11;
    $$03654 = $12;
   } else {
    $$035$lcssa = $11;
    $$036$lcssa = $12;
    $$lcssa = $16;
    label = 5;
    break;
   }
  }
 } else {
  $$035$lcssa = $0;
  $$036$lcssa = $2;
  $$lcssa = $7;
  label = 5;
 } while (0);
 if ((label | 0) == 5) if ($$lcssa) {
  $$035$lcssa65 = $$035$lcssa;
  $$036$lcssa64 = $$036$lcssa;
  label = 6;
 } else {
  $$2 = $$035$lcssa;
  $$3 = 0;
 }
 L8 : do if ((label | 0) == 6) {
  $18 = $1 & 255;
  if ((HEAP8[$$035$lcssa65 >> 0] | 0) == $18 << 24 >> 24) {
   $$2 = $$035$lcssa65;
   $$3 = $$036$lcssa64;
  } else {
   $20 = Math_imul($3, 16843009) | 0;
   L11 : do if ($$036$lcssa64 >>> 0 > 3) {
    $$046 = $$035$lcssa65;
    $$13745 = $$036$lcssa64;
    while (1) {
     $23 = HEAP32[$$046 >> 2] ^ $20;
     if (($23 & -2139062144 ^ -2139062144) & $23 + -16843009 | 0) break;
     $29 = $$046 + 4 | 0;
     $30 = $$13745 + -4 | 0;
     if ($30 >>> 0 > 3) {
      $$046 = $29;
      $$13745 = $30;
     } else {
      $$0$lcssa = $29;
      $$137$lcssa = $30;
      label = 11;
      break L11;
     }
    }
    $$140 = $$046;
    $$23839 = $$13745;
   } else {
    $$0$lcssa = $$035$lcssa65;
    $$137$lcssa = $$036$lcssa64;
    label = 11;
   } while (0);
   if ((label | 0) == 11) if (!$$137$lcssa) {
    $$2 = $$0$lcssa;
    $$3 = 0;
    break;
   } else {
    $$140 = $$0$lcssa;
    $$23839 = $$137$lcssa;
   }
   while (1) {
    if ((HEAP8[$$140 >> 0] | 0) == $18 << 24 >> 24) {
     $$2 = $$140;
     $$3 = $$23839;
     break L8;
    }
    $35 = $$140 + 1 | 0;
    $$23839 = $$23839 + -1 | 0;
    if (!$$23839) {
     $$2 = $35;
     $$3 = 0;
     break;
    } else $$140 = $35;
   }
  }
 } while (0);
 return ($$3 | 0 ? $$2 : 0) | 0;
}

function __ZN3HFM15ConstructiveACFC2ERNS_18HFMProblemInstanceERNS_17ProblemParametersERN8optframe7RandGenEiNSt3__26vectorIdNS8_9allocatorIdEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $10 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $27 = 0, $31 = 0, $33 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $46 = 0, $50 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 $10 = $0 + 12 | 0;
 HEAP8[$10 + 4 >> 0] = 0;
 HEAP32[$0 + 8 >> 2] = 2;
 HEAP8[$0 + 15 >> 0] = 0;
 HEAP8[$10 >> 0] = 1;
 HEAP8[$0 + 13 >> 0] = 1;
 HEAP8[$0 + 14 >> 0] = 0;
 HEAP32[$0 >> 2] = 5180;
 HEAP32[$0 + 20 >> 2] = $1;
 __ZN3HFM17ProblemParametersC2ERKS0_($0 + 24 | 0, $2);
 HEAP32[$0 + 124 >> 2] = $3;
 $16 = $0 + 140 | 0;
 HEAP32[$16 >> 2] = $4;
 __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($0 + 144 | 0, $5);
 $18 = HEAP32[$16 >> 2] | 0;
 if (!$18) {
  $20 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33832, 18920, 36) | 0;
  $22 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($20, HEAP32[$16 >> 2] | 0) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $22 + (HEAP32[(HEAP32[$22 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $27 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34536) | 0;
  $31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 28 >> 2] & 63]($27, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($22, $31) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($22) | 0;
  _getchar() | 0;
  $33 = HEAP32[$16 >> 2] | 0;
 } else $33 = $18;
 $37 = ~~+Math_ceil(+(+_round(+(+(($33 | 0) / 3 | 0 | 0)))));
 $38 = $0 + 128 | 0;
 HEAP32[$38 >> 2] = $37;
 $39 = $0 + 132 | 0;
 HEAP32[$39 >> 2] = $37;
 $40 = $0 + 136 | 0;
 HEAP32[$40 >> 2] = $37;
 $41 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18957, 64) | 0;
 __ZNKSt3__28ios_base6getlocEv($6, $41 + (HEAP32[(HEAP32[$41 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $46 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34536) | 0;
 $50 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$46 >> 2] | 0) + 28 >> 2] & 63]($46, 10) | 0;
 __ZNSt3__26localeD2Ev($6);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($41, $50) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($41) | 0;
 HEAP32[$38 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$39 >> 2] = 1;
 HEAP32[$40 >> 2] = 1;
 STACKTOP = sp;
 return;
}

function __ZN8optframe13paretoManagerI6RepHFMiE11addSolutionERNS_6ParetoIS1_iEERKNS_8SolutionIS1_iEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$phi$trans$insert$i43 = 0, $$pre$phi$i47Z2D = 0, $17 = 0, $22 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, $44 = 0, $51 = 0, $54 = 0, $55 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $69 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 32 | 0;
 $4 = sp;
 $6 = HEAP32[$0 + 4 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 52 >> 2] & 31]($4, $6, HEAP32[$2 + 20 >> 2] | 0, HEAP32[$2 + 24 >> 2] | 0);
 $17 = $3 + 12 | 0;
 HEAP8[$17 + 4 >> 0] = 0;
 HEAP32[$3 + 8 >> 2] = 2;
 HEAP8[$3 + 15 >> 0] = 0;
 HEAP8[$17 >> 0] = 1;
 HEAP8[$3 + 13 >> 0] = 1;
 HEAP8[$3 + 14 >> 0] = 0;
 HEAP32[$3 >> 2] = 4868;
 $22 = $3 + 24 | 0;
 HEAP32[$3 + 20 >> 2] = HEAP32[$4 + 20 >> 2];
 HEAP32[$22 >> 2] = HEAP32[$4 + 24 >> 2];
 HEAP32[$3 + 28 >> 2] = HEAP32[$4 + 28 >> 2];
 $31 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] & 31]($0, $1, $2, $3) | 0;
 HEAP32[$3 >> 2] = 4868;
 $33 = HEAP32[$3 + 20 >> 2] | 0;
 $34 = HEAP32[$22 >> 2] | 0;
 if (($34 | 0) == ($33 | 0)) {
  $$pre$phi$i47Z2D = $3 + 20 | 0;
  $51 = $33;
 } else {
  $37 = $34;
  while (1) {
   $36 = $37 + -72 | 0;
   HEAP32[$22 >> 2] = $36;
   HEAP32[$36 >> 2] = 4920;
   $39 = HEAP32[$37 + -32 >> 2] | 0;
   if (!$39) $41 = $36; else {
    $43 = $37 + -28 | 0;
    $44 = HEAP32[$43 >> 2] | 0;
    if (($44 | 0) != ($39 | 0)) HEAP32[$43 >> 2] = $44 + (~(($44 + -16 - $39 | 0) >>> 4) << 4);
    __ZdlPv($39);
    $41 = HEAP32[$22 >> 2] | 0;
   }
   if (($41 | 0) == ($33 | 0)) break; else $37 = $41;
  }
  $$phi$trans$insert$i43 = $3 + 20 | 0;
  $$pre$phi$i47Z2D = $$phi$trans$insert$i43;
  $51 = HEAP32[$$phi$trans$insert$i43 >> 2] | 0;
 }
 if (!$51) {
  STACKTOP = sp;
  return $31 | 0;
 }
 if (($33 | 0) == ($51 | 0)) $69 = $51; else {
  $55 = $33;
  while (1) {
   $54 = $55 + -72 | 0;
   HEAP32[$22 >> 2] = $54;
   HEAP32[$54 >> 2] = 4920;
   $57 = HEAP32[$55 + -32 >> 2] | 0;
   if (!$57) $59 = $54; else {
    $61 = $55 + -28 | 0;
    $62 = HEAP32[$61 >> 2] | 0;
    if (($62 | 0) != ($57 | 0)) HEAP32[$61 >> 2] = $62 + (~(($62 + -16 - $57 | 0) >>> 4) << 4);
    __ZdlPv($57);
    $59 = HEAP32[$22 >> 2] | 0;
   }
   if (($59 | 0) == ($51 | 0)) break; else $55 = $59;
  }
  $69 = HEAP32[$$pre$phi$i47Z2D >> 2] | 0;
 }
 __ZdlPv($69);
 STACKTOP = sp;
 return $31 | 0;
}

function __ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE12perturbationERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCERNSt3__24pairINSB_IiiEESC_EE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$022 = 0, $10 = 0, $12 = 0, $16 = 0, $21 = 0, $26 = 0, $30 = 0, $32 = 0, $38 = 0, $43 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 $6 = HEAP32[$4 >> 2] | 0;
 $7 = $4 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $10 = HEAP32[$4 + 8 >> 2] | 0;
 $12 = HEAP32[$0 + 36 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 15]($12, $1, $2, $3, $8);
 $16 = $6 + 1 | 0;
 if (HEAP8[$0 + 19 >> 0] | 0) {
  $21 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18346, 11) | 0, $16) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $21 + (HEAP32[(HEAP32[$21 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $26 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
  $30 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$26 >> 2] | 0) + 28 >> 2] & 63]($26, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($21, $30) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($21) | 0;
 }
 if (($16 | 0) < ($10 | 0)) {
  $$0 = $16;
  $$022 = $8;
  HEAP32[$4 >> 2] = $$0;
  HEAP32[$7 >> 2] = $$022;
  STACKTOP = sp;
  return;
 }
 $32 = $8 + 1 | 0;
 if (!(HEAP8[$0 + 18 >> 0] | 0)) {
  $$0 = 0;
  $$022 = $32;
  HEAP32[$4 >> 2] = $$0;
  HEAP32[$7 >> 2] = $$022;
  STACKTOP = sp;
  return;
 }
 $38 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18358, 12) | 0, $32) | 0, 18371, 2) | 0;
 __ZNKSt3__28ios_base6getlocEv($5, $38 + (HEAP32[(HEAP32[$38 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $43 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
 $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$43 >> 2] | 0) + 28 >> 2] & 63]($43, 10) | 0;
 __ZNSt3__26localeD2Ev($5);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($38, $47) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($38) | 0;
 $$0 = 0;
 $$022 = $32;
 HEAP32[$4 >> 2] = $$0;
 HEAP32[$7 >> 2] = $$022;
 STACKTOP = sp;
 return;
}

function __ZN9scannerpp7Scanner10nextDoubleEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $17 = 0, $2 = 0, $26 = 0.0, $3 = 0, $31 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $1 = sp;
 $2 = sp + 32 | 0;
 $3 = sp + 20 | 0;
 $4 = sp + 8 | 0;
 __ZN9scannerpp7Scanner4nextEv($3, $0);
 $5 = $2 + 60 | 0;
 $6 = $2 + 8 | 0;
 HEAP32[$2 >> 2] = 516;
 HEAP32[$5 >> 2] = 536;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 60 | 0, $6);
 HEAP32[$2 + 132 >> 2] = 0;
 HEAP32[$2 + 136 >> 2] = -1;
 HEAP32[$2 >> 2] = 3616;
 HEAP32[$5 >> 2] = 3636;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $2 + 40 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$2 + 56 >> 2] = 8;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $3);
 if ((HEAP8[$3 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
 $17 = __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERd($2, $1) | 0;
 if (HEAP32[$17 + (HEAP32[(HEAP32[$17 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] & 5 | 0) {
  $31 = ___cxa_allocate_exception(28) | 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  HEAP8[$4 + 11 >> 0] = 6;
  HEAP8[$4 >> 0] = HEAP8[15115] | 0;
  HEAP8[$4 + 1 >> 0] = HEAP8[15116] | 0;
  HEAP8[$4 + 2 >> 0] = HEAP8[15117] | 0;
  HEAP8[$4 + 3 >> 0] = HEAP8[15118] | 0;
  HEAP8[$4 + 4 >> 0] = HEAP8[15119] | 0;
  HEAP8[$4 + 5 >> 0] = HEAP8[15120] | 0;
  HEAP8[$4 + 6 >> 0] = 0;
  HEAP8[$31 >> 0] = 0;
  $34 = $31 + 4 | 0;
  HEAP32[$34 >> 2] = 0;
  HEAP32[$34 + 4 >> 2] = 0;
  HEAP32[$34 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($31 + 16 | 0, $4);
  ___cxa_throw($31 | 0, 64, 253);
 }
 $26 = +HEAPF64[$1 >> 3];
 HEAP32[$2 >> 2] = 3616;
 HEAP32[$5 >> 2] = 3636;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($2, 3648);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
  STACKTOP = sp;
  return +$26;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($2, 3648);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 STACKTOP = sp;
 return +$26;
}

function __ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$1 = 0, $10 = 0, $11 = 0, $14 = 0, $21 = 0, $29 = 0, $34 = 0, $36 = 0, $42 = 0, $43 = 0, $45 = 0, $55 = 0, $57 = 0, label = 0;
 $10 = HEAP32[$3 >> 2] | 0;
 $11 = ($10 | 0) == ($2 | 0);
 do if ($11) {
  $14 = (HEAP32[$9 + 96 >> 2] | 0) == ($0 | 0);
  if (!$14) if ((HEAP32[$9 + 100 >> 2] | 0) != ($0 | 0)) {
   label = 5;
   break;
  }
  HEAP32[$3 >> 2] = $2 + 1;
  HEAP8[$2 >> 0] = $14 ? 43 : 45;
  HEAP32[$4 >> 2] = 0;
  $$1 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $21 = HEAP8[$6 + 11 >> 0] | 0;
  if (($0 | 0) == ($5 | 0) ? (($21 << 24 >> 24 < 0 ? HEAP32[$6 + 4 >> 2] | 0 : $21 & 255) | 0) != 0 : 0) {
   $29 = HEAP32[$8 >> 2] | 0;
   if (($29 - $7 | 0) >= 160) {
    $$1 = 0;
    break;
   }
   $34 = HEAP32[$4 >> 2] | 0;
   HEAP32[$8 >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $34;
   HEAP32[$4 >> 2] = 0;
   $$1 = 0;
   break;
  }
  $36 = $9 + 104 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $9 + ($$0$i$idx << 2) | 0;
   if (($$0$i$idx | 0) == 26) {
    $$0$lcssa$i = $36;
    break;
   }
   if ((HEAP32[$$0$i$ptr >> 2] | 0) == ($0 | 0)) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $42 = $$0$lcssa$i - $9 | 0;
  $43 = $42 >> 2;
  if (($42 | 0) > 92) $$1 = -1; else {
   $45 = 26800 + $43 | 0;
   switch ($1 | 0) {
   case 10:
   case 8:
    {
     if (($43 | 0) >= ($1 | 0)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($42 | 0) >= 88) {
      if ($11) {
       $$1 = -1;
       break L6;
      }
      if (($10 - $2 | 0) >= 3) {
       $$1 = -1;
       break L6;
      }
      if ((HEAP8[$10 + -1 >> 0] | 0) != 48) {
       $$1 = -1;
       break L6;
      }
      HEAP32[$4 >> 2] = 0;
      $55 = HEAP8[$45 >> 0] | 0;
      HEAP32[$3 >> 2] = $10 + 1;
      HEAP8[$10 >> 0] = $55;
      $$1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $57 = HEAP8[$45 >> 0] | 0;
   HEAP32[$3 >> 2] = $10 + 1;
   HEAP8[$10 >> 0] = $57;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 1;
   $$1 = 0;
  }
 } while (0);
 return $$1 | 0;
}

function __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$$i = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $33 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $45 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 12 | 0;
 $14 = $12 << 1;
 $$sroa$speculated$$i = $12 >>> 0 < 178956970 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 357913941;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 357913941) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i * 12 | 0) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 * 12 | 0) | 0;
 $23 = $21;
 $25 = $22 + ($$sroa$speculated$$i * 12 | 0) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$21 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$21 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $27 = $21 + 12 | 0;
 $28 = HEAP32[$0 >> 2] | 0;
 $29 = HEAP32[$2 >> 2] | 0;
 if (($29 | 0) == ($28 | 0)) {
  $39 = $23;
  $40 = $28;
  $42 = $28;
 } else {
  $$06$i$i = $29;
  $$sroa$7$0 = $23;
  $33 = $21;
  do {
   $32 = $33 + -12 | 0;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$32 >> 2] = HEAP32[$$06$i$i >> 2];
   HEAP32[$32 + 4 >> 2] = HEAP32[$$06$i$i + 4 >> 2];
   HEAP32[$32 + 8 >> 2] = HEAP32[$$06$i$i + 8 >> 2];
   HEAP32[$$06$i$i >> 2] = 0;
   HEAP32[$$06$i$i + 4 >> 2] = 0;
   HEAP32[$$06$i$i + 8 >> 2] = 0;
   $33 = $$sroa$7$0 + -12 | 0;
   $$sroa$7$0 = $33;
  } while (($$06$i$i | 0) != ($28 | 0));
  $39 = $$sroa$7$0;
  $40 = HEAP32[$0 >> 2] | 0;
  $42 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $39;
 HEAP32[$2 >> 2] = $27;
 HEAP32[$9 >> 2] = $25;
 $41 = $40;
 if (($42 | 0) != ($41 | 0)) {
  $45 = $42;
  do {
   $45 = $45 + -12 | 0;
   if ((HEAP8[$45 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$45 >> 2] | 0);
  } while (($45 | 0) != ($41 | 0));
 }
 if (!$40) return;
 __ZdlPv($40);
 return;
}

function __ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$1 = 0, $10 = 0, $11 = 0, $14 = 0, $21 = 0, $29 = 0, $34 = 0, $36 = 0, $42 = 0, $44 = 0, $54 = 0, $56 = 0, label = 0;
 $10 = HEAP32[$3 >> 2] | 0;
 $11 = ($10 | 0) == ($2 | 0);
 do if ($11) {
  $14 = (HEAP8[$9 + 24 >> 0] | 0) == $0 << 24 >> 24;
  if (!$14) if ((HEAP8[$9 + 25 >> 0] | 0) != $0 << 24 >> 24) {
   label = 5;
   break;
  }
  HEAP32[$3 >> 2] = $2 + 1;
  HEAP8[$2 >> 0] = $14 ? 43 : 45;
  HEAP32[$4 >> 2] = 0;
  $$1 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $21 = HEAP8[$6 + 11 >> 0] | 0;
  if ($0 << 24 >> 24 == $5 << 24 >> 24 ? (($21 << 24 >> 24 < 0 ? HEAP32[$6 + 4 >> 2] | 0 : $21 & 255) | 0) != 0 : 0) {
   $29 = HEAP32[$8 >> 2] | 0;
   if (($29 - $7 | 0) >= 160) {
    $$1 = 0;
    break;
   }
   $34 = HEAP32[$4 >> 2] | 0;
   HEAP32[$8 >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $34;
   HEAP32[$4 >> 2] = 0;
   $$1 = 0;
   break;
  }
  $36 = $9 + 26 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $9 + $$0$i$idx | 0;
   if (($$0$i$idx | 0) == 26) {
    $$0$lcssa$i = $36;
    break;
   }
   if ((HEAP8[$$0$i$ptr >> 0] | 0) == $0 << 24 >> 24) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $42 = $$0$lcssa$i - $9 | 0;
  if (($42 | 0) > 23) $$1 = -1; else {
   $44 = 26800 + $42 | 0;
   switch ($1 | 0) {
   case 10:
   case 8:
    {
     if (($42 | 0) >= ($1 | 0)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($42 | 0) >= 22) {
      if ($11) {
       $$1 = -1;
       break L6;
      }
      if (($10 - $2 | 0) >= 3) {
       $$1 = -1;
       break L6;
      }
      if ((HEAP8[$10 + -1 >> 0] | 0) != 48) {
       $$1 = -1;
       break L6;
      }
      HEAP32[$4 >> 2] = 0;
      $54 = HEAP8[$44 >> 0] | 0;
      HEAP32[$3 >> 2] = $10 + 1;
      HEAP8[$10 >> 0] = $54;
      $$1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $56 = HEAP8[$44 >> 0] | 0;
   HEAP32[$3 >> 2] = $10 + 1;
   HEAP8[$10 >> 0] = $56;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 1;
   $$1 = 0;
  }
 } while (0);
 return $$1 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$022$0 = 0, $$sroa$022$0$copyload24 = 0, $16 = 0, $21 = 0, $22 = 0, $31 = 0, $36 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy2 = sp + 40 | 0;
 $$byval_copy = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp + 12 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 if (!(HEAP32[$3 + 4 >> 2] & 1)) {
  HEAP32[$6 >> 2] = -1;
  $16 = HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$1 >> 2] = FUNCTION_TABLE_iiiiiii[$16 & 63]($0, $$byval_copy, $$byval_copy2, $3, $4, $6) | 0;
  switch (HEAP32[$6 >> 2] | 0) {
  case 0:
   {
    HEAP8[$5 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[$5 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[$5 >> 0] = 1;
    HEAP32[$4 >> 2] = 4;
   }
  }
  $$sroa$022$0 = HEAP32[$1 >> 2] | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 34568) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 34576) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 24 >> 2] & 127]($$byval_copy, $22);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 127]($$byval_copy + 12 | 0, $22);
  HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
  $31 = $$byval_copy + 24 | 0;
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$9 >> 2];
  HEAP8[$5 >> 0] = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($1, $$byval_copy2, $$byval_copy, $31, $21, $4, 1) | 0) == ($$byval_copy | 0) & 1;
  $$sroa$022$0$copyload24 = HEAP32[$1 >> 2] | 0;
  $36 = $31;
  do {
   $36 = $36 + -12 | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($36);
  } while (($36 | 0) != ($$byval_copy | 0));
  $$sroa$022$0 = $$sroa$022$0$copyload24;
 }
 STACKTOP = sp;
 return $$sroa$022$0 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$022$0 = 0, $$sroa$022$0$copyload24 = 0, $16 = 0, $21 = 0, $22 = 0, $31 = 0, $36 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy2 = sp + 40 | 0;
 $$byval_copy = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp + 12 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 if (!(HEAP32[$3 + 4 >> 2] & 1)) {
  HEAP32[$6 >> 2] = -1;
  $16 = HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$1 >> 2] = FUNCTION_TABLE_iiiiiii[$16 & 63]($0, $$byval_copy, $$byval_copy2, $3, $4, $6) | 0;
  switch (HEAP32[$6 >> 2] | 0) {
  case 0:
   {
    HEAP8[$5 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[$5 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[$5 >> 0] = 1;
    HEAP32[$4 >> 2] = 4;
   }
  }
  $$sroa$022$0 = HEAP32[$1 >> 2] | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 34536) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 34552) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 24 >> 2] & 127]($$byval_copy, $22);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 127]($$byval_copy + 12 | 0, $22);
  HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
  $31 = $$byval_copy + 24 | 0;
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$9 >> 2];
  HEAP8[$5 >> 0] = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($1, $$byval_copy2, $$byval_copy, $31, $21, $4, 1) | 0) == ($$byval_copy | 0) & 1;
  $$sroa$022$0$copyload24 = HEAP32[$1 >> 2] | 0;
  $36 = $31;
  do {
   $36 = $36 + -12 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
  } while (($36 | 0) != ($$byval_copy | 0));
  $$sroa$022$0 = $$sroa$022$0$copyload24;
 }
 STACKTOP = sp;
 return $$sroa$022$0 | 0;
}

function __ZNK8optframe19MORandomImprovementI6RepHFMiE8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 144 | 0;
 $3 = sp;
 $4 = $3 + 64 | 0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $3 + 12 | 0;
 HEAP32[$3 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$3 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($3 + 64 | 0, $6);
 HEAP32[$3 + 136 >> 2] = 0;
 HEAP32[$3 + 140 >> 2] = -1;
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $3 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$3 + 60 >> 2] = 24;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 $17 = $3 + 8 | 0;
 $18 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 22863, 6) | 0;
 $20 = HEAP32[$1 + 24 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$20 >> 2] | 0) + 16 >> 2] & 127]($2, $20);
 $24 = $2 + 11 | 0;
 $25 = HEAP8[$24 >> 0] | 0;
 $26 = $25 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($18, $26 ? HEAP32[$2 >> 2] | 0 : $2, $26 ? HEAP32[$2 + 4 >> 2] | 0 : $25 & 255) | 0;
 if ((HEAP8[$24 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$17 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZN8optframe22BasicMOILSPerturbationI6RepHFMiEC2ERNS_14MultiEvaluatorIS1_iEEiiRNS_2NSIS1_iEERNS_7RandGenE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $11 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $22 = 0, $27 = 0, $31 = 0, $32 = 0, $37 = 0, $42 = 0, $46 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 $11 = $0 + 16 | 0;
 HEAP8[$11 + 4 >> 0] = 0;
 HEAP32[$0 + 12 >> 2] = 2;
 HEAP8[$0 + 19 >> 0] = 0;
 HEAP8[$11 >> 0] = 1;
 HEAP8[$0 + 17 >> 0] = 1;
 HEAP8[$0 + 18 >> 0] = 0;
 HEAP32[$0 >> 2] = 4804;
 HEAP32[$0 + 4 >> 2] = 4824;
 HEAP32[$0 + 24 >> 2] = $1;
 $15 = $0 + 28 | 0;
 HEAP32[$15 >> 2] = $2;
 $16 = $0 + 32 | 0;
 HEAP32[$16 >> 2] = $3;
 $17 = $0 + 36 | 0;
 HEAP32[$17 >> 2] = 0;
 $18 = $0 + 40 | 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$0 + 44 >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = $5;
 HEAP32[$6 >> 2] = $4;
 __ZNSt3__26vectorIPN8optframe2NSI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($17, $6);
 if ((HEAP32[$16 >> 2] | 0) < (HEAP32[$15 >> 2] | 0)) {
  $22 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16676, 59) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $22 + (HEAP32[(HEAP32[$22 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $27 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34536) | 0;
  $31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 28 >> 2] & 63]($27, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($22, $31) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($22) | 0;
  $32 = HEAP32[$16 >> 2] | 0;
  HEAP32[$16 >> 2] = HEAP32[$15 >> 2];
  HEAP32[$15 >> 2] = $32;
 }
 if ((HEAP32[$18 >> 2] | 0) != (HEAP32[$17 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 }
 $37 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16736, 56) | 0;
 __ZNKSt3__28ios_base6getlocEv($6, $37 + (HEAP32[(HEAP32[$37 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $42 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34536) | 0;
 $46 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$42 >> 2] | 0) + 28 >> 2] & 63]($42, 10) | 0;
 __ZNSt3__26localeD2Ev($6);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($37, $46) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($37) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__221binomial_distributionIiEclINS_26linear_congruential_engineIjLj48271ELj0ELj2147483647EEEEEiRT_RKNS1_10param_typeE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$ = 0, $$0$ph = 0, $$046 = 0, $$046$ph = 0, $$047 = 0.0, $$047$ph = 0.0, $$049$ph = 0.0, $$050 = 0.0, $$050$ph = 0.0, $$148 = 0.0, $$151 = 0.0, $$2 = 0, $11 = 0, $13 = 0, $17 = 0, $21 = 0, $23 = 0, $27 = 0, $3 = 0, $35 = 0.0, $36 = 0.0, $39 = 0, $40 = 0, $49 = 0.0, $50 = 0.0, $55 = 0, $6 = 0.0, $63 = 0.0, $64 = 0.0, $9 = 0, label = 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (!$3) {
  $$2 = 0;
  return $$2 | 0;
 }
 $6 = +HEAPF64[$2 + 8 >> 3];
 if ($6 == 0.0) {
  $$2 = 0;
  return $$2 | 0;
 }
 if ($6 == 1.0) {
  $$2 = $3;
  return $$2 | 0;
 }
 $9 = HEAP32[$1 >> 2] | 0;
 $11 = (($9 >>> 0) % 44488 | 0) * 48271 | 0;
 $13 = (($9 >>> 0) / 44488 | 0) * 3399 | 0;
 $17 = ($11 >>> 0 < $13 >>> 0 ? 2147483647 : 0) + ($11 - $13) | 0;
 $21 = (($17 >>> 0) % 44488 | 0) * 48271 | 0;
 $23 = (($17 >>> 0) / 44488 | 0) * 3399 | 0;
 $27 = ($21 >>> 0 < $23 >>> 0 ? 2147483647 : 0) + ($21 - $23) | 0;
 HEAP32[$1 >> 2] = $27;
 $35 = +HEAPF64[$2 + 16 >> 3];
 $36 = (+(($17 + -1 | 0) >>> 0) + +(($27 + -1 | 0) >>> 0) * 2147483646.0) / 4611686009837453312.0 + 0.0 - $35;
 $39 = HEAP32[$2 + 32 >> 2] | 0;
 if ($36 < 0.0) {
  $$2 = $39;
  return $$2 | 0;
 }
 $40 = $2 + 24 | 0;
 $$0$ph = $39;
 $$046$ph = $39;
 $$047$ph = $35;
 $$049$ph = $35;
 $$050$ph = $36;
 L13 : while (1) {
  $$0 = $$0$ph;
  $$046 = $$046$ph;
  $$047 = $$047$ph;
  $$050 = $$050$ph;
  while (1) {
   if (($$0 | 0) > 0) {
    $49 = $$047 * (+($$0 | 0) / (+HEAPF64[$40 >> 3] * +(1 - $$0 + $3 | 0)));
    $50 = $$050 - $49;
    if ($50 < 0.0) break L13; else {
     $$148 = $49;
     $$151 = $50;
    }
   } else {
    $$148 = $$047;
    $$151 = $$050;
   }
   $$0$ = ($$0 | 0) == 0 ? 0 : $$0 + -1 | 0;
   $55 = $$046 + 1 | 0;
   if (($3 | 0) > ($$046 | 0)) break; else {
    $$0 = $$0$;
    $$046 = $55;
    $$047 = $$148;
    $$050 = $$151;
   }
  }
  $63 = $$049$ph * (+($3 - $$046 | 0) * +HEAPF64[$40 >> 3] / +($55 | 0));
  $64 = $$151 - $63;
  if ($64 < 0.0) {
   $$2 = $55;
   label = 12;
   break;
  } else {
   $$0$ph = $$0$;
   $$046$ph = $55;
   $$047$ph = $$148;
   $$049$ph = $63;
   $$050$ph = $64;
  }
 }
 if ((label | 0) == 12) return $$2 | 0;
 $$2 = $$0 + -1 | 0;
 return $$2 | 0;
}

function __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$016$i$i = 0, $$pre$phi47Z2D = 0, $$pre$phi49Z2D = 0, $$sroa$0$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $27 = 0, $28 = 0, $33 = 0, $50 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 $7 = HEAP32[$0 >> 2] | 0;
 if (!$7) {
  $$sroa$0$2 = 0;
  STACKTOP = sp;
  return $$sroa$0$2 | 0;
 }
 $9 = $3;
 $10 = $1;
 $11 = $9 - $10 | 0;
 $12 = $4 + 12 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 $$0 = ($13 | 0) > ($11 | 0) ? $13 - $11 | 0 : 0;
 $16 = $2;
 $17 = $16 - $10 | 0;
 if (($17 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $1, $17) | 0) != ($17 | 0)) {
  HEAP32[$0 >> 2] = 0;
  $$sroa$0$2 = 0;
  STACKTOP = sp;
  return $$sroa$0$2 | 0;
 }
 do if (($$0 | 0) > 0) {
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  if ($$0 >>> 0 < 11) {
   $33 = $6 + 11 | 0;
   HEAP8[$33 >> 0] = $$0;
   $$016$i$i = $6;
   $$pre$phi47Z2D = $33;
   $$pre$phi49Z2D = $6;
  } else {
   $27 = $$0 + 16 & -16;
   $28 = __Znwj($27) | 0;
   HEAP32[$6 >> 2] = $28;
   HEAP32[$6 + 8 >> 2] = $27 | -2147483648;
   HEAP32[$6 + 4 >> 2] = $$0;
   $$016$i$i = $28;
   $$pre$phi47Z2D = $6 + 11 | 0;
   $$pre$phi49Z2D = $6;
  }
  _memset($$016$i$i | 0, $5 | 0, $$0 | 0) | 0;
  HEAP8[$$016$i$i + $$0 >> 0] = 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, (HEAP8[$$pre$phi47Z2D >> 0] | 0) < 0 ? HEAP32[$$pre$phi49Z2D >> 2] | 0 : $6, $$0) | 0) == ($$0 | 0)) {
   if ((HEAP8[$$pre$phi47Z2D >> 0] | 0) < 0) __ZdlPv(HEAP32[$$pre$phi49Z2D >> 2] | 0);
   break;
  }
  HEAP32[$0 >> 2] = 0;
  if ((HEAP8[$$pre$phi47Z2D >> 0] | 0) < 0) __ZdlPv(HEAP32[$$pre$phi49Z2D >> 2] | 0);
  $$sroa$0$2 = 0;
  STACKTOP = sp;
  return $$sroa$0$2 | 0;
 } while (0);
 $50 = $9 - $16 | 0;
 if (($50 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $2, $50) | 0) != ($50 | 0)) {
  HEAP32[$0 >> 2] = 0;
  $$sroa$0$2 = 0;
  STACKTOP = sp;
  return $$sroa$0$2 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 $$sroa$0$2 = $7;
 STACKTOP = sp;
 return $$sroa$0$2 | 0;
}

function __ZN9scannerpp7Scanner7nextIntEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $17 = 0, $2 = 0, $26 = 0, $3 = 0, $31 = 0, $33 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $1 = sp + 164 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 __ZN9scannerpp7Scanner4nextEv($3, $0);
 $5 = $2 + 60 | 0;
 $6 = $2 + 8 | 0;
 HEAP32[$2 >> 2] = 516;
 HEAP32[$5 >> 2] = 536;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 60 | 0, $6);
 HEAP32[$2 + 132 >> 2] = 0;
 HEAP32[$2 + 136 >> 2] = -1;
 HEAP32[$2 >> 2] = 3616;
 HEAP32[$5 >> 2] = 3636;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $2 + 40 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$2 + 56 >> 2] = 8;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $3);
 if ((HEAP8[$3 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
 $17 = __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERi($2, $1) | 0;
 if (HEAP32[$17 + (HEAP32[(HEAP32[$17 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] & 5 | 0) {
  $31 = ___cxa_allocate_exception(28) | 0;
  $33 = $4 + 4 | 0;
  HEAP32[$33 >> 2] = 0;
  HEAP32[$33 + 4 >> 2] = 0;
  HEAP8[$4 + 11 >> 0] = 3;
  HEAP8[$4 >> 0] = HEAP8[15111] | 0;
  HEAP8[$4 + 1 >> 0] = HEAP8[15112] | 0;
  HEAP8[$4 + 2 >> 0] = HEAP8[15113] | 0;
  HEAP8[$4 + 3 >> 0] = 0;
  HEAP8[$31 >> 0] = 0;
  $39 = $31 + 4 | 0;
  HEAP32[$39 >> 2] = 0;
  HEAP32[$39 + 4 >> 2] = 0;
  HEAP32[$39 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($31 + 16 | 0, $4);
  ___cxa_throw($31 | 0, 64, 253);
 }
 $26 = HEAP32[$1 >> 2] | 0;
 HEAP32[$2 >> 2] = 3616;
 HEAP32[$5 >> 2] = 3636;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($2, 3648);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
  STACKTOP = sp;
  return $26 | 0;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($2, 3648);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 STACKTOP = sp;
 return $26 | 0;
}

function __ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe19IteratedLocalSearchINSt3__24pairINS2_IiiEES3_EE6RepHFMiE11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 18132, 4) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function _callTSForecasting($0) {
 $0 = $0 | 0;
 var $1 = 0, $13 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $26 = 0, $3 = 0, $31 = 0, $35 = 0, $36 = 0, $41 = 0, $45 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 __Z9onlineHFMiPPcPNSt3__26vectorINS2_IdNS1_9allocatorIdEEEENS3_IS5_EEEE($2, 0, 0, 30324);
 $3 = $2 + 11 | 0;
 $7 = (HEAP8[$3 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2;
 $8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 23325, 16) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, $8 + (HEAP32[(HEAP32[$8 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $13 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$13 >> 2] | 0) + 28 >> 2] & 63]($13, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($8, $17) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8) | 0;
 $18 = HEAP8[$3 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 $26 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, $19 ? HEAP32[$2 >> 2] | 0 : $2, $19 ? HEAP32[$2 + 4 >> 2] | 0 : $18 & 255) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, $26 + (HEAP32[(HEAP32[$26 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $31 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $35 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$31 >> 2] | 0) + 28 >> 2] & 63]($31, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($26, $35) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($26) | 0;
 $36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 23342, 7) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, $36 + (HEAP32[(HEAP32[$36 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $41 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$41 >> 2] | 0) + 28 >> 2] & 63]($41, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($36, $45) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($36) | 0;
 if ((HEAP8[$3 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $7 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $7 | 0;
}

function __ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe18MOILSLPerturbationI6RepHFMiE11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 16941, 7) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe22DefaultNSBlockIteratorI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 19313, 16) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe27VariableNeighborhoodDescentI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe11LocalSearchI6RepHFMiE11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 18636, 4) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe16ILSLPerturbationI6RepHFMiE11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 16941, 7) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe18MOILSLPerturbationI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe27VariableNeighborhoodDescentI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe27VariableNeighborhoodDescentI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe11LocalSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe15SingleObjSearchI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 18044, 16) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe13MOLocalSearchI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 22774, 14) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe13InitialParetoI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 23081, 14) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZNK8optframe8SolutionI6RepHFMiE8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 144 | 0;
 $3 = sp;
 $4 = $3 + 64 | 0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $3 + 12 | 0;
 HEAP32[$3 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$3 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($3 + 64 | 0, $6);
 HEAP32[$3 + 136 >> 2] = 0;
 HEAP32[$3 + 140 >> 2] = -1;
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $3 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$3 + 60 >> 2] = 24;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 $17 = $3 + 8 | 0;
 $18 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 17940, 10) | 0;
 __ZlsRNSt3__213basic_ostreamIcNS_11char_traitsIcEEEERK6RepHFM($18, HEAP32[$1 + 20 >> 2] | 0) | 0;
 $21 = $1 + 24 | 0;
 if (HEAP32[$21 >> 2] | 0) {
  $24 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 17951, 5) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEPKv($24, HEAP32[$21 >> 2] | 0) | 0;
 }
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$17 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZN8optframe19MORandomImprovementI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe13MOLocalSearchI6RepHFMiE11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 22870, 5) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe18BasicInitialParetoI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe13InitialParetoI6RepHFMiE11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 23061, 19) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe12ConstructiveI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 19156, 13) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe16ILSLPerturbationI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe11LocalSearchI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 18623, 12) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe19RandomDescentMethodI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe11LocalSearchI6RepHFMiE11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 18872, 4) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe10NSIteratorI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 19554, 11) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe9EvaluatorI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 20868, 10) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe16EmptyLocalSearchI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe11LocalSearchI6RepHFMiE11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 21110, 6) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe8SolutionI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 17957, 9) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe14MultiDirection11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 17345, 15) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe4MoveI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 19725, 5) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe19MORandomImprovementI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe19MORandomImprovementI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe13MOLocalSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe2NSI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 19815, 3) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe10Evaluation11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 17136, 11) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe14MultiEvaluatorI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe14MultiDirection11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 17361, 15) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe4NGESI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe15SingleObjSearchI6RepHFMiE11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 18061, 4) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe15MultiEvaluationaSERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$09 = 0, $$in = 0, $11 = 0, $13 = 0, $15 = 0, $16 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $29 = 0, $3 = 0, $31 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $62 = 0, $64 = 0, $8 = 0, $9 = 0;
 if (($1 | 0) == ($0 | 0)) return $0 | 0;
 $3 = $0 + 20 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 24 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($4 | 0)) {
  $9 = $6;
  while (1) {
   $8 = $9 + -72 | 0;
   HEAP32[$5 >> 2] = $8;
   HEAP32[$8 >> 2] = 4920;
   $11 = HEAP32[$9 + -32 >> 2] | 0;
   if (!$11) $13 = $8; else {
    $21 = $9 + -28 | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    if (($22 | 0) != ($11 | 0)) HEAP32[$21 >> 2] = $22 + (~(($22 + -16 - $11 | 0) >>> 4) << 4);
    __ZdlPv($11);
    $13 = HEAP32[$5 >> 2] | 0;
   }
   if (($13 | 0) == ($4 | 0)) break; else $9 = $13;
  }
 }
 $15 = $1 + 20 | 0;
 $16 = $1 + 24 | 0;
 $18 = HEAP32[$15 >> 2] | 0;
 if ((HEAP32[$16 >> 2] | 0) == ($18 | 0)) return $0 | 0;
 $20 = $0 + 28 | 0;
 $$09 = 0;
 $$in = $18;
 $31 = $4;
 while (1) {
  $29 = $$in;
  if (($31 | 0) == (HEAP32[$20 >> 2] | 0)) __ZNSt3__26vectorIN8optframe10EvaluationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($3, $29 + ($$09 * 72 | 0) | 0); else {
   $36 = $31 + 12 | 0;
   HEAP8[$36 + 4 >> 0] = 0;
   HEAP32[$31 + 8 >> 2] = 2;
   HEAP8[$31 + 15 >> 0] = 0;
   HEAP8[$36 >> 0] = 1;
   HEAP8[$31 + 13 >> 0] = 1;
   HEAP8[$31 + 14 >> 0] = 0;
   HEAP32[$31 >> 2] = 4920;
   HEAPF64[$31 + 24 >> 3] = +HEAPF64[$29 + ($$09 * 72 | 0) + 24 >> 3];
   HEAPF64[$31 + 32 >> 3] = +HEAPF64[$29 + ($$09 * 72 | 0) + 32 >> 3];
   __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($31 + 40 | 0, $29 + ($$09 * 72 | 0) + 40 | 0);
   HEAP32[$31 + 52 >> 2] = HEAP32[$29 + ($$09 * 72 | 0) + 52 >> 2];
   HEAP8[$31 + 56 >> 0] = HEAP8[$29 + ($$09 * 72 | 0) + 56 >> 0] | 0;
   HEAP8[$31 + 57 >> 0] = HEAP8[$29 + ($$09 * 72 | 0) + 57 >> 0] | 0;
   HEAPF64[$31 + 64 >> 3] = +HEAPF64[$29 + ($$09 * 72 | 0) + 64 >> 3];
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 72;
  }
  $62 = $$09 + 1 | 0;
  $64 = HEAP32[$15 >> 2] | 0;
  if ($62 >>> 0 >= (((HEAP32[$16 >> 2] | 0) - $64 | 0) / 72 | 0) >>> 0) break;
  $$09 = $62;
  $$in = $64;
  $31 = HEAP32[$5 >> 2] | 0;
 }
 return $0 | 0;
}

function __ZN8optframe9Direction11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 20858, 9) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe16EmptyLocalSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe16EmptyLocalSearchI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe11LocalSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe5Timer11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $16 = $1 + 11 | 0;
 HEAP8[$16 >> 0] = 8;
 $17 = $1;
 HEAP32[$17 >> 2] = 1182036047;
 HEAP32[$17 + 4 >> 2] = 1701667186;
 HEAP8[$1 + 8 >> 0] = 0;
 $22 = $2 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($22, $1, 8) | 0, 17998, 6) | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$22 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN3HFM17HFMMultiEvaluator11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe14MultiDirection11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 17377, 19) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe5NSSeqI6RepHFMiE11idComponentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 144 | 0;
 $2 = sp;
 $3 = $2 + 64 | 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 3472;
 $5 = $2 + 12 | 0;
 HEAP32[$2 >> 2] = 404;
 HEAP32[$3 >> 2] = 424;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 64 | 0, $5);
 HEAP32[$2 + 136 >> 2] = 0;
 HEAP32[$2 + 140 >> 2] = -1;
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$4 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 3548;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$2 + 60 >> 2] = 24;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $1);
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZN8optframe2NSI6RepHFMiE11idComponentEv($1);
 $16 = $2 + 8 | 0;
 $17 = $1 + 11 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $19 ? HEAP32[$1 >> 2] | 0 : $1, $19 ? HEAP32[$1 + 4 >> 2] | 0 : $18 & 255) | 0, 19819, 6) | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$2 >> 2] = 3452;
 HEAP32[$3 >> 2] = 3492;
 HEAP32[$16 >> 2] = 3472;
 HEAP32[$5 >> 2] = 3548;
 if ((HEAP8[$10 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$10 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($2, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN8optframe18MOILSLPerturbationI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe18MOILSLPerturbationI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe14MultiEvaluatorI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe14MultiEvaluatorI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe14MultiDirection10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function _mbrtowc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$0 = 0, $$03952 = 0, $$04051 = 0, $$04350 = 0, $$1 = 0, $$141 = 0, $$144 = 0, $$2 = 0, $$47 = 0, $12 = 0, $21 = 0, $25 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $4 = 0, $43 = 0, $6 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $$ = ($3 | 0) == 0 ? 30924 : $3;
 $6 = HEAP32[$$ >> 2] | 0;
 L1 : do if (!$1) if (!$6) $$0 = 0; else label = 17; else {
  $$47 = ($0 | 0) == 0 ? $4 : $0;
  if (!$2) $$0 = -2; else {
   if (!$6) {
    $12 = HEAP8[$1 >> 0] | 0;
    if ($12 << 24 >> 24 > -1) {
     HEAP32[$$47 >> 2] = $12 & 255;
     $$0 = $12 << 24 >> 24 != 0 & 1;
     break;
    }
    $not$ = (HEAP32[HEAP32[(___pthread_self_346() | 0) + 188 >> 2] >> 2] | 0) == 0;
    $21 = HEAP8[$1 >> 0] | 0;
    if ($not$) {
     HEAP32[$$47 >> 2] = $21 << 24 >> 24 & 57343;
     $$0 = 1;
     break;
    }
    $25 = ($21 & 255) + -194 | 0;
    if ($25 >>> 0 > 50) {
     label = 17;
     break;
    }
    $29 = HEAP32[7100 + ($25 << 2) >> 2] | 0;
    $30 = $2 + -1 | 0;
    if (!$30) $$2 = $29; else {
     $$03952 = $1 + 1 | 0;
     $$04051 = $29;
     $$04350 = $30;
     label = 11;
    }
   } else {
    $$03952 = $1;
    $$04051 = $6;
    $$04350 = $2;
    label = 11;
   }
   L14 : do if ((label | 0) == 11) {
    $32 = HEAP8[$$03952 >> 0] | 0;
    $34 = ($32 & 255) >>> 3;
    if (($34 + -16 | $34 + ($$04051 >> 26)) >>> 0 > 7) {
     label = 17;
     break L1;
    } else {
     $$1 = $$03952;
     $$141 = $$04051;
     $$144 = $$04350;
     $43 = $32;
    }
    while (1) {
     $$1 = $$1 + 1 | 0;
     $$141 = ($43 & 255) + -128 | $$141 << 6;
     $$144 = $$144 + -1 | 0;
     if (($$141 | 0) >= 0) break;
     if (!$$144) {
      $$2 = $$141;
      break L14;
     }
     $43 = HEAP8[$$1 >> 0] | 0;
     if (($43 & -64) << 24 >> 24 != -128) {
      label = 17;
      break L1;
     }
    }
    HEAP32[$$ >> 2] = 0;
    HEAP32[$$47 >> 2] = $$141;
    $$0 = $2 - $$144 | 0;
    break L1;
   } while (0);
   HEAP32[$$ >> 2] = $$2;
   $$0 = -2;
  }
 } while (0);
 if ((label | 0) == 17) {
  HEAP32[$$ >> 2] = 0;
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN8optframe16ILSLPerturbationI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe16ILSLPerturbationI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe6ParetoI6RepHFMiEaSERKS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$010$i = 0, $$017 = 0, $$cast$i = 0, $$cast$lcssa$i = 0, $$cast11$i = 0, $$cast9$i = 0, $$in$i = 0, $$lcssa$i = 0, $16 = 0, $17 = 0, $18 = 0, $26 = 0, $3 = 0, $33 = 0, $39 = 0, $4 = 0, $40 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0;
 if (($1 | 0) == ($0 | 0)) return $0 | 0;
 $3 = $0 + 4 | 0;
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $$cast9$i = $6;
 if (($5 | 0) == ($6 | 0)) {
  $$cast$lcssa$i = $$cast9$i;
  $$in$i = $5;
  $$lcssa$i = $5;
 } else {
  $8 = $0 + 16 | 0;
  $$010$i = 0;
  $$cast11$i = $$cast9$i;
  while (1) {
   $26 = HEAP32[$$cast11$i + ($$010$i << 2) >> 2] | 0;
   if ($26 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$26 >> 2] | 0) + 4 >> 2] & 511]($26);
   $33 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($$010$i << 2) >> 2] | 0;
   if ($33 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$33 >> 2] | 0) + 4 >> 2] & 511]($33);
   $$010$i = $$010$i + 1 | 0;
   $39 = HEAP32[$4 >> 2] | 0;
   $40 = HEAP32[$3 >> 2] | 0;
   $$cast$i = $40;
   if ($$010$i >>> 0 >= $39 - $40 >> 2 >>> 0) {
    $$cast$lcssa$i = $$cast$i;
    $$in$i = $39;
    $$lcssa$i = $40;
    break;
   } else $$cast11$i = $$cast$i;
  }
 }
 $9 = $$in$i;
 if (($9 | 0) != ($$cast$lcssa$i | 0)) HEAP32[$4 >> 2] = $9 + (~(($9 + -4 - $$lcssa$i | 0) >>> 2) << 2);
 $16 = HEAP32[$0 + 16 >> 2] | 0;
 $17 = $0 + 20 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if (($18 | 0) != ($16 | 0)) HEAP32[$17 >> 2] = $18 + (~(($18 + -4 - $16 | 0) >>> 2) << 2);
 $49 = (HEAP32[$1 + 8 >> 2] | 0) - (HEAP32[$1 + 4 >> 2] | 0) >> 2;
 if (!$49) return $0 | 0;
 $51 = $1 + 16 | 0;
 $52 = $1 + 20 | 0;
 $53 = $1 + 4 | 0;
 $$017 = 0;
 do {
  $55 = HEAP32[$51 >> 2] | 0;
  if ((HEAP32[$52 >> 2] | 0) - $55 >> 2 >>> 0 <= $$017 >>> 0) {
   label = 16;
   break;
  }
  __ZN8optframe6ParetoI6RepHFMiE14add_indWithMevERKNS_8SolutionIS1_iEERKNS_15MultiEvaluationE($0, HEAP32[(HEAP32[$53 >> 2] | 0) + ($$017 << 2) >> 2] | 0, HEAP32[$55 + ($$017 << 2) >> 2] | 0);
  $$017 = $$017 + 1 | 0;
 } while ($$017 >>> 0 < $49 >>> 0);
 if ((label | 0) == 16) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($51);
 HEAP8[$0 + 28 >> 0] = 1;
 return $0 | 0;
}

function __ZN8optframe15SingleObjSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe15SingleObjSearchI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe13MOLocalSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe13MOLocalSearchI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe12ConstructiveI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe12ConstructiveI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe11LocalSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe11LocalSearchI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe9EvaluatorI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe9EvaluatorI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Direction10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function ___fdopen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $15 = 0, $17 = 0, $2 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $7 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer12 = sp + 40 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 56 | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 if (!(_memchr(26051, $3 << 24 >> 24, 4) | 0)) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $$0 = 0;
 } else {
  $7 = _malloc(1156) | 0;
  if (!$7) $$0 = 0; else {
   dest = $7;
   stop = dest + 124 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   if (!(_strchr($1, 43) | 0)) HEAP32[$7 >> 2] = $3 << 24 >> 24 == 114 ? 8 : 4;
   if (!(_strchr($1, 101) | 0)) $15 = $3; else {
    HEAP32[$vararg_buffer >> 2] = $0;
    HEAP32[$vararg_buffer + 4 >> 2] = 2;
    HEAP32[$vararg_buffer + 8 >> 2] = 1;
    ___syscall221(221, $vararg_buffer | 0) | 0;
    $15 = HEAP8[$1 >> 0] | 0;
   }
   if ($15 << 24 >> 24 == 97) {
    HEAP32[$vararg_buffer3 >> 2] = $0;
    HEAP32[$vararg_buffer3 + 4 >> 2] = 3;
    $17 = ___syscall221(221, $vararg_buffer3 | 0) | 0;
    if (!($17 & 1024)) {
     HEAP32[$vararg_buffer7 >> 2] = $0;
     HEAP32[$vararg_buffer7 + 4 >> 2] = 4;
     HEAP32[$vararg_buffer7 + 8 >> 2] = $17 | 1024;
     ___syscall221(221, $vararg_buffer7 | 0) | 0;
    }
    $22 = HEAP32[$7 >> 2] | 128;
    HEAP32[$7 >> 2] = $22;
    $29 = $22;
   } else $29 = HEAP32[$7 >> 2] | 0;
   HEAP32[$7 + 60 >> 2] = $0;
   HEAP32[$7 + 44 >> 2] = $7 + 132;
   HEAP32[$7 + 48 >> 2] = 1024;
   $27 = $7 + 75 | 0;
   HEAP8[$27 >> 0] = -1;
   if (!($29 & 8)) {
    HEAP32[$vararg_buffer12 >> 2] = $0;
    HEAP32[$vararg_buffer12 + 4 >> 2] = 21523;
    HEAP32[$vararg_buffer12 + 8 >> 2] = $2;
    if (!(___syscall54(54, $vararg_buffer12 | 0) | 0)) HEAP8[$27 >> 0] = 10;
   }
   HEAP32[$7 + 32 >> 2] = 33;
   HEAP32[$7 + 36 >> 2] = 35;
   HEAP32[$7 + 40 >> 2] = 34;
   HEAP32[$7 + 12 >> 2] = 29;
   if (!(HEAP32[7709] | 0)) HEAP32[$7 + 76 >> 2] = -1;
   ___ofl_add($7) | 0;
   $$0 = $7;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN8optframe5NSSeqI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe5NSSeqI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe2NSI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe14MultiDirection10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe14MultiDirection11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe2NSI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe2NSI6RepHFMiE11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN3HFM17ProblemParametersC2ERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $3 = 0, $31 = 0, $33 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 24 | 0;
 $$byval_copy = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 HEAP32[$0 >> 2] = 3896;
 $4 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($0 + 16 | 0, $1 + 16 | 0);
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($0 + 28 | 0, $1 + 28 | 0);
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($0 + 40 | 0, $1 + 40 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 52 | 0, $1 + 52 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 64 | 0, $1 + 64 | 0);
 $16 = $0 + 76 | 0;
 $17 = $1 + 76 | 0;
 HEAP32[$16 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$16 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
 HEAP32[$16 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
 $18 = $0 + 88 | 0;
 HEAP32[$18 >> 2] = 0;
 $20 = $0 + 92 | 0;
 HEAP32[$20 >> 2] = 0;
 $21 = $0 + 96 | 0;
 HEAP32[$21 >> 2] = 0;
 $22 = $1 + 92 | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 if (!$23) {
  STACKTOP = sp;
  return;
 }
 if (($23 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($18);
 $28 = (($23 + -1 | 0) >>> 5) + 1 | 0;
 HEAP32[$18 >> 2] = __Znwj($28 << 2) | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$21 >> 2] = $28;
 $31 = HEAP32[$1 + 88 >> 2] | 0;
 HEAP32[$2 >> 2] = $31;
 HEAP32[$2 + 4 >> 2] = 0;
 $33 = HEAP32[$22 >> 2] | 0;
 HEAP32[$3 >> 2] = $31 + ($33 >>> 5 << 2);
 HEAP32[$3 + 4 >> 2] = $33 & 31;
 HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb1ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($18, $$byval_copy, $$byval_copy1);
 STACKTOP = sp;
 return;
}

function __ZN8optframe9Direction10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe9Direction11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN8optframe5Timer10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i = 0, $$014$i$i = 0, $$02028$i = 0, $$02127$i = 0, $$029$i = 0, $$0913$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $37 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZN8optframe5Timer11idComponentEv($2);
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $5 & 255;
 $10 = $6 ? $8 : $9;
 $11 = $2 + 11 | 0;
 $12 = HEAP8[$11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 L1 : do if (($10 | 0) == (($13 ? HEAP32[$2 + 4 >> 2] | 0 : $12 & 255) | 0)) {
  $20 = $13 ? HEAP32[$2 >> 2] | 0 : $2;
  $21 = ($10 | 0) == 0;
  if ($6) {
   if ($21) {
    $45 = 1;
    break;
   }
   $$01012$i$i = HEAP32[$1 >> 2] | 0;
   $$014$i$i = $8;
   $$0913$i$i = $20;
   while (1) {
    if ((HEAP8[$$0913$i$i >> 0] | 0) != (HEAP8[$$01012$i$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$014$i$i = $$014$i$i + -1 | 0;
    if (!$$014$i$i) {
     $45 = 1;
     break;
    } else {
     $$01012$i$i = $$01012$i$i + 1 | 0;
     $$0913$i$i = $$0913$i$i + 1 | 0;
    }
   }
  } else {
   if ($21) {
    $45 = 1;
    break;
   }
   $$02028$i = $1;
   $$02127$i = $9;
   $$029$i = $20;
   while (1) {
    if ((HEAP8[$$02028$i >> 0] | 0) != (HEAP8[$$029$i >> 0] | 0)) {
     label = 11;
     break L1;
    }
    $$02127$i = $$02127$i + -1 | 0;
    if (!$$02127$i) {
     $45 = 1;
     break;
    } else {
     $$02028$i = $$02028$i + 1 | 0;
     $$029$i = $$029$i + 1 | 0;
    }
   }
  }
 } else label = 11; while (0);
 if ((label | 0) == 11) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
  $37 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) {
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   $45 = $37;
  } else $45 = $37;
 }
 if ((HEAP8[$11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $45 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $45 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$sroa$speculated$$i = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $50 = 0, $52 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 $3 = $2;
 $4 = $1;
 $5 = $3 - $4 | 0;
 $6 = $5 >> 2;
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 if ($6 >>> 0 <= $8 - $9 >> 2 >>> 0) {
  $14 = $0 + 4 | 0;
  $17 = (HEAP32[$14 >> 2] | 0) - $9 >> 2;
  $18 = $6 >>> 0 > $17 >>> 0;
  $$ = $18 ? $1 + ($17 << 2) | 0 : $2;
  $20 = $$;
  $21 = $20 - $4 | 0;
  $22 = $21 >> 2;
  if ($22 | 0) _memmove($9 | 0, $1 | 0, $21 | 0) | 0;
  $25 = $13 + ($22 << 2) | 0;
  if ($18) {
   $26 = $3 - $20 | 0;
   if (($26 | 0) <= 0) return;
   _memcpy(HEAP32[$14 >> 2] | 0, $$ | 0, $26 | 0) | 0;
   HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + ($26 >>> 2 << 2);
   return;
  } else {
   $32 = HEAP32[$14 >> 2] | 0;
   if (($32 | 0) == ($25 | 0)) return;
   HEAP32[$14 >> 2] = $32 + (~(($32 + -4 - $25 | 0) >>> 2) << 2);
   return;
  }
 }
 $40 = $9;
 if (!$9) $50 = $8; else {
  $41 = $0 + 4 | 0;
  $42 = HEAP32[$41 >> 2] | 0;
  if (($42 | 0) != ($13 | 0)) HEAP32[$41 >> 2] = $42 + (~(($42 + -4 - $9 | 0) >>> 2) << 2);
  __ZdlPv($40);
  HEAP32[$7 >> 2] = 0;
  HEAP32[$41 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  $50 = 0;
 }
 if ($6 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $52 = $50 >> 1;
 $$sroa$speculated$$i = $50 >> 2 >>> 0 < 536870911 ? ($52 >>> 0 < $6 >>> 0 ? $6 : $52) : 1073741823;
 if ($$sroa$speculated$$i >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $56 = __Znwj($$sroa$speculated$$i << 2) | 0;
 $57 = $0 + 4 | 0;
 HEAP32[$57 >> 2] = $56;
 HEAP32[$0 >> 2] = $56;
 HEAP32[$7 >> 2] = $56 + ($$sroa$speculated$$i << 2);
 if (($5 | 0) <= 0) return;
 _memcpy($56 | 0, $1 | 0, $5 | 0) | 0;
 HEAP32[$57 >> 2] = $56 + ($5 >>> 2 << 2);
 return;
}

function ___stdio_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $12 = 0, $13 = 0, $17 = 0, $20 = 0, $25 = 0, $3 = 0, $36 = 0, $37 = 0, $4 = 0, $43 = 0, $5 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $3 = sp + 32 | 0;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[$3 >> 2] = $5;
 $7 = $0 + 20 | 0;
 $9 = (HEAP32[$7 >> 2] | 0) - $5 | 0;
 HEAP32[$3 + 4 >> 2] = $9;
 HEAP32[$3 + 8 >> 2] = $1;
 HEAP32[$3 + 12 >> 2] = $2;
 $12 = $9 + $2 | 0;
 $13 = $0 + 60 | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$13 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = $3;
 HEAP32[$vararg_buffer + 8 >> 2] = 2;
 $17 = ___syscall_ret(___syscall146(146, $vararg_buffer | 0) | 0) | 0;
 L1 : do if (($12 | 0) == ($17 | 0)) label = 3; else {
  $$04756 = 2;
  $$04855 = $12;
  $$04954 = $3;
  $25 = $17;
  while (1) {
   if (($25 | 0) < 0) break;
   $$04855 = $$04855 - $25 | 0;
   $36 = HEAP32[$$04954 + 4 >> 2] | 0;
   $37 = $25 >>> 0 > $36 >>> 0;
   $$150 = $37 ? $$04954 + 8 | 0 : $$04954;
   $$1 = ($37 << 31 >> 31) + $$04756 | 0;
   $$0 = $25 - ($37 ? $36 : 0) | 0;
   HEAP32[$$150 >> 2] = (HEAP32[$$150 >> 2] | 0) + $$0;
   $43 = $$150 + 4 | 0;
   HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) - $$0;
   HEAP32[$vararg_buffer3 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$vararg_buffer3 + 4 >> 2] = $$150;
   HEAP32[$vararg_buffer3 + 8 >> 2] = $$1;
   $25 = ___syscall_ret(___syscall146(146, $vararg_buffer3 | 0) | 0) | 0;
   if (($$04855 | 0) == ($25 | 0)) {
    label = 3;
    break L1;
   } else {
    $$04756 = $$1;
    $$04954 = $$150;
   }
  }
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$7 >> 2] = 0;
  HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 32;
  if (($$04756 | 0) == 2) $$051 = 0; else $$051 = $2 - (HEAP32[$$04954 + 4 >> 2] | 0) | 0;
 } while (0);
 if ((label | 0) == 3) {
  $20 = HEAP32[$0 + 44 >> 2] | 0;
  HEAP32[$0 + 16 >> 2] = $20 + (HEAP32[$0 + 48 >> 2] | 0);
  HEAP32[$4 >> 2] = $20;
  HEAP32[$7 >> 2] = $20;
  $$051 = $2;
 }
 STACKTOP = sp;
 return $$051 | 0;
}

function __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$sroa$speculated$$i = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $50 = 0, $52 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 $3 = $2;
 $4 = $1;
 $5 = $3 - $4 | 0;
 $6 = $5 >> 3;
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 if ($6 >>> 0 <= $8 - $9 >> 3 >>> 0) {
  $14 = $0 + 4 | 0;
  $17 = (HEAP32[$14 >> 2] | 0) - $9 >> 3;
  $18 = $6 >>> 0 > $17 >>> 0;
  $$ = $18 ? $1 + ($17 << 3) | 0 : $2;
  $20 = $$;
  $21 = $20 - $4 | 0;
  $22 = $21 >> 3;
  if ($22 | 0) _memmove($9 | 0, $1 | 0, $21 | 0) | 0;
  $25 = $13 + ($22 << 3) | 0;
  if ($18) {
   $26 = $3 - $20 | 0;
   if (($26 | 0) <= 0) return;
   _memcpy(HEAP32[$14 >> 2] | 0, $$ | 0, $26 | 0) | 0;
   HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + ($26 >>> 3 << 3);
   return;
  } else {
   $32 = HEAP32[$14 >> 2] | 0;
   if (($32 | 0) == ($25 | 0)) return;
   HEAP32[$14 >> 2] = $32 + (~(($32 + -8 - $25 | 0) >>> 3) << 3);
   return;
  }
 }
 $40 = $9;
 if (!$9) $50 = $8; else {
  $41 = $0 + 4 | 0;
  $42 = HEAP32[$41 >> 2] | 0;
  if (($42 | 0) != ($13 | 0)) HEAP32[$41 >> 2] = $42 + (~(($42 + -8 - $9 | 0) >>> 3) << 3);
  __ZdlPv($40);
  HEAP32[$7 >> 2] = 0;
  HEAP32[$41 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  $50 = 0;
 }
 if ($6 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $52 = $50 >> 2;
 $$sroa$speculated$$i = $50 >> 3 >>> 0 < 268435455 ? ($52 >>> 0 < $6 >>> 0 ? $6 : $52) : 536870911;
 if ($$sroa$speculated$$i >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $56 = __Znwj($$sroa$speculated$$i << 3) | 0;
 $57 = $0 + 4 | 0;
 HEAP32[$57 >> 2] = $56;
 HEAP32[$0 >> 2] = $56;
 HEAP32[$7 >> 2] = $56 + ($$sroa$speculated$$i << 3);
 if (($5 | 0) <= 0) return;
 _memcpy($56 | 0, $1 | 0, $5 | 0) | 0;
 HEAP32[$57 >> 2] = $56 + ($5 >>> 3 << 3);
 return;
}

function __ZNK8lregress2lrERNSt3__26vectorINS_5pointENS0_9allocatorIS2_EEEERNS_8lineInfoE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0127148 = 0.0, $$0128147 = 0.0, $$0129146 = 0.0, $$0130145 = 0.0, $$0131144 = 0.0, $$0132143 = 0.0, $$0133142 = 0.0, $$0134141 = 0, $$0149 = 0.0, $$01617$i = 0.0, $$01617$i136 = 0.0, $$018$i = 0, $$018$i135 = 0, $14 = 0.0, $15 = 0.0, $20 = 0.0, $21 = 0.0, $32 = 0.0, $34 = 0.0, $40 = 0.0, $5 = 0, $61 = 0.0, $63 = 0.0, $67 = 0.0, $68 = 0.0, $7 = 0, $9 = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $7 = (HEAP32[$1 + 4 >> 2] | 0) - $5 >> 4;
 $9 = $5;
 if (!$7) return; else {
  $$01617$i136 = 0.0;
  $$018$i135 = 0;
 }
 do {
  $$01617$i136 = $$01617$i136 + +HEAPF64[$9 + ($$018$i135 << 4) >> 3];
  $$018$i135 = $$018$i135 + 1 | 0;
 } while (($$018$i135 | 0) != ($7 | 0));
 $14 = +($7 >>> 0);
 $15 = $$01617$i136 / $14;
 $$01617$i = 0.0;
 $$018$i = 0;
 do {
  $$01617$i = $$01617$i + +HEAPF64[$9 + ($$018$i << 4) + 8 >> 3];
  $$018$i = $$018$i + 1 | 0;
 } while (($$018$i | 0) != ($7 | 0));
 $20 = $$01617$i / $14;
 $$0127148 = 0.0;
 $$0128147 = 0.0;
 $$0129146 = 0.0;
 $$0130145 = 0.0;
 $$0131144 = 0.0;
 $$0132143 = 0.0;
 $$0133142 = 0.0;
 $$0134141 = 0;
 $$0149 = 0.0;
 do {
  $61 = +HEAPF64[$9 + ($$0134141 << 4) >> 3];
  $$0129146 = $$0129146 + $61;
  $63 = +HEAPF64[$9 + ($$0134141 << 4) + 8 >> 3];
  $$0130145 = $$0130145 + $63;
  $$0131144 = $$0131144 + $61 * $63;
  $$0133142 = $$0133142 + $61 * $61;
  $$0132143 = $$0132143 + $63 * $63;
  $67 = $61 - $15;
  $68 = $63 - $20;
  $$0128147 = $$0128147 + $68 * $68;
  $$0149 = $$0149 + $67 * $68;
  $$0127148 = $$0127148 + $67 * $67;
  $$0134141 = $$0134141 + 1 | 0;
 } while (($$0134141 | 0) != ($7 | 0));
 $21 = $$0149 / $$0127148;
 $32 = +Math_sqrt(+(($$0128147 - $$0149 * $21) / +(($7 + -2 | 0) >>> 0)));
 $34 = $32 / +Math_sqrt(+$$0127148);
 $40 = $14 * $$0131144 - $$0130145 * $$0129146;
 HEAPF64[$2 + 32 >> 3] = ($21 < 0.0 ? -1.0 : 1.0) * +Math_sqrt(+($40 * $40 / (($14 * $$0132143 - $$0130145 * $$0130145) * ($14 * $$0133142 - $$0129146 * $$0129146))));
 HEAPF64[$2 + 16 >> 3] = $32;
 HEAPF64[$2 + 24 >> 3] = $34;
 HEAPF64[$2 >> 3] = $21;
 HEAPF64[$2 + 8 >> 3] = $20 - $15 * $21;
 return;
}

function __ZN8optframe27VariableNeighborhoodDescentI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_4SOSCE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $17 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $59 = 0, $6 = 0, $69 = 0, $71 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $3 = sp + 72 | 0;
 $4 = sp;
 $6 = HEAP32[$0 + 20 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 76 >> 2] & 31]($4, $6, HEAP32[$1 + 20 >> 2] | 0, HEAP32[$1 + 24 >> 2] | 0);
 $17 = $3 + 12 | 0;
 HEAP8[$17 + 4 >> 0] = 0;
 HEAP32[$3 + 8 >> 2] = 2;
 HEAP8[$3 + 15 >> 0] = 0;
 HEAP8[$17 >> 0] = 1;
 HEAP8[$3 + 13 >> 0] = 1;
 HEAP8[$3 + 14 >> 0] = 0;
 HEAP32[$3 >> 2] = 4920;
 HEAPF64[$3 + 24 >> 3] = +HEAPF64[$4 + 24 >> 3];
 HEAPF64[$3 + 32 >> 3] = +HEAPF64[$4 + 32 >> 3];
 $26 = $3 + 40 | 0;
 HEAP32[$26 >> 2] = 0;
 $28 = $3 + 44 | 0;
 HEAP32[$28 >> 2] = 0;
 HEAP32[$3 + 48 >> 2] = 0;
 $30 = $4 + 44 | 0;
 $31 = HEAP32[$30 >> 2] | 0;
 $32 = HEAP32[$4 + 40 >> 2] | 0;
 $33 = $31 - $32 | 0;
 $34 = $33 >> 4;
 $36 = $32;
 $37 = $31;
 if ($34 | 0) {
  if ($34 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($26);
  $39 = __Znwj($33) | 0;
  HEAP32[$28 >> 2] = $39;
  HEAP32[$26 >> 2] = $39;
  HEAP32[$3 + 48 >> 2] = $39 + ($34 << 4);
  if (($33 | 0) > 0) {
   _memcpy($39 | 0, $32 | 0, $33 | 0) | 0;
   HEAP32[$28 >> 2] = $39 + ($33 >>> 4 << 4);
  }
 }
 HEAP32[$3 + 52 >> 2] = HEAP32[$4 + 52 >> 2];
 HEAP8[$3 + 56 >> 0] = HEAP8[$4 + 56 >> 0] | 0;
 HEAP8[$3 + 57 >> 0] = HEAP8[$4 + 57 >> 0] | 0;
 HEAPF64[$3 + 64 >> 3] = +HEAPF64[$4 + 64 >> 3];
 HEAP32[$4 >> 2] = 4920;
 $59 = $32;
 if ($32 | 0) {
  if (($37 | 0) != ($36 | 0)) HEAP32[$30 >> 2] = $37 + (~(($37 + -16 - $32 | 0) >>> 4) << 4);
  __ZdlPv($59);
 }
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 31]($0, $1, $3, $2);
 HEAP32[$3 >> 2] = 4920;
 $69 = HEAP32[$3 + 40 >> 2] | 0;
 if (!$69) {
  STACKTOP = sp;
  return;
 }
 $71 = HEAP32[$28 >> 2] | 0;
 if (($71 | 0) != ($69 | 0)) HEAP32[$28 >> 2] = $71 + (~(($71 + -16 - $69 | 0) >>> 4) << 4);
 __ZdlPv($69);
 STACKTOP = sp;
 return;
}

function __ZN8optframe7RandGen10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01012$i$i21 = 0, $$014$i$i19 = 0, $$02028$i23 = 0, $$02127$i24 = 0, $$029$i22 = 0, $$0913$i$i20 = 0, $10 = 0, $15 = 0, $2 = 0, $3 = 0, $30 = 0, $35 = 0, $6 = 0, $7 = 0, $9 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = __Znwj(32) | 0;
 dest = $3;
 src = 21289;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$3 + 16 >> 0] = 0;
 $6 = HEAP8[$1 + 11 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 $9 = HEAP32[$1 + 4 >> 2] | 0;
 $10 = $6 & 255;
 L1 : do if ((($7 ? $9 : $10) | 0) == 16) if ($7) {
  $15 = HEAP32[$1 >> 2] | 0;
  if ((HEAP8[$15 >> 0] | 0) == 79) {
   $$01012$i$i21 = $15;
   $$014$i$i19 = $9;
   $$0913$i$i20 = $3;
  } else break;
  while (1) {
   $$014$i$i19 = $$014$i$i19 + -1 | 0;
   $$0913$i$i20 = $$0913$i$i20 + 1 | 0;
   if (!$$014$i$i19) {
    $35 = 1;
    break;
   }
   $$01012$i$i21 = $$01012$i$i21 + 1 | 0;
   if ((HEAP8[$$0913$i$i20 >> 0] | 0) != (HEAP8[$$01012$i$i21 >> 0] | 0)) break L1;
  }
  __ZdlPv($3);
  STACKTOP = sp;
  return $35 | 0;
 } else {
  if ((HEAP8[$1 >> 0] | 0) == 79) {
   $$02028$i23 = $1;
   $$02127$i24 = $10;
   $$029$i22 = $3;
  } else break;
  while (1) {
   $$02127$i24 = $$02127$i24 + -1 | 0;
   $$029$i22 = $$029$i22 + 1 | 0;
   if (!$$02127$i24) {
    $35 = 1;
    break;
   }
   $$02028$i23 = $$02028$i23 + 1 | 0;
   if ((HEAP8[$$02028$i23 >> 0] | 0) != (HEAP8[$$029$i22 >> 0] | 0)) break L1;
  }
  __ZdlPv($3);
  STACKTOP = sp;
  return $35 | 0;
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2, $1);
 $30 = __ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $2) | 0;
 if ((HEAP8[$2 + 11 >> 0] | 0) >= 0) {
  $35 = $30;
  __ZdlPv($3);
  STACKTOP = sp;
  return $35 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 $35 = $30;
 __ZdlPv($3);
 STACKTOP = sp;
 return $35 | 0;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0, aligned_dest_end = 0, block_aligned_dest_end = 0, dest_end = 0;
 if ((num | 0) >= 8192) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 dest_end = dest + num | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  aligned_dest_end = dest_end & -4 | 0;
  block_aligned_dest_end = aligned_dest_end - 64 | 0;
  while ((dest | 0) <= (block_aligned_dest_end | 0)) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   HEAP32[dest + 4 >> 2] = HEAP32[src + 4 >> 2];
   HEAP32[dest + 8 >> 2] = HEAP32[src + 8 >> 2];
   HEAP32[dest + 12 >> 2] = HEAP32[src + 12 >> 2];
   HEAP32[dest + 16 >> 2] = HEAP32[src + 16 >> 2];
   HEAP32[dest + 20 >> 2] = HEAP32[src + 20 >> 2];
   HEAP32[dest + 24 >> 2] = HEAP32[src + 24 >> 2];
   HEAP32[dest + 28 >> 2] = HEAP32[src + 28 >> 2];
   HEAP32[dest + 32 >> 2] = HEAP32[src + 32 >> 2];
   HEAP32[dest + 36 >> 2] = HEAP32[src + 36 >> 2];
   HEAP32[dest + 40 >> 2] = HEAP32[src + 40 >> 2];
   HEAP32[dest + 44 >> 2] = HEAP32[src + 44 >> 2];
   HEAP32[dest + 48 >> 2] = HEAP32[src + 48 >> 2];
   HEAP32[dest + 52 >> 2] = HEAP32[src + 52 >> 2];
   HEAP32[dest + 56 >> 2] = HEAP32[src + 56 >> 2];
   HEAP32[dest + 60 >> 2] = HEAP32[src + 60 >> 2];
   dest = dest + 64 | 0;
   src = src + 64 | 0;
  }
  while ((dest | 0) < (aligned_dest_end | 0)) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  }
 } else {
  aligned_dest_end = dest_end - 4 | 0;
  while ((dest | 0) < (aligned_dest_end | 0)) {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   HEAP8[dest + 1 >> 0] = HEAP8[src + 1 >> 0] | 0;
   HEAP8[dest + 2 >> 0] = HEAP8[src + 2 >> 0] | 0;
   HEAP8[dest + 3 >> 0] = HEAP8[src + 3 >> 0] | 0;
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  }
 }
 while ((dest | 0) < (dest_end | 0)) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 }
 return ret | 0;
}

function __ZN8optframe13paretoManagerI6RepHFMiE14checkDominanceERKNS_6ParetoIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$024 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $3 = 0, $36 = 0, $4 = 0, $41 = 0, $45 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $2 = sp + 32 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = 6156;
 $4 = $3 + 4 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$4 + 12 >> 2] = 0;
 HEAP32[$4 + 16 >> 2] = 0;
 HEAP32[$4 + 20 >> 2] = 0;
 HEAP8[$4 + 24 >> 0] = 0;
 $9 = (HEAP32[$1 + 8 >> 2] | 0) - (HEAP32[$1 + 4 >> 2] | 0) | 0;
 $10 = $9 >> 2;
 do if (($9 | 0) > 0) {
  $12 = $1 + 16 | 0;
  $13 = $1 + 20 | 0;
  $14 = $1 + 4 | 0;
  $$024 = 0;
  while (1) {
   $21 = HEAP32[$12 >> 2] | 0;
   if ((HEAP32[$13 >> 2] | 0) - $21 >> 2 >>> 0 <= $$024 >>> 0) {
    label = 6;
    break;
   }
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] & 31]($0, $3, HEAP32[(HEAP32[$14 >> 2] | 0) + ($$024 << 2) >> 2] | 0, HEAP32[$21 + ($$024 << 2) >> 2] | 0) | 0;
   $$024 = $$024 + 1 | 0;
   if (($$024 | 0) >= ($10 | 0)) {
    label = 3;
    break;
   }
  }
  if ((label | 0) == 3) {
   $16 = HEAP32[$3 + 4 >> 2] | 0;
   $17 = HEAP32[$3 + 8 >> 2] | 0;
   break;
  } else if ((label | 0) == 6) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($12);
 } else {
  $16 = 0;
  $17 = 0;
 } while (0);
 if (($17 - $16 >> 2 | 0) == ($10 | 0)) {
  __ZN8optframe6ParetoI6RepHFMiED2Ev($3);
  STACKTOP = sp;
  return 1;
 } else {
  $36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 22559, 76) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $36 + (HEAP32[(HEAP32[$36 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $41 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
  $45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$41 >> 2] | 0) + 28 >> 2] & 63]($41, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($36, $45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($36) | 0;
  _exit(1);
 }
 return 0;
}

function __ZN8optframelsINSt3__26vectorIdNS1_9allocatorIdEEEEEERNS1_13basic_ostreamIcNS1_11char_traitsIcEEEESA_RKNS2_IT_NS3_ISB_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$020 = 0, $$lcssa1826 = 0, $$lcssa27 = 0, $10 = 0, $12 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $29 = 0, $3 = 0, $9 = 0, label = 0;
 $2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 17924, 7) | 0;
 $3 = $1 + 4 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($2, ((HEAP32[$3 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0) / 12 | 0) | 0, 17932, 3) | 0;
 $9 = HEAP32[$3 >> 2] | 0;
 $10 = HEAP32[$1 >> 2] | 0;
 if (($9 | 0) == ($10 | 0)) {
  __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15680, 1) | 0;
  return $0 | 0;
 }
 $12 = $9 - $10 | 0;
 if (($12 | 0) == 12) {
  $$lcssa1826 = $10;
  $$lcssa27 = 0;
 } else {
  $$020 = 0;
  $19 = ($12 | 0) / 12 | 0;
  $21 = $10;
  do {
   if ($19 >>> 0 <= $$020 >>> 0) {
    label = 8;
    break;
   }
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZN8optframelsIdEERNSt3__213basic_ostreamIcNS1_11char_traitsIcEEEES6_RKNS1_6vectorIT_NS1_9allocatorIS8_EEEE($0, $21 + ($$020 * 12 | 0) | 0) | 0, 17936, 3) | 0;
   $$020 = $$020 + 1 | 0;
   $21 = HEAP32[$1 >> 2] | 0;
   $15 = (HEAP32[$3 >> 2] | 0) - $21 | 0;
   $19 = ($15 | 0) / 12 | 0;
   $29 = $19 + -1 | 0;
  } while ($$020 >>> 0 < $29 >>> 0);
  if ((label | 0) == 8) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1);
  if (!$15) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1); else {
   $$lcssa1826 = $21;
   $$lcssa27 = $29;
  }
 }
 __ZN8optframelsIdEERNSt3__213basic_ostreamIcNS1_11char_traitsIcEEEES6_RKNS1_6vectorIT_NS1_9allocatorIS8_EEEE($0, $$lcssa1826 + ($$lcssa27 * 12 | 0) | 0) | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15680, 1) | 0;
 return $0 | 0;
}

function __ZN8optframe12CheckCommandI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $13 = 0, $15 = 0, $16 = 0, $2 = 0, $24 = 0, $26 = 0, $27 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $57 = 0, $59 = 0, $60 = 0, $68 = 0, $70 = 0, $71 = 0, $79 = 0, $81 = 0, $82 = 0;
 HEAP32[$0 >> 2] = 3928;
 $2 = HEAP32[$0 + 96 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 100 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
  __ZdlPv($2);
 }
 $13 = HEAP32[$0 + 80 >> 2] | 0;
 if ($13 | 0) {
  $15 = $0 + 84 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $13 | 0) >>> 2) << 2);
  __ZdlPv($13);
 }
 $24 = HEAP32[$0 + 68 >> 2] | 0;
 if ($24 | 0) {
  $26 = $0 + 72 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  if (($27 | 0) != ($24 | 0)) HEAP32[$26 >> 2] = $27 + (~(($27 + -4 - $24 | 0) >>> 2) << 2);
  __ZdlPv($24);
 }
 $35 = HEAP32[$0 + 56 >> 2] | 0;
 if ($35 | 0) {
  $37 = $0 + 60 | 0;
  $38 = HEAP32[$37 >> 2] | 0;
  if (($38 | 0) != ($35 | 0)) HEAP32[$37 >> 2] = $38 + (~(($38 + -4 - $35 | 0) >>> 2) << 2);
  __ZdlPv($35);
 }
 $46 = HEAP32[$0 + 44 >> 2] | 0;
 if ($46 | 0) {
  $48 = $0 + 48 | 0;
  $49 = HEAP32[$48 >> 2] | 0;
  if (($49 | 0) != ($46 | 0)) HEAP32[$48 >> 2] = $49 + (~(($49 + -4 - $46 | 0) >>> 2) << 2);
  __ZdlPv($46);
 }
 $57 = HEAP32[$0 + 32 >> 2] | 0;
 if ($57 | 0) {
  $59 = $0 + 36 | 0;
  $60 = HEAP32[$59 >> 2] | 0;
  if (($60 | 0) != ($57 | 0)) HEAP32[$59 >> 2] = $60 + (~(($60 + -4 - $57 | 0) >>> 2) << 2);
  __ZdlPv($57);
 }
 $68 = HEAP32[$0 + 20 >> 2] | 0;
 if ($68 | 0) {
  $70 = $0 + 24 | 0;
  $71 = HEAP32[$70 >> 2] | 0;
  if (($71 | 0) != ($68 | 0)) HEAP32[$70 >> 2] = $71 + (~(($71 + -4 - $68 | 0) >>> 2) << 2);
  __ZdlPv($68);
 }
 $79 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$79) return;
 $81 = $0 + 12 | 0;
 $82 = HEAP32[$81 >> 2] | 0;
 if (($82 | 0) != ($79 | 0)) HEAP32[$81 >> 2] = $82 + (~(($82 + -4 - $79 | 0) >>> 2) << 2);
 __ZdlPv($79);
 return;
}

function __ZN8optframe7NGESIndI6RepHFMiEC2ERNS_8SolutionIS1_iEERNS_10EvaluationERNSt3__26vectorINS_16NGESIndStructureIS1_iEENS8_9allocatorISB_EEEERNS9_IiNSC_IiEEEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $12 = 0, $15 = 0, $21 = 0, $44 = 0, $45 = 0, $48 = 0, $50 = 0, $53 = 0, $54 = 0, $57 = 0, $59 = 0, $8 = 0;
 $8 = $0 + 12 | 0;
 HEAP8[$8 + 4 >> 0] = 0;
 HEAP32[$0 + 8 >> 2] = 2;
 HEAP8[$0 + 15 >> 0] = 0;
 HEAP8[$8 >> 0] = 1;
 HEAP8[$0 + 13 >> 0] = 1;
 HEAP8[$0 + 14 >> 0] = 0;
 HEAP32[$0 >> 2] = 5136;
 $12 = $1 + 20 | 0;
 HEAP32[$0 + 20 >> 2] = HEAP32[$12 >> 2];
 $15 = $1 + 24 | 0;
 HEAP32[$0 + 24 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$12 >> 2] = 0;
 HEAP32[$15 >> 2] = 0;
 $21 = $0 + 44 | 0;
 HEAP8[$21 + 4 >> 0] = 0;
 HEAP32[$0 + 40 >> 2] = 2;
 HEAP8[$0 + 47 >> 0] = 0;
 HEAP8[$21 >> 0] = 1;
 HEAP8[$0 + 45 >> 0] = 1;
 HEAP8[$0 + 46 >> 0] = 0;
 HEAP32[$0 + 32 >> 2] = 4920;
 HEAPF64[$0 + 56 >> 3] = +HEAPF64[$2 + 24 >> 3];
 HEAPF64[$0 + 64 >> 3] = +HEAPF64[$2 + 32 >> 3];
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($0 + 72 | 0, $2 + 40 | 0);
 HEAP32[$0 + 84 >> 2] = HEAP32[$2 + 52 >> 2];
 HEAP8[$0 + 88 >> 0] = HEAP8[$2 + 56 >> 0] | 0;
 HEAP8[$0 + 89 >> 0] = HEAP8[$2 + 57 >> 0] | 0;
 HEAPF64[$0 + 96 >> 3] = +HEAPF64[$2 + 64 >> 3];
 $44 = $0 + 104 | 0;
 HEAP32[$44 >> 2] = 0;
 $45 = $0 + 108 | 0;
 HEAP32[$45 >> 2] = 0;
 HEAP32[$0 + 112 >> 2] = 0;
 HEAP32[$44 >> 2] = HEAP32[$3 >> 2];
 $48 = $3 + 4 | 0;
 HEAP32[$45 >> 2] = HEAP32[$48 >> 2];
 $50 = $3 + 8 | 0;
 HEAP32[$0 + 112 >> 2] = HEAP32[$50 >> 2];
 HEAP32[$50 >> 2] = 0;
 HEAP32[$48 >> 2] = 0;
 HEAP32[$3 >> 2] = 0;
 $53 = $0 + 116 | 0;
 HEAP32[$53 >> 2] = 0;
 $54 = $0 + 120 | 0;
 HEAP32[$54 >> 2] = 0;
 HEAP32[$0 + 124 >> 2] = 0;
 HEAP32[$53 >> 2] = HEAP32[$4 >> 2];
 $57 = $4 + 4 | 0;
 HEAP32[$54 >> 2] = HEAP32[$57 >> 2];
 $59 = $4 + 8 | 0;
 HEAP32[$0 + 124 >> 2] = HEAP32[$59 >> 2];
 HEAP32[$59 >> 2] = 0;
 HEAP32[$57 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 return;
}

function __ZN3HFM17HFMMultiEvaluator13reevaluateMEVERN8optframe15MultiEvaluationERK6RepHFMPKi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$phi$trans$insert$i = 0, $$pre$phi$iZ2D = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $24 = 0, $31 = 0, $34 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $49 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $4 = sp;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 31]($4, $0, $2, $3);
 FUNCTION_TABLE_iii[HEAP32[(HEAP32[$1 >> 2] | 0) + 36 >> 2] & 63]($1, $4) | 0;
 HEAP32[$4 >> 2] = 4868;
 $12 = HEAP32[$4 + 20 >> 2] | 0;
 $13 = $4 + 24 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (($14 | 0) == ($12 | 0)) {
  $$pre$phi$iZ2D = $4 + 20 | 0;
  $31 = $12;
 } else {
  $17 = $14;
  while (1) {
   $16 = $17 + -72 | 0;
   HEAP32[$13 >> 2] = $16;
   HEAP32[$16 >> 2] = 4920;
   $19 = HEAP32[$17 + -32 >> 2] | 0;
   if (!$19) $21 = $16; else {
    $23 = $17 + -28 | 0;
    $24 = HEAP32[$23 >> 2] | 0;
    if (($24 | 0) != ($19 | 0)) HEAP32[$23 >> 2] = $24 + (~(($24 + -16 - $19 | 0) >>> 4) << 4);
    __ZdlPv($19);
    $21 = HEAP32[$13 >> 2] | 0;
   }
   if (($21 | 0) == ($12 | 0)) break; else $17 = $21;
  }
  $$phi$trans$insert$i = $4 + 20 | 0;
  $$pre$phi$iZ2D = $$phi$trans$insert$i;
  $31 = HEAP32[$$phi$trans$insert$i >> 2] | 0;
 }
 if (!$31) {
  STACKTOP = sp;
  return;
 }
 if (($12 | 0) == ($31 | 0)) $49 = $31; else {
  $35 = $12;
  while (1) {
   $34 = $35 + -72 | 0;
   HEAP32[$13 >> 2] = $34;
   HEAP32[$34 >> 2] = 4920;
   $37 = HEAP32[$35 + -32 >> 2] | 0;
   if (!$37) $39 = $34; else {
    $41 = $35 + -28 | 0;
    $42 = HEAP32[$41 >> 2] | 0;
    if (($42 | 0) != ($37 | 0)) HEAP32[$41 >> 2] = $42 + (~(($42 + -16 - $37 | 0) >>> 4) << 4);
    __ZdlPv($37);
    $39 = HEAP32[$13 >> 2] | 0;
   }
   if (($39 | 0) == ($31 | 0)) break; else $35 = $39;
  }
  $49 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
 }
 __ZdlPv($49);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$017$off042 = 0, $$01938 = 0, $$020355154 = 0, $$02036 = 0, $$phitmp$i = 0, $$sroa$speculated = 0, $12 = 0, $14 = 0, $18 = 0, $19 = 0, $22 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0;
 if ($1 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $3 = $0 + 8 | 0;
 $4 = $3 + 3 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $12 = HEAP32[$0 + 4 >> 2] | 0;
  $18 = (HEAP32[$3 >> 2] & 2147483647) + -1 | 0;
 } else {
  $12 = $5 & 255;
  $18 = 1;
 }
 $$sroa$speculated = $12 >>> 0 > $1 >>> 0 ? $12 : $1;
 $14 = $$sroa$speculated >>> 0 < 2;
 $$phitmp$i = $14 ? 1 : ($$sroa$speculated + 4 & -4) + -1 | 0;
 do if (($$phitmp$i | 0) != ($18 | 0)) {
  do if ($14) {
   $24 = HEAP32[$0 >> 2] | 0;
   if ($6) {
    $$017$off042 = 0;
    $$01938 = $24;
    $$02036 = $0;
    label = 15;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwj($0, $24, ($5 & 255) + 1 | 0) | 0;
    __ZdlPv($24);
    label = 17;
   }
  } else {
   $19 = $$phitmp$i + 1 | 0;
   if ($19 >>> 0 > 1073741823) _abort();
   $22 = __Znwj($19 << 2) | 0;
   if ($6) {
    $$017$off042 = 1;
    $$01938 = HEAP32[$0 >> 2] | 0;
    $$02036 = $22;
    label = 15;
    break;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwj($22, $0, ($5 & 255) + 1 | 0) | 0;
    $$020355154 = $22;
    label = 16;
    break;
   }
  } while (0);
  if ((label | 0) == 15) {
   __ZNSt3__211char_traitsIwE4copyEPwPKwj($$02036, $$01938, (HEAP32[$0 + 4 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv($$01938);
   if ($$017$off042) {
    $$020355154 = $$02036;
    label = 16;
   } else label = 17;
  }
  if ((label | 0) == 16) {
   HEAP32[$3 >> 2] = $$phitmp$i + 1 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $12;
   HEAP32[$0 >> 2] = $$020355154;
   break;
  } else if ((label | 0) == 17) {
   HEAP8[$4 >> 0] = $12;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__211__stdoutbufIwE8overflowEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$032 = 0, $$4 = 0, $$436 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $3 = 0, $30 = 0, $38 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 do if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) label = 15; else {
  HEAP32[$3 >> 2] = __ZNSt3__211char_traitsIwE12to_char_typeEj($1) | 0;
  $12 = $0 + 32 | 0;
  if (HEAP8[$0 + 44 >> 0] | 0) {
   if ((_fwrite($3, 4, 1, HEAP32[$12 >> 2] | 0) | 0) == 1) {
    label = 15;
    break;
   }
   $$4 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   break;
  }
  HEAP32[$4 >> 2] = $2;
  $17 = $3 + 4 | 0;
  $18 = $0 + 36 | 0;
  $19 = $0 + 40 | 0;
  $20 = $2 + 8 | 0;
  $21 = $2;
  $$032 = $3;
  while (1) {
   $22 = HEAP32[$18 >> 2] | 0;
   $27 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$22 >> 2] | 0) + 12 >> 2] & 15]($22, HEAP32[$19 >> 2] | 0, $$032, $17, $5, $2, $20, $4) | 0;
   $30 = ($27 | 0) == 1;
   if ((HEAP32[$5 >> 2] | 0) == ($$032 | 0)) {
    label = 14;
    break;
   }
   if (($27 | 0) == 3) if ((_fwrite($$032, 1, 1, HEAP32[$12 >> 2] | 0) | 0) == 1) $$436 = $$032; else {
    label = 14;
    break;
   } else {
    if (($27 | 1 | 0) != 1) {
     label = 14;
     break;
    }
    $38 = (HEAP32[$4 >> 2] | 0) - $21 | 0;
    if ((_fwrite($2, 1, $38, HEAP32[$12 >> 2] | 0) | 0) != ($38 | 0)) {
     label = 14;
     break;
    }
    $$436 = $30 ? HEAP32[$5 >> 2] | 0 : $$032;
   }
   if ($30) $$032 = $$436; else {
    label = 13;
    break;
   }
  }
  if ((label | 0) == 13) {
   label = 15;
   break;
  } else if ((label | 0) == 14) {
   $$4 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   break;
  }
 } while (0);
 if ((label | 0) == 15) $$4 = __ZNSt3__211char_traitsIwE7not_eofEj($1) | 0;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNSt3__211__stdoutbufIcE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$032 = 0, $$4 = 0, $$436 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $3 = 0, $30 = 0, $38 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 do if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) label = 15; else {
  HEAP8[$3 >> 0] = __ZNSt3__211char_traitsIcE12to_char_typeEi($1) | 0;
  $12 = $0 + 32 | 0;
  if (HEAP8[$0 + 44 >> 0] | 0) {
   if ((_fwrite($3, 1, 1, HEAP32[$12 >> 2] | 0) | 0) == 1) {
    label = 15;
    break;
   }
   $$4 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   break;
  }
  HEAP32[$4 >> 2] = $2;
  $17 = $3 + 1 | 0;
  $18 = $0 + 36 | 0;
  $19 = $0 + 40 | 0;
  $20 = $2 + 8 | 0;
  $21 = $2;
  $$032 = $3;
  while (1) {
   $22 = HEAP32[$18 >> 2] | 0;
   $27 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$22 >> 2] | 0) + 12 >> 2] & 15]($22, HEAP32[$19 >> 2] | 0, $$032, $17, $5, $2, $20, $4) | 0;
   $30 = ($27 | 0) == 1;
   if ((HEAP32[$5 >> 2] | 0) == ($$032 | 0)) {
    label = 14;
    break;
   }
   if (($27 | 0) == 3) if ((_fwrite($$032, 1, 1, HEAP32[$12 >> 2] | 0) | 0) == 1) $$436 = $$032; else {
    label = 14;
    break;
   } else {
    if (($27 | 1 | 0) != 1) {
     label = 14;
     break;
    }
    $38 = (HEAP32[$4 >> 2] | 0) - $21 | 0;
    if ((_fwrite($2, 1, $38, HEAP32[$12 >> 2] | 0) | 0) != ($38 | 0)) {
     label = 14;
     break;
    }
    $$436 = $30 ? HEAP32[$5 >> 2] | 0 : $$032;
   }
   if ($30) $$032 = $$436; else {
    label = 13;
    break;
   }
  }
  if ((label | 0) == 13) {
   label = 15;
   break;
  } else if ((label | 0) == 14) {
   $$4 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   break;
  }
 } while (0);
 if ((label | 0) == 15) $$4 = __ZNSt3__211char_traitsIcE7not_eofEi($1) | 0;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZN8optframe15MultiEvaluationC2ERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$010 = 0, $$in = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $24 = 0, $5 = 0, $50 = 0, $52 = 0, $8 = 0, $9 = 0;
 $5 = $0 + 12 | 0;
 HEAP8[$5 + 4 >> 0] = 0;
 HEAP32[$0 + 8 >> 2] = 2;
 HEAP8[$0 + 15 >> 0] = 0;
 HEAP8[$5 >> 0] = 1;
 HEAP8[$0 + 13 >> 0] = 1;
 HEAP8[$0 + 14 >> 0] = 0;
 HEAP32[$0 >> 2] = 4868;
 $8 = $0 + 20 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $0 + 24 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = 0;
 $11 = $1 + 20 | 0;
 $12 = $1 + 24 | 0;
 $14 = HEAP32[$11 >> 2] | 0;
 if ((HEAP32[$12 >> 2] | 0) == ($14 | 0)) return;
 $16 = $0 + 28 | 0;
 $$010 = 0;
 $$in = $14;
 $18 = 0;
 $20 = 0;
 while (1) {
  $17 = $$in;
  if (($18 | 0) == ($20 | 0)) __ZNSt3__26vectorIN8optframe10EvaluationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($8, $17 + ($$010 * 72 | 0) | 0); else {
   $24 = $18 + 12 | 0;
   HEAP8[$24 + 4 >> 0] = 0;
   HEAP32[$18 + 8 >> 2] = 2;
   HEAP8[$18 + 15 >> 0] = 0;
   HEAP8[$24 >> 0] = 1;
   HEAP8[$18 + 13 >> 0] = 1;
   HEAP8[$18 + 14 >> 0] = 0;
   HEAP32[$18 >> 2] = 4920;
   HEAPF64[$18 + 24 >> 3] = +HEAPF64[$17 + ($$010 * 72 | 0) + 24 >> 3];
   HEAPF64[$18 + 32 >> 3] = +HEAPF64[$17 + ($$010 * 72 | 0) + 32 >> 3];
   __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($18 + 40 | 0, $17 + ($$010 * 72 | 0) + 40 | 0);
   HEAP32[$18 + 52 >> 2] = HEAP32[$17 + ($$010 * 72 | 0) + 52 >> 2];
   HEAP8[$18 + 56 >> 0] = HEAP8[$17 + ($$010 * 72 | 0) + 56 >> 0] | 0;
   HEAP8[$18 + 57 >> 0] = HEAP8[$17 + ($$010 * 72 | 0) + 57 >> 0] | 0;
   HEAPF64[$18 + 64 >> 3] = +HEAPF64[$17 + ($$010 * 72 | 0) + 64 >> 3];
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 72;
  }
  $50 = $$010 + 1 | 0;
  $52 = HEAP32[$11 >> 2] | 0;
  if ($50 >>> 0 >= (((HEAP32[$12 >> 2] | 0) - $52 | 0) / 72 | 0) >>> 0) break;
  $$010 = $50;
  $$in = $52;
  $18 = HEAP32[$9 >> 2] | 0;
  $20 = HEAP32[$16 >> 2] | 0;
 }
 return;
}

function __ZN8optframelsIiEERNSt3__213basic_ostreamIcNS1_11char_traitsIcEEEES6_RKNS1_6vectorIT_NS1_9allocatorIS8_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$020 = 0, $$lcssa1826 = 0, $$lcssa27 = 0, $10 = 0, $13 = 0, $2 = 0, $20 = 0, $22 = 0, $3 = 0, $31 = 0, $9 = 0, label = 0;
 $2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 17924, 7) | 0;
 $3 = $1 + 4 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($2, (HEAP32[$3 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) >> 2) | 0, 17932, 3) | 0;
 $9 = HEAP32[$3 >> 2] | 0;
 $10 = HEAP32[$1 >> 2] | 0;
 if (($9 | 0) == ($10 | 0)) {
  __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15680, 1) | 0;
  return $0 | 0;
 }
 $13 = $9 - $10 >> 2;
 if (($13 | 0) == 1) {
  $$lcssa1826 = $10;
  $$lcssa27 = 0;
 } else {
  $$020 = 0;
  $20 = $13;
  $22 = $10;
  do {
   if ($20 >>> 0 <= $$020 >>> 0) {
    label = 7;
    break;
   }
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($0, HEAP32[$22 + ($$020 << 2) >> 2] | 0) | 0, 17936, 3) | 0;
   $$020 = $$020 + 1 | 0;
   $22 = HEAP32[$1 >> 2] | 0;
   $20 = (HEAP32[$3 >> 2] | 0) - $22 >> 2;
   $31 = $20 + -1 | 0;
  } while ($$020 >>> 0 < $31 >>> 0);
  if ((label | 0) == 7) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1);
  if (!$20) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1); else {
   $$lcssa1826 = $22;
   $$lcssa27 = $31;
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($0, HEAP32[$$lcssa1826 + ($$lcssa27 << 2) >> 2] | 0) | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15680, 1) | 0;
 return $0 | 0;
}

function __ZN8optframelsIdEERNSt3__213basic_ostreamIcNS1_11char_traitsIcEEEES6_RKNS1_6vectorIT_NS1_9allocatorIS8_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$020 = 0, $$lcssa1826 = 0, $$lcssa27 = 0, $10 = 0, $13 = 0, $2 = 0, $20 = 0, $22 = 0, $3 = 0, $31 = 0, $9 = 0, label = 0;
 $2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 17924, 7) | 0;
 $3 = $1 + 4 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($2, (HEAP32[$3 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) >> 3) | 0, 17932, 3) | 0;
 $9 = HEAP32[$3 >> 2] | 0;
 $10 = HEAP32[$1 >> 2] | 0;
 if (($9 | 0) == ($10 | 0)) {
  __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15680, 1) | 0;
  return $0 | 0;
 }
 $13 = $9 - $10 >> 3;
 if (($13 | 0) == 1) {
  $$lcssa1826 = $10;
  $$lcssa27 = 0;
 } else {
  $$020 = 0;
  $20 = $13;
  $22 = $10;
  do {
   if ($20 >>> 0 <= $$020 >>> 0) {
    label = 7;
    break;
   }
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($0, +HEAPF64[$22 + ($$020 << 3) >> 3]) | 0, 17936, 3) | 0;
   $$020 = $$020 + 1 | 0;
   $22 = HEAP32[$1 >> 2] | 0;
   $20 = (HEAP32[$3 >> 2] | 0) - $22 >> 3;
   $31 = $20 + -1 | 0;
  } while ($$020 >>> 0 < $31 >>> 0);
  if ((label | 0) == 7) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1);
  if (!$20) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1); else {
   $$lcssa1826 = $22;
   $$lcssa27 = $31;
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($0, +HEAPF64[$$lcssa1826 + ($$lcssa27 << 3) >> 3]) | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, 15680, 1) | 0;
 return $0 | 0;
}

function __ZN3HFM14treatForecastsC2ENSt3__26vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$049 = 0, $$in = 0, $10 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $38 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp;
 $4 = sp + 12 | 0;
 HEAP32[$0 >> 2] = 3880;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$2 >> 2] = 0;
 $8 = $2 + 4 | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $10 = $1 + 4 | 0;
 $12 = HEAP32[$1 >> 2] | 0;
 if (((HEAP32[$10 >> 2] | 0) - $12 | 0) > 0) {
  $15 = $3 + 11 | 0;
  $16 = $2 + 8 | 0;
  $$049 = 0;
  $$in = $12;
  do {
   $19 = __Znwj(20) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $$in + ($$049 * 12 | 0) | 0);
   __ZN9scannerpp4FileC2ENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($19, $3);
   if ((HEAP8[$15 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
   $25 = __Znwj(52) | 0;
   __ZN9scannerpp7ScannerC2EPNS_4FileE($25, $19);
   HEAP32[$4 >> 2] = $25;
   $26 = HEAP32[$8 >> 2] | 0;
   if (($26 | 0) == (HEAP32[$16 >> 2] | 0)) __ZNSt3__26vectorIPN9scannerpp7ScannerENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($2, $4); else {
    HEAP32[$26 >> 2] = $25;
    HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 4;
   }
   $$049 = $$049 + 1 | 0;
   $$in = HEAP32[$1 >> 2] | 0;
  } while (($$049 | 0) < (((HEAP32[$10 >> 2] | 0) - $$in | 0) / 12 | 0 | 0));
 }
 __ZN3HFM14treatForecasts15readFromScannerERNSt3__26vectorIPN9scannerpp7ScannerENS1_9allocatorIS5_EEEE($0, $2);
 $17 = HEAP32[$2 >> 2] | 0;
 if (!$17) {
  STACKTOP = sp;
  return;
 }
 $38 = HEAP32[$8 >> 2] | 0;
 if (($38 | 0) != ($17 | 0)) HEAP32[$8 >> 2] = $38 + (~(($38 + -4 - $17 | 0) >>> 2) << 2);
 __ZdlPv($17);
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$037$off038 = 0, $$037$off039 = 0, $10 = 0, $14 = 0, $15 = 0, $19 = 0, $22 = 0, $23 = 0, $24 = 0, $31 = 0, $41 = 0, label = 0;
 do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $4) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, $1, $2, $3); else {
  $10 = $0 + 8 | 0;
  if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 >> 2] | 0, $4) | 0)) {
   $41 = HEAP32[$10 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$41 >> 2] | 0) + 24 >> 2] & 15]($41, $1, $2, $3, $4);
   break;
  }
  $14 = $1 + 32 | 0;
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $15 = $1 + 20 | 0;
   if ((HEAP32[$15 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$14 >> 2] = $3;
    $19 = $1 + 44 | 0;
    if ((HEAP32[$19 >> 2] | 0) == 4) break;
    $22 = $1 + 52 | 0;
    HEAP8[$22 >> 0] = 0;
    $23 = $1 + 53 | 0;
    HEAP8[$23 >> 0] = 0;
    $24 = HEAP32[$10 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$24 >> 2] | 0) + 20 >> 2] & 15]($24, $1, $2, $2, 1, $4);
    if (!(HEAP8[$23 >> 0] | 0)) {
     $$037$off038 = 4;
     label = 11;
    } else if (!(HEAP8[$22 >> 0] | 0)) {
     $$037$off038 = 3;
     label = 11;
    } else $$037$off039 = 3;
    if ((label | 0) == 11) {
     HEAP32[$15 >> 2] = $2;
     $31 = $1 + 40 | 0;
     HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
     if ((HEAP32[$1 + 36 >> 2] | 0) == 1) if ((HEAP32[$1 + 24 >> 2] | 0) == 2) {
      HEAP8[$1 + 54 >> 0] = 1;
      $$037$off039 = $$037$off038;
     } else $$037$off039 = $$037$off038; else $$037$off039 = $$037$off038;
    }
    HEAP32[$19 >> 2] = $$037$off039;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$14 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__210__stdinbufIwE9pbackfailEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$07 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $20 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $7 = __ZNSt3__211char_traitsIwE11eq_int_typeEjj($1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0;
 $8 = $0 + 52 | 0;
 $10 = (HEAP8[$8 >> 0] | 0) != 0;
 $11 = $0 + 48 | 0;
 do if ($7) if ($10) $$1 = $1; else {
  $12 = HEAP32[$11 >> 2] | 0;
  HEAP8[$8 >> 0] = ((__ZNSt3__211char_traitsIwE11eq_int_typeEjj($12, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) ^ 1) & 1;
  $$1 = $12;
 } else {
  if ($10) {
   HEAP32[$4 >> 2] = __ZNSt3__211char_traitsIwE12to_char_typeEj(HEAP32[$11 >> 2] | 0) | 0;
   $20 = HEAP32[$0 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$20 >> 2] | 0) + 12 >> 2] & 15]($20, HEAP32[$0 + 40 >> 2] | 0, $4, $4 + 4 | 0, $5, $2, $2 + 8 | 0, $3) | 0) {
   case 1:
   case 2:
    {
     label = 10;
     break;
    }
   case 3:
    {
     HEAP8[$2 >> 0] = HEAP32[$11 >> 2];
     HEAP32[$3 >> 2] = $2 + 1;
     label = 7;
     break;
    }
   default:
    label = 7;
   }
   L9 : do if ((label | 0) == 7) {
    $32 = $0 + 32 | 0;
    while (1) {
     $33 = HEAP32[$3 >> 2] | 0;
     if ($33 >>> 0 <= $2 >>> 0) {
      $$0 = 1;
      $$07 = 0;
      break L9;
     }
     $35 = $33 + -1 | 0;
     HEAP32[$3 >> 2] = $35;
     if ((_ungetc(HEAP8[$35 >> 0] | 0, HEAP32[$32 >> 2] | 0) | 0) == -1) {
      label = 10;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 10) {
    $$0 = 0;
    $$07 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   }
   if (!$$0) {
    $$1 = $$07;
    break;
   }
  }
  HEAP32[$11 >> 2] = $1;
  HEAP8[$8 >> 0] = 1;
  $$1 = $1;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__210__stdinbufIcE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$07 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $20 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 $7 = __ZNSt3__211char_traitsIcE11eq_int_typeEii($1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
 $8 = $0 + 52 | 0;
 $10 = (HEAP8[$8 >> 0] | 0) != 0;
 $11 = $0 + 48 | 0;
 do if ($7) if ($10) $$1 = $1; else {
  $12 = HEAP32[$11 >> 2] | 0;
  HEAP8[$8 >> 0] = ((__ZNSt3__211char_traitsIcE11eq_int_typeEii($12, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) ^ 1) & 1;
  $$1 = $12;
 } else {
  if ($10) {
   HEAP8[$4 >> 0] = __ZNSt3__211char_traitsIcE12to_char_typeEi(HEAP32[$11 >> 2] | 0) | 0;
   $20 = HEAP32[$0 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$20 >> 2] | 0) + 12 >> 2] & 15]($20, HEAP32[$0 + 40 >> 2] | 0, $4, $4 + 1 | 0, $5, $2, $2 + 8 | 0, $3) | 0) {
   case 1:
   case 2:
    {
     label = 10;
     break;
    }
   case 3:
    {
     HEAP8[$2 >> 0] = HEAP32[$11 >> 2];
     HEAP32[$3 >> 2] = $2 + 1;
     label = 7;
     break;
    }
   default:
    label = 7;
   }
   L9 : do if ((label | 0) == 7) {
    $32 = $0 + 32 | 0;
    while (1) {
     $33 = HEAP32[$3 >> 2] | 0;
     if ($33 >>> 0 <= $2 >>> 0) {
      $$0 = 1;
      $$07 = 0;
      break L9;
     }
     $35 = $33 + -1 | 0;
     HEAP32[$3 >> 2] = $35;
     if ((_ungetc(HEAP8[$35 >> 0] | 0, HEAP32[$32 >> 2] | 0) | 0) == -1) {
      label = 10;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 10) {
    $$0 = 0;
    $$07 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   }
   if (!$$0) {
    $$1 = $$07;
    break;
   }
  }
  HEAP32[$11 >> 2] = $1;
  HEAP8[$8 >> 0] = 1;
  $$1 = $1;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN8optframe6ParetoI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $$010$i = 0, $$cast$i = 0, $$cast11$i = 0, $$cast9$i = 0, $$in$i = 0, $$lcssa$i = 0, $1 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $25 = 0, $3 = 0, $32 = 0, $38 = 0, $39 = 0, $4 = 0, $44 = 0, $51 = 0, $53 = 0, $6 = 0, $7 = 0, $9 = 0, $scevgep4$i$i$i6$i = 0;
 HEAP32[$0 >> 2] = 6156;
 $1 = $0 + 4 | 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$1 >> 2] | 0;
 $$cast9$i = $4;
 if (($3 | 0) == ($4 | 0)) {
  $$in$i = $3;
  $$lcssa$i = $3;
  $9 = $$cast9$i;
 } else {
  $6 = $0 + 16 | 0;
  $$010$i = 0;
  $$cast11$i = $$cast9$i;
  while (1) {
   $25 = HEAP32[$$cast11$i + ($$010$i << 2) >> 2] | 0;
   if ($25 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$25 >> 2] | 0) + 4 >> 2] & 511]($25);
   $32 = HEAP32[(HEAP32[$6 >> 2] | 0) + ($$010$i << 2) >> 2] | 0;
   if ($32 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 4 >> 2] & 511]($32);
   $$010$i = $$010$i + 1 | 0;
   $38 = HEAP32[$2 >> 2] | 0;
   $39 = HEAP32[$1 >> 2] | 0;
   $$cast$i = $39;
   if ($$010$i >>> 0 >= $38 - $39 >> 2 >>> 0) {
    $$in$i = $38;
    $$lcssa$i = $39;
    $9 = $$cast$i;
    break;
   } else $$cast11$i = $$cast$i;
  }
 }
 $7 = $$in$i;
 if (($7 | 0) != ($9 | 0)) HEAP32[$2 >> 2] = $7 + (~(($7 + -4 - $$lcssa$i | 0) >>> 2) << 2);
 $15 = HEAP32[$0 + 16 >> 2] | 0;
 $16 = $0 + 20 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 | 0) == ($15 | 0)) $44 = $15; else {
  $scevgep4$i$i$i6$i = $17 + (~(($17 + -4 - $15 | 0) >>> 2) << 2) | 0;
  HEAP32[$16 >> 2] = $scevgep4$i$i$i6$i;
  $44 = $scevgep4$i$i$i6$i;
 }
 if (!$15) $51 = $9; else {
  if (($44 | 0) != ($15 | 0)) HEAP32[$16 >> 2] = $44 + (~(($44 + -4 - $15 | 0) >>> 2) << 2);
  __ZdlPv($15);
  $51 = HEAP32[$0 + 4 >> 2] | 0;
 }
 if (!$51) return;
 $53 = HEAP32[$2 >> 2] | 0;
 if (($53 | 0) != ($51 | 0)) HEAP32[$2 >> 2] = $53 + (~(($53 + -4 - $51 | 0) >>> 2) << 2);
 __ZdlPv($51);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$017$off042 = 0, $$01938 = 0, $$020355154 = 0, $$02036 = 0, $$phitmp$i = 0, $$sroa$speculated = 0, $12 = 0, $14 = 0, $18 = 0, $20 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0;
 if ($1 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) {
  $12 = HEAP32[$0 + 4 >> 2] | 0;
  $18 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $12 = $4 & 255;
  $18 = 10;
 }
 $$sroa$speculated = $12 >>> 0 > $1 >>> 0 ? $12 : $1;
 $14 = $$sroa$speculated >>> 0 < 11;
 $$phitmp$i = $14 ? 10 : ($$sroa$speculated + 16 & -16) + -1 | 0;
 do if (($$phitmp$i | 0) != ($18 | 0)) {
  do if ($14) {
   $22 = HEAP32[$0 >> 2] | 0;
   if ($5) {
    $$017$off042 = 0;
    $$01938 = $22;
    $$02036 = $0;
    label = 13;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcj($0, $22, ($4 & 255) + 1 | 0) | 0;
    __ZdlPv($22);
    label = 15;
   }
  } else {
   $20 = __Znwj($$phitmp$i + 1 | 0) | 0;
   if ($5) {
    $$017$off042 = 1;
    $$01938 = HEAP32[$0 >> 2] | 0;
    $$02036 = $20;
    label = 13;
    break;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcj($20, $0, ($4 & 255) + 1 | 0) | 0;
    $$020355154 = $20;
    label = 14;
    break;
   }
  } while (0);
  if ((label | 0) == 13) {
   __ZNSt3__211char_traitsIcE4copyEPcPKcj($$02036, $$01938, (HEAP32[$0 + 4 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv($$01938);
   if ($$017$off042) {
    $$020355154 = $$02036;
    label = 14;
   } else label = 15;
  }
  if ((label | 0) == 14) {
   HEAP32[$0 + 8 >> 2] = $$phitmp$i + 1 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $12;
   HEAP32[$0 >> 2] = $$020355154;
   break;
  } else if ((label | 0) == 15) {
   HEAP8[$3 >> 0] = $12;
   break;
  }
 } while (0);
 return;
}

function __ZNK3HFM25NSSeqHFMRemoveSingleInput8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 144 | 0;
 $3 = sp;
 $4 = $3 + 64 | 0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $3 + 12 | 0;
 HEAP32[$3 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$3 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($3 + 64 | 0, $6);
 HEAP32[$3 + 136 >> 2] = 0;
 HEAP32[$3 + 140 >> 2] = -1;
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $3 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$3 + 60 >> 2] = 24;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 $17 = $3 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 20086, 27) | 0;
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$17 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNK3HFM25NSSeqHFMChangeSingleInput8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 144 | 0;
 $3 = sp;
 $4 = $3 + 64 | 0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $3 + 12 | 0;
 HEAP32[$3 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$3 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($3 + 64 | 0, $6);
 HEAP32[$3 + 136 >> 2] = 0;
 HEAP32[$3 + 140 >> 2] = -1;
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $3 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$3 + 60 >> 2] = 24;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 $17 = $3 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 20347, 25) | 0;
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$17 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNK3HFM24NSSeqNEIGHAddSingleInput8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 144 | 0;
 $3 = sp;
 $4 = $3 + 64 | 0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $3 + 12 | 0;
 HEAP32[$3 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$3 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($3 + 64 | 0, $6);
 HEAP32[$3 + 136 >> 2] = 0;
 HEAP32[$3 + 140 >> 2] = -1;
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $3 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$3 + 60 >> 2] = 24;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 $17 = $3 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 19790, 24) | 0;
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$17 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNK3HFM19NSSeqHFMModifyRules8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 144 | 0;
 $3 = sp;
 $4 = $3 + 64 | 0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $3 + 12 | 0;
 HEAP32[$3 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$3 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($3 + 64 | 0, $6);
 HEAP32[$3 + 136 >> 2] = 0;
 HEAP32[$3 + 140 >> 2] = -1;
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $3 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$3 + 60 >> 2] = 24;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 $17 = $3 + 8 | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($17, 20680, 31) | 0;
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$17 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIPN8optframe7NGESIndI6RepHFMiEENS_9allocatorIS5_EEE8__appendEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$0$i16 = 0, $$sroa$15$0 = 0, $$sroa$speculated$$i = 0, $10 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $44 = 0, $47 = 0, $5 = 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 - $5 >> 2 >>> 0 >= $1 >>> 0) {
  $$0$i = $1;
  $10 = $5;
  do {
   HEAP32[$10 >> 2] = 0;
   $10 = (HEAP32[$4 >> 2] | 0) + 4 | 0;
   HEAP32[$4 >> 2] = $10;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
  return;
 }
 $15 = HEAP32[$0 >> 2] | 0;
 $17 = $5 - $15 >> 2;
 $18 = $17 + $1 | 0;
 if ($18 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $20 = $3 - $15 | 0;
 $23 = $20 >> 1;
 $$sroa$speculated$$i = $20 >> 2 >>> 0 < 536870911 ? ($23 >>> 0 < $18 >>> 0 ? $18 : $23) : 1073741823;
 do if (!$$sroa$speculated$$i) $31 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $27 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($27, 15810);
  HEAP32[$27 >> 2] = 14216;
  ___cxa_throw($27 | 0, 3104, 246);
 } else {
  $31 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $30 = $31 + ($17 << 2) | 0;
 $33 = $31 + ($$sroa$speculated$$i << 2) | 0;
 $$0$i16 = $1;
 $$sroa$15$0 = $30;
 $34 = $30;
 do {
  HEAP32[$34 >> 2] = 0;
  $34 = $$sroa$15$0 + 4 | 0;
  $$sroa$15$0 = $34;
  $$0$i16 = $$0$i16 + -1 | 0;
 } while (($$0$i16 | 0) != 0);
 $41 = HEAP32[$0 >> 2] | 0;
 $44 = (HEAP32[$4 >> 2] | 0) - $41 | 0;
 $47 = $30 + (0 - ($44 >> 2) << 2) | 0;
 if (($44 | 0) > 0) _memcpy($47 | 0, $41 | 0, $44 | 0) | 0;
 HEAP32[$0 >> 2] = $47;
 HEAP32[$4 >> 2] = $$sroa$15$0;
 HEAP32[$2 >> 2] = $33;
 if (!$41) return;
 __ZdlPv($41);
 return;
}

function __ZNK8optframe19MORandomImprovementI6RepHFMiE3logEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 144 | 0;
 $3 = sp;
 $4 = $3 + 64 | 0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = 3472;
 $6 = $3 + 12 | 0;
 HEAP32[$3 >> 2] = 404;
 HEAP32[$4 >> 2] = 424;
 HEAP32[$3 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($3 + 64 | 0, $6);
 HEAP32[$3 + 136 >> 2] = 0;
 HEAP32[$3 + 140 >> 2] = -1;
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$5 >> 2] = 3472;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 3548;
 $11 = $3 + 44 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$3 + 60 >> 2] = 24;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
 $17 = $3 + 8 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($17, +HEAPF64[$1 + 32 >> 3]) | 0;
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $6);
 HEAP32[$3 >> 2] = 3452;
 HEAP32[$4 >> 2] = 3492;
 HEAP32[$17 >> 2] = 3472;
 HEAP32[$6 >> 2] = 3548;
 if ((HEAP8[$11 + 11 >> 0] | 0) >= 0) {
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$11 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($3, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__27__sort3IRZN8optframe4NGESI6RepHFMiE11competitionERNS_6vectorIPNS1_7NGESIndIS3_iEENS_9allocatorIS8_EEEESC_RNS1_8SolutionIS3_iEERNS1_10EvaluationERiRKiiEUlS8_S8_E_PS8_EEjT0_SO_SO_T_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$026 = 0, $14 = 0, $19 = 0, $25 = 0, $26 = 0, $32 = 0, $39 = 0, $41 = 0, $47 = 0, $54 = 0, $8 = 0;
 $8 = HEAP32[(HEAP32[$3 >> 2] | 0) + 20 >> 2] | 0;
 $14 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 40 >> 2] & 63]($8, (HEAP32[$1 >> 2] | 0) + 32 | 0, (HEAP32[$0 >> 2] | 0) + 32 | 0) | 0;
 $19 = HEAP32[(HEAP32[$3 >> 2] | 0) + 20 >> 2] | 0;
 $25 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$19 >> 2] | 0) + 40 >> 2] & 63]($19, (HEAP32[$2 >> 2] | 0) + 32 | 0, (HEAP32[$1 >> 2] | 0) + 32 | 0) | 0;
 if (!$14) {
  if (!$25) {
   $$026 = 0;
   return $$026 | 0;
  }
  $26 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$2 >> 2] = $26;
  $32 = HEAP32[(HEAP32[$3 >> 2] | 0) + 20 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$32 >> 2] | 0) + 40 >> 2] & 63]($32, (HEAP32[$1 >> 2] | 0) + 32 | 0, (HEAP32[$0 >> 2] | 0) + 32 | 0) | 0)) {
   $$026 = 1;
   return $$026 | 0;
  }
  $39 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$1 >> 2] = $39;
  $$026 = 2;
  return $$026 | 0;
 }
 $41 = HEAP32[$0 >> 2] | 0;
 if ($25) {
  HEAP32[$0 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$2 >> 2] = $41;
  $$026 = 1;
  return $$026 | 0;
 }
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$1 >> 2] = $41;
 $47 = HEAP32[(HEAP32[$3 >> 2] | 0) + 20 >> 2] | 0;
 if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$47 >> 2] | 0) + 40 >> 2] & 63]($47, (HEAP32[$2 >> 2] | 0) + 32 | 0, $41 + 32 | 0) | 0)) {
  $$026 = 1;
  return $$026 | 0;
 }
 $54 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$2 >> 2] = $54;
 $$026 = 2;
 return $$026 | 0;
}

function __ZNSt3__2L11init_wweeksEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[29824] | 0)) if (___cxa_guard_acquire(29824) | 0) {
  $4 = 36052;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 36220);
  ___cxa_atexit(265, 0, ___dso_handle | 0) | 0;
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36052, 12476) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36064, 12504) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36076, 12532) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36088, 12564) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36100, 12604) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36112, 12640) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36124, 12668) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36136, 12704) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36148, 12720) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36160, 12736) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36172, 12752) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36184, 12768) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36196, 12784) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(36208, 12800) | 0;
 return;
}

function __ZNSt3__2L10init_weeksEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[29744] | 0)) if (___cxa_guard_acquire(29744) | 0) {
  $4 = 35240;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 35408);
  ___cxa_atexit(261, 0, ___dso_handle | 0) | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35240, 27454) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35252, 27461) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35264, 27468) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35276, 27476) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35288, 27486) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35300, 27495) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35312, 27502) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35324, 27511) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35336, 27515) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35348, 27519) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35360, 27523) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35372, 27527) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35384, 27531) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(35396, 27535) | 0;
 return;
}

function __ZNSt3__26vectorIN8lregress5pointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$in = 0, $$sroa$speculated$$i = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $32 = 0, $35 = 0, $39 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, $$06$i$i$looptemp = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = $3 - $4 >> 4;
 $7 = $6 + 1 | 0;
 $9 = $4;
 $10 = $3;
 if ($7 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = $0 + 8 | 0;
 $13 = (HEAP32[$11 >> 2] | 0) - $4 | 0;
 $16 = $13 >> 3;
 $$sroa$speculated$$i = $13 >> 4 >>> 0 < 134217727 ? ($16 >>> 0 < $7 >>> 0 ? $7 : $16) : 268435455;
 do if (!$$sroa$speculated$$i) $24 = 0; else if ($$sroa$speculated$$i >>> 0 > 268435455) {
  $20 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($20, 15810);
  HEAP32[$20 >> 2] = 14216;
  ___cxa_throw($20 | 0, 3104, 246);
 } else {
  $24 = __Znwj($$sroa$speculated$$i << 4) | 0;
  break;
 } while (0);
 $23 = $24 + ($6 << 4) | 0;
 $26 = $24 + ($$sroa$speculated$$i << 4) | 0;
 HEAPF64[$23 >> 3] = +HEAPF64[$1 >> 3];
 HEAPF64[$24 + ($6 << 4) + 8 >> 3] = +HEAPF64[$1 + 8 >> 3];
 $32 = $23 + 16 | 0;
 if (($10 | 0) == ($9 | 0)) $$in = $23; else {
  $35 = $10 + -16 - $4 | 0;
  $$06$i$i = $10;
  $39 = $23;
  while (1) {
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -16 | 0;
   HEAPF64[$39 + -16 >> 3] = +HEAPF64[$$06$i$i >> 3];
   HEAPF64[$39 + -8 >> 3] = +HEAPF64[$$06$i$i$looptemp + -8 >> 3];
   if (($$06$i$i | 0) == ($9 | 0)) break; else $39 = $39 + -16 | 0;
  }
  $$in = $23 + (~($35 >>> 4) << 4) | 0;
 }
 HEAP32[$0 >> 2] = $$in;
 HEAP32[$2 >> 2] = $32;
 HEAP32[$11 >> 2] = $26;
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNK3HFM24MoveHFMChangeSingleInput5printEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $15 = 0, $19 = 0, $2 = 0, $27 = 0, $31 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 20190, 42) | 0;
 $6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($2, HEAP32[$0 + 20 >> 2] | 0) | 0, 20233, 11) | 0;
 $11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEb($6, (HEAP8[$0 + 24 >> 0] | 0) != 0) | 0, 20245, 4) | 0;
 $15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($11, HEAP32[$0 + 36 >> 2] | 0) | 0, 20250, 9) | 0;
 $19 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($15, HEAP32[$0 + 28 >> 2] | 0) | 0, 20260, 14) | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($19, HEAP32[$0 + 32 >> 2] | 0) | 0, 19722, 2) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, 33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) | 0);
 $27 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 28 >> 2] & 63]($27, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(33664, $31) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(33664) | 0;
 STACKTOP = sp;
 return;
}

function __ZN3HFM30NSIteratorHFMRemoveSingleInput5firstEv($0) {
 $0 = $0 | 0;
 var $$01379 = 0, $$pre = 0, $$pre$phi105Z2D = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $41 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 40 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $9 = $0 + 24 | 0;
 if (((HEAP32[$3 + 4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0) > 0) {
  $10 = $0 + 28 | 0;
  $11 = $0 + 32 | 0;
  $$01379 = 0;
  do {
   $15 = __Znwj(48) | 0;
   HEAP8[$15 + 16 >> 0] = 0;
   HEAP32[$15 + 8 >> 2] = 2;
   HEAP8[$15 + 15 >> 0] = 0;
   HEAP8[$15 + 12 >> 0] = 1;
   HEAP8[$15 + 13 >> 0] = 1;
   HEAP8[$15 + 14 >> 0] = 0;
   HEAP32[$15 >> 2] = 5572;
   HEAP32[$15 + 20 >> 2] = $$01379;
   HEAP8[$15 + 24 >> 0] = 0;
   $24 = $15 + 28 | 0;
   HEAP32[$24 >> 2] = 0;
   HEAP32[$24 + 4 >> 2] = 0;
   HEAP32[$24 + 8 >> 2] = 0;
   HEAP32[$24 + 12 >> 2] = 0;
   HEAP32[$24 + 16 >> 2] = 0;
   HEAP32[$1 >> 2] = $15;
   $25 = HEAP32[$10 >> 2] | 0;
   if ($25 >>> 0 < (HEAP32[$11 >> 2] | 0) >>> 0) {
    HEAP32[$25 >> 2] = $15;
    HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 4;
   } else __ZNSt3__26vectorIPN3HFM24MoveHFMRemoveSingleInputENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($9, $1);
   $$pre = HEAP32[$2 >> 2] | 0;
   $$01379 = $$01379 + 1 | 0;
  } while (($$01379 | 0) < ((HEAP32[$$pre + 4 >> 2] | 0) - (HEAP32[$$pre >> 2] | 0) >> 3 | 0));
  $$pre$phi105Z2D = $10;
 } else $$pre$phi105Z2D = $0 + 28 | 0;
 $13 = HEAP32[$9 >> 2] | 0;
 if ((HEAP32[$$pre$phi105Z2D >> 2] | 0) == ($13 | 0)) {
  $$sink = 0;
  $41 = $0 + 20 | 0;
  HEAP32[$41 >> 2] = $$sink;
  STACKTOP = sp;
  return;
 }
 $$sink = HEAP32[$13 + (HEAP32[$0 + 36 >> 2] << 2) >> 2] | 0;
 $41 = $0 + 20 | 0;
 HEAP32[$41 >> 2] = $$sink;
 STACKTOP = sp;
 return;
}

function __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$byval_copy = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $37 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $3 = sp;
 $4 = sp + 8 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (!(HEAP8[$3 >> 0] | 0)) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
  STACKTOP = sp;
  return $0 | 0;
 }
 $8 = (HEAP32[$0 >> 2] | 0) + -12 | 0;
 HEAP32[$4 >> 2] = HEAP32[$0 + (HEAP32[$8 >> 2] | 0) + 24 >> 2];
 $14 = $0 + (HEAP32[$8 >> 2] | 0) | 0;
 $16 = HEAP32[$14 + 4 >> 2] | 0;
 $17 = $1 + $2 | 0;
 $18 = $14 + 76 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if (($19 | 0) == -1) {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 32) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $26 = $25 << 24 >> 24;
  HEAP32[$18 >> 2] = $26;
  $28 = $26;
 } else $28 = $19;
 HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
 if (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $1, ($16 & 176 | 0) == 32 ? $17 : $1, $17, $14, $28 & 255) | 0) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
  STACKTOP = sp;
  return $0 | 0;
 }
 $37 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 __ZNSt3__28ios_base5clearEj($37, HEAP32[$37 + 16 >> 2] | 5);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN8autocorr10acorrSlopeER9acorrInfo($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02632 = 0, $10 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0.0, $2 = 0, $21 = 0, $23 = 0.0, $24 = 0, $26 = 0, $3 = 0, $35 = 0, $37 = 0, $4 = 0, $5 = 0, $8 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 68 | 0;
 $4 = sp + 56 | 0;
 $5 = sp;
 $8 = HEAP32[$1 >> 2] | 0;
 $10 = (HEAP32[$1 + 4 >> 2] | 0) - $8 >> 3;
 if (!$10) {
  STACKTOP = sp;
  return;
 }
 $12 = $8;
 dest = $2;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$4 >> 2] = 0;
 $13 = $4 + 4 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $15 = $5 + 8 | 0;
 $16 = $4 + 8 | 0;
 $$02632 = 0;
 $21 = $12;
 $24 = 0;
 $26 = 0;
 while (1) {
  $17 = $$02632 + 1 | 0;
  $19 = +Math_log(+(+($17 >>> 0)));
  $23 = +Math_log(+(+HEAPF64[$21 + ($$02632 << 3) >> 3]));
  HEAPF64[$5 >> 3] = $19;
  HEAPF64[$15 >> 3] = $23;
  if ($24 >>> 0 < $26 >>> 0) {
   HEAPF64[$24 >> 3] = $19;
   HEAPF64[$24 + 8 >> 3] = $23;
   HEAP32[$13 >> 2] = $24 + 16;
  } else __ZNSt3__26vectorIN8lregress5pointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($4, $5);
  if ($17 >>> 0 >= $10 >>> 0) break;
  $$02632 = $17;
  $21 = HEAP32[$1 >> 2] | 0;
  $24 = HEAP32[$13 >> 2] | 0;
  $26 = HEAP32[$16 >> 2] | 0;
 }
 __ZNK8lregress2lrERNSt3__26vectorINS_5pointENS0_9allocatorIS2_EEEERNS_8lineInfoE($3, $4, $2);
 HEAPF64[$1 + 16 >> 3] = +HEAPF64[$2 >> 3];
 HEAPF64[$1 + 24 >> 3] = +HEAPF64[$2 + 24 >> 3];
 $35 = HEAP32[$4 >> 2] | 0;
 if ($35 | 0) {
  $37 = HEAP32[$13 >> 2] | 0;
  if (($37 | 0) != ($35 | 0)) HEAP32[$13 >> 2] = $37 + (~(($37 + -16 - $35 | 0) >>> 4) << 4);
  __ZdlPv($35);
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEjRKd($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$i17 = 0, $$sroa$speculated$$i = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $24 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $4 = 0, $42 = 0, $5 = 0, $6 = 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $10 = $6;
 if ($4 - $6 >> 3 >>> 0 >= $1 >>> 0) {
  $$0$i = $1;
  $12 = $10;
  while (1) {
   HEAPF64[$12 >> 3] = +HEAPF64[$2 >> 3];
   $$0$i = $$0$i + -1 | 0;
   if (!$$0$i) break; else $12 = $12 + 8 | 0;
  }
  HEAP32[$5 >> 2] = $10 + ($1 << 3);
  return;
 }
 $16 = HEAP32[$0 >> 2] | 0;
 $17 = $6 - $16 | 0;
 $18 = $17 >> 3;
 $19 = $18 + $1 | 0;
 if ($19 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $21 = $4 - $16 | 0;
 $24 = $21 >> 2;
 $$sroa$speculated$$i = $21 >> 3 >>> 0 < 268435455 ? ($24 >>> 0 < $19 >>> 0 ? $19 : $24) : 536870911;
 do if (!$$sroa$speculated$$i) $32 = 0; else if ($$sroa$speculated$$i >>> 0 > 536870911) {
  $28 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($28, 15810);
  HEAP32[$28 >> 2] = 14216;
  ___cxa_throw($28 | 0, 3104, 246);
 } else {
  $32 = __Znwj($$sroa$speculated$$i << 3) | 0;
  break;
 } while (0);
 $31 = $32 + ($18 << 3) | 0;
 $33 = $32 + ($$sroa$speculated$$i << 3) | 0;
 $$0$i17 = $1;
 $35 = $31;
 while (1) {
  HEAPF64[$35 >> 3] = +HEAPF64[$2 >> 3];
  $$0$i17 = $$0$i17 + -1 | 0;
  if (!$$0$i17) break; else $35 = $35 + 8 | 0;
 }
 $42 = $31 + (0 - $18 << 3) | 0;
 if (($17 | 0) > 0) _memcpy($42 | 0, $16 | 0, $17 | 0) | 0;
 HEAP32[$0 >> 2] = $42;
 HEAP32[$5 >> 2] = $31 + ($1 << 3);
 HEAP32[$3 >> 2] = $33;
 if (!$16) return;
 __ZdlPv($16);
 return;
}
function __ZN3HFM29NSIteratorNEIGHAddSingleInputD2Ev($0) {
 $0 = $0 | 0;
 var $$012 = 0, $$013 = 0, $$cast = 0, $$cast14 = 0, $$lcssa = 0, $$pre = 0, $10 = 0, $12 = 0, $20 = 0, $22 = 0, $23 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $42 = 0, $43 = 0, $46 = 0, $47 = 0, $5 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 5336;
 $$012 = (HEAP32[$0 + 68 >> 2] | 0) + 1 | 0;
 $3 = $0 + 56 | 0;
 $4 = $0 + 60 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $$cast = $6;
 $10 = $5;
 if (($$012 | 0) < ($5 - $6 >> 2 | 0)) {
  $$013 = $$012;
  $42 = $$cast;
  $54 = $10;
  $55 = $6;
  $56 = $5;
  while (1) {
   $43 = HEAP32[$42 + ($$013 << 2) >> 2] | 0;
   if (!$43) {
    $46 = $55;
    $47 = $56;
    $57 = $54;
   } else {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$43 >> 2] | 0) + 4 >> 2] & 511]($43);
    $$pre = HEAP32[$4 >> 2] | 0;
    $46 = HEAP32[$3 >> 2] | 0;
    $47 = $$pre;
    $57 = $$pre;
   }
   $$013 = $$013 + 1 | 0;
   $$cast14 = $46;
   if (($$013 | 0) >= ($47 - $46 >> 2 | 0)) {
    $$lcssa = $$cast14;
    $12 = $57;
    break;
   } else {
    $42 = $$cast14;
    $54 = $57;
    $55 = $46;
    $56 = $47;
   }
  }
 } else {
  $$lcssa = $$cast;
  $12 = $10;
 }
 if ($$lcssa | 0) {
  if (($12 | 0) != ($$lcssa | 0)) HEAP32[$4 >> 2] = $12 + (~(($12 + -4 - $$lcssa | 0) >>> 2) << 2);
  __ZdlPv($$lcssa);
 }
 $20 = HEAP32[$0 + 32 >> 2] | 0;
 if ($20 | 0) {
  $22 = $0 + 36 | 0;
  $23 = HEAP32[$22 >> 2] | 0;
  if (($23 | 0) != ($20 | 0)) HEAP32[$22 >> 2] = $23 + (~(($23 + -4 - $20 | 0) >>> 2) << 2);
  __ZdlPv($20);
 }
 $31 = HEAP32[$0 + 20 >> 2] | 0;
 if (!$31) return;
 $33 = $0 + 24 | 0;
 $34 = HEAP32[$33 >> 2] | 0;
 if (($34 | 0) != ($31 | 0)) HEAP32[$33 >> 2] = $34 + (~(($34 + -4 - $31 | 0) >>> 2) << 2);
 __ZdlPv($31);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEjRKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$i17 = 0, $$sroa$speculated$$i = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $24 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $4 = 0, $42 = 0, $5 = 0, $6 = 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $10 = $6;
 if ($4 - $6 >> 2 >>> 0 >= $1 >>> 0) {
  $$0$i = $1;
  $12 = $10;
  while (1) {
   HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
   $$0$i = $$0$i + -1 | 0;
   if (!$$0$i) break; else $12 = $12 + 4 | 0;
  }
  HEAP32[$5 >> 2] = $10 + ($1 << 2);
  return;
 }
 $16 = HEAP32[$0 >> 2] | 0;
 $17 = $6 - $16 | 0;
 $18 = $17 >> 2;
 $19 = $18 + $1 | 0;
 if ($19 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $21 = $4 - $16 | 0;
 $24 = $21 >> 1;
 $$sroa$speculated$$i = $21 >> 2 >>> 0 < 536870911 ? ($24 >>> 0 < $19 >>> 0 ? $19 : $24) : 1073741823;
 do if (!$$sroa$speculated$$i) $32 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $28 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($28, 15810);
  HEAP32[$28 >> 2] = 14216;
  ___cxa_throw($28 | 0, 3104, 246);
 } else {
  $32 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $31 = $32 + ($18 << 2) | 0;
 $33 = $32 + ($$sroa$speculated$$i << 2) | 0;
 $$0$i17 = $1;
 $35 = $31;
 while (1) {
  HEAP32[$35 >> 2] = HEAP32[$2 >> 2];
  $$0$i17 = $$0$i17 + -1 | 0;
  if (!$$0$i17) break; else $35 = $35 + 4 | 0;
 }
 $42 = $31 + (0 - $18 << 2) | 0;
 if (($17 | 0) > 0) _memcpy($42 | 0, $16 | 0, $17 | 0) | 0;
 HEAP32[$0 >> 2] = $42;
 HEAP32[$5 >> 2] = $31 + ($1 << 2);
 HEAP32[$3 >> 2] = $33;
 if (!$16) return;
 __ZdlPv($16);
 return;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $55 = 0, $9 = 0, $storemerge = 0;
 $2 = $0 + 32 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($2, $1) | 0;
 $3 = $0 + 44 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $0 + 48 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 & 8 | 0) {
  $9 = HEAP8[$2 + 11 >> 0] | 0;
  if ($9 << 24 >> 24 < 0) {
   $11 = HEAP32[$2 >> 2] | 0;
   $19 = $11;
   $21 = $11;
   $storemerge = $11 + (HEAP32[$0 + 36 >> 2] | 0) | 0;
  } else {
   $19 = $2;
   $21 = $2;
   $storemerge = $2 + ($9 & 255) | 0;
  }
  HEAP32[$3 >> 2] = $storemerge;
  HEAP32[$0 + 8 >> 2] = $19;
  HEAP32[$0 + 12 >> 2] = $21;
  HEAP32[$0 + 16 >> 2] = $storemerge;
 }
 if (!($5 & 16)) return;
 $25 = $2 + 11 | 0;
 $26 = HEAP8[$25 >> 0] | 0;
 if ($26 << 24 >> 24 < 0) {
  $31 = HEAP32[$0 + 36 >> 2] | 0;
  HEAP32[$3 >> 2] = (HEAP32[$2 >> 2] | 0) + $31;
  $37 = (HEAP32[$0 + 40 >> 2] & 2147483647) + -1 | 0;
  $55 = $31;
 } else {
  $28 = $26 & 255;
  HEAP32[$3 >> 2] = $2 + $28;
  $37 = 10;
  $55 = $28;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($2, $37, 0);
 $38 = HEAP8[$25 >> 0] | 0;
 if ($38 << 24 >> 24 < 0) {
  $40 = HEAP32[$2 >> 2] | 0;
  $45 = $40;
  $46 = HEAP32[$0 + 36 >> 2] | 0;
  $48 = $40;
 } else {
  $45 = $2;
  $46 = $38 & 255;
  $48 = $2;
 }
 $47 = $0 + 24 | 0;
 HEAP32[$47 >> 2] = $48;
 HEAP32[$0 + 20 >> 2] = $48;
 HEAP32[$0 + 28 >> 2] = $45 + $46;
 if (!(HEAP32[$4 >> 2] & 3)) return;
 HEAP32[$47 >> 2] = $48 + $55;
 return;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE6setbufEPci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sink = 0, $$sink11 = 0, $$sink13 = 0, $$sink3 = 0, $$sink5 = 0, $$sroa$speculated = 0, $10 = 0, $14 = 0, $16 = 0, $19 = 0, $26 = 0, $3 = 0, $34 = 0, $4 = 0, $8 = 0;
 $3 = $0 + 8 | 0;
 $4 = $0 + 96 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP32[$3 + 12 >> 2] = 0;
 HEAP32[$3 + 16 >> 2] = 0;
 HEAP32[$3 + 20 >> 2] = 0;
 if (HEAP8[$4 >> 0] | 0) {
  $8 = HEAP32[$0 + 32 >> 2] | 0;
  if ($8 | 0) __ZdaPv($8);
 }
 $10 = $0 + 97 | 0;
 if (HEAP8[$10 >> 0] | 0) {
  $14 = HEAP32[$0 + 56 >> 2] | 0;
  if ($14 | 0) __ZdaPv($14);
 }
 $16 = $0 + 52 | 0;
 HEAP32[$16 >> 2] = $2;
 if ($2 >>> 0 > 8) {
  $19 = HEAP8[$0 + 98 >> 0] | 0;
  if (($1 | 0) != 0 & $19 << 24 >> 24 != 0) {
   $$sink = 0;
   $$sink3 = $1;
  } else {
   $$sink = 1;
   $$sink3 = __Znaj($2) | 0;
  }
  HEAP32[$0 + 32 >> 2] = $$sink3;
  $$sink5 = $$sink;
  $26 = $19;
 } else {
  HEAP32[$0 + 32 >> 2] = $0 + 44;
  HEAP32[$16 >> 2] = 8;
  $$sink5 = 0;
  $26 = HEAP8[$0 + 98 >> 0] | 0;
 }
 HEAP8[$4 >> 0] = $$sink5;
 if ($26 << 24 >> 24) {
  HEAP32[$0 + 60 >> 2] = 0;
  $$sink11 = 0;
  $$sink13 = 0;
  $34 = $0 + 56 | 0;
  HEAP32[$34 >> 2] = $$sink13;
  HEAP8[$10 >> 0] = $$sink11;
  return $0 | 0;
 }
 $$sroa$speculated = ($2 | 0) > 8 ? $2 : 8;
 HEAP32[$0 + 60 >> 2] = $$sroa$speculated;
 if (($1 | 0) != 0 & $$sroa$speculated >>> 0 > 7) {
  $$sink11 = 0;
  $$sink13 = $1;
  $34 = $0 + 56 | 0;
  HEAP32[$34 >> 2] = $$sink13;
  HEAP8[$10 >> 0] = $$sink11;
  return $0 | 0;
 }
 $$sink11 = 1;
 $$sink13 = __Znaj($$sroa$speculated) | 0;
 $34 = $0 + 56 | 0;
 HEAP32[$34 >> 2] = $$sink13;
 HEAP8[$10 >> 0] = $$sink11;
 return $0 | 0;
}

function __ZN3HFM18ConstructiveRandomC2ERNS_18HFMProblemInstanceERNS_17ProblemParametersERN8optframe7RandGenEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $15 = 0, $17 = 0, $19 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 $9 = $0 + 12 | 0;
 HEAP8[$9 + 4 >> 0] = 0;
 HEAP32[$0 + 8 >> 2] = 2;
 HEAP8[$0 + 15 >> 0] = 0;
 HEAP8[$9 >> 0] = 1;
 HEAP8[$0 + 13 >> 0] = 1;
 HEAP8[$0 + 14 >> 0] = 0;
 HEAP32[$0 >> 2] = 5228;
 HEAP32[$0 + 20 >> 2] = $1;
 __ZN3HFM17ProblemParametersC2ERKS0_($0 + 24 | 0, $2);
 HEAP32[$0 + 124 >> 2] = $3;
 $15 = $0 + 140 | 0;
 HEAP32[$15 >> 2] = $4;
 if ($4 | 0) {
  $30 = $4;
  $29 = $0 + 128 | 0;
  HEAP32[$29 >> 2] = $30;
  $31 = $0 + 132 | 0;
  $32 = $0 + 136 | 0;
  HEAP32[$31 >> 2] = 1;
  HEAP32[$32 >> 2] = 1;
  STACKTOP = sp;
  return;
 }
 $17 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33832, 18920, 36) | 0;
 $19 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($17, HEAP32[$15 >> 2] | 0) | 0;
 __ZNKSt3__28ios_base6getlocEv($5, $19 + (HEAP32[(HEAP32[$19 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $24 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
 $28 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] & 63]($24, 10) | 0;
 __ZNSt3__26localeD2Ev($5);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($19, $28) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($19) | 0;
 _getchar() | 0;
 $30 = HEAP32[$15 >> 2] | 0;
 $29 = $0 + 128 | 0;
 HEAP32[$29 >> 2] = $30;
 $31 = $0 + 132 | 0;
 $32 = $0 + 136 | 0;
 HEAP32[$31 >> 2] = 1;
 HEAP32[$32 >> 2] = 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEPKv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34592) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $14 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $16 = HEAP32[$14 + 24 >> 2] | 0;
  $17 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  $18 = $14 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($17, HEAP32[$18 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
   $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
   $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $26 = $25 << 24 >> 24;
   HEAP32[$18 >> 2] = $26;
   $28 = $26;
  } else $28 = HEAP32[$18 >> 2] | 0;
  $31 = HEAP32[(HEAP32[$10 >> 2] | 0) + 40 >> 2] | 0;
  HEAP32[$2 >> 2] = $16;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$31 & 31]($10, $$byval_copy, $14, $28 & 255, $1) | 0)) {
   $37 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($37, HEAP32[$37 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34592) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $14 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $16 = HEAP32[$14 + 24 >> 2] | 0;
  $17 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  $18 = $14 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($17, HEAP32[$18 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
   $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
   $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $26 = $25 << 24 >> 24;
   HEAP32[$18 >> 2] = $26;
   $28 = $26;
  } else $28 = HEAP32[$18 >> 2] | 0;
  $31 = HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$2 >> 2] = $16;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$31 & 31]($10, $$byval_copy, $14, $28 & 255, $1) | 0)) {
   $37 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($37, HEAP32[$37 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34592) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $14 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $16 = HEAP32[$14 + 24 >> 2] | 0;
  $17 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  $18 = $14 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($17, HEAP32[$18 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
   $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
   $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $26 = $25 << 24 >> 24;
   HEAP32[$18 >> 2] = $26;
   $28 = $26;
  } else $28 = HEAP32[$18 >> 2] | 0;
  $31 = HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$2 >> 2] = $16;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$31 & 31]($10, $$byval_copy, $14, $28 & 255, $1) | 0)) {
   $37 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($37, HEAP32[$37 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34592) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $14 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $16 = HEAP32[$14 + 24 >> 2] | 0;
  $17 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  $18 = $14 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($17, HEAP32[$18 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
   $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
   $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $26 = $25 << 24 >> 24;
   HEAP32[$18 >> 2] = $26;
   $28 = $26;
  } else $28 = HEAP32[$18 >> 2] | 0;
  $31 = HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$2 >> 2] = $16;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$31 & 31]($10, $$byval_copy, $14, $28 & 255, $1) | 0)) {
   $37 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($37, HEAP32[$37 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34592) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $14 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $16 = HEAP32[$14 + 24 >> 2] | 0;
  $17 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  $18 = $14 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($17, HEAP32[$18 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
   $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
   $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $26 = $25 << 24 >> 24;
   HEAP32[$18 >> 2] = $26;
   $28 = $26;
  } else $28 = HEAP32[$18 >> 2] | 0;
  $31 = HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] | 0;
  HEAP32[$2 >> 2] = $16;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$31 & 31]($10, $$byval_copy, $14, $28 & 255, $1) | 0)) {
   $37 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($37, HEAP32[$37 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34592) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $14 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $16 = HEAP32[$14 + 24 >> 2] | 0;
  $17 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  $18 = $14 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($17, HEAP32[$18 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
   $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
   $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $26 = $25 << 24 >> 24;
   HEAP32[$18 >> 2] = $26;
   $28 = $26;
  } else $28 = HEAP32[$18 >> 2] | 0;
  $31 = HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] | 0;
  HEAP32[$2 >> 2] = $16;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiid[$31 & 7]($10, $$byval_copy, $14, $28 & 255, $1) | 0)) {
   $37 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($37, HEAP32[$37 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNK3HFM17MoveHFMModifyRule5printEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $15 = 0, $2 = 0, $23 = 0, $27 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 20566, 29) | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($2, HEAP32[$0 + 20 >> 2] | 0) | 0, 20596, 3) | 0;
 $6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 20600, 8) | 0;
 $10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($6, HEAP32[$0 + 24 >> 2] | 0) | 0, 20233, 11) | 0;
 $15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEb($10, (HEAP8[$0 + 40 >> 0] | 0) != 0) | 0, 20609, 11) | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($15, HEAP32[$0 + 44 >> 2] | 0) | 0, 19722, 2) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, 33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) | 0);
 $23 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $27 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$23 >> 2] | 0) + 28 >> 2] & 63]($23, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(33664, $27) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(33664) | 0;
 STACKTOP = sp;
 return;
}

function ___mo_lookup($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$090 = 0, $$094 = 0, $$4 = 0, $10 = 0, $13 = 0, $17 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $31 = 0, $35 = 0, $4 = 0, $44 = 0, $46 = 0, $49 = 0, $53 = 0, $63 = 0, $7 = 0;
 $4 = (HEAP32[$0 >> 2] | 0) + 1794895138 | 0;
 $7 = _swapc(HEAP32[$0 + 8 >> 2] | 0, $4) | 0;
 $10 = _swapc(HEAP32[$0 + 12 >> 2] | 0, $4) | 0;
 $13 = _swapc(HEAP32[$0 + 16 >> 2] | 0, $4) | 0;
 L1 : do if ($7 >>> 0 < $1 >>> 2 >>> 0) {
  $17 = $1 - ($7 << 2) | 0;
  if ($10 >>> 0 < $17 >>> 0 & $13 >>> 0 < $17 >>> 0) if (!(($13 | $10) & 3)) {
   $23 = $10 >>> 2;
   $24 = $13 >>> 2;
   $$090 = 0;
   $$094 = $7;
   while (1) {
    $25 = $$094 >>> 1;
    $26 = $$090 + $25 | 0;
    $27 = $26 << 1;
    $28 = $27 + $23 | 0;
    $31 = _swapc(HEAP32[$0 + ($28 << 2) >> 2] | 0, $4) | 0;
    $35 = _swapc(HEAP32[$0 + ($28 + 1 << 2) >> 2] | 0, $4) | 0;
    if (!($35 >>> 0 < $1 >>> 0 & $31 >>> 0 < ($1 - $35 | 0) >>> 0)) {
     $$4 = 0;
     break L1;
    }
    if (HEAP8[$0 + ($35 + $31) >> 0] | 0) {
     $$4 = 0;
     break L1;
    }
    $44 = _strcmp($2, $0 + $35 | 0) | 0;
    if (!$44) break;
    $63 = ($44 | 0) < 0;
    if (($$094 | 0) == 1) {
     $$4 = 0;
     break L1;
    } else {
     $$090 = $63 ? $$090 : $26;
     $$094 = $63 ? $25 : $$094 - $25 | 0;
    }
   }
   $46 = $27 + $24 | 0;
   $49 = _swapc(HEAP32[$0 + ($46 << 2) >> 2] | 0, $4) | 0;
   $53 = _swapc(HEAP32[$0 + ($46 + 1 << 2) >> 2] | 0, $4) | 0;
   if ($53 >>> 0 < $1 >>> 0 & $49 >>> 0 < ($1 - $53 | 0) >>> 0) $$4 = (HEAP8[$0 + ($53 + $49) >> 0] | 0) == 0 ? $0 + $53 | 0 : 0; else $$4 = 0;
  } else $$4 = 0; else $$4 = 0;
 } else $$4 = 0; while (0);
 return $$4 | 0;
}

function __ZN3HFM25NSSeqHFMChangeSingleInput10randomMoveERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sink = 0, $$sink39 = 0, $$sink42 = 0, $$sink45 = 0, $$sink48 = 0, $$sink64$in = 0, $13 = 0, $16 = 0, $20 = 0, $21 = 0, $25 = 0, $28 = 0, $3 = 0, $32 = 0, $36 = 0, $4 = 0, $8 = 0;
 $3 = $0 + 24 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 44 >> 2] & 63]($4, 5) | 0;
 $13 = (HEAP32[$1 + 4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) >> 3;
 if (!$13) {
  $$sink = -1;
  $$sink39 = -1;
  $$sink42 = -1;
  $$sink45 = 1;
  $$sink48 = -1;
  $$sink64$in = __Znwj(40) | 0;
 } else {
  $16 = HEAP32[$3 >> 2] | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 44 >> 2] & 63]($16, $13) | 0;
  $21 = HEAP32[$3 >> 2] | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 44 >> 2] & 63]($21, 2) | 0;
  $28 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($20 << 3) >> 2] | 0;
  $32 = HEAP32[(HEAP32[$0 + 28 >> 2] | 0) + ($28 << 2) >> 2] | 0;
  $36 = HEAP32[(HEAP32[$0 + 40 >> 2] | 0) + ($28 << 2) >> 2] | 0;
  $$sink = $8 + 1 | 0;
  $$sink39 = $36;
  $$sink42 = $32;
  $$sink45 = ($25 | 0) != 0 & 1;
  $$sink48 = $20;
  $$sink64$in = __Znwj(40) | 0;
 }
 HEAP8[$$sink64$in + 16 >> 0] = 0;
 HEAP32[$$sink64$in + 8 >> 2] = 2;
 HEAP8[$$sink64$in + 15 >> 0] = 0;
 HEAP8[$$sink64$in + 12 >> 0] = 1;
 HEAP8[$$sink64$in + 13 >> 0] = 1;
 HEAP8[$$sink64$in + 14 >> 0] = 0;
 HEAP32[$$sink64$in >> 2] = 5736;
 HEAP32[$$sink64$in + 20 >> 2] = $$sink48;
 HEAP8[$$sink64$in + 24 >> 0] = $$sink45;
 HEAP32[$$sink64$in + 28 >> 2] = $$sink42;
 HEAP32[$$sink64$in + 32 >> 2] = $$sink39;
 HEAP32[$$sink64$in + 36 >> 2] = $$sink;
 return $$sink64$in | 0;
}

function __ZN8optframe6ParetoI6RepHFMiE14add_indWithMevERKNS_8SolutionIS1_iEERKNS_15MultiEvaluationE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $12 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $41 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = __Znwj(28) | 0;
 HEAP8[$4 + 16 >> 0] = 0;
 HEAP32[$4 + 8 >> 2] = 2;
 HEAP8[$4 + 15 >> 0] = 0;
 HEAP8[$4 + 12 >> 0] = 1;
 HEAP8[$4 + 13 >> 0] = 1;
 HEAP8[$4 + 14 >> 0] = 0;
 HEAP32[$4 >> 2] = 5136;
 $12 = __Znwj(128) | 0;
 __ZN6RepHFMC2ERKS_($12, HEAP32[$1 + 20 >> 2] | 0);
 HEAP32[$4 + 20 >> 2] = $12;
 $17 = HEAP32[$1 + 24 >> 2] | 0;
 if (!$17) $21 = 0; else {
  $19 = __Znwj(4) | 0;
  HEAP32[$19 >> 2] = HEAP32[$17 >> 2];
  $21 = $19;
 }
 HEAP32[$4 + 24 >> 2] = $21;
 HEAP32[$3 >> 2] = $4;
 $22 = $0 + 8 | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 if ($23 >>> 0 < (HEAP32[$0 + 12 >> 2] | 0) >>> 0) {
  HEAP32[$23 >> 2] = $4;
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPN8optframe8SolutionI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0 + 4 | 0, $3);
 $31 = __Znwj(32) | 0;
 __ZN8optframe15MultiEvaluationC2ERKS0_($31, $2);
 HEAP32[$3 >> 2] = $31;
 $32 = $0 + 20 | 0;
 $33 = HEAP32[$32 >> 2] | 0;
 if ($33 >>> 0 < (HEAP32[$0 + 24 >> 2] | 0) >>> 0) {
  HEAP32[$33 >> 2] = $31;
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 4;
  $41 = $0 + 28 | 0;
  HEAP8[$41 >> 0] = 1;
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__26vectorIPN8optframe15MultiEvaluationENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($0 + 16 | 0, $3);
  $41 = $0 + 28 | 0;
  HEAP8[$41 >> 0] = 1;
  STACKTOP = sp;
  return;
 }
}

function _vfprintf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0 = 0, $$1 = 0, $13 = 0, $14 = 0, $19 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $35 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $3 = sp + 120 | 0;
 $4 = sp + 80 | 0;
 $5 = sp;
 $6 = sp + 136 | 0;
 dest = $4;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
 if ((_printf_core(0, $1, $3, $5, $4) | 0) < 0) $$0 = -1; else {
  if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $39 = ___lockfile($0) | 0; else $39 = 0;
  $13 = HEAP32[$0 >> 2] | 0;
  $14 = $13 & 32;
  if ((HEAP8[$0 + 74 >> 0] | 0) < 1) HEAP32[$0 >> 2] = $13 & -33;
  $19 = $0 + 48 | 0;
  if (!(HEAP32[$19 >> 2] | 0)) {
   $23 = $0 + 44 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   HEAP32[$23 >> 2] = $6;
   $25 = $0 + 28 | 0;
   HEAP32[$25 >> 2] = $6;
   $26 = $0 + 20 | 0;
   HEAP32[$26 >> 2] = $6;
   HEAP32[$19 >> 2] = 80;
   $28 = $0 + 16 | 0;
   HEAP32[$28 >> 2] = $6 + 80;
   $29 = _printf_core($0, $1, $3, $5, $4) | 0;
   if (!$24) $$1 = $29; else {
    FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
    $$ = (HEAP32[$26 >> 2] | 0) == 0 ? -1 : $29;
    HEAP32[$23 >> 2] = $24;
    HEAP32[$19 >> 2] = 0;
    HEAP32[$28 >> 2] = 0;
    HEAP32[$25 >> 2] = 0;
    HEAP32[$26 >> 2] = 0;
    $$1 = $$;
   }
  } else $$1 = _printf_core($0, $1, $3, $5, $4) | 0;
  $35 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $35 | $14;
  if ($39 | 0) ___unlockfile($0);
  $$0 = ($35 & 32 | 0) == 0 ? $$1 : -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i17 = 0, $$0$i22 = 0, $10 = 0, $11 = 0, $13 = 0, $18 = 0, $30 = 0, $31 = 0, $35 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $10 = HEAP8[$5 + 11 >> 0] | 0;
 $11 = $10 << 24 >> 24 < 0;
 $13 = $11 ? HEAP32[$5 >> 2] | 0 : $5;
 $18 = $13 + ($11 ? HEAP32[$5 + 4 >> 2] | 0 : $10 & 255) | 0;
 $$0$i22 = $13;
 while (1) {
  if ($$0$i22 >>> 0 >= $18 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($6, HEAP8[$$0$i22 >> 0] | 0);
  $$0$i22 = $$0$i22 + 1 | 0;
 }
 $30 = (HEAP8[$6 + 11 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6;
 $31 = _catgets(($2 | 0) == -1 ? -1 : $2 << 1, $3, $4, $30) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i17 = 0;
 while (1) {
  if (($$0$i$i17 | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i17 << 2) >> 2] = 0;
  $$0$i$i17 = $$0$i$i17 + 1 | 0;
 }
 $35 = $30 + (_strlen($31) | 0) | 0;
 $$0$i = $30;
 while (1) {
  if ($$0$i >>> 0 >= $35 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, HEAP8[$$0$i >> 0] | 0);
  $$0$i = $$0$i + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $5 = sp + 112 | 0;
 $6 = sp + 100 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 4 | 0;
 $10 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[27054] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[27055] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[27056] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[27057] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[27058] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[27059] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 27060, 0, HEAP32[$2 + 4 >> 2] | 0);
 $14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $16 = $6 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 12, $14, $5, $$byval_copy) | 0) | 0;
 $17 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $16, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($6, $17, $16, $7, $8, $9, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
 $19 = HEAP32[$8 >> 2] | 0;
 $20 = HEAP32[$9 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$10 >> 2];
 $21 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, $19, $20, $2, $3) | 0;
 STACKTOP = sp;
 return $21 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $5 = sp + 122 | 0;
 $6 = sp + 108 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 4 | 0;
 $10 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[27054] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[27055] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[27056] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[27057] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[27058] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[27059] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 27060, 1, HEAP32[$2 + 4 >> 2] | 0);
 $14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $16 = $6 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 13, $14, $5, $$byval_copy) | 0) | 0;
 $17 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $16, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($6, $17, $16, $7, $8, $9, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
 $19 = HEAP32[$8 >> 2] | 0;
 $20 = HEAP32[$9 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$10 >> 2];
 $21 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, $19, $20, $2, $3) | 0;
 STACKTOP = sp;
 return $21 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $5 = sp + 52 | 0;
 $6 = sp + 40 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 4 | 0;
 $10 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[27054] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[27055] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[27056] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[27057] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[27058] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[27059] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 27060, 0, HEAP32[$2 + 4 >> 2] | 0);
 $14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $16 = $6 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 12, $14, $5, $$byval_copy) | 0) | 0;
 $17 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $16, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($6, $17, $16, $7, $8, $9, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
 $19 = HEAP32[$8 >> 2] | 0;
 $20 = HEAP32[$9 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$10 >> 2];
 $21 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, $19, $20, $2, $3) | 0;
 STACKTOP = sp;
 return $21 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $5 = sp + 52 | 0;
 $6 = sp + 39 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 4 | 0;
 $10 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[27054] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[27055] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[27056] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[27057] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[27058] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[27059] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 27060, 1, HEAP32[$2 + 4 >> 2] | 0);
 $14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $16 = $6 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 13, $14, $5, $$byval_copy) | 0) | 0;
 $17 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $16, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($6, $17, $16, $7, $8, $9, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
 $19 = HEAP32[$8 >> 2] | 0;
 $20 = HEAP32[$9 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$10 >> 2];
 $21 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, $19, $20, $2, $3) | 0;
 STACKTOP = sp;
 return $21 | 0;
}

function _mbtowc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0 = 0, $16 = 0, $20 = 0, $22 = 0, $24 = 0, $3 = 0, $32 = 0, $33 = 0, $41 = 0, $46 = 0, $49 = 0, $54 = 0, $7 = 0, $not$ = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 L1 : do if (!$1) $$0 = 0; else {
  do if ($2 | 0) {
   $$ = ($0 | 0) == 0 ? $3 : $0;
   $7 = HEAP8[$1 >> 0] | 0;
   if ($7 << 24 >> 24 > -1) {
    HEAP32[$$ >> 2] = $7 & 255;
    $$0 = $7 << 24 >> 24 != 0 & 1;
    break L1;
   }
   $not$ = (HEAP32[HEAP32[(___pthread_self_343() | 0) + 188 >> 2] >> 2] | 0) == 0;
   $16 = HEAP8[$1 >> 0] | 0;
   if ($not$) {
    HEAP32[$$ >> 2] = $16 << 24 >> 24 & 57343;
    $$0 = 1;
    break L1;
   }
   $20 = ($16 & 255) + -194 | 0;
   if ($20 >>> 0 <= 50) {
    $22 = $1 + 1 | 0;
    $24 = HEAP32[7100 + ($20 << 2) >> 2] | 0;
    if ($2 >>> 0 < 4) if ($24 & -2147483648 >>> (($2 * 6 | 0) + -6 | 0) | 0) break;
    $32 = HEAPU8[$22 >> 0] | 0;
    $33 = $32 >>> 3;
    if (($33 + -16 | $33 + ($24 >> 26)) >>> 0 <= 7) {
     $41 = $32 + -128 | $24 << 6;
     if (($41 | 0) >= 0) {
      HEAP32[$$ >> 2] = $41;
      $$0 = 2;
      break L1;
     }
     $46 = (HEAPU8[$1 + 2 >> 0] | 0) + -128 | 0;
     if ($46 >>> 0 <= 63) {
      $49 = $46 | $41 << 6;
      if (($49 | 0) >= 0) {
       HEAP32[$$ >> 2] = $49;
       $$0 = 3;
       break L1;
      }
      $54 = (HEAPU8[$1 + 3 >> 0] | 0) + -128 | 0;
      if ($54 >>> 0 <= 63) {
       HEAP32[$$ >> 2] = $54 | $49 << 6;
       $$0 = 4;
       break L1;
      }
     }
    }
   }
  } while (0);
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function ___dynamic_cast($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $8 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $4 = sp;
 $5 = HEAP32[$0 >> 2] | 0;
 $8 = $0 + (HEAP32[$5 + -8 >> 2] | 0) | 0;
 $10 = HEAP32[$5 + -4 >> 2] | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$4 + 4 >> 2] = $0;
 HEAP32[$4 + 8 >> 2] = $1;
 HEAP32[$4 + 12 >> 2] = $3;
 $14 = $4 + 16 | 0;
 $15 = $4 + 20 | 0;
 $16 = $4 + 24 | 0;
 $17 = $4 + 28 | 0;
 $18 = $4 + 32 | 0;
 $19 = $4 + 40 | 0;
 dest = $14;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$14 + 36 >> 1] = 0;
 HEAP8[$14 + 38 >> 0] = 0;
 L1 : do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($10, $2, 0) | 0) {
  HEAP32[$4 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 15]($10, $4, $8, $8, 1, 0);
  $$0 = (HEAP32[$16 >> 2] | 0) == 1 ? $8 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 15]($10, $4, $8, 1, 0);
  switch (HEAP32[$4 + 36 >> 2] | 0) {
  case 0:
   {
    $$0 = (HEAP32[$19 >> 2] | 0) == 1 & (HEAP32[$17 >> 2] | 0) == 1 & (HEAP32[$18 >> 2] | 0) == 1 ? HEAP32[$15 >> 2] | 0 : 0;
    break L1;
    break;
   }
  case 1:
   break;
  default:
   {
    $$0 = 0;
    break L1;
   }
  }
  if ((HEAP32[$16 >> 2] | 0) != 1) if (!((HEAP32[$19 >> 2] | 0) == 0 & (HEAP32[$17 >> 2] | 0) == 1 & (HEAP32[$18 >> 2] | 0) == 1)) {
   $$0 = 0;
   break;
  }
  $$0 = HEAP32[$14 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIN8optframe16NGESIndStructureI6RepHFMiEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $28 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 5;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 134217727) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 4;
 $$sroa$speculated$$i = $11 >> 5 >>> 0 < 67108863 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 134217727;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 134217727) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 5) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 5) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$21 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$21 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$21 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 HEAP32[$21 + 16 >> 2] = HEAP32[$1 + 16 >> 2];
 HEAP32[$21 + 20 >> 2] = HEAP32[$1 + 20 >> 2];
 HEAP32[$21 + 24 >> 2] = HEAP32[$1 + 24 >> 2];
 HEAP32[$21 + 28 >> 2] = HEAP32[$1 + 28 >> 2];
 $28 = $21 + (0 - $6 << 5) | 0;
 if (($5 | 0) > 0) _memcpy($28 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $28;
 HEAP32[$2 >> 2] = $21 + 32;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 5);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZN8optframe7RandGen7shuffleIPNS_11LocalSearchI6RepHFMiEEEEvRNSt3__26vectorIT_NS6_9allocatorIS8_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$024 = 0, $14 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $4 = 0, $7 = 0, label = 0, $$024$looptemp = 0;
 $2 = $1 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$1 >> 2] | 0;
 if (($3 | 0) == ($4 | 0)) return;
 $7 = $3 - $4 >> 2;
 if (($7 | 0) == 1) return;
 $$024 = 0;
 $14 = $7;
 while (1) {
  $$024$looptemp = $$024;
  $$024 = $$024 + 1 | 0;
  $17 = $$024 + (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($0, $14 + ~$$024$looptemp | 0) | 0) | 0;
  $19 = HEAP32[$1 >> 2] | 0;
  $21 = (HEAP32[$2 >> 2] | 0) - $19 >> 2;
  if ($21 >>> 0 <= $$024$looptemp >>> 0) {
   label = 5;
   break;
  }
  $23 = $19;
  $24 = $23 + ($$024$looptemp << 2) | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  if ($21 >>> 0 <= $17 >>> 0) {
   label = 7;
   break;
  }
  HEAP32[$24 >> 2] = HEAP32[$23 + ($17 << 2) >> 2];
  $30 = HEAP32[$1 >> 2] | 0;
  if ((HEAP32[$2 >> 2] | 0) - $30 >> 2 >>> 0 <= $17 >>> 0) {
   label = 9;
   break;
  }
  HEAP32[$30 + ($17 << 2) >> 2] = $25;
  $14 = (HEAP32[$2 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) >> 2;
  if ($$024 >>> 0 >= ($14 + -1 | 0) >>> 0) {
   label = 11;
   break;
  }
 }
 if ((label | 0) == 5) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1); else if ((label | 0) == 7) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1); else if ((label | 0) == 9) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($1); else if ((label | 0) == 11) return;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $32 = 0, $34 = 0, $35 = 0, $5 = 0, $7 = 0, $8 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $5 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 36328) | 0;
 HEAP32[$0 + 68 >> 2] = $5;
 $7 = $0 + 98 | 0;
 $8 = HEAP8[$7 >> 0] | 0;
 $12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 127]($5) | 0;
 HEAP8[$7 >> 0] = $12 & 1;
 if (($8 & 255 | 0) == ($12 & 1 | 0)) return;
 $17 = $0 + 8 | 0;
 $18 = $0 + 96 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 HEAP32[$17 + 16 >> 2] = 0;
 HEAP32[$17 + 20 >> 2] = 0;
 $20 = (HEAP8[$18 >> 0] | 0) != 0;
 if ($12) {
  $21 = $0 + 32 | 0;
  if ($20) {
   $22 = HEAP32[$21 >> 2] | 0;
   if ($22 | 0) __ZdaPv($22);
  }
  $24 = $0 + 97 | 0;
  HEAP8[$18 >> 0] = HEAP8[$24 >> 0] | 0;
  $26 = $0 + 60 | 0;
  HEAP32[$0 + 52 >> 2] = HEAP32[$26 >> 2];
  $29 = $0 + 56 | 0;
  HEAP32[$21 >> 2] = HEAP32[$29 >> 2];
  HEAP32[$26 >> 2] = 0;
  HEAP32[$29 >> 2] = 0;
  HEAP8[$24 >> 0] = 0;
  return;
 }
 $32 = HEAP32[$0 + 52 >> 2] | 0;
 HEAP32[$0 + 60 >> 2] = $32;
 if (!$20) {
  $34 = $0 + 32 | 0;
  $35 = HEAP32[$34 >> 2] | 0;
  if (($35 | 0) != ($0 + 44 | 0)) {
   HEAP32[$0 + 56 >> 2] = $35;
   HEAP8[$0 + 97 >> 0] = 0;
   HEAP32[$34 >> 2] = __Znaj($32) | 0;
   HEAP8[$18 >> 0] = 1;
   return;
  }
 }
 HEAP32[$0 + 56 >> 2] = __Znaj($32) | 0;
 HEAP8[$0 + 97 >> 0] = 1;
 return;
}

function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $12 = 0, $22 = 0, $23 = 0, $25 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $35 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $0 = sp + 36 | 0;
 $1 = ___cxa_get_globals_fast() | 0;
 if ($1 | 0) {
  $3 = HEAP32[$1 >> 2] | 0;
  if ($3 | 0) {
   $7 = $3 + 48 | 0;
   $9 = HEAP32[$7 >> 2] | 0;
   $12 = HEAP32[$7 + 4 >> 2] | 0;
   if (!(($9 & -256 | 0) == 1126902528 & ($12 | 0) == 1129074247)) {
    HEAP32[$vararg_buffer7 >> 2] = HEAP32[3526];
    _abort_message(29095, $vararg_buffer7);
   }
   if (($9 | 0) == 1126902529 & ($12 | 0) == 1129074247) $22 = HEAP32[$3 + 44 >> 2] | 0; else $22 = $3 + 80 | 0;
   HEAP32[$0 >> 2] = $22;
   $23 = HEAP32[$3 >> 2] | 0;
   $25 = HEAP32[$23 + 4 >> 2] | 0;
   $29 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[756] | 0) + 16 >> 2] & 63](3024, $23, $0) | 0;
   $30 = HEAP32[3526] | 0;
   if ($29) {
    $31 = HEAP32[$0 >> 2] | 0;
    $35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 8 >> 2] & 127]($31) | 0;
    HEAP32[$vararg_buffer >> 2] = $30;
    HEAP32[$vararg_buffer + 4 >> 2] = $25;
    HEAP32[$vararg_buffer + 8 >> 2] = $35;
    _abort_message(29009, $vararg_buffer);
   } else {
    HEAP32[$vararg_buffer3 >> 2] = $30;
    HEAP32[$vararg_buffer3 + 4 >> 2] = $25;
    _abort_message(29054, $vararg_buffer3);
   }
  }
 }
 _abort_message(29133, $vararg_buffer10);
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE7putbackEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $30 = 0, $31 = 0, $34 = 0, $39 = 0, $40 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 + 4 >> 2] = 0;
 $7 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 __ZNSt3__28ios_base5clearEj($7, HEAP32[$7 + 16 >> 2] & -3);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($2, $0, 1);
 $15 = HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0;
 $16 = $0 + $15 | 0;
 do if (!(HEAP8[$2 >> 0] | 0)) __ZNSt3__28ios_base5clearEj($16, HEAP32[$16 + 16 >> 2] | 4); else {
  $18 = HEAP32[$16 + 24 >> 2] | 0;
  if (!$18) $40 = $15; else {
   $22 = $18 + 12 | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   if ((HEAP32[$18 + 8 >> 2] | 0) == ($23 | 0)) label = 5; else if (__ZNSt3__211char_traitsIcE2eqEcc($1, HEAP8[$23 + -1 >> 0] | 0) | 0) {
    $34 = (HEAP32[$22 >> 2] | 0) + -1 | 0;
    HEAP32[$22 >> 2] = $34;
    $$0$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$34 >> 0] | 0) | 0;
   } else label = 5;
   if ((label | 0) == 5) {
    $30 = HEAP32[(HEAP32[$18 >> 2] | 0) + 44 >> 2] | 0;
    $31 = __ZNSt3__211char_traitsIcE11to_int_typeEc($1) | 0;
    $$0$i = FUNCTION_TABLE_iii[$30 & 63]($18, $31) | 0;
   }
   if (($$0$i | 0) != (__ZNSt3__211char_traitsIcE3eofEv() | 0)) break;
   $40 = HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0;
  }
  $39 = $0 + $40 | 0;
  __ZNSt3__28ios_base5clearEj($39, HEAP32[$39 + 16 >> 2] | 1);
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $$byval_copy = sp;
 $5 = sp + 176 | 0;
 $6 = sp + 156 | 0;
 $7 = sp + 4 | 0;
 $8 = sp + 152 | 0;
 HEAP8[$5 >> 0] = HEAP8[27043] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[27044] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[27045] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[27046] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[27047] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[27048] | 0;
 $9 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $10 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 20, $9, $5, $$byval_copy) | 0;
 $11 = $6 + $10 | 0;
 $12 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $11, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 $13 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34568) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$13 >> 2] | 0) + 48 >> 2] & 31]($13, $6, $11, $7) | 0;
 $17 = $7 + ($10 << 2) | 0;
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $24 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, ($12 | 0) == ($11 | 0) ? $17 : $7 + ($12 - $6 << 2) | 0, $17, $2, $3) | 0;
 STACKTOP = sp;
 return $24 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $$byval_copy = sp;
 $5 = sp + 68 | 0;
 $6 = sp + 48 | 0;
 $7 = sp + 8 | 0;
 $8 = sp + 4 | 0;
 HEAP8[$5 >> 0] = HEAP8[27043] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[27044] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[27045] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[27046] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[27047] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[27048] | 0;
 $9 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $10 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 20, $9, $5, $$byval_copy) | 0;
 $11 = $6 + $10 | 0;
 $12 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $11, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 $13 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$13 >> 2] | 0) + 32 >> 2] & 31]($13, $6, $11, $7) | 0;
 $17 = $7 + $10 | 0;
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $24 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, ($12 | 0) == ($11 | 0) ? $17 : $7 + ($12 - $6) | 0, $17, $2, $3) | 0;
 STACKTOP = sp;
 return $24 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 200 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 20 | 0;
 $12 = $6;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 27051, 0, HEAP32[$2 + 4 >> 2] | 0);
 $19 = __ZNSt3__26__clocEv() | 0;
 $20 = $$byval_copy;
 HEAP32[$20 >> 2] = $4;
 HEAP32[$20 + 4 >> 2] = $5;
 $25 = $7 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($7, 23, $19, $6, $$byval_copy) | 0) | 0;
 $26 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($7, $25, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($7, $26, $25, $8, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $28 = HEAP32[$9 >> 2] | 0;
 $29 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $30 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $8, $28, $29, $2, $3) | 0;
 STACKTOP = sp;
 return $30 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 200 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 20 | 0;
 $12 = $6;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 27051, 1, HEAP32[$2 + 4 >> 2] | 0);
 $19 = __ZNSt3__26__clocEv() | 0;
 $20 = $$byval_copy;
 HEAP32[$20 >> 2] = $4;
 HEAP32[$20 + 4 >> 2] = $5;
 $25 = $7 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($7, 23, $19, $6, $$byval_copy) | 0) | 0;
 $26 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($7, $25, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($7, $26, $25, $8, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $28 = HEAP32[$9 >> 2] | 0;
 $29 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $30 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $8, $28, $29, $2, $3) | 0;
 STACKTOP = sp;
 return $30 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 71 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 20 | 0;
 $12 = $6;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 27051, 0, HEAP32[$2 + 4 >> 2] | 0);
 $19 = __ZNSt3__26__clocEv() | 0;
 $20 = $$byval_copy;
 HEAP32[$20 >> 2] = $4;
 HEAP32[$20 + 4 >> 2] = $5;
 $25 = $7 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($7, 23, $19, $6, $$byval_copy) | 0) | 0;
 $26 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($7, $25, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($7, $26, $25, $8, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $28 = HEAP32[$9 >> 2] | 0;
 $29 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $30 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $8, $28, $29, $2, $3) | 0;
 STACKTOP = sp;
 return $30 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 71 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 20 | 0;
 $12 = $6;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 27051, 1, HEAP32[$2 + 4 >> 2] | 0);
 $19 = __ZNSt3__26__clocEv() | 0;
 $20 = $$byval_copy;
 HEAP32[$20 >> 2] = $4;
 HEAP32[$20 + 4 >> 2] = $5;
 $25 = $7 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($7, 23, $19, $6, $$byval_copy) | 0) | 0;
 $26 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($7, $25, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($7, $26, $25, $8, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $28 = HEAP32[$9 >> 2] | 0;
 $29 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $30 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $8, $28, $29, $2, $3) | 0;
 STACKTOP = sp;
 return $30 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $19 = 0, $20 = 0, $21 = 0, $9 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $5) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4); else {
  $9 = $1 + 52 | 0;
  $10 = HEAP8[$9 >> 0] | 0;
  $11 = $1 + 53 | 0;
  $12 = HEAP8[$11 >> 0] | 0;
  $15 = HEAP32[$0 + 12 >> 2] | 0;
  $16 = $0 + 16 + ($15 << 3) | 0;
  HEAP8[$9 >> 0] = 0;
  HEAP8[$11 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0 + 16 | 0, $1, $2, $3, $4, $5);
  L4 : do if (($15 | 0) > 1) {
   $19 = $1 + 24 | 0;
   $20 = $1 + 54 | 0;
   $21 = $0 + 8 | 0;
   $$0 = $0 + 24 | 0;
   do {
    if (HEAP8[$20 >> 0] | 0) break L4;
    if (!(HEAP8[$9 >> 0] | 0)) {
     if (HEAP8[$11 >> 0] | 0) if (!(HEAP32[$21 >> 2] & 1)) break L4;
    } else {
     if ((HEAP32[$19 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[$21 >> 2] & 2)) break L4;
    }
    HEAP8[$9 >> 0] = 0;
    HEAP8[$11 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$0, $1, $2, $3, $4, $5);
    $$0 = $$0 + 8 | 0;
   } while ($$0 >>> 0 < $16 >>> 0);
  } while (0);
  HEAP8[$9 >> 0] = $10;
  HEAP8[$11 >> 0] = $12;
 }
 return;
}

function __ZN8optframe15MultiEvaluationD2Ev($0) {
 $0 = $0 | 0;
 var $$phi$trans$insert = 0, $$pre$phiZ2D = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $39 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0;
 HEAP32[$0 >> 2] = 4868;
 $2 = HEAP32[$0 + 20 >> 2] | 0;
 $3 = $0 + 24 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) == ($2 | 0)) {
  $$pre$phiZ2D = $0 + 20 | 0;
  $21 = $2;
 } else {
  $7 = $4;
  while (1) {
   $6 = $7 + -72 | 0;
   HEAP32[$3 >> 2] = $6;
   HEAP32[$6 >> 2] = 4920;
   $9 = HEAP32[$7 + -32 >> 2] | 0;
   if (!$9) $11 = $6; else {
    $13 = $7 + -28 | 0;
    $14 = HEAP32[$13 >> 2] | 0;
    if (($14 | 0) != ($9 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -16 - $9 | 0) >>> 4) << 4);
    __ZdlPv($9);
    $11 = HEAP32[$3 >> 2] | 0;
   }
   if (($11 | 0) == ($2 | 0)) break; else $7 = $11;
  }
  $$phi$trans$insert = $0 + 20 | 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $21 = HEAP32[$$phi$trans$insert >> 2] | 0;
 }
 if (!$21) return;
 if (($2 | 0) == ($21 | 0)) $39 = $21; else {
  $25 = $2;
  while (1) {
   $24 = $25 + -72 | 0;
   HEAP32[$3 >> 2] = $24;
   HEAP32[$24 >> 2] = 4920;
   $27 = HEAP32[$25 + -32 >> 2] | 0;
   if (!$27) $29 = $24; else {
    $31 = $25 + -28 | 0;
    $32 = HEAP32[$31 >> 2] | 0;
    if (($32 | 0) != ($27 | 0)) HEAP32[$31 >> 2] = $32 + (~(($32 + -16 - $27 | 0) >>> 4) << 4);
    __ZdlPv($27);
    $29 = HEAP32[$3 >> 2] | 0;
   }
   if (($29 | 0) == ($21 | 0)) break; else $25 = $29;
  }
  $39 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 }
 __ZdlPv($39);
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $11 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0, $32 = 0, $33 = 0, $41 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp;
 if ((1073741806 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $11 = $0 + 8 | 0;
 if ((HEAP8[$11 + 3 >> 0] | 0) < 0) $29 = HEAP32[$0 >> 2] | 0; else $29 = $0;
 if ($1 >>> 0 < 536870887) {
  $17 = $2 + $1 | 0;
  $18 = $1 << 1;
  $$sroa$speculated = $17 >>> 0 < $18 >>> 0 ? $18 : $17;
  $23 = $$sroa$speculated >>> 0 < 2 ? 2 : $$sroa$speculated + 4 & -4;
  if ($23 >>> 0 > 1073741823) _abort(); else $26 = $23;
 } else $26 = 1073741807;
 $27 = __Znwj($26 << 2) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj($27, $29, $4) | 0;
 if ($6 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj($27 + ($4 << 2) | 0, $7, $6) | 0;
 $32 = $3 - $5 | 0;
 $33 = $32 - $4 | 0;
 if ($33 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj($27 + ($4 << 2) + ($6 << 2) | 0, $29 + ($4 << 2) + ($5 << 2) | 0, $33) | 0;
 if (($1 | 0) != 1) __ZdlPv($29);
 HEAP32[$0 >> 2] = $27;
 HEAP32[$11 >> 2] = $26 | -2147483648;
 $41 = $32 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $41;
 HEAP32[$8 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($27 + ($41 << 2) | 0, $8);
 STACKTOP = sp;
 return;
}

function __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i = 0, $$029 = 0, $$030 = 0, $$07$i$i = 0, $13 = 0, $15 = 0, $19 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond32 = 0, label = 0;
 $5 = HEAP8[$0 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $7 = $0 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $5 & 255;
 do if (($6 ? $8 : $9) | 0) {
  if (($1 | 0) == ($2 | 0)) $20 = $8; else {
   $$0$i$i = $2;
   $$07$i$i = $1;
   while (1) {
    $13 = $$0$i$i + -4 | 0;
    if ($$07$i$i >>> 0 >= $13 >>> 0) break;
    $15 = HEAP32[$$07$i$i >> 2] | 0;
    HEAP32[$$07$i$i >> 2] = HEAP32[$13 >> 2];
    HEAP32[$13 >> 2] = $15;
    $$0$i$i = $13;
    $$07$i$i = $$07$i$i + 4 | 0;
   }
   $20 = HEAP32[$7 >> 2] | 0;
  }
  $19 = $6 ? HEAP32[$0 >> 2] | 0 : $0;
  $23 = $2 + -4 | 0;
  $24 = $19 + ($6 ? $20 : $9) | 0;
  $$029 = $1;
  $$030 = $19;
  while (1) {
   $26 = HEAP8[$$030 >> 0] | 0;
   $or$cond32 = $26 << 24 >> 24 > 0 & $26 << 24 >> 24 != 127;
   if ($$029 >>> 0 >= $23 >>> 0) break;
   if ($or$cond32) if (($26 << 24 >> 24 | 0) != (HEAP32[$$029 >> 2] | 0)) {
    label = 10;
    break;
   }
   $$029 = $$029 + 4 | 0;
   $$030 = ($24 - $$030 | 0) > 1 ? $$030 + 1 | 0 : $$030;
  }
  if ((label | 0) == 10) {
   HEAP32[$3 >> 2] = 4;
   break;
  }
  if ($or$cond32) if (((HEAP32[$23 >> 2] | 0) + -1 | 0) >>> 0 >= $26 << 24 >> 24 >>> 0) HEAP32[$3 >> 2] = 4;
 } while (0);
 return;
}

function __ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$sroa$04$0$i = 0, $$sroa$04$1$i = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $29 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $7 = sp + 8 | 0;
 $8 = sp;
 HEAP32[$8 >> 2] = $7 + 400;
 __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc($0 + 8 | 0, $7, $8, $4, $5, $6);
 $11 = HEAP32[$8 >> 2] | 0;
 $$0$i$i = $7;
 $$sroa$04$0$i = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($11 | 0)) break;
  $14 = HEAP32[$$0$i$i >> 2] | 0;
  if (!$$sroa$04$0$i) $$sroa$04$1$i = 0; else {
   $16 = $$sroa$04$0$i + 24 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$$sroa$04$0$i + 28 >> 2] | 0)) {
    $23 = HEAP32[(HEAP32[$$sroa$04$0$i >> 2] | 0) + 52 >> 2] | 0;
    $24 = __ZNSt3__211char_traitsIwE11to_int_typeEw($14) | 0;
    $$0$i$i$i$i = FUNCTION_TABLE_iii[$23 & 63]($$sroa$04$0$i, $24) | 0;
   } else {
    HEAP32[$16 >> 2] = $17 + 4;
    HEAP32[$17 >> 2] = $14;
    $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw($14) | 0;
   }
   $29 = __ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0;
   $$sroa$04$1$i = $29 ? 0 : $$sroa$04$0$i;
  }
  $$0$i$i = $$0$i$i + 4 | 0;
  $$sroa$04$0$i = $$sroa$04$1$i;
 }
 STACKTOP = sp;
 return $$sroa$04$0$i | 0;
}

function __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_5NSSeqIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $15 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $0 + 68 | 0;
 HEAP32[$2 >> 2] = $1;
 $4 = $0 + 72 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 >>> 0 < (HEAP32[$0 + 76 >> 2] | 0) >>> 0) {
  HEAP32[$5 >> 2] = $1;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPN8optframe5NSSeqI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($3, $2);
 if (HEAP8[$0 + 4 >> 0] | 0) {
  $15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16576, 20) | 0;
  $21 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($15, (HEAP32[$4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 2) | 0, 16597, 7) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $21 + (HEAP32[(HEAP32[$21 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $26 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
  $30 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$26 >> 2] | 0) + 28 >> 2] & 63]($26, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($21, $30) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($21) | 0;
 }
 if (!(HEAP8[$0 + 5 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_2NSIS1_iEE($0, $1);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$sroa$04$0$i = 0, $$sroa$04$1$i = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $29 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $7 = sp + 4 | 0;
 $8 = sp;
 HEAP32[$8 >> 2] = $7 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0 + 8 | 0, $7, $8, $4, $5, $6);
 $11 = HEAP32[$8 >> 2] | 0;
 $$0$i$i = $7;
 $$sroa$04$0$i = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($11 | 0)) break;
  $14 = HEAP8[$$0$i$i >> 0] | 0;
  if (!$$sroa$04$0$i) $$sroa$04$1$i = 0; else {
   $16 = $$sroa$04$0$i + 24 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$$sroa$04$0$i + 28 >> 2] | 0)) {
    $23 = HEAP32[(HEAP32[$$sroa$04$0$i >> 2] | 0) + 52 >> 2] | 0;
    $24 = __ZNSt3__211char_traitsIcE11to_int_typeEc($14) | 0;
    $$0$i$i$i$i = FUNCTION_TABLE_iii[$23 & 63]($$sroa$04$0$i, $24) | 0;
   } else {
    HEAP32[$16 >> 2] = $17 + 1;
    HEAP8[$17 >> 0] = $14;
    $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc($14) | 0;
   }
   $29 = __ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
   $$sroa$04$1$i = $29 ? 0 : $$sroa$04$0$i;
  }
  $$0$i$i = $$0$i$i + 1 | 0;
  $$sroa$04$0$i = $$sroa$04$1$i;
 }
 STACKTOP = sp;
 return $$sroa$04$0$i | 0;
}

function __ZNSt3__214random_shuffleINS_11__wrap_iterIPiEEEEvT_S4_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$$i = 0, $$028$in = 0, $$1$i = 0, $14 = 0, $19 = 0, $2 = 0, $29 = 0, $3 = 0, $34 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0, $$028$in$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = HEAP32[$1 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = $3 - $4 | 0;
 $7 = $4;
 if (($5 | 0) <= 4) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__28__rs_getEv($2);
 $9 = $3 + -4 | 0;
 HEAP32[$1 >> 2] = $9;
 if ($7 >>> 0 < $9 >>> 0) {
  $$028$in = $5 >>> 2;
  $14 = $7;
  do {
   $$028$in$looptemp = $$028$in;
   $$028$in = $$028$in + -1 | 0;
   if ($$028$in | 0) {
    if (!$$028$in$looptemp) $$1$i = __ZNSt3__212__rs_defaultclEv($2) | 0; else {
     $19 = 32 - (Math_clz32($$028$in$looptemp | 0) | 0) | 0;
     $$$i = (((-1 >>> (33 - $19 | 0) & $$028$in$looptemp | 0) == 0) << 31 >> 31) + $19 | 0;
     $29 = (($$$i & 31 | 0) != 0 & 1) + ($$$i >>> 5) | 0;
     $34 = $29 >>> 0 > $$$i >>> 0 ? 0 : -1 >>> (32 - (($$$i >>> 0) / ($29 >>> 0) | 0) | 0);
     do $36 = (__ZNSt3__212__rs_defaultclEv($2) | 0) & $34; while ($36 >>> 0 >= $$028$in$looptemp >>> 0);
     $$1$i = $36;
    }
    if ($$1$i | 0) {
     $39 = $14 + ($$1$i << 2) | 0;
     $40 = HEAP32[$14 >> 2] | 0;
     HEAP32[$14 >> 2] = HEAP32[$39 >> 2];
     HEAP32[$39 >> 2] = $40;
    }
   }
   $14 = $14 + 4 | 0;
   HEAP32[$0 >> 2] = $14;
  } while ($14 >>> 0 < $9 >>> 0);
 }
 __ZNSt3__212__rs_defaultD2Ev($2);
 STACKTOP = sp;
 return;
}

function __ZN3HFM18HFMProblemInstanceD2Ev($0) {
 $0 = $0 | 0;
 var $13 = 0, $15 = 0, $16 = 0, $2 = 0, $24 = 0, $26 = 0, $27 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $46 = 0, $47 = 0, $5 = 0, $54 = 0;
 HEAP32[$0 >> 2] = 6140;
 $2 = HEAP32[$0 + 40 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 44 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -8 - $2 | 0) >>> 3) << 3);
  __ZdlPv($2);
 }
 $13 = HEAP32[$0 + 28 >> 2] | 0;
 if ($13 | 0) {
  $15 = $0 + 32 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -8 - $13 | 0) >>> 3) << 3);
  __ZdlPv($13);
 }
 $24 = HEAP32[$0 + 16 >> 2] | 0;
 if ($24 | 0) {
  $26 = $0 + 20 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  if (($27 | 0) != ($24 | 0)) HEAP32[$26 >> 2] = $27 + (~(($27 + -8 - $24 | 0) >>> 3) << 3);
  __ZdlPv($24);
 }
 $34 = $0 + 4 | 0;
 $35 = HEAP32[$34 >> 2] | 0;
 if (!$35) return;
 $37 = $0 + 8 | 0;
 $38 = HEAP32[$37 >> 2] | 0;
 if (($38 | 0) == ($35 | 0)) $54 = $35; else {
  $41 = $38;
  while (1) {
   $40 = $41 + -12 | 0;
   HEAP32[$37 >> 2] = $40;
   $42 = HEAP32[$40 >> 2] | 0;
   if (!$42) $44 = $40; else {
    $46 = $41 + -8 | 0;
    $47 = HEAP32[$46 >> 2] | 0;
    if (($47 | 0) != ($42 | 0)) HEAP32[$46 >> 2] = $47 + (~(($47 + -8 - $42 | 0) >>> 3) << 3);
    __ZdlPv($42);
    $44 = HEAP32[$37 >> 2] | 0;
   }
   if (($44 | 0) == ($35 | 0)) break; else $41 = $44;
  }
  $54 = HEAP32[$34 >> 2] | 0;
 }
 __ZdlPv($54);
 return;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $13 = 0, $14 = 0, $26 = 0, $30 = 0, $35 = 0, $39 = 0, $45 = 0, $47 = 0, $50 = 0, $52 = 0, $54 = 0, $57 = 0, $7 = 0, $9 = 0;
 $7 = HEAP32[$1 + 68 >> 2] | 0;
 if (!$7) {
  $9 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($9);
  ___cxa_throw($9 | 0, 3120, 249);
 }
 $13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 24 >> 2] & 127]($7) | 0;
 $14 = $1 + 64 | 0;
 if (!(HEAP32[$14 >> 2] | 0)) {
  $47 = 0;
  $50 = 0;
  $54 = -1;
  $57 = -1;
 } else if ((($2 | 0) != 0 | ($3 | 0) != 0) & ($13 | 0) < 1) {
  $47 = 0;
  $50 = 0;
  $54 = -1;
  $57 = -1;
 } else if ($4 >>> 0 < 3 & (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 24 >> 2] & 127]($1) | 0) == 0) {
  $26 = HEAP32[$14 >> 2] | 0;
  $30 = ___muldi3($13 | 0, (($13 | 0) < 0) << 31 >> 31 | 0, $2 | 0, $3 | 0) | 0;
  if (!(___fseeko($26, ($13 | 0) > 0 ? $30 : 0, $4) | 0)) {
   $35 = ___ftello(HEAP32[$14 >> 2] | 0) | 0;
   $39 = $1 + 72 | 0;
   $47 = HEAP32[$39 >> 2] | 0;
   $50 = HEAP32[$39 + 4 >> 2] | 0;
   $54 = $35;
   $57 = (($35 | 0) < 0) << 31 >> 31;
  } else {
   $47 = 0;
   $50 = 0;
   $54 = -1;
   $57 = -1;
  }
 } else {
  $47 = 0;
  $50 = 0;
  $54 = -1;
  $57 = -1;
 }
 $45 = $0;
 HEAP32[$45 >> 2] = $47;
 HEAP32[$45 + 4 >> 2] = $50;
 $52 = $0 + 8 | 0;
 HEAP32[$52 >> 2] = $54;
 HEAP32[$52 + 4 >> 2] = $57;
 return;
}

function ___strchrnul($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $13 = 0, $17 = 0, $18 = 0, $2 = 0, $24 = 0, $25 = 0, $31 = 0, $38 = 0, $39 = 0, $7 = 0;
 $2 = $1 & 255;
 L1 : do if (!$2) $$0 = $0 + (_strlen($0) | 0) | 0; else {
  if (!($0 & 3)) $$030$lcssa = $0; else {
   $7 = $1 & 255;
   $$03039 = $0;
   while (1) {
    $10 = HEAP8[$$03039 >> 0] | 0;
    if ($10 << 24 >> 24 == 0 ? 1 : $10 << 24 >> 24 == $7 << 24 >> 24) {
     $$0 = $$03039;
     break L1;
    }
    $13 = $$03039 + 1 | 0;
    if (!($13 & 3)) {
     $$030$lcssa = $13;
     break;
    } else $$03039 = $13;
   }
  }
  $17 = Math_imul($2, 16843009) | 0;
  $18 = HEAP32[$$030$lcssa >> 2] | 0;
  L10 : do if (!(($18 & -2139062144 ^ -2139062144) & $18 + -16843009)) {
   $$02936 = $$030$lcssa;
   $25 = $18;
   while (1) {
    $24 = $25 ^ $17;
    if (($24 & -2139062144 ^ -2139062144) & $24 + -16843009 | 0) {
     $$029$lcssa = $$02936;
     break L10;
    }
    $31 = $$02936 + 4 | 0;
    $25 = HEAP32[$31 >> 2] | 0;
    if (($25 & -2139062144 ^ -2139062144) & $25 + -16843009 | 0) {
     $$029$lcssa = $31;
     break;
    } else $$02936 = $31;
   }
  } else $$029$lcssa = $$030$lcssa; while (0);
  $38 = $1 & 255;
  $$1 = $$029$lcssa;
  while (1) {
   $39 = HEAP8[$$1 >> 0] | 0;
   if ($39 << 24 >> 24 == 0 ? 1 : $39 << 24 >> 24 == $38 << 24 >> 24) {
    $$0 = $$1;
    break;
   } else $$1 = $$1 + 1 | 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZN3HFM30NSIteratorHFMChangeSingleInputD2Ev($0) {
 $0 = $0 | 0;
 var $$012 = 0, $$013 = 0, $11 = 0, $13 = 0, $14 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $34 = 0, $4 = 0, $41 = 0, $44 = 0, $47 = 0, $48 = 0, $5 = 0, $54 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 5664;
 $$012 = (HEAP32[$0 + 36 >> 2] | 0) + 1 | 0;
 $3 = $0 + 24 | 0;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 if (($$012 | 0) < ($5 - $6 >> 2 | 0)) {
  $$013 = $$012;
  $41 = $6;
  $54 = $5;
  while (1) {
   $44 = HEAP32[$41 + ($$013 << 2) >> 2] | 0;
   if (!$44) {
    $47 = $41;
    $48 = $54;
   } else {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$44 >> 2] | 0) + 4 >> 2] & 511]($44);
    $47 = HEAP32[$3 >> 2] | 0;
    $48 = HEAP32[$4 >> 2] | 0;
   }
   $$013 = $$013 + 1 | 0;
   if (($$013 | 0) >= ($48 - $47 >> 2 | 0)) break; else {
    $41 = $47;
    $54 = $48;
   }
  }
 }
 $11 = HEAP32[$0 + 56 >> 2] | 0;
 if ($11 | 0) {
  $13 = $0 + 60 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
  __ZdlPv($11);
 }
 $22 = HEAP32[$0 + 44 >> 2] | 0;
 if ($22 | 0) {
  $24 = $0 + 48 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  if (($25 | 0) != ($22 | 0)) HEAP32[$24 >> 2] = $25 + (~(($25 + -4 - $22 | 0) >>> 2) << 2);
  __ZdlPv($22);
 }
 $32 = HEAP32[$3 >> 2] | 0;
 if (!$32) return;
 $34 = HEAP32[$4 >> 2] | 0;
 if (($34 | 0) != ($32 | 0)) HEAP32[$4 >> 2] = $34 + (~(($34 + -4 - $32 | 0) >>> 2) << 2);
 __ZdlPv($32);
 return;
}

function ___shgetc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi34Z2D = 0, $$sink = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $28 = 0, $34 = 0, $7 = 0, label = 0;
 $1 = $0 + 104 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) label = 3; else if ((HEAP32[$0 + 108 >> 2] | 0) < ($2 | 0)) label = 3; else label = 4;
 if ((label | 0) == 3) {
  $7 = ___uflow($0) | 0;
  if (($7 | 0) < 0) label = 4; else {
   $10 = HEAP32[$1 >> 2] | 0;
   $$phi$trans$insert = $0 + 8 | 0;
   if (!$10) {
    $$pre = HEAP32[$$phi$trans$insert >> 2] | 0;
    $$pre$phi34Z2D = $0 + 108 | 0;
    $$sink = $$pre;
    $25 = $$pre;
    $28 = HEAP32[$0 + 4 >> 2] | 0;
   } else {
    $12 = HEAP32[$$phi$trans$insert >> 2] | 0;
    $14 = HEAP32[$0 + 4 >> 2] | 0;
    $17 = $0 + 108 | 0;
    $19 = $10 - (HEAP32[$17 >> 2] | 0) | 0;
    $21 = $12;
    if (($12 - $14 | 0) < ($19 | 0)) {
     $$pre$phi34Z2D = $17;
     $$sink = $21;
     $25 = $21;
     $28 = $14;
    } else {
     $$pre$phi34Z2D = $17;
     $$sink = $14 + ($19 + -1) | 0;
     $25 = $21;
     $28 = $14;
    }
   }
   HEAP32[$0 + 100 >> 2] = $$sink;
   if ($25 | 0) HEAP32[$$pre$phi34Z2D >> 2] = $25 + 1 - $28 + (HEAP32[$$pre$phi34Z2D >> 2] | 0);
   $34 = $28 + -1 | 0;
   if ((HEAPU8[$34 >> 0] | 0 | 0) == ($7 | 0)) $$0 = $7; else {
    HEAP8[$34 >> 0] = $7;
    $$0 = $7;
   }
  }
 }
 if ((label | 0) == 4) {
  HEAP32[$0 + 100 >> 2] = 0;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((HEAP32[$3 >> 2] | 0) - $6 >> 2 >>> 0 < $1 >>> 0) {
  $13 = ($6 - (HEAP32[$0 >> 2] | 0) >> 2) + $1 | 0;
  $14 = __ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $19 = (HEAP32[$3 >> 2] | 0) - $18 | 0;
   $23 = $19 >> 1;
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($2, $19 >> 2 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, (HEAP32[$5 >> 2] | 0) - $18 >> 2, $0 + 16 | 0);
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($2, $1);
   __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZN3HFM30NSIteratorHFMRemoveSingleInput7currentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $15 = 0, $16 = 0, $21 = 0, $25 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 127]($0) | 0) {
  $6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19415, 31) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $6 + (HEAP32[(HEAP32[$6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
  $15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 63]($11, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($6, $15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($6) | 0;
  $16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19912, 43) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $16 + (HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($16, $25) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($16) | 0;
  _exit(1);
 } else {
  STACKTOP = sp;
  return HEAP32[$0 + 20 >> 2] | 0;
 }
 return 0;
}

function __ZN3HFM30NSIteratorHFMChangeSingleInput7currentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $15 = 0, $16 = 0, $21 = 0, $25 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 127]($0) | 0) {
  $6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19415, 31) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $6 + (HEAP32[(HEAP32[$6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
  $15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 63]($11, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($6, $15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($6) | 0;
  $16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 20148, 41) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $16 + (HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($16, $25) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($16) | 0;
  _exit(1);
 } else {
  STACKTOP = sp;
  return HEAP32[$0 + 20 >> 2] | 0;
 }
 return 0;
}

function __ZN3HFM29NSIteratorNEIGHAddSingleInput7currentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $15 = 0, $16 = 0, $21 = 0, $25 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 127]($0) | 0) {
  $6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19415, 31) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $6 + (HEAP32[(HEAP32[$6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
  $15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 63]($11, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($6, $15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($6) | 0;
  $16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19447, 43) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $16 + (HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($16, $25) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($16) | 0;
  _exit(1);
 } else {
  STACKTOP = sp;
  return HEAP32[$0 + 52 >> 2] | 0;
 }
 return 0;
}

function __ZN3HFM24NSIteratorHFMModifyRules7currentEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $15 = 0, $16 = 0, $21 = 0, $25 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 127]($0) | 0) {
  $6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19415, 31) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $6 + (HEAP32[(HEAP32[$6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
  $15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 63]($11, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($6, $15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($6) | 0;
  $16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 20528, 37) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $16 + (HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($16, $25) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($16) | 0;
  _exit(1);
 } else {
  STACKTOP = sp;
  return HEAP32[$0 + 20 >> 2] | 0;
 }
 return 0;
}

function _fread($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$0 = 0, $$054$ph = 0, $$05460 = 0, $$056$ph = 0, $$05659 = 0, $$57 = 0, $10 = 0, $12 = 0, $18 = 0, $19 = 0, $21 = 0, $28 = 0, $32 = 0, $35 = 0, $39 = 0, $4 = 0, label = 0;
 $4 = Math_imul($2, $1) | 0;
 $$ = ($1 | 0) == 0 ? 0 : $2;
 if ((HEAP32[$3 + 76 >> 2] | 0) > -1) $35 = ___lockfile($3) | 0; else $35 = 0;
 $10 = $3 + 74 | 0;
 $12 = HEAP8[$10 >> 0] | 0;
 HEAP8[$10 >> 0] = $12 + 255 | $12;
 $18 = $3 + 4 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $21 = (HEAP32[$3 + 8 >> 2] | 0) - $19 | 0;
 $$57 = $21 >>> 0 < $4 >>> 0 ? $21 : $4;
 if (($21 | 0) > 0) {
  _memcpy($0 | 0, $19 | 0, $$57 | 0) | 0;
  HEAP32[$18 >> 2] = $19 + $$57;
  $$054$ph = $4 - $$57 | 0;
  $$056$ph = $0 + $$57 | 0;
 } else {
  $$054$ph = $4;
  $$056$ph = $0;
 }
 L7 : do if (!$$054$ph) label = 13; else {
  $28 = $3 + 32 | 0;
  $$05460 = $$054$ph;
  $$05659 = $$056$ph;
  while (1) {
   if (___toread($3) | 0) break;
   $32 = FUNCTION_TABLE_iiii[HEAP32[$28 >> 2] & 63]($3, $$05659, $$05460) | 0;
   if (($32 + 1 | 0) >>> 0 < 2) break;
   $39 = $$05460 - $32 | 0;
   if (!$39) {
    label = 13;
    break L7;
   } else {
    $$05460 = $39;
    $$05659 = $$05659 + $32 | 0;
   }
  }
  if ($35 | 0) ___unlockfile($3);
  $$0 = (($4 - $$05460 | 0) >>> 0) / ($1 >>> 0) | 0;
 } while (0);
 if ((label | 0) == 13) if (!$35) $$0 = $$; else {
  ___unlockfile($3);
  $$0 = $$;
 }
 return $$0 | 0;
}

function __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_12ConstructiveIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $15 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $0 + 20 | 0;
 HEAP32[$2 >> 2] = $1;
 $4 = $0 + 24 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 >>> 0 < (HEAP32[$0 + 28 >> 2] | 0) >>> 0) {
  HEAP32[$5 >> 2] = $1;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPN8optframe12ConstructiveI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($3, $2);
 if (!(HEAP8[$0 + 4 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 $15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16648, 27) | 0;
 $21 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($15, (HEAP32[$4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 2) | 0, 16597, 7) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $21 + (HEAP32[(HEAP32[$21 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $26 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $30 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$26 >> 2] | 0) + 28 >> 2] & 63]($26, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($21, $30) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($21) | 0;
 STACKTOP = sp;
 return;
}

function __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_9EvaluatorIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $15 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = $1;
 $4 = $0 + 12 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 >>> 0 < (HEAP32[$0 + 16 >> 2] | 0) >>> 0) {
  HEAP32[$5 >> 2] = $1;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPN8optframe9EvaluatorI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($3, $2);
 if (!(HEAP8[$0 + 4 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 $15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16623, 24) | 0;
 $21 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($15, (HEAP32[$4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 2) | 0, 16597, 7) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $21 + (HEAP32[(HEAP32[$21 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $26 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $30 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$26 >> 2] | 0) + 28 >> 2] & 63]($26, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($21, $30) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($21) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $19 = 0, $2 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $33 = 0, $4 = 0, $5 = 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 - $5 >> 2 >>> 0 >= $1 >>> 0) {
  _memset($5 | 0, 0, $1 << 2 | 0) | 0;
  HEAP32[$4 >> 2] = $5 + ($1 << 2);
  return;
 }
 $11 = HEAP32[$0 >> 2] | 0;
 $12 = $5 - $11 | 0;
 $13 = $12 >> 2;
 $14 = $13 + $1 | 0;
 if ($14 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $16 = $3 - $11 | 0;
 $19 = $16 >> 1;
 $$sroa$speculated$$i = $16 >> 2 >>> 0 < 536870911 ? ($19 >>> 0 < $14 >>> 0 ? $14 : $19) : 1073741823;
 do if (!$$sroa$speculated$$i) $27 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $23 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($23, 15810);
  HEAP32[$23 >> 2] = 14216;
  ___cxa_throw($23 | 0, 3104, 246);
 } else {
  $27 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $26 = $27 + ($13 << 2) | 0;
 _memset($26 | 0, 0, $1 << 2 | 0) | 0;
 $33 = $26 + (0 - $13 << 2) | 0;
 if (($12 | 0) > 0) _memcpy($33 | 0, $11 | 0, $12 | 0) | 0;
 HEAP32[$0 >> 2] = $33;
 HEAP32[$4 >> 2] = $26 + ($1 << 2);
 HEAP32[$2 >> 2] = $27 + ($$sroa$speculated$$i << 2);
 if (!$11) return;
 __ZdlPv($11);
 return;
}

function __ZN8optframe12CheckCommandI6RepHFMiE3addERNS_2NSIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $15 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $0 + 56 | 0;
 HEAP32[$2 >> 2] = $1;
 $4 = $0 + 60 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 >>> 0 < (HEAP32[$0 + 64 >> 2] | 0) >>> 0) {
  HEAP32[$5 >> 2] = $1;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPN8optframe2NSI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($3, $2);
 if (!(HEAP8[$0 + 4 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 $15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 16605, 17) | 0;
 $21 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($15, (HEAP32[$4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 2) | 0, 16597, 7) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $21 + (HEAP32[(HEAP32[$21 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $26 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $30 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$26 >> 2] | 0) + 28 >> 2] & 63]($26, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($21, $30) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($21) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIdNS_9allocatorIdEEE8__appendEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $19 = 0, $2 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $33 = 0, $4 = 0, $5 = 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 - $5 >> 3 >>> 0 >= $1 >>> 0) {
  _memset($5 | 0, 0, $1 << 3 | 0) | 0;
  HEAP32[$4 >> 2] = $5 + ($1 << 3);
  return;
 }
 $11 = HEAP32[$0 >> 2] | 0;
 $12 = $5 - $11 | 0;
 $13 = $12 >> 3;
 $14 = $13 + $1 | 0;
 if ($14 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $16 = $3 - $11 | 0;
 $19 = $16 >> 2;
 $$sroa$speculated$$i = $16 >> 3 >>> 0 < 268435455 ? ($19 >>> 0 < $14 >>> 0 ? $14 : $19) : 536870911;
 do if (!$$sroa$speculated$$i) $27 = 0; else if ($$sroa$speculated$$i >>> 0 > 536870911) {
  $23 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($23, 15810);
  HEAP32[$23 >> 2] = 14216;
  ___cxa_throw($23 | 0, 3104, 246);
 } else {
  $27 = __Znwj($$sroa$speculated$$i << 3) | 0;
  break;
 } while (0);
 $26 = $27 + ($13 << 3) | 0;
 _memset($26 | 0, 0, $1 << 3 | 0) | 0;
 $33 = $26 + (0 - $13 << 3) | 0;
 if (($12 | 0) > 0) _memcpy($33 | 0, $11 | 0, $12 | 0) | 0;
 HEAP32[$0 >> 2] = $33;
 HEAP32[$4 >> 2] = $26 + ($1 << 3);
 HEAP32[$2 >> 2] = $27 + ($$sroa$speculated$$i << 3);
 if (!$11) return;
 __ZdlPv($11);
 return;
}

function __ZNSt3__26vectorIbNS_9allocatorIbEEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $14 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $5 = $0 + 8 | 0;
 if (HEAP32[$5 >> 2] << 5 >>> 0 >= $1 >>> 0) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$2 >> 2] = 0;
 $9 = $2 + 4 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $2 + 8 | 0;
 HEAP32[$10 >> 2] = 0;
 if (($1 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($2);
 $14 = (($1 + -1 | 0) >>> 5) + 1 | 0;
 HEAP32[$2 >> 2] = __Znwj($14 << 2) | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$10 >> 2] = $14;
 $17 = HEAP32[$0 >> 2] | 0;
 HEAP32[$3 >> 2] = $17;
 HEAP32[$3 + 4 >> 2] = 0;
 $19 = $0 + 4 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 HEAP32[$4 >> 2] = $17 + ($20 >>> 5 << 2);
 HEAP32[$4 + 4 >> 2] = $20 & 31;
 __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($2, $3, $4);
 $26 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$2 >> 2] = $26;
 $28 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$9 >> 2] = $28;
 $30 = HEAP32[$5 >> 2] | 0;
 HEAP32[$5 >> 2] = HEAP32[$10 >> 2];
 HEAP32[$10 >> 2] = $30;
 if ($26 | 0) __ZdlPv($26);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS_4pairIdiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $28 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 4;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 3;
 $$sroa$speculated$$i = $11 >> 4 >>> 0 < 134217727 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 268435455;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 268435455) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 4) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 4) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$21 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$21 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$21 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 $28 = $21 + (0 - $6 << 4) | 0;
 if (($5 | 0) > 0) _memcpy($28 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $28;
 HEAP32[$2 >> 2] = $21 + 16;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 4);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $28 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 4;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 3;
 $$sroa$speculated$$i = $11 >> 4 >>> 0 < 134217727 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 268435455;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 268435455) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 4) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 4) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$21 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$21 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$21 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 $28 = $21 + (0 - $6 << 4) | 0;
 if (($5 | 0) > 0) _memcpy($28 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $28;
 HEAP32[$2 >> 2] = $21 + 16;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 4);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $38 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp;
 if ((-18 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $25 = HEAP32[$0 >> 2] | 0; else $25 = $0;
 if ($1 >>> 0 < 2147483623) {
  $16 = $2 + $1 | 0;
  $17 = $1 << 1;
  $$sroa$speculated = $16 >>> 0 < $17 >>> 0 ? $17 : $16;
  $22 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $22 = -17;
 $23 = __Znwj($22) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($23, $25, $4) | 0;
 if ($6 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($23 + $4 | 0, $7, $6) | 0;
 $28 = $3 - $5 | 0;
 $29 = $28 - $4 | 0;
 if ($29 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($23 + $4 + $6 | 0, $25 + $4 + $5 | 0, $29) | 0;
 if (($1 | 0) != 10) __ZdlPv($25);
 HEAP32[$0 >> 2] = $23;
 HEAP32[$0 + 8 >> 2] = $22 | -2147483648;
 $38 = $28 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $38;
 HEAP8[$8 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($23 + $38 | 0, $8);
 STACKTOP = sp;
 return;
}

function __ZNK3HFM23MoveNEIGHAddSingleInput5printEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $16 = 0, $2 = 0, $20 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19638, 55) | 0;
 $6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($2, HEAP32[$0 + 20 >> 2] | 0) | 0, 19694, 8) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($6, HEAP32[$0 + 24 >> 2] | 0) | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZN8optframelsIdEERNSt3__213basic_ostreamIcNS1_11char_traitsIcEEEES6_RKNS1_6vectorIT_NS1_9allocatorIS8_EEEE(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19703, 18) | 0, $0 + 28 | 0) | 0, 19722, 2) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, 33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) | 0);
 $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(33664, $20) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(33664) | 0;
 STACKTOP = sp;
 return;
}

function __ZN3HFM13ForecastClass31addSolToParetoWithParetoManagerERN8optframe6ParetoI6RepHFMiEERKNS1_8SolutionIS3_iEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $12 = 0, $13 = 0, $14 = 0, $17 = 0, $19 = 0, $26 = 0, $28 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp;
 $5 = HEAP32[$0 + 132 >> 2] | 0;
 HEAP32[$3 >> 2] = 6228;
 HEAP32[$3 + 4 >> 2] = $5;
 $7 = $3 + 8 | 0;
 HEAP32[$7 >> 2] = 6248;
 $8 = $3 + 12 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $3 + 16 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$3 + 20 >> 2] = 0;
 HEAP32[$3 + 24 >> 2] = $5;
 $12 = $3 + 28 | 0;
 $13 = $3 + 32 | 0;
 HEAP32[$13 >> 2] = 0;
 $14 = $3 + 36 | 0;
 HEAP32[$14 >> 2] = 0;
 HEAP32[$3 + 40 >> 2] = 0;
 HEAP32[$3 + 44 >> 2] = $5;
 HEAP32[$12 >> 2] = 6276;
 __ZN8optframe13paretoManagerI6RepHFMiE11addSolutionERNS_6ParetoIS1_iEERKNS_8SolutionIS1_iEE($3, $1, $2) | 0;
 HEAP32[$3 >> 2] = 6228;
 HEAP32[$12 >> 2] = 6248;
 $17 = HEAP32[$13 >> 2] | 0;
 if ($17 | 0) {
  $19 = HEAP32[$14 >> 2] | 0;
  if (($19 | 0) != ($17 | 0)) HEAP32[$14 >> 2] = $19 + (~(($19 + -4 - $17 | 0) >>> 2) << 2);
  __ZdlPv($17);
 }
 HEAP32[$7 >> 2] = 6248;
 $26 = HEAP32[$8 >> 2] | 0;
 if (!$26) {
  STACKTOP = sp;
  return;
 }
 $28 = HEAP32[$9 >> 2] | 0;
 if (($28 | 0) != ($26 | 0)) HEAP32[$9 >> 2] = $28 + (~(($28 + -4 - $26 | 0) >>> 2) << 2);
 __ZdlPv($26);
 STACKTOP = sp;
 return;
}

function ___fwritex($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$038 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $10 = 0, $12 = 0, $14 = 0, $22 = 0, $28 = 0, $3 = 0, $31 = 0, $4 = 0, $9 = 0, label = 0;
 $3 = $2 + 16 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) if (!(___towrite($2) | 0)) {
  $12 = HEAP32[$3 >> 2] | 0;
  label = 5;
 } else $$1 = 0; else {
  $12 = $4;
  label = 5;
 }
 L5 : do if ((label | 0) == 5) {
  $9 = $2 + 20 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $14 = $10;
  if (($12 - $10 | 0) >>> 0 < $1 >>> 0) {
   $$1 = FUNCTION_TABLE_iiii[HEAP32[$2 + 36 >> 2] & 63]($2, $0, $1) | 0;
   break;
  }
  L10 : do if ((HEAP8[$2 + 75 >> 0] | 0) > -1) {
   $$038 = $1;
   while (1) {
    if (!$$038) {
     $$139 = 0;
     $$141 = $0;
     $$143 = $1;
     $31 = $14;
     break L10;
    }
    $22 = $$038 + -1 | 0;
    if ((HEAP8[$0 + $22 >> 0] | 0) == 10) break; else $$038 = $22;
   }
   $28 = FUNCTION_TABLE_iiii[HEAP32[$2 + 36 >> 2] & 63]($2, $0, $$038) | 0;
   if ($28 >>> 0 < $$038 >>> 0) {
    $$1 = $28;
    break L5;
   }
   $$139 = $$038;
   $$141 = $0 + $$038 | 0;
   $$143 = $1 - $$038 | 0;
   $31 = HEAP32[$9 >> 2] | 0;
  } else {
   $$139 = 0;
   $$141 = $0;
   $$143 = $1;
   $31 = $14;
  } while (0);
  _memcpy($31 | 0, $$141 | 0, $$143 | 0) | 0;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + $$143;
  $$1 = $$139 + $$143 | 0;
 } while (0);
 return $$1 | 0;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEEC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $17 = 0, $18 = 0, $19 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0);
 HEAP32[$0 >> 2] = 3328;
 HEAP32[$0 + 32 >> 2] = 0;
 HEAP32[$0 + 36 >> 2] = 0;
 HEAP32[$0 + 40 >> 2] = 0;
 $5 = $0 + 52 | 0;
 $6 = $0 + 68 | 0;
 $7 = $0 + 98 | 0;
 dest = $5;
 stop = dest + 44 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$5 + 44 >> 1] = 0;
 HEAP8[$5 + 46 >> 0] = 0;
 $8 = $0 + 4 | 0;
 __ZNSt3__26localeC2ERKS0_($1, $8);
 $9 = __ZNKSt3__26locale9has_facetERNS0_2idE($1, 36328) | 0;
 __ZNSt3__26localeD2Ev($1);
 if (!$9) {
  $17 = HEAP32[$0 >> 2] | 0;
  $18 = $17 + 12 | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  FUNCTION_TABLE_iiii[$19 & 63]($0, 0, 4096) | 0;
  STACKTOP = sp;
  return;
 }
 __ZNSt3__26localeC2ERKS0_($1, $8);
 HEAP32[$6 >> 2] = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 36328) | 0;
 __ZNSt3__26localeD2Ev($1);
 $11 = HEAP32[$6 >> 2] | 0;
 HEAP8[$7 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 127]($11) | 0) & 1;
 $17 = HEAP32[$0 >> 2] | 0;
 $18 = $17 + 12 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 FUNCTION_TABLE_iiii[$19 & 63]($0, 0, 4096) | 0;
 STACKTOP = sp;
 return;
}

function __ZN8optframe9EvaluatorI6RepHFMiE10reevaluateERNS_10EvaluationERKS1_PKi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$pre$phiZ2D = 0, $27 = 0, $34 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $4 = sp;
 $5 = $1 + 56 | 0;
 if (!(HEAP8[$5 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 76 >> 2] & 31]($4, $0, $2, $3);
 if (($4 | 0) == ($1 | 0)) $$pre$phiZ2D = $4 + 40 | 0; else {
  HEAPF64[$1 + 24 >> 3] = +HEAPF64[$4 + 24 >> 3];
  HEAPF64[$1 + 32 >> 3] = +HEAPF64[$4 + 32 >> 3];
  HEAP8[$5 >> 0] = HEAP8[$4 + 56 >> 0] | 0;
  HEAP8[$1 + 57 >> 0] = HEAP8[$4 + 57 >> 0] | 0;
  HEAPF64[$1 + 64 >> 3] = +HEAPF64[$4 + 64 >> 3];
  $27 = $4 + 40 | 0;
  __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($1 + 40 | 0, HEAP32[$27 >> 2] | 0, HEAP32[$4 + 44 >> 2] | 0);
  HEAP32[$1 + 52 >> 2] = HEAP32[$4 + 52 >> 2];
  $$pre$phiZ2D = $27;
 }
 HEAP32[$4 >> 2] = 4920;
 $34 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if ($34 | 0) {
  $36 = $4 + 44 | 0;
  $37 = HEAP32[$36 >> 2] | 0;
  if (($37 | 0) != ($34 | 0)) HEAP32[$36 >> 2] = $37 + (~(($37 + -16 - $34 | 0) >>> 4) << 4);
  __ZdlPv($34);
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__2plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$i$i = 0, $12 = 0, $13 = 0, $17 = 0, $18 = 0, $24 = 0, $25 = 0, $3 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $6 = $1 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $12 = $7 << 24 >> 24 < 0 ? HEAP32[$1 + 4 >> 2] | 0 : $7 & 255;
 $13 = __ZNSt3__211char_traitsIcE6lengthEPKc($2) | 0;
 $17 = (HEAP8[$6 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1;
 $18 = $12 + $13 | 0;
 if ($18 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($18 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $12;
  $$0$i = $0;
 } else {
  $24 = $18 + 16 & -16;
  $25 = __Znwj($24) | 0;
  HEAP32[$0 >> 2] = $25;
  HEAP32[$0 + 8 >> 2] = $24 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $12;
  $$0$i = $25;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i, $17, $12) | 0;
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0$i + $12 | 0, $3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $2, $13) | 0;
 STACKTOP = sp;
 return;
}

function __ZN3HFM30NSIteratorHFMRemoveSingleInputD0Ev($0) {
 $0 = $0 | 0;
 var $$04$i = 0, $$05$i = 0, $$cast$i = 0, $$cast6$i = 0, $$lcssa$i = 0, $$pre$i = 0, $10 = 0, $12 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 5500;
 $$04$i = (HEAP32[$0 + 36 >> 2] | 0) + 1 | 0;
 $3 = $0 + 24 | 0;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $$cast$i = $6;
 $10 = $5;
 if (($$04$i | 0) < ($5 - $6 >> 2 | 0)) {
  $$05$i = $$04$i;
  $20 = $$cast$i;
  $32 = $10;
  $33 = $6;
  $34 = $5;
  while (1) {
   $21 = HEAP32[$20 + ($$05$i << 2) >> 2] | 0;
   if (!$21) {
    $24 = $33;
    $25 = $34;
    $35 = $32;
   } else {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 4 >> 2] & 511]($21);
    $$pre$i = HEAP32[$4 >> 2] | 0;
    $24 = HEAP32[$3 >> 2] | 0;
    $25 = $$pre$i;
    $35 = $$pre$i;
   }
   $$05$i = $$05$i + 1 | 0;
   $$cast6$i = $24;
   if (($$05$i | 0) >= ($25 - $24 >> 2 | 0)) {
    $$lcssa$i = $$cast6$i;
    $12 = $35;
    break;
   } else {
    $20 = $$cast6$i;
    $32 = $35;
    $33 = $24;
    $34 = $25;
   }
  }
 } else {
  $$lcssa$i = $$cast$i;
  $12 = $10;
 }
 if (!$$lcssa$i) {
  __ZdlPv($0);
  return;
 }
 if (($12 | 0) != ($$lcssa$i | 0)) HEAP32[$4 >> 2] = $12 + (~(($12 + -4 - $$lcssa$i | 0) >>> 2) << 2);
 __ZdlPv($$lcssa$i);
 __ZdlPv($0);
 return;
}

function __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $25 = 0, $30 = 0, $31 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 3;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 2;
 $$sroa$speculated$$i = $11 >> 3 >>> 0 < 268435455 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 536870911;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 536870911) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 3) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 3) | 0;
 $25 = $1;
 $30 = HEAP32[$25 + 4 >> 2] | 0;
 $31 = $21;
 HEAP32[$31 >> 2] = HEAP32[$25 >> 2];
 HEAP32[$31 + 4 >> 2] = $30;
 $38 = $21 + (0 - $6 << 3) | 0;
 if (($5 | 0) > 0) _memcpy($38 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $38;
 HEAP32[$2 >> 2] = $21 + 8;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 3);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZN3HFM12HFMEvaluator11evaluateAllERK6RepHFMiPNSt3__26vectorINS5_IdNS4_9allocatorIdEEEENS6_IS8_EEEE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $29 = 0, $31 = 0, $33 = 0, $34 = 0;
 if (!$3) $$0 = (HEAP32[$0 + 104 >> 2] | 0) + 4 | 0; else $$0 = $3;
 $12 = __ZN3HFM12HFMEvaluator29generateSWMultiRoundForecastsERK6RepHFMRKNSt3__26vectorINS5_IdNS4_9allocatorIdEEEENS6_IS8_EEEEi($0, $1, $$0, HEAP32[(HEAP32[$0 + 108 >> 2] | 0) + 8 >> 2] | 0) | 0;
 $14 = $12 + 4 | 0;
 $16 = __ZN3HFM12HFMEvaluator11getAccuracyERKNSt3__26vectorIdNS1_9allocatorIdEEEES7_i($0, HEAP32[$12 >> 2] | 0, HEAP32[$14 >> 2] | 0, $2) | 0;
 $17 = HEAP32[$12 >> 2] | 0;
 if ($17 | 0) {
  $19 = HEAP32[$17 >> 2] | 0;
  if ($19 | 0) {
   $21 = $17 + 4 | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   if (($22 | 0) != ($19 | 0)) HEAP32[$21 >> 2] = $22 + (~(($22 + -8 - $19 | 0) >>> 3) << 3);
   __ZdlPv($19);
  }
  __ZdlPv($17);
 }
 $29 = HEAP32[$14 >> 2] | 0;
 if (!$29) {
  __ZdlPv($12);
  return $16 | 0;
 }
 $31 = HEAP32[$29 >> 2] | 0;
 if (!$31) {
  __ZdlPv($29);
  __ZdlPv($12);
  return $16 | 0;
 }
 $33 = $29 + 4 | 0;
 $34 = HEAP32[$33 >> 2] | 0;
 if (($34 | 0) != ($31 | 0)) HEAP32[$33 >> 2] = $34 + (~(($34 + -8 - $31 | 0) >>> 3) << 3);
 __ZdlPv($31);
 __ZdlPv($29);
 __ZdlPv($12);
 return $16 | 0;
}

function __ZN3HFM24NSIteratorHFMModifyRulesD0Ev($0) {
 $0 = $0 | 0;
 var $$04$i = 0, $$05$i = 0, $$cast$i = 0, $$cast6$i = 0, $$lcssa$i = 0, $$pre$i = 0, $10 = 0, $12 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 5892;
 $$04$i = (HEAP32[$0 + 36 >> 2] | 0) + 1 | 0;
 $3 = $0 + 24 | 0;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $$cast$i = $6;
 $10 = $5;
 if (($$04$i | 0) < ($5 - $6 >> 2 | 0)) {
  $$05$i = $$04$i;
  $20 = $$cast$i;
  $32 = $10;
  $33 = $6;
  $34 = $5;
  while (1) {
   $21 = HEAP32[$20 + ($$05$i << 2) >> 2] | 0;
   if (!$21) {
    $24 = $33;
    $25 = $34;
    $35 = $32;
   } else {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 4 >> 2] & 511]($21);
    $$pre$i = HEAP32[$4 >> 2] | 0;
    $24 = HEAP32[$3 >> 2] | 0;
    $25 = $$pre$i;
    $35 = $$pre$i;
   }
   $$05$i = $$05$i + 1 | 0;
   $$cast6$i = $24;
   if (($$05$i | 0) >= ($25 - $24 >> 2 | 0)) {
    $$lcssa$i = $$cast6$i;
    $12 = $35;
    break;
   } else {
    $20 = $$cast6$i;
    $32 = $35;
    $33 = $24;
    $34 = $25;
   }
  }
 } else {
  $$lcssa$i = $$cast$i;
  $12 = $10;
 }
 if (!$$lcssa$i) {
  __ZdlPv($0);
  return;
 }
 if (($12 | 0) != ($$lcssa$i | 0)) HEAP32[$4 >> 2] = $12 + (~(($12 + -4 - $$lcssa$i | 0) >>> 2) << 2);
 __ZdlPv($$lcssa$i);
 __ZdlPv($0);
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = sp + 4 | 0;
 HEAP32[$2 >> 2] = $1;
 $4 = $0 + 8 | 0;
 $5 = $4 + 3 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) {
  $$018 = HEAP32[$0 + 4 >> 2] | 0;
  $$019 = (HEAP32[$4 >> 2] & 2147483647) + -1 | 0;
 } else {
  $$018 = $6 & 255;
  $$019 = 1;
 }
 if (($$018 | 0) == ($$019 | 0)) {
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($0, $$019, 1, $$019, $$019, 0, 0);
  $17 = $$019 + 1 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) {
   $23 = $17;
   label = 8;
  } else {
   $20 = $17;
   label = 7;
  }
 } else {
  $18 = $$018 + 1 | 0;
  if ($7) {
   $23 = $18;
   label = 8;
  } else {
   $20 = $18;
   label = 7;
  }
 }
 if ((label | 0) == 7) {
  HEAP8[$5 >> 0] = $20;
  $$pn = $0;
 } else if ((label | 0) == 8) {
  $21 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 + 4 >> 2] = $23;
  $$pn = $21;
 }
 $$0 = $$pn + ($$018 << 2) | 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$0, $2);
 HEAP32[$3 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$0 + 4 | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $14 = 0, $21 = 0, $27 = 0, $28 = 0, $37 = 0, $39 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] & 127]($7) | 0;
 $14 = HEAP8[$11 + 8 + 3 >> 0] | 0;
 if ($14 << 24 >> 24 < 0) $28 = HEAP32[$11 + 4 >> 2] | 0; else $28 = $14 & 255;
 $21 = HEAP8[$11 + 20 + 3 >> 0] | 0;
 if ($21 << 24 >> 24 < 0) $27 = HEAP32[$11 + 16 >> 2] | 0; else $27 = $21 & 255;
 do if (($28 | 0) == (0 - $27 | 0)) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4; else {
  HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
  $37 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 24 | 0, $5, $4, 0) | 0) - $11 | 0;
  $39 = HEAP32[$1 >> 2] | 0;
  if (($39 | 0) == 12 & ($37 | 0) == 0) {
   HEAP32[$1 >> 2] = 0;
   break;
  }
  if (($39 | 0) < 12 & ($37 | 0) == 12) HEAP32[$1 >> 2] = $39 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $13 = 0, $20 = 0, $26 = 0, $27 = 0, $36 = 0, $38 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] & 127]($7) | 0;
 $13 = HEAP8[$11 + 11 >> 0] | 0;
 if ($13 << 24 >> 24 < 0) $27 = HEAP32[$11 + 4 >> 2] | 0; else $27 = $13 & 255;
 $20 = HEAP8[$11 + 12 + 11 >> 0] | 0;
 if ($20 << 24 >> 24 < 0) $26 = HEAP32[$11 + 16 >> 2] | 0; else $26 = $20 & 255;
 do if (($27 | 0) == (0 - $26 | 0)) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4; else {
  HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
  $36 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 24 | 0, $5, $4, 0) | 0) - $11 | 0;
  $38 = HEAP32[$1 >> 2] | 0;
  if (($38 | 0) == 12 & ($36 | 0) == 0) {
   HEAP32[$1 >> 2] = 0;
   break;
  }
  if (($38 | 0) < 12 & ($36 | 0) == 12) HEAP32[$1 >> 2] = $38 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = sp + 1 | 0;
 HEAP8[$2 >> 0] = $1;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $$018 = HEAP32[$0 + 4 >> 2] | 0;
  $$019 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $$018 = $5 & 255;
  $$019 = 10;
 }
 if (($$018 | 0) == ($$019 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $$019, 1, $$019, $$019, 0, 0);
  $17 = $$019 + 1 | 0;
  if ((HEAP8[$4 >> 0] | 0) < 0) {
   $23 = $17;
   label = 8;
  } else {
   $20 = $17;
   label = 7;
  }
 } else {
  $18 = $$018 + 1 | 0;
  if ($6) {
   $23 = $18;
   label = 8;
  } else {
   $20 = $18;
   label = 7;
  }
 }
 if ((label | 0) == 7) {
  HEAP8[$4 >> 0] = $20;
  $$pn = $0;
 } else if ((label | 0) == 8) {
  $21 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 + 4 >> 2] = $23;
  $$pn = $21;
 }
 $$0 = $$pn + $$018 | 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0, $2);
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + 1 | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $14 = 0, $18 = 0, $2 = 0, $23 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 24 | 0;
 $$byval_copy = sp + 20 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 12 | 0;
 $4 = sp + 28 | 0;
 $5 = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($4, $0, 0);
 if (HEAP8[$4 >> 0] | 0) {
  HEAP32[$5 >> 2] = 0;
  __ZNKSt3__28ios_base6getlocEv($7, $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $14 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 34560) | 0;
  $18 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $23 = HEAP32[(HEAP32[$14 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$2 >> 2] = HEAP32[$18 + 24 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
  FUNCTION_TABLE_iiiiiii[$23 & 63]($14, $$byval_copy, $$byval_copy1, $18, $5, $6) | 0;
  __ZNSt3__26localeD2Ev($7);
  HEAP32[$1 >> 2] = HEAP32[$6 >> 2];
  $28 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj($28, HEAP32[$28 + 16 >> 2] | HEAP32[$5 >> 2]);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN3HFM17ProblemParametersC2Ei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $4 = 0, $5 = 0, $6 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 3896;
 $4 = $0 + 28 | 0;
 $5 = $0 + 40 | 0;
 $6 = $0 + 44 | 0;
 HEAP8[$0 + 80 >> 0] = 0;
 HEAP8[$0 + 81 >> 0] = 0;
 HEAP8[$0 + 82 >> 0] = 0;
 $10 = $0 + 88 | 0;
 $11 = $0 + 84 | 0;
 dest = $0 + 16 | 0;
 stop = dest + 60 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$2 >> 2] = 0;
 if (!$1) {
  $14 = 0;
  $15 = 0;
 } else {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEjRKi($4, $1, $2);
  $14 = HEAP32[$5 >> 2] | 0;
  $15 = HEAP32[$6 >> 2] | 0;
 }
 HEAP32[$2 >> 2] = 0;
 $16 = $15 - $14 >> 2;
 $18 = $14;
 $19 = $15;
 if ($16 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEjRKi($5, $1 - $16 | 0, $2); else if ($16 >>> 0 > $1 >>> 0) {
  $22 = $18 + ($1 << 2) | 0;
  if (($19 | 0) != ($22 | 0)) HEAP32[$6 >> 2] = $19 + (~(($19 + -4 - $22 | 0) >>> 2) << 2);
 }
 __ZNSt3__26vectorIbNS_9allocatorIbEEE6resizeEjb($10, $1, 0);
 STACKTOP = sp;
 return;
}

function __ZN8optframe22RandGenMersenneTwister4randEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$ = 0, $$013$i$i = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $20 = 0, $27 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $41 = 0, $$013$i$i$looptemp = 0;
 $$ = ($1 | 0) < 0 ? 0 - $1 | 0 : $1;
 $4 = $0 + 40 | 0;
 if (!(HEAP8[$4 >> 0] | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 511]($0);
  HEAP8[$4 >> 0] = 1;
 }
 $10 = $0 + 2540 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if (!$11) {
  $$013$i$i = 0;
  do {
   $13 = $0 + 44 + ($$013$i$i << 2) | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   $$013$i$i$looptemp = $$013$i$i;
   $$013$i$i = $$013$i$i + 1 | 0;
   $17 = ($$013$i$i | 0) == 624;
   $20 = HEAP32[$0 + 44 + (($17 ? 0 : $$013$i$i) << 2) >> 2] ^ 2147483647;
   $27 = ($20 + ($14 ^ -2147483648) | 0) >>> 1 ^ HEAP32[$0 + 44 + (((($$013$i$i$looptemp + 397 | 0) >>> 0) % 624 | 0) << 2) >> 2];
   HEAP32[$13 >> 2] = ($20 + $14 & 1 | 0) == 0 ? $27 : $27 ^ -1727483681;
  } while (!$17);
  $32 = HEAP32[$10 >> 2] | 0;
 } else $32 = $11;
 $33 = HEAP32[$0 + 44 + ($32 << 2) >> 2] | 0;
 $35 = $33 >>> 11 ^ $33;
 $38 = $35 << 7 & -1658038656 ^ $35;
 $41 = $38 << 15 & -272236544 ^ $38;
 HEAP32[$10 >> 2] = (($32 + 1 | 0) >>> 0) % 624 | 0;
 return (($41 >>> 18 ^ $41) >>> 0) % ($$ >>> 0) | 0 | 0;
}

function __ZNSt3__26vectorIPN8optframe13MOLocalSearchI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIPN8optframe12ConstructiveI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIPN8optframe11LocalSearchI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZN3HFM12HFMEvaluator8evaluateERK6RepHFMPKi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $14 = 0, $15 = 0, $17 = 0.0, $20 = 0, $29 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 $4 = $1 + 116 | 0;
 $6 = __ZN3HFM12HFMEvaluator11evaluateAllERK6RepHFMiPNSt3__26vectorINS5_IdNS4_9allocatorIdEEEENS6_IS8_EEEE($1, $2, HEAP32[$4 >> 2] | 0, 0) | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = $6 + 4 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = HEAP32[$6 >> 2] | 0;
 $14 = $10;
 $15 = $9;
 if ($9 - $10 >> 3 >>> 0 <= $7 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($6);
 $17 = +HEAPF64[$14 + ($7 << 3) >> 3];
 if ($6 | 0) {
  $20 = $10;
  if ($10 | 0) {
   if (($15 | 0) != ($14 | 0)) HEAP32[$8 >> 2] = $15 + (~(($15 + -8 - $10 | 0) >>> 3) << 3);
   __ZdlPv($20);
  }
  __ZdlPv($6);
 }
 $29 = $0 + 12 | 0;
 HEAP8[$29 + 4 >> 0] = 0;
 HEAP32[$0 + 8 >> 2] = 2;
 HEAP8[$0 + 15 >> 0] = 0;
 HEAP8[$29 >> 0] = 1;
 HEAP8[$0 + 13 >> 0] = 1;
 HEAP8[$0 + 14 >> 0] = 0;
 HEAP32[$0 >> 2] = 4920;
 HEAPF64[$0 + 24 >> 3] = $17;
 HEAP32[$0 + 40 >> 2] = 0;
 HEAP32[$0 + 44 >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = 0;
 HEAPF64[$0 + 64 >> 3] = 1.0;
 HEAPF64[$0 + 32 >> 3] = 0.0;
 HEAP32[$0 + 52 >> 2] = 2;
 HEAP8[$0 + 56 >> 0] = 0;
 HEAP8[$0 + 57 >> 0] = 0;
 return;
}

function __ZNSt3__26vectorIPN3HFM24MoveHFMRemoveSingleInputENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIPN3HFM24MoveHFMChangeSingleInputENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIPN8optframe9EvaluatorI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIPN8optframe7NGESIndI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIPN8optframe8SolutionI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZN3HFM30NSIteratorHFMRemoveSingleInputD2Ev($0) {
 $0 = $0 | 0;
 var $$04 = 0, $$05 = 0, $$cast = 0, $$cast6 = 0, $$lcssa = 0, $$pre = 0, $10 = 0, $12 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 5500;
 $$04 = (HEAP32[$0 + 36 >> 2] | 0) + 1 | 0;
 $3 = $0 + 24 | 0;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $$cast = $6;
 $10 = $5;
 if (($$04 | 0) < ($5 - $6 >> 2 | 0)) {
  $$05 = $$04;
  $20 = $$cast;
  $32 = $10;
  $33 = $6;
  $34 = $5;
  while (1) {
   $21 = HEAP32[$20 + ($$05 << 2) >> 2] | 0;
   if (!$21) {
    $24 = $33;
    $25 = $34;
    $35 = $32;
   } else {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 4 >> 2] & 511]($21);
    $$pre = HEAP32[$4 >> 2] | 0;
    $24 = HEAP32[$3 >> 2] | 0;
    $25 = $$pre;
    $35 = $$pre;
   }
   $$05 = $$05 + 1 | 0;
   $$cast6 = $24;
   if (($$05 | 0) >= ($25 - $24 >> 2 | 0)) {
    $$lcssa = $$cast6;
    $12 = $35;
    break;
   } else {
    $20 = $$cast6;
    $32 = $35;
    $33 = $24;
    $34 = $25;
   }
  }
 } else {
  $$lcssa = $$cast;
  $12 = $10;
 }
 if (!$$lcssa) return;
 if (($12 | 0) != ($$lcssa | 0)) HEAP32[$4 >> 2] = $12 + (~(($12 + -4 - $$lcssa | 0) >>> 2) << 2);
 __ZdlPv($$lcssa);
 return;
}

function __ZNSt3__26vectorIPN8optframe15MultiEvaluationENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $10 = 0, $11 = 0, $13 = 0, $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  $7 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  HEAP32[(___errno_location() | 0) >> 2] = 0;
  $10 = _strtoll_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $11 = tempRet0;
  $13 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  if (!$13) HEAP32[(___errno_location() | 0) >> 2] = $7;
  L7 : do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) {
   do if (($13 | 0) == 34) {
    HEAP32[$2 >> 2] = 4;
    if (($11 | 0) > 0 | ($11 | 0) == 0 & $10 >>> 0 > 0) {
     $$0 = 2147483647;
     break L7;
    }
   } else {
    if (($11 | 0) < -1 | ($11 | 0) == -1 & $10 >>> 0 < 2147483648) {
     HEAP32[$2 >> 2] = 4;
     break;
    }
    if (($11 | 0) > 0 | ($11 | 0) == 0 & $10 >>> 0 > 2147483647) {
     HEAP32[$2 >> 2] = 4;
     $$0 = 2147483647;
     break L7;
    } else {
     $$0 = $10;
     break L7;
    }
   } while (0);
   $$0 = -2147483648;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 }
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__26vectorIPN8optframe5NSSeqI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIPN3HFM17MoveHFMModifyRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIPN8optframe2NSI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIPN8optframe9DirectionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZN3HFM24NSIteratorHFMModifyRulesD2Ev($0) {
 $0 = $0 | 0;
 var $$04 = 0, $$05 = 0, $$cast = 0, $$cast6 = 0, $$lcssa = 0, $$pre = 0, $10 = 0, $12 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 5892;
 $$04 = (HEAP32[$0 + 36 >> 2] | 0) + 1 | 0;
 $3 = $0 + 24 | 0;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $$cast = $6;
 $10 = $5;
 if (($$04 | 0) < ($5 - $6 >> 2 | 0)) {
  $$05 = $$04;
  $20 = $$cast;
  $32 = $10;
  $33 = $6;
  $34 = $5;
  while (1) {
   $21 = HEAP32[$20 + ($$05 << 2) >> 2] | 0;
   if (!$21) {
    $24 = $33;
    $25 = $34;
    $35 = $32;
   } else {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 4 >> 2] & 511]($21);
    $$pre = HEAP32[$4 >> 2] | 0;
    $24 = HEAP32[$3 >> 2] | 0;
    $25 = $$pre;
    $35 = $$pre;
   }
   $$05 = $$05 + 1 | 0;
   $$cast6 = $24;
   if (($$05 | 0) >= ($25 - $24 >> 2 | 0)) {
    $$lcssa = $$cast6;
    $12 = $35;
    break;
   } else {
    $20 = $$cast6;
    $32 = $35;
    $33 = $24;
    $34 = $25;
   }
  }
 } else {
  $$lcssa = $$cast;
  $12 = $10;
 }
 if (!$$lcssa) return;
 if (($12 | 0) != ($$lcssa | 0)) HEAP32[$4 >> 2] = $12 + (~(($12 + -4 - $$lcssa | 0) >>> 2) << 2);
 __ZdlPv($$lcssa);
 return;
}

function __ZNSt3__26vectorIPN9scannerpp7ScannerENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE19acceptanceCriterionERKNS_10EvaluationES5_RNSt3__24pairINS7_IiiEES8_EE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$pre$phi10Z2D = 0, $$pre$phiZ2D = 0, $13 = 0, $16 = 0, $17 = 0, $5 = 0;
 $5 = HEAP32[$0 + 24 >> 2] | 0;
 if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 40 >> 2] & 63]($5, $1, $2) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP8[$0 + 18 >> 0] | 0)) {
  $$pre$phi10Z2D = $3 + 4 | 0;
  $$pre$phiZ2D = $3;
 } else {
  $13 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 18304, 24) | 0;
  $16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($13, HEAP32[$3 >> 2] | 0) | 0, 18329, 10) | 0;
  $17 = $3 + 4 | 0;
  __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($16, HEAP32[$17 >> 2] | 0) | 0, 18340, 5) | 0;
  __ZNK8optframe10Evaluation5printEv($1);
  $$pre$phi10Z2D = $17;
  $$pre$phiZ2D = $3;
 }
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 HEAP32[$$pre$phi10Z2D >> 2] = 0;
 $$0 = 1;
 return $$0 | 0;
}

function __ZNSt3__26vectorIPNS0_IdNS_9allocatorIdEEEENS1_IS4_EEE21__push_back_slow_pathIRKS4_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function _vsnprintf($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$$015 = 0, $$0 = 0, $$014 = 0, $$015 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $4 = sp + 124 | 0;
 $5 = sp;
 dest = $5;
 src = 7376;
 stop = dest + 124 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($1 + -1 | 0) >>> 0 > 2147483646) if (!$1) {
  $$014 = $4;
  $$015 = 1;
  label = 4;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  $$0 = -1;
 } else {
  $$014 = $0;
  $$015 = $1;
  label = 4;
 }
 if ((label | 0) == 4) {
  $11 = -2 - $$014 | 0;
  $$$015 = $$015 >>> 0 > $11 >>> 0 ? $11 : $$015;
  HEAP32[$5 + 48 >> 2] = $$$015;
  $14 = $5 + 20 | 0;
  HEAP32[$14 >> 2] = $$014;
  HEAP32[$5 + 44 >> 2] = $$014;
  $16 = $$014 + $$$015 | 0;
  $17 = $5 + 16 | 0;
  HEAP32[$17 >> 2] = $16;
  HEAP32[$5 + 28 >> 2] = $16;
  $19 = _vfprintf($5, $2, $3) | 0;
  if (!$$$015) $$0 = $19; else {
   $21 = HEAP32[$14 >> 2] | 0;
   HEAP8[$21 + ((($21 | 0) == (HEAP32[$17 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERd($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $13 = 0, $17 = 0, $2 = 0, $22 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 20 | 0;
 $$byval_copy = sp + 16 | 0;
 $2 = sp + 12 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 4 | 0;
 $6 = sp;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($4, $0, 0);
 if (HEAP8[$4 >> 0] | 0) {
  HEAP32[$5 >> 2] = 0;
  __ZNKSt3__28ios_base6getlocEv($6, $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $13 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 34560) | 0;
  $17 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $22 = HEAP32[(HEAP32[$13 >> 2] | 0) + 44 >> 2] | 0;
  HEAP32[$2 >> 2] = HEAP32[$17 + 24 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
  FUNCTION_TABLE_iiiiiii[$22 & 63]($13, $$byval_copy, $$byval_copy1, $17, $5, $1) | 0;
  __ZNSt3__26localeD2Ev($6);
  $26 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj($26, HEAP32[$26 + 16 >> 2] | HEAP32[$5 >> 2]);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN17paretoManagerGPLSI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $19 = 0, $21 = 0, $22 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $5 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 6412;
 $1 = $0 + 52 | 0;
 $3 = HEAP32[$0 + 64 >> 2] | 0;
 if ($3 | 0) __ZdlPv($3);
 $5 = HEAP32[$1 >> 2] | 0;
 if ($5 | 0) {
  $7 = $0 + 56 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (($8 | 0) == ($5 | 0)) $16 = $5; else {
   $11 = $8;
   while (1) {
    $10 = $11 + -12 | 0;
    HEAP32[$7 >> 2] = $10;
    $12 = HEAP32[$10 >> 2] | 0;
    if (!$12) $14 = $10; else {
     __ZdlPv($12);
     $14 = HEAP32[$7 >> 2] | 0;
    }
    if (($14 | 0) == ($5 | 0)) break; else $11 = $14;
   }
   $16 = HEAP32[$1 >> 2] | 0;
  }
  __ZdlPv($16);
 }
 HEAP32[$0 >> 2] = 6228;
 HEAP32[$0 + 28 >> 2] = 6248;
 $19 = HEAP32[$0 + 32 >> 2] | 0;
 if ($19 | 0) {
  $21 = $0 + 36 | 0;
  $22 = HEAP32[$21 >> 2] | 0;
  if (($22 | 0) != ($19 | 0)) HEAP32[$21 >> 2] = $22 + (~(($22 + -4 - $19 | 0) >>> 2) << 2);
  __ZdlPv($19);
 }
 HEAP32[$0 + 8 >> 2] = 6248;
 $31 = HEAP32[$0 + 12 >> 2] | 0;
 if (!$31) return;
 $33 = $0 + 16 | 0;
 $34 = HEAP32[$33 >> 2] | 0;
 if (($34 | 0) != ($31 | 0)) HEAP32[$33 >> 2] = $34 + (~(($34 + -4 - $31 | 0) >>> 2) << 2);
 __ZdlPv($31);
 return;
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
 end = ptr + num | 0;
 value = value & 255;
 if ((num | 0) >= 67) {
  while (ptr & 3) {
   HEAP8[ptr >> 0] = value;
   ptr = ptr + 1 | 0;
  }
  aligned_end = end & -4 | 0;
  block_aligned_end = aligned_end - 64 | 0;
  value4 = value | value << 8 | value << 16 | value << 24;
  while ((ptr | 0) <= (block_aligned_end | 0)) {
   HEAP32[ptr >> 2] = value4;
   HEAP32[ptr + 4 >> 2] = value4;
   HEAP32[ptr + 8 >> 2] = value4;
   HEAP32[ptr + 12 >> 2] = value4;
   HEAP32[ptr + 16 >> 2] = value4;
   HEAP32[ptr + 20 >> 2] = value4;
   HEAP32[ptr + 24 >> 2] = value4;
   HEAP32[ptr + 28 >> 2] = value4;
   HEAP32[ptr + 32 >> 2] = value4;
   HEAP32[ptr + 36 >> 2] = value4;
   HEAP32[ptr + 40 >> 2] = value4;
   HEAP32[ptr + 44 >> 2] = value4;
   HEAP32[ptr + 48 >> 2] = value4;
   HEAP32[ptr + 52 >> 2] = value4;
   HEAP32[ptr + 56 >> 2] = value4;
   HEAP32[ptr + 60 >> 2] = value4;
   ptr = ptr + 64 | 0;
  }
  while ((ptr | 0) < (aligned_end | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (end | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return end - num | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 3;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 2;
 $$sroa$speculated$$i = $11 >> 3 >>> 0 < 268435455 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 536870911;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 536870911) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 3) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 3) | 0;
 HEAPF64[$21 >> 3] = +HEAPF64[$1 >> 3];
 $29 = $21 + (0 - $6 << 3) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 8;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 3);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $$sroa$speculated$$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 1073741823) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 2) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 2) | 0;
 HEAP32[$21 >> 2] = HEAP32[$1 >> 2];
 $29 = $21 + (0 - $6 << 2) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 4;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$$i = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 3;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 2;
 $$sroa$speculated$$i = $11 >> 3 >>> 0 < 268435455 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 536870911;
 do if (!$$sroa$speculated$$i) $22 = 0; else if ($$sroa$speculated$$i >>> 0 > 536870911) {
  $18 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($18, 15810);
  HEAP32[$18 >> 2] = 14216;
  ___cxa_throw($18 | 0, 3104, 246);
 } else {
  $22 = __Znwj($$sroa$speculated$$i << 3) | 0;
  break;
 } while (0);
 $21 = $22 + ($6 << 3) | 0;
 HEAPF64[$21 >> 3] = +HEAPF64[$1 >> 3];
 $29 = $21 + (0 - $6 << 3) | 0;
 if (($5 | 0) > 0) _memcpy($29 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $29;
 HEAP32[$2 >> 2] = $21 + 8;
 HEAP32[$9 >> 2] = $22 + ($$sroa$speculated$$i << 3);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $22 = 0, $31 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($2, $0);
 do if (HEAP8[$2 >> 0] | 0) {
  $10 = HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  $11 = $10;
  if ($10 | 0) {
   $13 = $11 + 24 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   if (($14 | 0) == (HEAP32[$11 + 28 >> 2] | 0)) {
    $21 = HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] | 0;
    $22 = __ZNSt3__211char_traitsIcE11to_int_typeEc($1) | 0;
    $$0$i$i = FUNCTION_TABLE_iii[$21 & 63]($11, $22) | 0;
   } else {
    HEAP32[$13 >> 2] = $14 + 1;
    HEAP8[$14 >> 0] = $1;
    $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc($1) | 0;
   }
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) break;
  }
  $31 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj($31, HEAP32[$31 + 16 >> 2] | 1);
 } while (0);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($2);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN8optframe22RandGenMersenneTwister6rand01Ev($0) {
 $0 = $0 | 0;
 var $$013$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $17 = 0, $24 = 0, $29 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $7 = 0, $8 = 0, $$013$i$i$looptemp = 0;
 $1 = $0 + 40 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 511]($0);
  HEAP8[$1 >> 0] = 1;
 }
 $7 = $0 + 2540 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!$8) {
  $$013$i$i = 0;
  do {
   $10 = $0 + 44 + ($$013$i$i << 2) | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   $$013$i$i$looptemp = $$013$i$i;
   $$013$i$i = $$013$i$i + 1 | 0;
   $14 = ($$013$i$i | 0) == 624;
   $17 = HEAP32[$0 + 44 + (($14 ? 0 : $$013$i$i) << 2) >> 2] ^ 2147483647;
   $24 = ($17 + ($11 ^ -2147483648) | 0) >>> 1 ^ HEAP32[$0 + 44 + (((($$013$i$i$looptemp + 397 | 0) >>> 0) % 624 | 0) << 2) >> 2];
   HEAP32[$10 >> 2] = ($17 + $11 & 1 | 0) == 0 ? $24 : $24 ^ -1727483681;
  } while (!$14);
  $29 = HEAP32[$7 >> 2] | 0;
 } else $29 = $8;
 $30 = HEAP32[$0 + 44 + ($29 << 2) >> 2] | 0;
 $32 = $30 >>> 11 ^ $30;
 $35 = $32 << 7 & -1658038656 ^ $32;
 $38 = $35 << 15 & -272236544 ^ $35;
 HEAP32[$7 >> 2] = (($29 + 1 | 0) >>> 0) % 624 | 0;
 return +(+(($38 >>> 18 ^ $38) >>> 0) / 4294967295.0);
}

function __ZNSt3__2plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i11 = 0, $$0$i12 = 0, $11 = 0, $12 = 0, $16 = 0, $17 = 0, $24 = 0, $4 = 0, $5 = 0, $9 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = HEAP8[$1 + 11 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 $9 = $5 ? HEAP32[$1 + 4 >> 2] | 0 : $4 & 255;
 $11 = $5 ? HEAP32[$1 >> 2] | 0 : $1;
 $12 = $9 + 1 | 0;
 if ($12 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($12 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $9;
  if (!$9) {
   $$0$i12 = $0;
   $24 = $$0$i12 + $9 | 0;
   HEAP8[$24 >> 0] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, $2);
   return;
  } else $$0$i11 = $0;
 } else {
  $16 = $9 + 17 & -16;
  $17 = __Znwj($16) | 0;
  HEAP32[$0 >> 2] = $17;
  HEAP32[$0 + 8 >> 2] = $16 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $9;
  $$0$i11 = $17;
 }
 _memcpy($$0$i11 | 0, $11 | 0, $9 | 0) | 0;
 $$0$i12 = $$0$i11;
 $24 = $$0$i12 + $9 | 0;
 HEAP8[$24 >> 0] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, $2);
 return;
}

function __ZN8optframe22RandGenMersenneTwister4randEv($0) {
 $0 = $0 | 0;
 var $$013$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $17 = 0, $24 = 0, $29 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $7 = 0, $8 = 0, $$013$i$i$looptemp = 0;
 $1 = $0 + 40 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 511]($0);
  HEAP8[$1 >> 0] = 1;
 }
 $7 = $0 + 2540 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!$8) {
  $$013$i$i = 0;
  do {
   $10 = $0 + 44 + ($$013$i$i << 2) | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   $$013$i$i$looptemp = $$013$i$i;
   $$013$i$i = $$013$i$i + 1 | 0;
   $14 = ($$013$i$i | 0) == 624;
   $17 = HEAP32[$0 + 44 + (($14 ? 0 : $$013$i$i) << 2) >> 2] ^ 2147483647;
   $24 = ($17 + ($11 ^ -2147483648) | 0) >>> 1 ^ HEAP32[$0 + 44 + (((($$013$i$i$looptemp + 397 | 0) >>> 0) % 624 | 0) << 2) >> 2];
   HEAP32[$10 >> 2] = ($17 + $11 & 1 | 0) == 0 ? $24 : $24 ^ -1727483681;
  } while (!$14);
  $29 = HEAP32[$7 >> 2] | 0;
 } else $29 = $8;
 $30 = HEAP32[$0 + 44 + ($29 << 2) >> 2] | 0;
 $32 = $30 >>> 11 ^ $30;
 $35 = $32 << 7 & -1658038656 ^ $32;
 $38 = $35 << 15 & -272236544 ^ $35;
 HEAP32[$7 >> 2] = (($29 + 1 | 0) >>> 0) % 624 | 0;
 return $38 >>> 18 ^ $38 | 0;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE3getEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $29 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($1, $0, 1);
 do if (!(HEAP8[$1 >> 0] | 0)) $$0 = $3; else {
  $11 = HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  $12 = $11 + 12 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if (($13 | 0) == (HEAP32[$11 + 16 >> 2] | 0)) $$0$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 40 >> 2] & 127]($11) | 0; else {
   HEAP32[$12 >> 2] = $13 + 1;
   $$0$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$13 >> 0] | 0) | 0;
  }
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   $29 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($29, HEAP32[$29 + 16 >> 2] | 6);
   $$0 = $$0$i;
   break;
  } else {
   HEAP32[$2 >> 2] = 1;
   $$0 = $$0$i;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function ___stdio_read($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $11 = 0, $18 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $3 = sp + 16 | 0;
 HEAP32[$3 >> 2] = $1;
 $4 = $3 + 4 | 0;
 $5 = $0 + 48 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 HEAP32[$4 >> 2] = $2 - (($6 | 0) != 0 & 1);
 $11 = $0 + 44 | 0;
 HEAP32[$3 + 8 >> 2] = HEAP32[$11 >> 2];
 HEAP32[$3 + 12 >> 2] = $6;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = $3;
 HEAP32[$vararg_buffer + 8 >> 2] = 2;
 $18 = ___syscall_ret(___syscall145(145, $vararg_buffer | 0) | 0) | 0;
 if (($18 | 0) < 1) {
  HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | $18 & 48 ^ 16;
  $$0 = $18;
 } else {
  $24 = HEAP32[$4 >> 2] | 0;
  if ($18 >>> 0 > $24 >>> 0) {
   $27 = HEAP32[$11 >> 2] | 0;
   $28 = $0 + 4 | 0;
   HEAP32[$28 >> 2] = $27;
   HEAP32[$0 + 8 >> 2] = $27 + ($18 - $24);
   if (!(HEAP32[$5 >> 2] | 0)) $$0 = $2; else {
    HEAP32[$28 >> 2] = $27 + 1;
    HEAP8[$1 + ($2 + -1) >> 0] = HEAP8[$27 >> 0] | 0;
    $$0 = $2;
   }
  } else $$0 = $18;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN8optframe9Direction6equalsERKdS2_RKNSt3__26vectorINS3_4pairIddEENS3_9allocatorIS6_EEEESB_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$02022 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $20 = 0, $21 = 0, $23 = 0, $37 = 0, $5 = 0.0, $6 = 0.0, label = 0;
 $5 = +HEAPF64[$1 >> 3];
 $6 = +HEAPF64[$2 >> 3];
 if (+Math_abs(+($5 - $6)) <= .0001) {
  $37 = 1;
  return $37 | 0;
 }
 if ($5 != $6) {
  $37 = 0;
  return $37 | 0;
 }
 $12 = HEAP32[$3 + 4 >> 2] | 0;
 $13 = HEAP32[$3 >> 2] | 0;
 $14 = $12 - $13 | 0;
 $17 = HEAP32[$4 >> 2] | 0;
 $20 = $13;
 $21 = $17;
 if (($14 | 0) != ((HEAP32[$4 + 4 >> 2] | 0) - $17 | 0)) ___assert_fail(20740, 20777, 140, 20823);
 if (($12 | 0) == ($13 | 0)) {
  $37 = 1;
  return $37 | 0;
 }
 $23 = $14 >> 4;
 $$02022 = 0;
 while (1) {
  if (+HEAPF64[$20 + ($$02022 << 4) >> 3] + +HEAPF64[$20 + ($$02022 << 4) + 8 >> 3] != +HEAPF64[$21 + ($$02022 << 4) >> 3] + +HEAPF64[$21 + ($$02022 << 4) + 8 >> 3]) {
   $37 = 0;
   label = 9;
   break;
  }
  $$02022 = $$02022 + 1 | 0;
  if ($$02022 >>> 0 >= $23 >>> 0) {
   $37 = 1;
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) return $37 | 0;
 return 0;
}

function __ZN8optframe9EvaluatorI6RepHFMiE10betterThanERKNS_8SolutionIS1_iEES6_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $22 = 0, $24 = 0, $26 = 0, $27 = 0, $3 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $3 = sp + 72 | 0;
 $4 = sp;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 76 >> 2] & 31]($3, $0, HEAP32[$1 + 20 >> 2] | 0, HEAP32[$1 + 24 >> 2] | 0);
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 76 >> 2] & 31]($4, $0, HEAP32[$2 + 20 >> 2] | 0, HEAP32[$2 + 24 >> 2] | 0);
 $22 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 63]($0, $3, $4) | 0;
 HEAP32[$4 >> 2] = 4920;
 $24 = HEAP32[$4 + 40 >> 2] | 0;
 if ($24 | 0) {
  $26 = $4 + 44 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  if (($27 | 0) != ($24 | 0)) HEAP32[$26 >> 2] = $27 + (~(($27 + -16 - $24 | 0) >>> 4) << 4);
  __ZdlPv($24);
 }
 HEAP32[$3 >> 2] = 4920;
 $35 = HEAP32[$3 + 40 >> 2] | 0;
 if (!$35) {
  STACKTOP = sp;
  return $22 | 0;
 }
 $37 = $3 + 44 | 0;
 $38 = HEAP32[$37 >> 2] | 0;
 if (($38 | 0) != ($35 | 0)) HEAP32[$37 >> 2] = $38 + (~(($38 + -16 - $35 | 0) >>> 4) << 4);
 __ZdlPv($35);
 STACKTOP = sp;
 return $22 | 0;
}

function __ZNK9scannerpp7Scanner11hasNextCharEv($0) {
 $0 = $0 | 0;
 var $$1 = 0, $1 = 0, $12 = 0, $13 = 0, $2 = 0, $22 = 0, $27 = 0, $3 = 0, $31 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (HEAP32[$3 + (HEAP32[(HEAP32[$3 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] & 2 | 0) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $12 = __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4peekEv($3) | 0;
 $13 = HEAP32[$2 >> 2] | 0;
 if (HEAP32[$13 + (HEAP32[(HEAP32[$13 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] & 5 | 0) {
  $22 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 15056, 24) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $22 + (HEAP32[(HEAP32[$22 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $27 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
  $31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 28 >> 2] & 63]($27, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($22, $31) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($22) | 0;
 }
 $$1 = ($12 | 0) > 0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__214__num_put_base14__format_floatEPcPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$026 = 0, $$027$off0$ph = 0, $$1 = 0, $$2 = 0, $$2$ph = 0, $$sink1$sink = 0, $11 = 0, $12 = 0, $15 = 0, $9 = 0;
 if (!($2 & 2048)) $$0 = $0; else {
  HEAP8[$0 >> 0] = 43;
  $$0 = $0 + 1 | 0;
 }
 if (!($2 & 1024)) $$1 = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1 = $$0 + 1 | 0;
 }
 $9 = $2 & 260;
 $11 = ($2 & 16384 | 0) != 0;
 $12 = ($9 | 0) == 260;
 if ($12) {
  $$027$off0$ph = 0;
  $$2$ph = $$1;
 } else {
  HEAP8[$$1 >> 0] = 46;
  HEAP8[$$1 + 1 >> 0] = 42;
  $$027$off0$ph = 1;
  $$2$ph = $$1 + 2 | 0;
 }
 $$026 = $1;
 $$2 = $$2$ph;
 while (1) {
  $15 = HEAP8[$$026 >> 0] | 0;
  if (!($15 << 24 >> 24)) break;
  HEAP8[$$2 >> 0] = $15;
  $$026 = $$026 + 1 | 0;
  $$2 = $$2 + 1 | 0;
 }
 L14 : do switch ($9 & 511) {
 case 4:
  {
   $$sink1$sink = $11 ? 70 : 102;
   break;
  }
 case 256:
  {
   $$sink1$sink = $11 ? 69 : 101;
   break;
  }
 default:
  if ($12) {
   $$sink1$sink = $11 ? 65 : 97;
   break L14;
  } else {
   $$sink1$sink = $11 ? 71 : 103;
   break L14;
  }
 } while (0);
 HEAP8[$$2 >> 0] = $$sink1$sink;
 return $$027$off0$ph | 0;
}

function __ZN8optframe6ParetoI6RepHFMiEC2ERKS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$024 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $2 = 0, $8 = 0, label = 0;
 HEAP32[$0 >> 2] = 6156;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 $8 = (HEAP32[$1 + 8 >> 2] | 0) - (HEAP32[$1 + 4 >> 2] | 0) >> 2;
 if (!$8) {
  $13 = $0 + 28 | 0;
  HEAP8[$13 >> 0] = 1;
  return;
 }
 $10 = $1 + 16 | 0;
 $11 = $1 + 20 | 0;
 $12 = $1 + 4 | 0;
 $$024 = 0;
 while (1) {
  $15 = HEAP32[$10 >> 2] | 0;
  if ((HEAP32[$11 >> 2] | 0) - $15 >> 2 >>> 0 <= $$024 >>> 0) {
   label = 5;
   break;
  }
  __ZN8optframe6ParetoI6RepHFMiE14add_indWithMevERKNS_8SolutionIS1_iEERKNS_15MultiEvaluationE($0, HEAP32[(HEAP32[$12 >> 2] | 0) + ($$024 << 2) >> 2] | 0, HEAP32[$15 + ($$024 << 2) >> 2] | 0);
  $$024 = $$024 + 1 | 0;
  if ($$024 >>> 0 >= $8 >>> 0) {
   label = 3;
   break;
  }
 }
 if ((label | 0) == 3) {
  $13 = $0 + 28 | 0;
  HEAP8[$13 >> 0] = 1;
  return;
 } else if ((label | 0) == 5) __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($10);
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$sroa$speculated = 0, $15 = 0, $16 = 0, $21 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $9 = 0;
 if ((1073741807 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 if ((HEAP8[$9 + 3 >> 0] | 0) < 0) $27 = HEAP32[$0 >> 2] | 0; else $27 = $0;
 if ($1 >>> 0 < 536870887) {
  $15 = $2 + $1 | 0;
  $16 = $1 << 1;
  $$sroa$speculated = $15 >>> 0 < $16 >>> 0 ? $16 : $15;
  $21 = $$sroa$speculated >>> 0 < 2 ? 2 : $$sroa$speculated + 4 & -4;
  if ($21 >>> 0 > 1073741823) _abort(); else $24 = $21;
 } else $24 = 1073741807;
 $25 = __Znwj($24 << 2) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj($25, $27, $4) | 0;
 $29 = $3 - $5 - $4 | 0;
 if ($29 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj($25 + ($4 << 2) + ($6 << 2) | 0, $27 + ($4 << 2) + ($5 << 2) | 0, $29) | 0;
 if (($1 | 0) != 1) __ZdlPv($27);
 HEAP32[$0 >> 2] = $25;
 HEAP32[$9 >> 2] = $24 | -2147483648;
 return;
}

function __ZNK3HFM24MoveHFMRemoveSingleInput5printEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $15 = 0, $19 = 0, $2 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 19956, 42) | 0;
 $6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($2, HEAP32[$0 + 20 >> 2] | 0) | 0, 19999, 14) | 0;
 __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEb($6, (HEAP8[$0 + 24 >> 0] | 0) != 0) | 0, 19722, 2) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, 33664 + (HEAP32[(HEAP32[8416] | 0) + -12 >> 2] | 0) | 0);
 $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 63]($15, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(33664, $19) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(33664) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $13 = 0, $15 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $4 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $21 = 0;
  $22 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $21 = 0;
   $22 = 0;
   break;
  }
  $9 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  HEAP32[(___errno_location() | 0) >> 2] = 0;
  $12 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $13 = tempRet0;
  $15 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  if (!$15) HEAP32[(___errno_location() | 0) >> 2] = $9;
  if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if (($15 | 0) == 34) {
   $23 = -1;
   $24 = -1;
   label = 8;
  } else {
   $25 = $12;
   $26 = $13;
  } else {
   $23 = 0;
   $24 = 0;
   label = 8;
  }
  if ((label | 0) == 8) {
   HEAP32[$2 >> 2] = 4;
   $25 = $23;
   $26 = $24;
  }
  $21 = $26;
  $22 = $25;
 } while (0);
 tempRet0 = $21;
 STACKTOP = sp;
 return $22 | 0;
}

function __ZN3HFM29NSIteratorNEIGHAddSingleInput5firstEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $16 = 0, $2 = 0, $21 = 0, $25 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 127]($2, $0);
 $7 = HEAP8[$2 + 11 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 $16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, $8 ? HEAP32[$2 >> 2] | 0 : $2, $8 ? HEAP32[$2 + 4 >> 2] | 0 : $7 & 255) | 0, 19491, 62) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, $16 + (HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($16, $25) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($16) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 _exit(1);
}

function _fflush($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $25 = 0, $29 = 0, $7 = 0, $phitmp = 0;
 do if (!$0) {
  if (!(HEAP32[1774] | 0)) $29 = 0; else $29 = _fflush(HEAP32[1774] | 0) | 0;
  $$02325 = HEAP32[(___ofl_lock() | 0) >> 2] | 0;
  if (!$$02325) $$024$lcssa = $29; else {
   $$02327 = $$02325;
   $$02426 = $29;
   while (1) {
    if ((HEAP32[$$02327 + 76 >> 2] | 0) > -1) $25 = ___lockfile($$02327) | 0; else $25 = 0;
    if ((HEAP32[$$02327 + 20 >> 2] | 0) >>> 0 > (HEAP32[$$02327 + 28 >> 2] | 0) >>> 0) $$1 = ___fflush_unlocked($$02327) | 0 | $$02426; else $$1 = $$02426;
    if ($25 | 0) ___unlockfile($$02327);
    $$02327 = HEAP32[$$02327 + 56 >> 2] | 0;
    if (!$$02327) {
     $$024$lcssa = $$1;
     break;
    } else $$02426 = $$1;
   }
  }
  ___ofl_unlock();
  $$0 = $$024$lcssa;
 } else {
  if ((HEAP32[$0 + 76 >> 2] | 0) <= -1) {
   $$0 = ___fflush_unlocked($0) | 0;
   break;
  }
  $phitmp = (___lockfile($0) | 0) == 0;
  $7 = ___fflush_unlocked($0) | 0;
  if ($phitmp) $$0 = $7; else {
   ___unlockfile($0);
   $$0 = $7;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $25 = 0, $26 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 $8 = $0 + 8 | 0;
 $12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 127]($8) | 0;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 $17 = HEAP8[$12 + 8 + 3 >> 0] | 0;
 $18 = $17 << 24 >> 24 < 0;
 $20 = $18 ? HEAP32[$12 >> 2] | 0 : $12;
 $25 = $20 + (($18 ? HEAP32[$12 + 4 >> 2] | 0 : $17 & 255) << 2) | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $26 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $20, $25) | 0;
 STACKTOP = sp;
 return $26 | 0;
}

function ___newlocale($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$03339 = 0, $$03440 = 0, $$036 = 0, $$13538 = 0, $15 = 0, $3 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp;
 L1 : do if (!(___loc_is_allocated($2) | 0)) {
  $6 = ($2 | 0) == 0;
  $$03339 = 0;
  $$13538 = 0;
  do {
   $15 = (1 << $$13538 & $0 | 0) != 0;
   if ($6 | $15) $$0 = ___get_locale($$13538, $15 ? $1 : 38537) | 0; else $$0 = HEAP32[$2 + ($$13538 << 2) >> 2] | 0;
   $$03339 = (($$0 | 0) != 0 & 1) + $$03339 | 0;
   HEAP32[$3 + ($$13538 << 2) >> 2] = $$0;
   $$13538 = $$13538 + 1 | 0;
  } while (($$13538 | 0) != 6);
  switch ($$03339 | 0) {
  case 0:
   {
    $$036 = 30900;
    break L1;
    break;
   }
  case 1:
   {
    if ((HEAP32[$3 >> 2] | 0) == 7304) {
     $$036 = 7352;
     break L1;
    }
    break;
   }
  default:
   {}
  }
  $$036 = $2;
 } else {
  $$03440 = 0;
  do {
   if (1 << $$03440 & $0 | 0) HEAP32[$2 + ($$03440 << 2) >> 2] = ___get_locale($$03440, $1) | 0;
   $$03440 = $$03440 + 1 | 0;
  } while (($$03440 | 0) != 6);
  $$036 = $2;
 } while (0);
 STACKTOP = sp;
 return $$036 | 0;
}

function __ZNSt3__24stodERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $10 = 0, $11 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $4 = __ZNSt3__211char_traitsIcE6lengthEPKc(29004) | 0;
 if ($4 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($3);
 if ($4 >>> 0 < 11) {
  HEAP8[$3 + 11 >> 0] = $4;
  $$0$i$i = $3;
 } else {
  $10 = $4 + 16 & -16;
  $11 = __Znwj($10) | 0;
  HEAP32[$3 >> 2] = $11;
  HEAP32[$3 + 8 >> 2] = $10 | -2147483648;
  HEAP32[$3 + 4 >> 2] = $4;
  $$0$i$i = $11;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i$i, 29004, $4) | 0;
 HEAP8[$2 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0$i$i + $4 | 0, $2);
 $16 = +__ZNSt3__212_GLOBAL__N_18as_floatIdNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEET_RKS7_RKT0_Pj($3, $0, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 STACKTOP = sp;
 return +$16;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $24 = 0, $25 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 $8 = $0 + 8 | 0;
 $12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 127]($8) | 0;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 $16 = HEAP8[$12 + 11 >> 0] | 0;
 $17 = $16 << 24 >> 24 < 0;
 $19 = $17 ? HEAP32[$12 >> 2] | 0 : $12;
 $24 = $19 + ($17 ? HEAP32[$12 + 4 >> 2] | 0 : $16 & 255) | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $25 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $19, $24) | 0;
 STACKTOP = sp;
 return $25 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$021 = 0, $$sroa$speculated = 0, $12 = 0, $14 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0;
 $3 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 $4 = $0 + 24 | 0;
 $5 = $0 + 28 | 0;
 $$0 = $1;
 $$021 = 0;
 while (1) {
  if (($$021 | 0) >= ($2 | 0)) break;
  $7 = HEAP32[$4 >> 2] | 0;
  $8 = HEAP32[$5 >> 2] | 0;
  if ($7 >>> 0 < $8 >>> 0) {
   $22 = $8 - $7 >> 2;
   $23 = $2 - $$021 | 0;
   $$sroa$speculated = ($23 | 0) < ($22 | 0) ? $23 : $22;
   __ZNSt3__211char_traitsIwE4copyEPwPKwj($7, $$0, $$sroa$speculated) | 0;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + ($$sroa$speculated << 2);
   $$0 = $$0 + ($$sroa$speculated << 2) | 0;
   $$021 = $$sroa$speculated + $$021 | 0;
   continue;
  }
  $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] | 0;
  $14 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$$0 >> 2] | 0) | 0;
  if ((FUNCTION_TABLE_iii[$12 & 63]($0, $14) | 0) == ($3 | 0)) break;
  $$0 = $$0 + 4 | 0;
  $$021 = $$021 + 1 | 0;
 }
 return $$021 | 0;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$in = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = $0 + 44 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = HEAP32[$0 + 24 >> 2] | 0;
 if ($3 >>> 0 < $5 >>> 0) {
  HEAP32[$2 >> 2] = $5;
  $$in = $5;
 } else $$in = $3;
 $7 = $$in;
 $10 = $0 + 12 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if ((HEAP32[$0 + 8 >> 2] | 0) >>> 0 >= $11 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($1 | 0) == -1) {
  HEAP32[$10 >> 2] = $11 + -1;
  HEAP32[$0 + 16 >> 2] = $7;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$0 + 48 >> 2] & 16)) {
  $20 = $1 & 255;
  $21 = $11 + -1 | 0;
  if ($20 << 24 >> 24 == (HEAP8[$21 >> 0] | 0)) {
   $$pre$phi7Z2D = $20;
   $$pre$phiZ2D = $21;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi7Z2D = $1 & 255;
  $$pre$phiZ2D = $11 + -1 | 0;
 }
 HEAP32[$10 >> 2] = $$pre$phiZ2D;
 HEAP32[$0 + 16 >> 2] = $7;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi7Z2D;
 $$0 = $1;
 return $$0 | 0;
}

function _wcrtomb($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0;
 do if (!$0) $$0 = 1; else {
  if ($1 >>> 0 < 128) {
   HEAP8[$0 >> 0] = $1;
   $$0 = 1;
   break;
  }
  if (!(HEAP32[HEAP32[(___pthread_self_340() | 0) + 188 >> 2] >> 2] | 0)) if (($1 & -128 | 0) == 57216) {
   HEAP8[$0 >> 0] = $1;
   $$0 = 1;
   break;
  } else {
   HEAP32[(___errno_location() | 0) >> 2] = 84;
   $$0 = -1;
   break;
  }
  if ($1 >>> 0 < 2048) {
   HEAP8[$0 >> 0] = $1 >>> 6 | 192;
   HEAP8[$0 + 1 >> 0] = $1 & 63 | 128;
   $$0 = 2;
   break;
  }
  if ($1 >>> 0 < 55296 | ($1 & -8192 | 0) == 57344) {
   HEAP8[$0 >> 0] = $1 >>> 12 | 224;
   HEAP8[$0 + 1 >> 0] = $1 >>> 6 & 63 | 128;
   HEAP8[$0 + 2 >> 0] = $1 & 63 | 128;
   $$0 = 3;
   break;
  }
  if (($1 + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[$0 >> 0] = $1 >>> 18 | 240;
   HEAP8[$0 + 1 >> 0] = $1 >>> 12 & 63 | 128;
   HEAP8[$0 + 2 >> 0] = $1 >>> 6 & 63 | 128;
   HEAP8[$0 + 3 >> 0] = $1 & 63 | 128;
   $$0 = 4;
   break;
  } else {
   HEAP32[(___errno_location() | 0) >> 2] = 84;
   $$0 = -1;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNK8optframe19MORandomImprovementI6RepHFMiE5printEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $15 = 0, $2 = 0, $20 = 0, $24 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 127]($2, $0);
 $6 = $2 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 $15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, $8 ? HEAP32[$2 >> 2] | 0 : $2, $8 ? HEAP32[$2 + 4 >> 2] | 0 : $7 & 255) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, $15 + (HEAP32[(HEAP32[$15 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $20 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 63]($20, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($15, $24) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($15) | 0;
 if ((HEAP8[$6 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$021 = 0, $$sroa$speculated = 0, $12 = 0, $14 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0;
 $3 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 $4 = $0 + 24 | 0;
 $5 = $0 + 28 | 0;
 $$0 = $1;
 $$021 = 0;
 while (1) {
  if (($$021 | 0) >= ($2 | 0)) break;
  $7 = HEAP32[$4 >> 2] | 0;
  $8 = HEAP32[$5 >> 2] | 0;
  if ($7 >>> 0 < $8 >>> 0) {
   $21 = $8 - $7 | 0;
   $22 = $2 - $$021 | 0;
   $$sroa$speculated = ($22 | 0) < ($21 | 0) ? $22 : $21;
   __ZNSt3__211char_traitsIcE4copyEPcPKcj($7, $$0, $$sroa$speculated) | 0;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + $$sroa$speculated;
   $$0 = $$0 + $$sroa$speculated | 0;
   $$021 = $$sroa$speculated + $$021 | 0;
   continue;
  }
  $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] | 0;
  $14 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$$0 >> 0] | 0) | 0;
  if ((FUNCTION_TABLE_iii[$12 & 63]($0, $14) | 0) == ($3 | 0)) break;
  $$0 = $$0 + 1 | 0;
  $$021 = $$021 + 1 | 0;
 }
 return $$021 | 0;
}

function __ZNKSt3__27collateIwE12do_transformEPKwS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i = 0, $$021$i$i = 0, $15 = 0, $18 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $8 = $3 - $2 >> 2;
 if ($8 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 do if ($8 >>> 0 < 2) {
  HEAP8[$0 + 8 + 3 >> 0] = $8;
  $$0$i$i = $2;
  $$021$i$i = $0;
 } else {
  $15 = $8 + 4 & -4;
  if ($15 >>> 0 > 1073741823) _abort(); else {
   $18 = __Znwj($15 << 2) | 0;
   HEAP32[$0 >> 2] = $18;
   HEAP32[$0 + 8 >> 2] = $15 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $8;
   $$0$i$i = $2;
   $$021$i$i = $18;
   break;
  }
 } while (0);
 while (1) {
  if (($$0$i$i | 0) == ($3 | 0)) break;
  __ZNSt3__211char_traitsIwE6assignERwRKw($$021$i$i, $$0$i$i);
  $$0$i$i = $$0$i$i + 4 | 0;
  $$021$i$i = $$021$i$i + 4 | 0;
 }
 HEAP32[$4 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$021$i$i, $4);
 STACKTOP = sp;
 return;
}

function __ZN6RepHFMC2ERKS_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $13 = 0;
 __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEEC2ERKS5_($0, $1);
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2ERKS5_($0 + 12 | 0, $1 + 12 | 0);
 __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($0 + 24 | 0, $1 + 24 | 0);
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2ERKS5_($0 + 36 | 0, $1 + 36 | 0);
 __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($0 + 48 | 0, $1 + 48 | 0);
 __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2ERKS5_($0 + 60 | 0, $1 + 60 | 0);
 $12 = $0 + 72 | 0;
 $13 = $1 + 72 | 0;
 HEAP32[$12 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$12 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
 HEAP32[$12 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
 HEAP32[$12 + 12 >> 2] = HEAP32[$13 + 12 >> 2];
 __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($0 + 88 | 0, $1 + 88 | 0);
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($0 + 100 | 0, $1 + 100 | 0);
 __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($0 + 112 | 0, $1 + 112 | 0);
 return;
}

function __ZNK8optframe15MultiEvaluation5printEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $15 = 0, $2 = 0, $20 = 0, $24 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 127]($2, $0);
 $6 = $2 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 $15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, $8 ? HEAP32[$2 >> 2] | 0 : $2, $8 ? HEAP32[$2 + 4 >> 2] | 0 : $7 & 255) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, $15 + (HEAP32[(HEAP32[$15 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $20 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 63]($20, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($15, $24) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($15) | 0;
 if ((HEAP8[$6 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _fopen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $14 = 0, $6 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer8 = sp + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 if (!(_memchr(26051, HEAP8[$1 >> 0] | 0, 4) | 0)) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $$0 = 0;
 } else {
  $6 = ___fmodeflags($1) | 0;
  HEAP32[$vararg_buffer >> 2] = $0;
  HEAP32[$vararg_buffer + 4 >> 2] = $6 | 32768;
  HEAP32[$vararg_buffer + 8 >> 2] = 438;
  $10 = ___syscall_ret(___syscall5(5, $vararg_buffer | 0) | 0) | 0;
  if (($10 | 0) < 0) $$0 = 0; else {
   if ($6 & 524288 | 0) {
    HEAP32[$vararg_buffer3 >> 2] = $10;
    HEAP32[$vararg_buffer3 + 4 >> 2] = 2;
    HEAP32[$vararg_buffer3 + 8 >> 2] = 1;
    ___syscall221(221, $vararg_buffer3 | 0) | 0;
   }
   $14 = ___fdopen($10, $1) | 0;
   if (!$14) {
    HEAP32[$vararg_buffer8 >> 2] = $10;
    ___syscall6(6, $vararg_buffer8 | 0) | 0;
    $$0 = 0;
   } else $$0 = $14;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $15 = 0, $16 = 0, $18 = 0, $20 = 0, $24 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if ($1 | 0) {
  $5 = $0 + 11 | 0;
  $6 = HEAP8[$5 >> 0] | 0;
  if ($6 << 24 >> 24 < 0) {
   $15 = HEAP32[$0 + 4 >> 2] | 0;
   $16 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
  } else {
   $15 = $6 & 255;
   $16 = 10;
  }
  $18 = $15 + $1 | 0;
  if (($16 - $15 | 0) >>> 0 < $1 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $16, $18 - $16 | 0, $15, $15, 0, 0);
   $20 = HEAP8[$5 >> 0] | 0;
  } else $20 = $6;
  if ($20 << 24 >> 24 < 0) $24 = HEAP32[$0 >> 2] | 0; else $24 = $0;
  __ZNSt3__211char_traitsIcE6assignEPcjc($24 + $15 | 0, $1, $2) | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $18; else HEAP8[$5 >> 0] = $18;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($24 + $18 | 0, $3);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNK8optframe9Direction5printEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $15 = 0, $2 = 0, $20 = 0, $24 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 127]($2, $0);
 $6 = $2 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 $15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, $8 ? HEAP32[$2 >> 2] | 0 : $2, $8 ? HEAP32[$2 + 4 >> 2] | 0 : $7 & 255) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, $15 + (HEAP32[(HEAP32[$15 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $20 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 63]($20, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($15, $24) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($15) | 0;
 if ((HEAP8[$6 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNK8optframe9Component5printEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $15 = 0, $2 = 0, $20 = 0, $24 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 127]($2, $0);
 $6 = $2 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 $15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, $8 ? HEAP32[$2 >> 2] | 0 : $2, $8 ? HEAP32[$2 + 4 >> 2] | 0 : $7 & 255) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, $15 + (HEAP32[(HEAP32[$15 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $20 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 63]($20, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($15, $24) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($15) | 0;
 if ((HEAP8[$6 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$023 = 0, $$sroa$speculated = 0, $12 = 0, $13 = 0, $22 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 __ZNSt3__211char_traitsIwE3eofEv() | 0;
 $3 = $0 + 12 | 0;
 $4 = $0 + 16 | 0;
 $$0 = $1;
 $$023 = 0;
 while (1) {
  if (($$023 | 0) >= ($2 | 0)) break;
  $6 = HEAP32[$3 >> 2] | 0;
  $7 = HEAP32[$4 >> 2] | 0;
  if ($6 >>> 0 < $7 >>> 0) {
   $12 = $7 - $6 >> 2;
   $13 = $2 - $$023 | 0;
   $$sroa$speculated = ($13 | 0) < ($12 | 0) ? $13 : $12;
   __ZNSt3__211char_traitsIwE4copyEPwPKwj($$0, $6, $$sroa$speculated) | 0;
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + ($$sroa$speculated << 2);
   $$0 = $$0 + ($$sroa$speculated << 2) | 0;
   $$023 = $$sroa$speculated + $$023 | 0;
   continue;
  }
  $22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 127]($0) | 0;
  if (($22 | 0) == -1) break;
  HEAP32[$$0 >> 2] = __ZNSt3__211char_traitsIwE12to_char_typeEj($22) | 0;
  $$0 = $$0 + 4 | 0;
  $$023 = $$023 + 1 | 0;
 }
 return $$023 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $15 = 0, $17 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 8 | 0;
 $5 = $4 + 3 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) {
  $14 = HEAP32[$0 + 4 >> 2] | 0;
  $15 = (HEAP32[$4 >> 2] & 2147483647) + -1 | 0;
 } else {
  $14 = $6 & 255;
  $15 = 1;
 }
 $17 = $14 + $2 | 0;
 if (($15 - $14 | 0) >>> 0 < $2 >>> 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($0, $15, $17 - $15 | 0, $14, $14, 0, $2, $1); else if ($2 | 0) {
  if ($7) $21 = HEAP32[$0 >> 2] | 0; else $21 = $0;
  __ZNSt3__211char_traitsIwE4copyEPwPKwj($21 + ($14 << 2) | 0, $1, $2) | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $17; else HEAP8[$5 >> 0] = $17;
  HEAP32[$3 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($21 + ($17 << 2) | 0, $3);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function _fmt_u($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $26 = 0, $8 = 0, $9 = 0, $8$looptemp = 0;
 if ($1 >>> 0 > 0 | ($1 | 0) == 0 & $0 >>> 0 > 4294967295) {
  $$0914 = $2;
  $8 = $0;
  $9 = $1;
  while (1) {
   $10 = ___uremdi3($8 | 0, $9 | 0, 10, 0) | 0;
   $$0914 = $$0914 + -1 | 0;
   HEAP8[$$0914 >> 0] = $10 & 255 | 48;
   $8$looptemp = $8;
   $8 = ___udivdi3($8 | 0, $9 | 0, 10, 0) | 0;
   if (!($9 >>> 0 > 9 | ($9 | 0) == 9 & $8$looptemp >>> 0 > 4294967295)) break; else $9 = tempRet0;
  }
  $$010$lcssa$off0 = $8;
  $$09$lcssa = $$0914;
 } else {
  $$010$lcssa$off0 = $0;
  $$09$lcssa = $2;
 }
 if (!$$010$lcssa$off0) $$1$lcssa = $$09$lcssa; else {
  $$012 = $$010$lcssa$off0;
  $$111 = $$09$lcssa;
  while (1) {
   $26 = $$111 + -1 | 0;
   HEAP8[$26 >> 0] = ($$012 >>> 0) % 10 | 0 | 48;
   if ($$012 >>> 0 < 10) {
    $$1$lcssa = $26;
    break;
   } else {
    $$012 = ($$012 >>> 0) / 10 | 0;
    $$111 = $26;
   }
  }
 }
 return $$1$lcssa | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $14 = 0, $15 = 0, $2 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) {
  $6 = HEAP32[$1 >> 2] | 0;
  $8 = HEAP32[$1 + 4 >> 2] | 0;
  if ($8 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  if ($8 >>> 0 < 11) {
   HEAP8[$0 + 11 >> 0] = $8;
   $$0$i = $0;
  } else {
   $14 = $8 + 16 & -16;
   $15 = __Znwj($14) | 0;
   HEAP32[$0 >> 2] = $15;
   HEAP32[$0 + 8 >> 2] = $14 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $8;
   $$0$i = $15;
  }
  __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i, $6, $8) | 0;
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$0$i + $8 | 0, $2);
 } else {
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$023 = 0, $$sroa$speculated = 0, $11 = 0, $12 = 0, $21 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 __ZNSt3__211char_traitsIcE3eofEv() | 0;
 $3 = $0 + 12 | 0;
 $4 = $0 + 16 | 0;
 $$0 = $1;
 $$023 = 0;
 while (1) {
  if (($$023 | 0) >= ($2 | 0)) break;
  $6 = HEAP32[$3 >> 2] | 0;
  $7 = HEAP32[$4 >> 2] | 0;
  if ($6 >>> 0 < $7 >>> 0) {
   $11 = $7 - $6 | 0;
   $12 = $2 - $$023 | 0;
   $$sroa$speculated = ($12 | 0) < ($11 | 0) ? $12 : $11;
   __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0, $6, $$sroa$speculated) | 0;
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + $$sroa$speculated;
   $$0 = $$0 + $$sroa$speculated | 0;
   $$023 = $$sroa$speculated + $$023 | 0;
   continue;
  }
  $21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 127]($0) | 0;
  if (($21 | 0) == -1) break;
  HEAP8[$$0 >> 0] = __ZNSt3__211char_traitsIcE12to_char_typeEi($21) | 0;
  $$0 = $$0 + 1 | 0;
  $$023 = $$023 + 1 | 0;
 }
 return $$023 | 0;
}

function __ZN3HFM17ProblemParametersD2Ev($0) {
 $0 = $0 | 0;
 var $15 = 0, $17 = 0, $18 = 0, $2 = 0, $26 = 0, $28 = 0, $29 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $9 = 0;
 HEAP32[$0 >> 2] = 3896;
 $2 = HEAP32[$0 + 88 >> 2] | 0;
 if ($2 | 0) __ZdlPv($2);
 $4 = $0 + 64 | 0;
 if ((HEAP8[$4 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
 $9 = $0 + 52 | 0;
 if ((HEAP8[$9 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$9 >> 2] | 0);
 $15 = HEAP32[$0 + 40 >> 2] | 0;
 if ($15 | 0) {
  $17 = $0 + 44 | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  if (($18 | 0) != ($15 | 0)) HEAP32[$17 >> 2] = $18 + (~(($18 + -4 - $15 | 0) >>> 2) << 2);
  __ZdlPv($15);
 }
 $26 = HEAP32[$0 + 28 >> 2] | 0;
 if ($26 | 0) {
  $28 = $0 + 32 | 0;
  $29 = HEAP32[$28 >> 2] | 0;
  if (($29 | 0) != ($26 | 0)) HEAP32[$28 >> 2] = $29 + (~(($29 + -4 - $26 | 0) >>> 2) << 2);
  __ZdlPv($26);
 }
 $37 = HEAP32[$0 + 16 >> 2] | 0;
 if (!$37) return;
 $39 = $0 + 20 | 0;
 $40 = HEAP32[$39 >> 2] | 0;
 if (($40 | 0) != ($37 | 0)) HEAP32[$39 >> 2] = $40 + (~(($40 + -4 - $37 | 0) >>> 2) << 2);
 __ZdlPv($37);
 return;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $17 = 0, $31 = 0, $36 = 0, $4 = 0, $40 = 0, $45 = 0, $47 = 0;
 $4 = $1 + 64 | 0;
 if (HEAP32[$4 >> 2] | 0) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 24 >> 2] & 127]($1) | 0)) if (!(___fseeko(HEAP32[$4 >> 2] | 0, HEAP32[$2 + 8 >> 2] | 0, 0) | 0)) {
  $40 = $2;
  $45 = HEAP32[$40 + 4 >> 2] | 0;
  $47 = $1 + 72 | 0;
  HEAP32[$47 >> 2] = HEAP32[$40 >> 2];
  HEAP32[$47 + 4 >> 2] = $45;
  HEAP32[$0 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  HEAP32[$0 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
  return;
 } else {
  $31 = $0;
  HEAP32[$31 >> 2] = 0;
  HEAP32[$31 + 4 >> 2] = 0;
  $36 = $0 + 8 | 0;
  HEAP32[$36 >> 2] = -1;
  HEAP32[$36 + 4 >> 2] = -1;
  return;
 }
 $12 = $0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 $17 = $0 + 8 | 0;
 HEAP32[$17 >> 2] = -1;
 HEAP32[$17 + 4 >> 2] = -1;
 return;
}

function __ZNK8optframe10Evaluation5printEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $12 = 0, $17 = 0, $2 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 __ZNK8optframe10Evaluation8toStringEv($2, $0);
 $3 = $2 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 $12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, $5 ? HEAP32[$2 >> 2] | 0 : $2, $5 ? HEAP32[$2 + 4 >> 2] | 0 : $4 & 255) | 0;
 __ZNKSt3__28ios_base6getlocEv($1, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 34536) | 0;
 $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 63]($17, 10) | 0;
 __ZNSt3__26localeD2Ev($1);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
 if ((HEAP8[$3 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $13 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 8 | 0;
 $5 = $4 + 3 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) $10 = (HEAP32[$4 >> 2] & 2147483647) + -1 | 0; else $10 = 1;
 do if ($10 >>> 0 < $2 >>> 0) {
  if ($7) $23 = HEAP32[$0 + 4 >> 2] | 0; else $23 = $6 & 255;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($0, $10, $2 - $10 | 0, $23, 0, $23, $2, $1);
 } else {
  if ($7) $13 = HEAP32[$0 >> 2] | 0; else $13 = $0;
  __ZNSt3__211char_traitsIwE4moveEPwPKwj($13, $1, $2) | 0;
  HEAP32[$3 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($13 + ($2 << 2) | 0, $3);
  if ((HEAP8[$5 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $2;
   break;
  } else {
   HEAP8[$5 >> 0] = $2;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNKSt3__27collateIcE12do_transformEPKcS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i = 0, $$021$i$i = 0, $$021$ph$i$i = 0, $13 = 0, $14 = 0, $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $7 = $3 - $2 | 0;
 if ($7 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($7 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $7;
  $$021$ph$i$i = $0;
 } else {
  $13 = $7 + 16 & -16;
  $14 = __Znwj($13) | 0;
  HEAP32[$0 >> 2] = $14;
  HEAP32[$0 + 8 >> 2] = $13 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $7;
  $$021$ph$i$i = $14;
 }
 $$0$i$i = $2;
 $$021$i$i = $$021$ph$i$i;
 while (1) {
  if (($$0$i$i | 0) == ($3 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$021$i$i, $$0$i$i);
  $$0$i$i = $$0$i$i + 1 | 0;
  $$021$i$i = $$021$i$i + 1 | 0;
 }
 HEAP8[$4 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$021$ph$i$i + $7 | 0, $4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $11 = 0, $13 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $26 = 0;
  $27 = 0;
 } else {
  $7 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  HEAP32[(___errno_location() | 0) >> 2] = 0;
  $10 = _strtoll_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $11 = tempRet0;
  $13 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  if (!$13) HEAP32[(___errno_location() | 0) >> 2] = $7;
  if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if (($13 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $23 = ($11 | 0) > 0 | ($11 | 0) == 0 & $10 >>> 0 > 0;
   $28 = $23 ? -1 : 0;
   $29 = $23 ? 2147483647 : -2147483648;
  } else {
   $28 = $10;
   $29 = $11;
  } else {
   HEAP32[$2 >> 2] = 4;
   $28 = 0;
   $29 = 0;
  }
  $26 = $29;
  $27 = $28;
 }
 tempRet0 = $26;
 STACKTOP = sp;
 return $27 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $$1 = 0;
   break;
  }
  $9 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  HEAP32[(___errno_location() | 0) >> 2] = 0;
  $12 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $13 = tempRet0;
  $15 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  if (!$15) HEAP32[(___errno_location() | 0) >> 2] = $9;
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($13 >>> 0 > 0 | ($13 | 0) == 0 & $12 >>> 0 > 65535 | ($15 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $12 & 65535;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4peekEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i = 0, $1 = 0, $11 = 0, $13 = 0, $28 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 HEAP32[$0 + 4 >> 2] = 0;
 $3 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($1, $0, 1);
 if (!(HEAP8[$1 >> 0] | 0)) $$0 = $3; else {
  $11 = HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  $13 = HEAP32[$11 + 12 >> 2] | 0;
  if (($13 | 0) == (HEAP32[$11 + 16 >> 2] | 0)) $$0$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 127]($11) | 0; else $$0$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$13 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   $28 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($28, HEAP32[$28 + 16 >> 2] | 2);
   $$0 = $$0$i;
  } else $$0 = $$0$i;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $$1 = 0;
   break;
  }
  $9 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  HEAP32[(___errno_location() | 0) >> 2] = 0;
  $12 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $13 = tempRet0;
  $15 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  if (!$15) HEAP32[(___errno_location() | 0) >> 2] = $9;
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($13 >>> 0 > 0 | ($13 | 0) == 0 & $12 >>> 0 > 4294967295 | ($15 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $12;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $$1 = 0;
   break;
  }
  $9 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  HEAP32[(___errno_location() | 0) >> 2] = 0;
  $12 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $13 = tempRet0;
  $15 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  if (!$15) HEAP32[(___errno_location() | 0) >> 2] = $9;
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($13 >>> 0 > 0 | ($13 | 0) == 0 & $12 >>> 0 > 4294967295 | ($15 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $12;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $15 = 0, $17 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $14 = HEAP32[$0 + 4 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $14 = $5 & 255;
  $15 = 10;
 }
 $17 = $14 + $2 | 0;
 if (($15 - $14 | 0) >>> 0 < $2 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $15, $17 - $15 | 0, $14, $14, 0, $2, $1); else if ($2 | 0) {
  if ($6) $21 = HEAP32[$0 >> 2] | 0; else $21 = $0;
  __ZNSt3__211char_traitsIcE4copyEPcPKcj($21 + $14 | 0, $1, $2) | 0;
  if ((HEAP8[$4 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $17; else HEAP8[$4 >> 0] = $17;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($21 + $17 | 0, $3);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$sroa$speculated = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0;
 if ((-17 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $23 = HEAP32[$0 >> 2] | 0; else $23 = $0;
 if ($1 >>> 0 < 2147483623) {
  $14 = $2 + $1 | 0;
  $15 = $1 << 1;
  $$sroa$speculated = $14 >>> 0 < $15 >>> 0 ? $15 : $14;
  $20 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $20 = -17;
 $21 = __Znwj($20) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($21, $23, $4) | 0;
 $25 = $3 - $5 - $4 | 0;
 if ($25 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($21 + $4 + $6 | 0, $23 + $4 + $5 | 0, $25) | 0;
 if (($1 | 0) != 10) __ZdlPv($23);
 HEAP32[$0 >> 2] = $21;
 HEAP32[$0 + 8 >> 2] = $20 | -2147483648;
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $21 = 0, $25 = 0;
 HEAP8[$1 + 53 >> 0] = 1;
 do if ((HEAP32[$1 + 4 >> 2] | 0) == ($3 | 0)) {
  HEAP8[$1 + 52 >> 0] = 1;
  $10 = $1 + 16 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $13 = $1 + 54 | 0;
  $14 = $1 + 48 | 0;
  $15 = $1 + 24 | 0;
  $16 = $1 + 36 | 0;
  if (!$11) {
   HEAP32[$10 >> 2] = $2;
   HEAP32[$15 >> 2] = $4;
   HEAP32[$16 >> 2] = 1;
   if (!((HEAP32[$14 >> 2] | 0) == 1 & ($4 | 0) == 1)) break;
   HEAP8[$13 >> 0] = 1;
   break;
  }
  if (($11 | 0) != ($2 | 0)) {
   HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 1;
   HEAP8[$13 >> 0] = 1;
   break;
  }
  $21 = HEAP32[$15 >> 2] | 0;
  if (($21 | 0) == 2) {
   HEAP32[$15 >> 2] = $4;
   $25 = $4;
  } else $25 = $21;
  if ((HEAP32[$14 >> 2] | 0) == 1 & ($25 | 0) == 1) HEAP8[$13 >> 0] = 1;
 } while (0);
 return;
}

function __ZNKSt3__220__time_get_c_storageIwE3__xEv($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $11 = 0, $14 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP8[29760] | 0)) if (___cxa_guard_acquire(29760) | 0) {
  HEAP32[8858] = 0;
  HEAP32[8859] = 0;
  HEAP32[8860] = 0;
  $6 = __ZNSt3__211char_traitsIwE6lengthEPKw(11764) | 0;
  if ($6 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(35432);
  do if ($6 >>> 0 < 2) {
   HEAP8[35443] = $6;
   $$0$i$i = 35432;
  } else {
   $11 = $6 + 4 & -4;
   if ($11 >>> 0 > 1073741823) _abort(); else {
    $14 = __Znwj($11 << 2) | 0;
    HEAP32[8858] = $14;
    HEAP32[8860] = $11 | -2147483648;
    HEAP32[8859] = $6;
    $$0$i$i = $14;
    break;
   }
  } while (0);
  __ZNSt3__211char_traitsIwE4copyEPwPKwj($$0$i$i, 11764, $6) | 0;
  HEAP32[$1 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($$0$i$i + ($6 << 2) | 0, $1);
  ___cxa_atexit(262, 35432, ___dso_handle | 0) | 0;
 }
 STACKTOP = sp;
 return 35432;
}

function __ZNKSt3__220__time_get_c_storageIwE3__rEv($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $11 = 0, $14 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP8[29768] | 0)) if (___cxa_guard_acquire(29768) | 0) {
  HEAP32[8861] = 0;
  HEAP32[8862] = 0;
  HEAP32[8863] = 0;
  $6 = __ZNSt3__211char_traitsIwE6lengthEPKw(11800) | 0;
  if ($6 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(35444);
  do if ($6 >>> 0 < 2) {
   HEAP8[35455] = $6;
   $$0$i$i = 35444;
  } else {
   $11 = $6 + 4 & -4;
   if ($11 >>> 0 > 1073741823) _abort(); else {
    $14 = __Znwj($11 << 2) | 0;
    HEAP32[8861] = $14;
    HEAP32[8863] = $11 | -2147483648;
    HEAP32[8862] = $6;
    $$0$i$i = $14;
    break;
   }
  } while (0);
  __ZNSt3__211char_traitsIwE4copyEPwPKwj($$0$i$i, 11800, $6) | 0;
  HEAP32[$1 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($$0$i$i + ($6 << 2) | 0, $1);
  ___cxa_atexit(262, 35444, ___dso_handle | 0) | 0;
 }
 STACKTOP = sp;
 return 35444;
}

function __ZNKSt3__220__time_get_c_storageIwE3__cEv($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $11 = 0, $14 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP8[29776] | 0)) if (___cxa_guard_acquire(29776) | 0) {
  HEAP32[8864] = 0;
  HEAP32[8865] = 0;
  HEAP32[8866] = 0;
  $6 = __ZNSt3__211char_traitsIwE6lengthEPKw(11848) | 0;
  if ($6 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(35456);
  do if ($6 >>> 0 < 2) {
   HEAP8[35467] = $6;
   $$0$i$i = 35456;
  } else {
   $11 = $6 + 4 & -4;
   if ($11 >>> 0 > 1073741823) _abort(); else {
    $14 = __Znwj($11 << 2) | 0;
    HEAP32[8864] = $14;
    HEAP32[8866] = $11 | -2147483648;
    HEAP32[8865] = $6;
    $$0$i$i = $14;
    break;
   }
  } while (0);
  __ZNSt3__211char_traitsIwE4copyEPwPKwj($$0$i$i, 11848, $6) | 0;
  HEAP32[$1 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($$0$i$i + ($6 << 2) | 0, $1);
  ___cxa_atexit(262, 35456, ___dso_handle | 0) | 0;
 }
 STACKTOP = sp;
 return 35456;
}

function __ZNKSt3__220__time_get_c_storageIwE3__XEv($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $11 = 0, $14 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP8[29752] | 0)) if (___cxa_guard_acquire(29752) | 0) {
  HEAP32[8855] = 0;
  HEAP32[8856] = 0;
  HEAP32[8857] = 0;
  $6 = __ZNSt3__211char_traitsIwE6lengthEPKw(11728) | 0;
  if ($6 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(35420);
  do if ($6 >>> 0 < 2) {
   HEAP8[35431] = $6;
   $$0$i$i = 35420;
  } else {
   $11 = $6 + 4 & -4;
   if ($11 >>> 0 > 1073741823) _abort(); else {
    $14 = __Znwj($11 << 2) | 0;
    HEAP32[8855] = $14;
    HEAP32[8857] = $11 | -2147483648;
    HEAP32[8856] = $6;
    $$0$i$i = $14;
    break;
   }
  } while (0);
  __ZNSt3__211char_traitsIwE4copyEPwPKwj($$0$i$i, 11728, $6) | 0;
  HEAP32[$1 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($$0$i$i + ($6 << 2) | 0, $1);
  ___cxa_atexit(262, 35420, ___dso_handle | 0) | 0;
 }
 STACKTOP = sp;
 return 35420;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $13 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) $10 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $10 = 10;
 do if ($10 >>> 0 < $2 >>> 0) {
  if ($6) $23 = HEAP32[$0 + 4 >> 2] | 0; else $23 = $5 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $10, $2 - $10 | 0, $23, 0, $23, $2, $1);
 } else {
  if ($6) $13 = HEAP32[$0 >> 2] | 0; else $13 = $0;
  __ZNSt3__211char_traitsIcE4moveEPcPKcj($13, $1, $2) | 0;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($13 + $2 | 0, $3);
  if ((HEAP8[$4 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $2;
   break;
  } else {
   HEAP8[$4 >> 0] = $2;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 2) << 2) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZN3HFM25NSSeqHFMChangeSingleInput11getIteratorERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $11 = 0, $18 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $5 = __Znwj(68) | 0;
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($3, $0 + 28 | 0);
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($4, $0 + 40 | 0);
 __ZN3HFM30NSIteratorHFMChangeSingleInputC2ERK6RepHFMNSt3__26vectorIiNS4_9allocatorIiEEEES8_($5, $1, $3, $4);
 $8 = HEAP32[$4 >> 2] | 0;
 if ($8 | 0) {
  $10 = $4 + 4 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if (($11 | 0) != ($8 | 0)) HEAP32[$10 >> 2] = $11 + (~(($11 + -4 - $8 | 0) >>> 2) << 2);
  __ZdlPv($8);
 }
 $18 = HEAP32[$3 >> 2] | 0;
 if (!$18) {
  STACKTOP = sp;
  return $5 | 0;
 }
 $20 = $3 + 4 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) != ($18 | 0)) HEAP32[$20 >> 2] = $21 + (~(($21 + -4 - $18 | 0) >>> 2) << 2);
 __ZdlPv($18);
 STACKTOP = sp;
 return $5 | 0;
}

function __ZN8optframe7NGESIndI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $13 = 0, $15 = 0, $16 = 0, $2 = 0, $25 = 0, $27 = 0, $28 = 0, $36 = 0, $39 = 0, $4 = 0, $5 = 0;
 $2 = HEAP32[$0 + 116 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 120 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
  __ZdlPv($2);
 }
 $13 = HEAP32[$0 + 104 >> 2] | 0;
 if ($13 | 0) {
  $15 = $0 + 108 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -32 - $13 | 0) >>> 5) << 5);
  __ZdlPv($13);
 }
 HEAP32[$0 + 32 >> 2] = 4920;
 $25 = HEAP32[$0 + 72 >> 2] | 0;
 if ($25 | 0) {
  $27 = $0 + 76 | 0;
  $28 = HEAP32[$27 >> 2] | 0;
  if (($28 | 0) != ($25 | 0)) HEAP32[$27 >> 2] = $28 + (~(($28 + -16 - $25 | 0) >>> 4) << 4);
  __ZdlPv($25);
 }
 HEAP32[$0 >> 2] = 5136;
 $36 = HEAP32[$0 + 20 >> 2] | 0;
 if ($36 | 0) {
  __ZN6RepHFMD2Ev($36);
  __ZdlPv($36);
 }
 $39 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$39) return;
 __ZdlPv($39);
 return;
}

function __ZNSt3__212_GLOBAL__N_115as_float_helperIdNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPFdPKcPPcEEET_RKS7_RKT0_PjT1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $12 = 0.0, $13 = 0, $14 = 0, $16 = 0, $3 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = 0;
 $8 = (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1;
 $10 = HEAP32[(___errno_location() | 0) >> 2] | 0;
 HEAP32[(___errno_location() | 0) >> 2] = 0;
 $12 = +_strtod($8, $3);
 $13 = ___errno_location() | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = $10;
 if (($14 | 0) == 34) __ZNSt3__212_GLOBAL__N_130throw_from_string_out_of_rangeERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0);
 $16 = HEAP32[$3 >> 2] | 0;
 if (($16 | 0) == ($8 | 0)) __ZNSt3__212_GLOBAL__N_129throw_from_string_invalid_argERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0);
 if ($2 | 0) HEAP32[$2 >> 2] = $16 - $8;
 STACKTOP = sp;
 return +$12;
}

function __ZN8optframe10NSIteratorI6RepHFMiE10firstValidERKNS_8SolutionIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $14 = 0, $21 = 0, $9 = 0, label = 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 511]($0);
 if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 127]($0) | 0) return;
 $9 = $1 + 20 | 0;
 $10 = $1 + 24 | 0;
 while (1) {
  $14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 56 >> 2] & 127]($0) | 0;
  $21 = ($14 | 0) == 0;
  if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 63]($14, HEAP32[$9 >> 2] | 0, HEAP32[$10 >> 2] | 0) | 0) break;
  if (!$21) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$14 >> 2] | 0) + 4 >> 2] & 511]($14);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 511]($0);
  if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 127]($0) | 0) {
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) return;
 if ($21) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$14 >> 2] | 0) + 4 >> 2] & 511]($14);
 return;
}

function __ZN8optframe10NSIteratorI6RepHFMiE9nextValidERKNS_8SolutionIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $14 = 0, $21 = 0, $9 = 0, label = 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 511]($0);
 if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 127]($0) | 0) return;
 $9 = $1 + 20 | 0;
 $10 = $1 + 24 | 0;
 while (1) {
  $14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 56 >> 2] & 127]($0) | 0;
  $21 = ($14 | 0) == 0;
  if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 63]($14, HEAP32[$9 >> 2] | 0, HEAP32[$10 >> 2] | 0) | 0) break;
  if (!$21) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$14 >> 2] | 0) + 4 >> 2] & 511]($14);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 511]($0);
  if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 127]($0) | 0) {
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) return;
 if ($21) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$14 >> 2] | 0) + 4 >> 2] & 511]($14);
 return;
}

function __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$07$i$i = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = ($7 | 0) / 12 | 0;
 if (!$7) return;
 if ($8 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 * 12 | 0);
 $14 = HEAP32[$1 >> 2] | 0;
 $15 = HEAP32[$4 >> 2] | 0;
 if (($14 | 0) == ($15 | 0)) return;
 $$07$i$i = $14;
 $17 = $11;
 do {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($17, $$07$i$i);
  $$07$i$i = $$07$i$i + 12 | 0;
  $17 = (HEAP32[$2 >> 2] | 0) + 12 | 0;
  HEAP32[$2 >> 2] = $17;
 } while (($$07$i$i | 0) != ($15 | 0));
 return;
}

function __ZNK3HFM23MoveNEIGHAddSingleInputeqERKN8optframe4MoveI6RepHFMiEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $15 = 0, $16 = 0, $20 = 0, $23 = 0, $24 = 0, $28 = 0, $30 = 0, $35 = 0, label = 0;
 if ((HEAP32[$1 + 20 >> 2] | 0) != (HEAP32[$0 + 20 >> 2] | 0)) {
  $35 = 0;
  return $35 | 0;
 }
 if ((HEAP32[$1 + 24 >> 2] | 0) != (HEAP32[$0 + 24 >> 2] | 0)) {
  $35 = 0;
  return $35 | 0;
 }
 $12 = $1 + 28 | 0;
 $15 = HEAP32[$12 + 4 >> 2] | 0;
 $16 = HEAP32[$12 >> 2] | 0;
 $20 = HEAP32[$0 + 28 >> 2] | 0;
 $23 = $16;
 $24 = $15;
 if (($15 - $16 | 0) != ((HEAP32[$0 + 32 >> 2] | 0) - $20 | 0)) {
  $35 = 0;
  return $35 | 0;
 }
 if (($23 | 0) == ($24 | 0)) {
  $35 = 1;
  return $35 | 0;
 }
 $28 = $23;
 $30 = $20;
 while (1) {
  if (!(+HEAPF64[$28 >> 3] == +HEAPF64[$30 >> 3])) {
   $35 = 0;
   label = 8;
   break;
  }
  $28 = $28 + 8 | 0;
  if (($28 | 0) == ($24 | 0)) {
   $35 = 1;
   label = 8;
   break;
  } else $30 = $30 + 8 | 0;
 }
 if ((label | 0) == 8) return $35 | 0;
 return 0;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $13 = 0, $14 = 0, $18 = 0;
 do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $4) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, $1, $2, $3); else if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 >> 2] | 0, $4) | 0) {
  $13 = $1 + 32 | 0;
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $14 = $1 + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$13 >> 2] = $3;
    HEAP32[$14 >> 2] = $2;
    $18 = $1 + 40 | 0;
    HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1;
    if ((HEAP32[$1 + 36 >> 2] | 0) == 1) if ((HEAP32[$1 + 24 >> 2] | 0) == 2) HEAP8[$1 + 54 >> 0] = 1;
    HEAP32[$1 + 44 >> 2] = 4;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$13 >> 2] = 1;
 } while (0);
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $11 = 0, $18 = 0, $19 = 0, $5 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 HEAP32[$4 >> 2] = $2;
 $8 = ___uselocale(HEAP32[$0 + 8 >> 2] | 0) | 0;
 $9 = _wcrtomb($5, 0, $1) | 0;
 if ($8 | 0) ___uselocale($8) | 0;
 L4 : do switch ($9 | 0) {
 case 0:
 case -1:
  {
   $$019 = 2;
   break;
  }
 default:
  {
   $11 = $9 + -1 | 0;
   if ($11 >>> 0 > ($3 - (HEAP32[$4 >> 2] | 0) | 0) >>> 0) $$019 = 1; else {
    $$0 = $5;
    $$018 = $11;
    while (1) {
     if (!$$018) {
      $$019 = 0;
      break L4;
     }
     $18 = HEAP8[$$0 >> 0] | 0;
     $19 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = $19 + 1;
     HEAP8[$19 >> 0] = $18;
     $$0 = $$0 + 1 | 0;
     $$018 = $$018 + -1 | 0;
    }
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$019 | 0;
}

function _ungetc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$pr = 0, $10 = 0, $13 = 0, $17 = 0, $20 = 0, $23 = 0, $24 = 0, $7 = 0, $8 = 0, label = 0;
 do if (($0 | 0) == -1) $$1 = -1; else {
  if ((HEAP32[$1 + 76 >> 2] | 0) > -1) $10 = ___lockfile($1) | 0; else $10 = 0;
  $7 = $1 + 4 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (!$8) {
   ___toread($1) | 0;
   $$pr = HEAP32[$7 >> 2] | 0;
   $13 = ($10 | 0) != 0;
   if (!$$pr) $24 = $13; else {
    $17 = $$pr;
    $23 = $13;
    label = 7;
   }
  } else {
   $17 = $8;
   $23 = ($10 | 0) != 0;
   label = 7;
  }
  if ((label | 0) == 7) if ($17 >>> 0 > ((HEAP32[$1 + 44 >> 2] | 0) + -8 | 0) >>> 0) {
   $20 = $17 + -1 | 0;
   HEAP32[$7 >> 2] = $20;
   HEAP8[$20 >> 0] = $0;
   HEAP32[$1 >> 2] = HEAP32[$1 >> 2] & -17;
   if (!$23) {
    $$1 = $0;
    break;
   }
   ___unlockfile($1);
   $$1 = $0;
   break;
  } else $24 = $23;
  if ($24) {
   ___unlockfile($1);
   $$1 = -1;
  } else $$1 = -1;
 } while (0);
 return $$1 | 0;
}

function __ZNSt3__26vectorINS0_INS_4pairIiiEENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$07$i$i = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = ($7 | 0) / 12 | 0;
 if (!$7) return;
 if ($8 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 * 12 | 0);
 $14 = HEAP32[$1 >> 2] | 0;
 $15 = HEAP32[$4 >> 2] | 0;
 if (($14 | 0) == ($15 | 0)) return;
 $$07$i$i = $14;
 $17 = $11;
 do {
  __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEEC2ERKS5_($17, $$07$i$i);
  $$07$i$i = $$07$i$i + 12 | 0;
  $17 = (HEAP32[$2 >> 2] | 0) + 12 | 0;
  HEAP32[$2 >> 2] = $17;
 } while (($$07$i$i | 0) != ($15 | 0));
 return;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$2 = 0, $3 = 0, $6 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, $1, 0) | 0) $$2 = 1; else if (!$1) $$2 = 0; else {
  $6 = ___dynamic_cast($1, 3048, 3032, 0) | 0;
  if (!$6) $$2 = 0; else {
   dest = $3 + 4 | 0;
   stop = dest + 52 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$3 >> 2] = $6;
   HEAP32[$3 + 8 >> 2] = $0;
   HEAP32[$3 + 12 >> 2] = -1;
   HEAP32[$3 + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 31]($6, $3, HEAP32[$2 >> 2] | 0, 1);
   if ((HEAP32[$3 + 24 >> 2] | 0) == 1) {
    HEAP32[$2 >> 2] = HEAP32[$3 + 16 >> 2];
    $$0 = 1;
   } else $$0 = 0;
   $$2 = $$0;
  }
 }
 STACKTOP = sp;
 return $$2 | 0;
}

function _fputc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $13 = 0, $14 = 0, $24 = 0, $25 = 0, $31 = 0, $5 = 0, $6 = 0, label = 0;
 $5 = $0 & 255;
 $6 = $0 & 255;
 if ((HEAP32[$1 + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($1) | 0)) label = 3; else {
  if (($6 | 0) == (HEAP8[$1 + 75 >> 0] | 0)) label = 10; else {
   $24 = $1 + 20 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   if ($25 >>> 0 < (HEAP32[$1 + 16 >> 2] | 0) >>> 0) {
    HEAP32[$24 >> 2] = $25 + 1;
    HEAP8[$25 >> 0] = $5;
    $31 = $6;
   } else label = 10;
  }
  if ((label | 0) == 10) $31 = ___overflow($1, $0) | 0;
  ___unlockfile($1);
  $$0 = $31;
 }
 do if ((label | 0) == 3) {
  if (($6 | 0) != (HEAP8[$1 + 75 >> 0] | 0)) {
   $13 = $1 + 20 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   if ($14 >>> 0 < (HEAP32[$1 + 16 >> 2] | 0) >>> 0) {
    HEAP32[$13 >> 2] = $14 + 1;
    HEAP8[$14 >> 0] = $5;
    $$0 = $6;
    break;
   }
  }
  $$0 = ___overflow($1, $0) | 0;
 } while (0);
 return $$0 | 0;
}

function _strlen($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$015$lcssa = 0, $$01519 = 0, $$1$lcssa = 0, $$pn = 0, $$sink = 0, $1 = 0, $10 = 0, $19 = 0, $23 = 0, $6 = 0, label = 0;
 $1 = $0;
 L1 : do if (!($1 & 3)) {
  $$015$lcssa = $0;
  label = 4;
 } else {
  $$01519 = $0;
  $23 = $1;
  while (1) {
   if (!(HEAP8[$$01519 >> 0] | 0)) {
    $$sink = $23;
    break L1;
   }
   $6 = $$01519 + 1 | 0;
   $23 = $6;
   if (!($23 & 3)) {
    $$015$lcssa = $6;
    label = 4;
    break;
   } else $$01519 = $6;
  }
 } while (0);
 if ((label | 0) == 4) {
  $$0 = $$015$lcssa;
  while (1) {
   $10 = HEAP32[$$0 >> 2] | 0;
   if (!(($10 & -2139062144 ^ -2139062144) & $10 + -16843009)) $$0 = $$0 + 4 | 0; else break;
  }
  if (!(($10 & 255) << 24 >> 24)) $$1$lcssa = $$0; else {
   $$pn = $$0;
   while (1) {
    $19 = $$pn + 1 | 0;
    if (!(HEAP8[$19 >> 0] | 0)) {
     $$1$lcssa = $19;
     break;
    } else $$pn = $19;
   }
  }
  $$sink = $$1$lcssa;
 }
 return $$sink - $1 | 0;
}

function __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2ERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$07$i$i = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = ($7 | 0) / 12 | 0;
 if (!$7) return;
 if ($8 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 * 12 | 0);
 $14 = HEAP32[$1 >> 2] | 0;
 $15 = HEAP32[$4 >> 2] | 0;
 if (($14 | 0) == ($15 | 0)) return;
 $$07$i$i = $14;
 $17 = $11;
 do {
  __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($17, $$07$i$i);
  $$07$i$i = $$07$i$i + 12 | 0;
  $17 = (HEAP32[$2 >> 2] | 0) + 12 | 0;
  HEAP32[$2 >> 2] = $17;
 } while (($$07$i$i | 0) != ($15 | 0));
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $13 = 0, $9 = 0;
 L1 : do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3); else {
  $9 = HEAP32[$0 + 12 >> 2] | 0;
  $10 = $0 + 16 + ($9 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0 + 16 | 0, $1, $2, $3);
  if (($9 | 0) > 1) {
   $13 = $1 + 54 | 0;
   $$0 = $0 + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($$0, $1, $2, $3);
    if (HEAP8[$13 >> 0] | 0) break L1;
    $$0 = $$0 + 8 | 0;
   } while ($$0 >>> 0 < $10 >>> 0);
  }
 } while (0);
 return;
}

function __ZN9scannerpp7ScannerC2EPNS_4FileE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 3192;
 $3 = $0 + 12 | 0;
 $4 = $0 + 28 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP8[$3 + 12 >> 0] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$4 + 12 >> 2] = 0;
 HEAP32[$4 + 16 >> 2] = 0;
 HEAP32[$4 + 20 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $9 = $2 + 11 | 0;
 HEAP8[$9 >> 0] = 4;
 HEAP32[$2 >> 2] = 537464074;
 HEAP8[$2 + 4 >> 0] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($3, $2) | 0;
 if ((HEAP8[$9 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__220__time_get_c_storageIcE3__rEv($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $11 = 0, $12 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP8[29688] | 0)) if (___cxa_guard_acquire(29688) | 0) {
  HEAP32[8658] = 0;
  HEAP32[8659] = 0;
  HEAP32[8660] = 0;
  $6 = __ZNSt3__211char_traitsIcE6lengthEPKc(27285) | 0;
  if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(34632);
  if ($6 >>> 0 < 11) {
   HEAP8[34643] = $6;
   $$0$i$i = 34632;
  } else {
   $11 = $6 + 16 & -16;
   $12 = __Znwj($11) | 0;
   HEAP32[8658] = $12;
   HEAP32[8660] = $11 | -2147483648;
   HEAP32[8659] = $6;
   $$0$i$i = $12;
  }
  __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i$i, 27285, $6) | 0;
  HEAP8[$1 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$0$i$i + $6 | 0, $1);
  ___cxa_atexit(258, 34632, ___dso_handle | 0) | 0;
 }
 STACKTOP = sp;
 return 34632;
}

function __ZNKSt3__220__time_get_c_storageIcE3__cEv($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $11 = 0, $12 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP8[29696] | 0)) if (___cxa_guard_acquire(29696) | 0) {
  HEAP32[8661] = 0;
  HEAP32[8662] = 0;
  HEAP32[8663] = 0;
  $6 = __ZNSt3__211char_traitsIcE6lengthEPKc(27297) | 0;
  if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(34644);
  if ($6 >>> 0 < 11) {
   HEAP8[34655] = $6;
   $$0$i$i = 34644;
  } else {
   $11 = $6 + 16 & -16;
   $12 = __Znwj($11) | 0;
   HEAP32[8661] = $12;
   HEAP32[8663] = $11 | -2147483648;
   HEAP32[8662] = $6;
   $$0$i$i = $12;
  }
  __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i$i, 27297, $6) | 0;
  HEAP8[$1 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$0$i$i + $6 | 0, $1);
  ___cxa_atexit(258, 34644, ___dso_handle | 0) | 0;
 }
 STACKTOP = sp;
 return 34644;
}

function __ZNKSt3__220__time_get_c_storageIcE3__XEv($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $11 = 0, $12 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP8[29672] | 0)) if (___cxa_guard_acquire(29672) | 0) {
  HEAP32[8652] = 0;
  HEAP32[8653] = 0;
  HEAP32[8654] = 0;
  $6 = __ZNSt3__211char_traitsIcE6lengthEPKc(27267) | 0;
  if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(34608);
  if ($6 >>> 0 < 11) {
   HEAP8[34619] = $6;
   $$0$i$i = 34608;
  } else {
   $11 = $6 + 16 & -16;
   $12 = __Znwj($11) | 0;
   HEAP32[8652] = $12;
   HEAP32[8654] = $11 | -2147483648;
   HEAP32[8653] = $6;
   $$0$i$i = $12;
  }
  __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i$i, 27267, $6) | 0;
  HEAP8[$1 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$0$i$i + $6 | 0, $1);
  ___cxa_atexit(258, 34608, ___dso_handle | 0) | 0;
 }
 STACKTOP = sp;
 return 34608;
}
function __ZNKSt3__220__time_get_c_storageIcE3__xEv($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $11 = 0, $12 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP8[29680] | 0)) if (___cxa_guard_acquire(29680) | 0) {
  HEAP32[8655] = 0;
  HEAP32[8656] = 0;
  HEAP32[8657] = 0;
  $6 = __ZNSt3__211char_traitsIcE6lengthEPKc(27276) | 0;
  if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(34620);
  if ($6 >>> 0 < 11) {
   HEAP8[34631] = $6;
   $$0$i$i = 34620;
  } else {
   $11 = $6 + 16 & -16;
   $12 = __Znwj($11) | 0;
   HEAP32[8655] = $12;
   HEAP32[8657] = $11 | -2147483648;
   HEAP32[8656] = $6;
   $$0$i$i = $12;
  }
  __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i$i, 27276, $6) | 0;
  HEAP8[$1 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$0$i$i + $6 | 0, $1);
  ___cxa_atexit(258, 34620, ___dso_handle | 0) | 0;
 }
 STACKTOP = sp;
 return 34620;
}

function __ZNKSt3__28numpunctIwE12do_falsenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $3 = __ZNSt3__211char_traitsIwE6lengthEPKw(13752) | 0;
 if ($3 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 do if ($3 >>> 0 < 2) {
  HEAP8[$0 + 8 + 3 >> 0] = $3;
  $$0$i$i = $0;
 } else {
  $10 = $3 + 4 & -4;
  if ($10 >>> 0 > 1073741823) _abort(); else {
   $13 = __Znwj($10 << 2) | 0;
   HEAP32[$0 >> 2] = $13;
   HEAP32[$0 + 8 >> 2] = $10 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $3;
   $$0$i$i = $13;
   break;
  }
 } while (0);
 __ZNSt3__211char_traitsIwE4copyEPwPKwj($$0$i$i, 13752, $3) | 0;
 HEAP32[$2 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$0$i$i + ($3 << 2) | 0, $2);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28numpunctIwE11do_truenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $3 = __ZNSt3__211char_traitsIwE6lengthEPKw(13776) | 0;
 if ($3 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 do if ($3 >>> 0 < 2) {
  HEAP8[$0 + 8 + 3 >> 0] = $3;
  $$0$i$i = $0;
 } else {
  $10 = $3 + 4 & -4;
  if ($10 >>> 0 > 1073741823) _abort(); else {
   $13 = __Znwj($10 << 2) | 0;
   HEAP32[$0 >> 2] = $13;
   HEAP32[$0 + 8 >> 2] = $10 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $3;
   $$0$i$i = $13;
   break;
  }
 } while (0);
 __ZNSt3__211char_traitsIwE4copyEPwPKwj($$0$i$i, 13776, $3) | 0;
 HEAP32[$2 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$0$i$i + ($3 << 2) | 0, $2);
 STACKTOP = sp;
 return;
}

function __ZNK8optframe9Direction8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sink = 0, $5 = 0, $6 = 0, dest = 0, src = 0, stop = 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 64 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $6 = __Znwj(16) | 0;
 HEAP32[$0 >> 2] = $6;
 HEAP32[$0 + 8 >> 2] = -2147483632;
 HEAP32[$0 + 4 >> 2] = 13;
 if ($5) {
  dest = $6;
  src = 20830;
  stop = dest + 13 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $$sink = $6 + 13 | 0;
  HEAP8[$$sink >> 0] = 0;
  return;
 } else {
  dest = $6;
  src = 20844;
  stop = dest + 13 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $$sink = $6 + 13 | 0;
  HEAP8[$$sink >> 0] = 0;
  return;
 }
}

function __ZNSt3__211__stdoutbufIwE4syncEv($0) {
 $0 = $0 | 0;
 var $$2 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 8 | 0;
 $2 = sp;
 $3 = $0 + 36 | 0;
 $4 = $0 + 40 | 0;
 $5 = $1 + 8 | 0;
 $6 = $1;
 $7 = $0 + 32 | 0;
 L1 : while (1) {
  $8 = HEAP32[$3 >> 2] | 0;
  $13 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 31]($8, HEAP32[$4 >> 2] | 0, $1, $5, $2) | 0;
  $15 = (HEAP32[$2 >> 2] | 0) - $6 | 0;
  if ((_fwrite($1, 1, $15, HEAP32[$7 >> 2] | 0) | 0) != ($15 | 0)) {
   $$2 = -1;
   break;
  }
  switch ($13 | 0) {
  case 1:
   break;
  case 2:
   {
    $$2 = -1;
    break L1;
    break;
   }
  default:
   {
    label = 4;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) $$2 = ((_fflush(HEAP32[$7 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__211__stdoutbufIcE4syncEv($0) {
 $0 = $0 | 0;
 var $$2 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 8 | 0;
 $2 = sp;
 $3 = $0 + 36 | 0;
 $4 = $0 + 40 | 0;
 $5 = $1 + 8 | 0;
 $6 = $1;
 $7 = $0 + 32 | 0;
 L1 : while (1) {
  $8 = HEAP32[$3 >> 2] | 0;
  $13 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 31]($8, HEAP32[$4 >> 2] | 0, $1, $5, $2) | 0;
  $15 = (HEAP32[$2 >> 2] | 0) - $6 | 0;
  if ((_fwrite($1, 1, $15, HEAP32[$7 >> 2] | 0) | 0) != ($15 | 0)) {
   $$2 = -1;
   break;
  }
  switch ($13 | 0) {
  case 1:
   break;
  case 2:
   {
    $$2 = -1;
    break L1;
    break;
   }
  default:
   {
    label = 4;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) $$2 = ((_fflush(HEAP32[$7 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$34 = 0, $$pr = 0, $14 = 0, $16 = 0, $24 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0;
 $3 = $0 + 4 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) != 266;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = (HEAP32[$2 >> 2] | 0) - $7 | 0;
 $$34 = $8 >>> 0 < 2147483647 ? $8 << 1 : -1;
 $$ = ($$34 | 0) == 0 ? 4 : $$34;
 $14 = (HEAP32[$1 >> 2] | 0) - $7 >> 2;
 $16 = _realloc($5 ? $7 : 0, $$) | 0;
 if (!$16) __ZSt17__throw_bad_allocv();
 if ($5) {
  HEAP32[$0 >> 2] = $16;
  $24 = $16;
 } else {
  $$pr = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $16;
  if (!$$pr) $24 = $16; else {
   FUNCTION_TABLE_vi[HEAP32[$3 >> 2] & 511]($$pr);
   $24 = HEAP32[$0 >> 2] | 0;
  }
 }
 HEAP32[$3 >> 2] = 267;
 HEAP32[$1 >> 2] = $24 + ($14 << 2);
 HEAP32[$2 >> 2] = (HEAP32[$0 >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$34 = 0, $$pr = 0, $14 = 0, $16 = 0, $24 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0;
 $3 = $0 + 4 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) != 266;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = (HEAP32[$2 >> 2] | 0) - $7 | 0;
 $$34 = $8 >>> 0 < 2147483647 ? $8 << 1 : -1;
 $$ = ($$34 | 0) == 0 ? 4 : $$34;
 $14 = (HEAP32[$1 >> 2] | 0) - $7 >> 2;
 $16 = _realloc($5 ? $7 : 0, $$) | 0;
 if (!$16) __ZSt17__throw_bad_allocv();
 if ($5) {
  HEAP32[$0 >> 2] = $16;
  $24 = $16;
 } else {
  $$pr = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $16;
  if (!$$pr) $24 = $16; else {
   FUNCTION_TABLE_vi[HEAP32[$3 >> 2] & 511]($$pr);
   $24 = HEAP32[$0 >> 2] | 0;
  }
 }
 HEAP32[$3 >> 2] = 267;
 HEAP32[$1 >> 2] = $24 + ($14 << 2);
 HEAP32[$2 >> 2] = (HEAP32[$0 >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function _scalbn($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 var $$0 = 0.0, $$020 = 0, $10 = 0.0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $3 = 0.0, $4 = 0, $5 = 0, $7 = 0;
 if (($1 | 0) > 1023) {
  $3 = $0 * 8988465674311579538646525.0e283;
  $4 = $1 + -1023 | 0;
  $5 = ($4 | 0) > 1023;
  $7 = $1 + -2046 | 0;
  $$0 = $5 ? $3 * 8988465674311579538646525.0e283 : $3;
  $$020 = $5 ? (($7 | 0) < 1023 ? $7 : 1023) : $4;
 } else if (($1 | 0) < -1022) {
  $10 = $0 * 2.2250738585072014e-308;
  $11 = $1 + 1022 | 0;
  $12 = ($11 | 0) < -1022;
  $14 = $1 + 2044 | 0;
  $$0 = $12 ? $10 * 2.2250738585072014e-308 : $10;
  $$020 = $12 ? (($14 | 0) > -1022 ? $14 : -1022) : $11;
 } else {
  $$0 = $0;
  $$020 = $1;
 }
 $17 = _bitshift64Shl($$020 + 1023 | 0, 0, 52) | 0;
 $18 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = $17;
 HEAP32[tempDoublePtr + 4 >> 2] = $18;
 return +($$0 * +HEAPF64[tempDoublePtr >> 3]);
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $17 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 4 >> 2] & 127]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $17 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 288 | 0, $5, $4, 0) | 0) - $11 | 0;
 if (($17 | 0) < 288) HEAP32[$1 >> 2] = (($17 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $17 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 4 >> 2] & 127]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $17 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 288 | 0, $5, $4, 0) | 0) - $11 | 0;
 if (($17 | 0) < 288) HEAP32[$1 >> 2] = (($17 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $11 = 0, $16 = 0, $18 = 0, $19 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $6 = sp + 16 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 $9 = sp + 8 | 0;
 HEAP32[$7 >> 2] = $6 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0, $6, $7, $3, $4, $5);
 $11 = $8;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$9 >> 2] = $6;
 $16 = __ZNSt3__212_GLOBAL__N_17countofIwEEjPKT_S4_($1, HEAP32[$2 >> 2] | 0) | 0;
 $18 = ___uselocale(HEAP32[$0 >> 2] | 0) | 0;
 $19 = _mbsrtowcs($1, $9, $16, $8) | 0;
 if ($18 | 0) ___uselocale($18) | 0;
 if (($19 | 0) == -1) __ZNSt3__221__throw_runtime_errorEPKc(0); else {
  HEAP32[$2 >> 2] = $1 + ($19 << 2);
  STACKTOP = sp;
  return;
 }
}

function ___strerror_l($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $7 = 0, label = 0, $$113$looptemp = 0;
 $$016 = 0;
 while (1) {
  if ((HEAPU8[23880 + $$016 >> 0] | 0) == ($0 | 0)) {
   label = 2;
   break;
  }
  $7 = $$016 + 1 | 0;
  if (($7 | 0) == 87) {
   $$01214 = 23968;
   $$115 = 87;
   label = 5;
   break;
  } else $$016 = $7;
 }
 if ((label | 0) == 2) if (!$$016) $$012$lcssa = 23968; else {
  $$01214 = 23968;
  $$115 = $$016;
  label = 5;
 }
 if ((label | 0) == 5) while (1) {
  label = 0;
  $$113 = $$01214;
  do {
   $$113$looptemp = $$113;
   $$113 = $$113 + 1 | 0;
  } while ((HEAP8[$$113$looptemp >> 0] | 0) != 0);
  $$115 = $$115 + -1 | 0;
  if (!$$115) {
   $$012$lcssa = $$113;
   break;
  } else {
   $$01214 = $$113;
   label = 5;
  }
 }
 return ___lctrans($$012$lcssa, HEAP32[$1 + 20 >> 2] | 0) | 0;
}

function __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$34 = 0, $$pr = 0, $14 = 0, $16 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0;
 $3 = $0 + 4 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) != 266;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = (HEAP32[$2 >> 2] | 0) - $7 | 0;
 $$34 = $8 >>> 0 < 2147483647 ? $8 << 1 : -1;
 $$ = ($$34 | 0) == 0 ? 1 : $$34;
 $14 = (HEAP32[$1 >> 2] | 0) - $7 | 0;
 $16 = _realloc($5 ? $7 : 0, $$) | 0;
 if (!$16) __ZSt17__throw_bad_allocv();
 if ($5) {
  HEAP32[$0 >> 2] = $16;
  $23 = $16;
 } else {
  $$pr = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $16;
  if (!$$pr) $23 = $16; else {
   FUNCTION_TABLE_vi[HEAP32[$3 >> 2] & 511]($$pr);
   $23 = HEAP32[$0 >> 2] | 0;
  }
 }
 HEAP32[$3 >> 2] = 267;
 HEAP32[$1 >> 2] = $23 + $14;
 HEAP32[$2 >> 2] = (HEAP32[$0 >> 2] | 0) + $$;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $16 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $10 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$7 >> 2] >> 2] & 127]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $16 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $10, $10 + 168 | 0, $5, $4, 0) | 0) - $10 | 0;
 if (($16 | 0) < 168) HEAP32[$1 >> 2] = (($16 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $16 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $10 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$7 >> 2] >> 2] & 127]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $16 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $10, $10 + 168 | 0, $5, $4, 0) | 0) - $10 | 0;
 if (($16 | 0) < 168) HEAP32[$1 >> 2] = (($16 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$sroa$speculated = 0, $11 = 0, $14 = 0, $18 = 0, $19 = 0, $20 = 0, $6 = 0, $7 = 0;
 $6 = HEAP8[$0 + 11 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) $11 = HEAP32[$0 + 4 >> 2] | 0; else $11 = $6 & 255;
 if (($4 | 0) == -1 | $11 >>> 0 < $1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
 $14 = $11 - $1 | 0;
 $$sroa$speculated = $14 >>> 0 < $2 >>> 0 ? $14 : $2;
 if ($7) $18 = HEAP32[$0 >> 2] | 0; else $18 = $0;
 $19 = $$sroa$speculated >>> 0 > $4 >>> 0;
 $20 = __ZNSt3__211char_traitsIcE7compareEPKcS3_j($18 + $1 | 0, $3, $19 ? $4 : $$sroa$speculated) | 0;
 if (!$20) return ($$sroa$speculated >>> 0 < $4 >>> 0 ? -1 : $19 & 1) | 0; else return $20 | 0;
 return 0;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $16 = 0, $17 = 0, $7 = 0, $8 = 0;
 if (!(HEAP32[$0 + 64 >> 2] | 0)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $7 = $0 + 12 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ((HEAP32[$0 + 8 >> 2] | 0) >>> 0 >= $8 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($1 | 0) == -1) {
  HEAP32[$7 >> 2] = $8 + -1;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$0 + 88 >> 2] & 16)) {
  $16 = $1 & 255;
  $17 = $8 + -1 | 0;
  if ($16 << 24 >> 24 == (HEAP8[$17 >> 0] | 0)) {
   $$pre$phi7Z2D = $16;
   $$pre$phiZ2D = $17;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi7Z2D = $1 & 255;
  $$pre$phiZ2D = $8 + -1 | 0;
 }
 HEAP32[$7 >> 2] = $$pre$phiZ2D;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi7Z2D;
 $$0 = $1;
 return $$0 | 0;
}

function ___overflow($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $1 & 255;
 HEAP8[$2 >> 0] = $3;
 $4 = $0 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) if (!(___towrite($0) | 0)) {
  $12 = HEAP32[$4 >> 2] | 0;
  label = 4;
 } else $$0 = -1; else {
  $12 = $5;
  label = 4;
 }
 do if ((label | 0) == 4) {
  $9 = $0 + 20 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($10 >>> 0 < $12 >>> 0) {
   $13 = $1 & 255;
   if (($13 | 0) != (HEAP8[$0 + 75 >> 0] | 0)) {
    HEAP32[$9 >> 2] = $10 + 1;
    HEAP8[$10 >> 0] = $3;
    $$0 = $13;
    break;
   }
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, $2, 1) | 0) == 1) $$0 = HEAPU8[$2 >> 0] | 0; else $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0.0, $$0$ph = 0.0, $$1 = 0.0, $11 = 0, $3 = 0, $6 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0.0;
 } else {
  $6 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  HEAP32[(___errno_location() | 0) >> 2] = 0;
  $9 = +_strtold_l($0, $3, __ZNSt3__26__clocEv() | 0);
  $11 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  if (!$11) HEAP32[(___errno_location() | 0) >> 2] = $6;
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) if (($11 | 0) == 34) {
   $$0$ph = $9;
   label = 6;
  } else $$0 = $9; else {
   $$0$ph = 0.0;
   label = 6;
  }
  if ((label | 0) == 6) {
   HEAP32[$2 >> 2] = 4;
   $$0 = $$0$ph;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;
 return +$$1;
}

function __ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0.0, $$0$ph = 0.0, $$1 = 0.0, $11 = 0, $3 = 0, $6 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0.0;
 } else {
  $6 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  HEAP32[(___errno_location() | 0) >> 2] = 0;
  $9 = +_strtof_l($0, $3, __ZNSt3__26__clocEv() | 0);
  $11 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  if (!$11) HEAP32[(___errno_location() | 0) >> 2] = $6;
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) if (($11 | 0) == 34) {
   $$0$ph = $9;
   label = 6;
  } else $$0 = $9; else {
   $$0$ph = 0.0;
   label = 6;
  }
  if ((label | 0) == 6) {
   HEAP32[$2 >> 2] = 4;
   $$0 = $$0$ph;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;
 return +$$1;
}

function __ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0.0, $$0$ph = 0.0, $$1 = 0.0, $11 = 0, $3 = 0, $6 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0.0;
 } else {
  $6 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  HEAP32[(___errno_location() | 0) >> 2] = 0;
  $9 = +_strtod_l($0, $3, __ZNSt3__26__clocEv() | 0);
  $11 = HEAP32[(___errno_location() | 0) >> 2] | 0;
  if (!$11) HEAP32[(___errno_location() | 0) >> 2] = $6;
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) if (($11 | 0) == 34) {
   $$0$ph = $9;
   label = 6;
  } else $$0 = $9; else {
   $$0$ph = 0.0;
   label = 6;
  }
  if ((label | 0) == 6) {
   HEAP32[$2 >> 2] = 4;
   $$0 = $$0$ph;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;
 return +$$1;
}

function __ZN9scannerpp4FileD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $2 = 0, $20 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0;
 HEAP32[$0 >> 2] = 3212;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $2 + 8 | 0;
 $4 = $2 + 72 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) label = 4; else {
  $10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 24 >> 2] & 127]($3) | 0;
  if (!(_fclose($5) | 0)) {
   HEAP32[$4 >> 2] = 0;
   if ($10 | 0) label = 4;
  } else label = 4;
 }
 if ((label | 0) == 4) {
  $16 = $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj($16, HEAP32[$16 + 16 >> 2] | 4);
 }
 $20 = HEAP32[$1 >> 2] | 0;
 if ($20 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$20 >> 2] | 0) + 4 >> 2] & 511]($20);
 $25 = $0 + 8 | 0;
 if ((HEAP8[$25 + 11 >> 0] | 0) >= 0) return;
 __ZdlPv(HEAP32[$25 >> 2] | 0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) $10 = HEAP32[$0 + 4 >> 2] | 0; else $10 = $5 & 255;
 do if ($10 >>> 0 < $1 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($0, $1 - $10 | 0, $2) | 0; else if ($6) {
  $14 = (HEAP32[$0 >> 2] | 0) + $1 | 0;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($14, $3);
  HEAP32[$0 + 4 >> 2] = $1;
  break;
 } else {
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($0 + $1 | 0, $3);
  HEAP8[$4 >> 0] = $1;
  break;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN3HFM24MoveHFMChangeSingleInput5applyER6RepHFMPi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $14 = 0, $16 = 0, $18 = 0, $4 = 0, $7 = 0, $9 = 0;
 $4 = HEAP8[$0 + 24 >> 0] | 0;
 $7 = HEAP32[$0 + 36 >> 2] | 0;
 $9 = HEAP32[$0 + 20 >> 2] | 0;
 $11 = (HEAP32[$1 >> 2] | 0) + ($9 << 3) + 4 | 0;
 HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + ($4 << 24 >> 24 ? 0 - $7 | 0 : $7);
 $14 = __Znwj(40) | 0;
 $16 = HEAP32[$0 + 28 >> 2] | 0;
 $18 = HEAP32[$0 + 32 >> 2] | 0;
 HEAP8[$14 + 16 >> 0] = 0;
 HEAP32[$14 + 8 >> 2] = 2;
 HEAP8[$14 + 15 >> 0] = 0;
 HEAP8[$14 + 12 >> 0] = 1;
 HEAP8[$14 + 13 >> 0] = 1;
 HEAP8[$14 + 14 >> 0] = 0;
 HEAP32[$14 >> 2] = 5736;
 HEAP32[$14 + 20 >> 2] = $9;
 HEAP8[$14 + 24 >> 0] = $4 ^ 1;
 HEAP32[$14 + 28 >> 2] = $16;
 HEAP32[$14 + 32 >> 2] = $18;
 HEAP32[$14 + 36 >> 2] = $7;
 return $14 | 0;
}

function _frexp($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 var $$0 = 0.0, $$016 = 0.0, $2 = 0, $3 = 0, $4 = 0, $9 = 0.0, $storemerge = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $4 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 switch ($4 & 2047) {
 case 0:
  {
   if ($0 != 0.0) {
    $9 = +_frexp($0 * 18446744073709551616.0, $1);
    $$016 = $9;
    $storemerge = (HEAP32[$1 >> 2] | 0) + -64 | 0;
   } else {
    $$016 = $0;
    $storemerge = 0;
   }
   HEAP32[$1 >> 2] = $storemerge;
   $$0 = $$016;
   break;
  }
 case 2047:
  {
   $$0 = $0;
   break;
  }
 default:
  {
   HEAP32[$1 >> 2] = ($4 & 2047) + -1022;
   HEAP32[tempDoublePtr >> 2] = $2;
   HEAP32[tempDoublePtr + 4 >> 2] = $3 & -2146435073 | 1071644672;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +$$0;
}

function __ZNSt3__26vectorIPN8optframe7NGESIndI6RepHFMiEENS_9allocatorIS5_EEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $2 = 0, $21 = 0, $4 = 0, $8 = 0;
 $2 = $0 + 8 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$2 >> 2] | 0) - $4 >> 2 >>> 0 >= $1 >>> 0) return;
 $8 = $0 + 4 | 0;
 if ($1 >>> 0 > 1073741823) {
  $10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($10, 15810);
  HEAP32[$10 >> 2] = 14216;
  ___cxa_throw($10 | 0, 3104, 246);
 }
 $12 = (HEAP32[$8 >> 2] | 0) - $4 | 0;
 $13 = $12 >> 2;
 $15 = __Znwj($1 << 2) | 0;
 $16 = $15 + ($13 << 2) | 0;
 $21 = $16 + (0 - $13 << 2) | 0;
 if (($12 | 0) > 0) _memcpy($21 | 0, $4 | 0, $12 | 0) | 0;
 HEAP32[$0 >> 2] = $21;
 HEAP32[$8 >> 2] = $16;
 HEAP32[$2 >> 2] = $15 + ($1 << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNKSt3__28numpunctIcE12do_falsenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $10 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $3 = __ZNSt3__211char_traitsIcE6lengthEPKc(28891) | 0;
 if ($3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($3 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $3;
  $$0$i$i = $0;
 } else {
  $9 = $3 + 16 & -16;
  $10 = __Znwj($9) | 0;
  HEAP32[$0 >> 2] = $10;
  HEAP32[$0 + 8 >> 2] = $9 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $3;
  $$0$i$i = $10;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i$i, 28891, $3) | 0;
 HEAP8[$2 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0$i$i + $3 | 0, $2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 __ZNKSt3__28ios_base6getlocEv($5, $1);
 $6 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34568) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] & 31]($6, 26800, 26832, $2) | 0;
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34576) | 0;
 HEAP32[$3 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
 HEAP32[$4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 127]($0, $10);
 __ZNSt3__26localeD2Ev($5);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28numpunctIcE11do_truenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $10 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $3 = __ZNSt3__211char_traitsIcE6lengthEPKc(28897) | 0;
 if ($3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($3 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $3;
  $$0$i$i = $0;
 } else {
  $9 = $3 + 16 & -16;
  $10 = __Znwj($9) | 0;
  HEAP32[$0 >> 2] = $10;
  HEAP32[$0 + 8 >> 2] = $9 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $3;
  $$0$i$i = $10;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i$i, 28897, $3) | 0;
 HEAP8[$2 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0$i$i + $3 | 0, $2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 __ZNKSt3__28ios_base6getlocEv($5, $1);
 $6 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34536) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] & 31]($6, 26800, 26832, $2) | 0;
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 34552) | 0;
 HEAP8[$3 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
 HEAP8[$4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 127]($0, $10);
 __ZNSt3__26localeD2Ev($5);
 STACKTOP = sp;
 return;
}

function __ZN3HFM25NSSeqHFMRemoveSingleInput10randomMoveERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$010 = 0, $10 = 0, $15 = 0, $24 = 0, $7 = 0;
 $7 = (HEAP32[$1 + 4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) >> 3;
 if (!$7) $$010 = -1; else {
  $10 = HEAP32[$0 + 20 >> 2] | 0;
  $$010 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 63]($10, $7) | 0;
 }
 $15 = __Znwj(48) | 0;
 HEAP8[$15 + 16 >> 0] = 0;
 HEAP32[$15 + 8 >> 2] = 2;
 HEAP8[$15 + 15 >> 0] = 0;
 HEAP8[$15 + 12 >> 0] = 1;
 HEAP8[$15 + 13 >> 0] = 1;
 HEAP8[$15 + 14 >> 0] = 0;
 HEAP32[$15 >> 2] = 5572;
 HEAP32[$15 + 20 >> 2] = $$010;
 HEAP8[$15 + 24 >> 0] = 0;
 $24 = $15 + 28 | 0;
 HEAP32[$24 >> 2] = 0;
 HEAP32[$24 + 4 >> 2] = 0;
 HEAP32[$24 + 8 >> 2] = 0;
 HEAP32[$24 + 12 >> 2] = 0;
 HEAP32[$24 + 16 >> 2] = 0;
 return $15 | 0;
}

function ___fseeko_unlocked($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$019 = 0, $10 = 0, $12 = 0, label = 0;
 if (($2 | 0) == 1) $$019 = $1 - (HEAP32[$0 + 8 >> 2] | 0) + (HEAP32[$0 + 4 >> 2] | 0) | 0; else $$019 = $1;
 $10 = $0 + 20 | 0;
 $12 = $0 + 28 | 0;
 if ((HEAP32[$10 >> 2] | 0) >>> 0 > (HEAP32[$12 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
  if (!(HEAP32[$10 >> 2] | 0)) $$0 = -1; else label = 5;
 } else label = 5;
 if ((label | 0) == 5) {
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$12 >> 2] = 0;
  HEAP32[$10 >> 2] = 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[$0 + 40 >> 2] & 63]($0, $$019, $2) | 0) < 0) $$0 = -1; else {
   HEAP32[$0 + 8 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 >> 2] = HEAP32[$0 >> 2] & -17;
   $$0 = 0;
  }
 }
 return $$0 | 0;
}

function __ZN24GeneralParetoLocalSearchI6RepHFMiE4execERN8optframe6ParetoIS0_iEERNS2_8SolutionIS0_iEERNS2_15MultiEvaluationERNS2_13paretoManagerIS0_iEERNS2_4MOSCE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = 6156;
 $7 = $6 + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$7 + 16 >> 2] = 0;
 HEAP32[$7 + 20 >> 2] = 0;
 HEAP8[$7 + 24 >> 0] = 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 8 >> 2] & 31]($4, $6, $2, $3) | 0;
 FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($0, $5, $6) | 0;
 __ZN8optframe6ParetoI6RepHFMiED2Ev($6);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, 12976, 13008) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, 27579, 27587) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function _fclose($0) {
 $0 = $0 | 0;
 var $$pre = 0, $10 = 0, $15 = 0, $20 = 0, $24 = 0, $26 = 0, $28 = 0, $7 = 0, $8 = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $28 = ___lockfile($0) | 0; else $28 = 0;
 ___unlist_locked_file($0);
 $7 = (HEAP32[$0 >> 2] & 1 | 0) != 0;
 if (!$7) {
  $8 = ___ofl_lock() | 0;
  $10 = HEAP32[$0 + 52 >> 2] | 0;
  $$pre = $0 + 56 | 0;
  if ($10 | 0) HEAP32[$10 + 56 >> 2] = HEAP32[$$pre >> 2];
  $15 = HEAP32[$$pre >> 2] | 0;
  if ($15 | 0) HEAP32[$15 + 52 >> 2] = $10;
  if ((HEAP32[$8 >> 2] | 0) == ($0 | 0)) HEAP32[$8 >> 2] = $15;
  ___ofl_unlock();
 }
 $20 = _fflush($0) | 0;
 $24 = FUNCTION_TABLE_ii[HEAP32[$0 + 12 >> 2] & 127]($0) | 0 | $20;
 $26 = HEAP32[$0 + 92 >> 2] | 0;
 if ($26 | 0) _free($26);
 if ($7) {
  if ($28 | 0) ___unlockfile($0);
 } else _free($0);
 return $24 | 0;
}

function __ZN9scannerpp7ScannerD0Ev($0) {
 $0 = $0 | 0;
 var $$pre$i = 0, $1 = 0, $15 = 0, $2 = 0, $20 = 0, $25 = 0;
 HEAP32[$0 >> 2] = 3192;
 $1 = $0 + 8 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) {
  $$pre$i = HEAP32[$0 + 4 >> 2] | 0;
  if ($$pre$i | 0) if (HEAP8[$0 + 24 >> 0] | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$pre$i >> 2] | 0) + 4 >> 2] & 511]($$pre$i);
 } else {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 4 >> 2] & 511]($2);
  HEAP32[$1 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
 }
 $15 = $0 + 40 | 0;
 if ((HEAP8[$15 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$15 >> 2] | 0);
 $20 = $0 + 28 | 0;
 if ((HEAP8[$20 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$20 >> 2] | 0);
 $25 = $0 + 12 | 0;
 if ((HEAP8[$25 + 11 >> 0] | 0) >= 0) {
  __ZdlPv($0);
  return;
 }
 __ZdlPv(HEAP32[$25 >> 2] | 0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34568) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 16 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34568) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 24 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 16 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 24 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZN3HFM14treatForecastsD0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 HEAP32[$0 >> 2] = 3880;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) == ($2 | 0)) $21 = $2; else {
  $8 = $5;
  while (1) {
   $7 = $8 + -12 | 0;
   HEAP32[$4 >> 2] = $7;
   $9 = HEAP32[$7 >> 2] | 0;
   if (!$9) $11 = $7; else {
    $13 = $8 + -8 | 0;
    $14 = HEAP32[$13 >> 2] | 0;
    if (($14 | 0) != ($9 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -8 - $9 | 0) >>> 3) << 3);
    __ZdlPv($9);
    $11 = HEAP32[$4 >> 2] | 0;
   }
   if (($11 | 0) == ($2 | 0)) break; else $8 = $11;
  }
  $21 = HEAP32[$1 >> 2] | 0;
 }
 __ZdlPv($21);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34568) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 20 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 34536) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 20 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $6 = 0, $7 = 0, label = 0;
 L1 : do switch ((HEAP32[$2 + 4 >> 2] & 176) << 24 >> 24) {
 case 16:
  {
   $6 = HEAP8[$0 >> 0] | 0;
   $7 = $0 + 1 | 0;
   switch ($6 << 24 >> 24) {
   case 43:
   case 45:
    {
     $$0 = $7;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($1 - $0 | 0) > 1 & $6 << 24 >> 24 == 48) {
    switch (HEAP8[$7 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      label = 6;
      break L1;
     }
    }
    $$0 = $0 + 2 | 0;
   } else label = 6;
   break;
  }
 case 32:
  {
   $$0 = $1;
   break;
  }
 default:
  label = 6;
 } while (0);
 if ((label | 0) == 6) $$0 = $0;
 return $$0 | 0;
}

function __ZN24GeneralParetoLocalSearchI6RepHFMiE4execERN8optframe6ParetoIS0_iEERNS2_8SolutionIS0_iEERNS2_13paretoManagerIS0_iEERNS2_4MOSCE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $5 = sp;
 HEAP32[$5 >> 2] = 6156;
 $6 = $5 + 4 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$6 + 16 >> 2] = 0;
 HEAP32[$6 + 20 >> 2] = 0;
 HEAP8[$6 + 24 >> 0] = 0;
 __ZN8optframe13paretoManagerI6RepHFMiE11addSolutionERNS_6ParetoIS1_iEERKNS_8SolutionIS1_iEE($3, $5, $2) | 0;
 FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($0, $4, $5) | 0;
 __ZN8optframe6ParetoI6RepHFMiED2Ev($5);
 STACKTOP = sp;
 return;
}

function __ZN3HFM17HFMMultiEvaluator12addEvaluatorERN8optframe9EvaluatorI6RepHFMiEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $2 = 0, $3 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(33664, 17312, 32) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $3 + (HEAP32[(HEAP32[$3 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 34536) | 0;
 $12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($3, $12) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($3) | 0;
 _getchar() | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIN8optframe16NGESIndStructureI6RepHFMiEENS_9allocatorIS4_EEEC2ERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = $7 >> 5;
 if (!$8) return;
 if ($8 >>> 0 > 134217727) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 << 5);
 $14 = HEAP32[$1 >> 2] | 0;
 $17 = (HEAP32[$4 >> 2] | 0) - $14 | 0;
 if (($17 | 0) <= 0) return;
 _memcpy($11 | 0, $14 | 0, $17 | 0) | 0;
 HEAP32[$2 >> 2] = $11 + ($17 >>> 5 << 5);
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $18 = 0, $2 = 0, $24 = 0, $30 = 0, $34 = 0, $6 = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $6 = $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (HEAP32[$6 + 24 >> 2] | 0) if (!(HEAP32[$6 + 16 >> 2] | 0)) if (HEAP32[$6 + 4 >> 2] & 8192 | 0) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $18 = HEAP32[$1 >> 2] | 0;
  $24 = HEAP32[$18 + (HEAP32[(HEAP32[$18 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 24 >> 2] & 127]($24) | 0) == -1) {
   $30 = HEAP32[$1 >> 2] | 0;
   $34 = $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($34, HEAP32[$34 + 16 >> 2] | 1);
  }
 }
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $18 = 0, $2 = 0, $24 = 0, $30 = 0, $34 = 0, $6 = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $6 = $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (HEAP32[$6 + 24 >> 2] | 0) if (!(HEAP32[$6 + 16 >> 2] | 0)) if (HEAP32[$6 + 4 >> 2] & 8192 | 0) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $18 = HEAP32[$1 >> 2] | 0;
  $24 = HEAP32[$18 + (HEAP32[(HEAP32[$18 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 24 >> 2] & 127]($24) | 0) == -1) {
   $30 = HEAP32[$1 >> 2] | 0;
   $34 = $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($34, HEAP32[$34 + 16 >> 2] | 1);
  }
 }
 return;
}

function __ZN9scannerpp7Scanner8nextCharEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $4 = __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE3getEv(HEAP32[$0 + 4 >> 2] | 0) | 0;
 if (($4 | 0) < 1) {
  $6 = ___cxa_allocate_exception(28) | 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  HEAP8[$1 + 11 >> 0] = 4;
  HEAP32[$1 >> 2] = 1918986339;
  HEAP8[$1 + 4 >> 0] = 0;
  HEAP8[$6 >> 0] = 0;
  $9 = $6 + 4 | 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  HEAP32[$9 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($6 + 16 | 0, $1);
  ___cxa_throw($6 | 0, 64, 253);
 } else {
  STACKTOP = sp;
  return $4 & 255 | 0;
 }
 return 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$029 = 0, $$030 = 0, $$034 = 0, $$sink = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0;
 $5 = $3;
 $6 = $0 + 8 | 0;
 $$029 = 0;
 $$030 = 0;
 $$034 = $2;
 L1 : while (1) {
  if (($$034 | 0) == ($3 | 0) | $$029 >>> 0 >= $4 >>> 0) break;
  $12 = ___uselocale(HEAP32[$6 >> 2] | 0) | 0;
  $13 = _mbrlen($$034, $5 - $$034 | 0, $1) | 0;
  if ($12 | 0) ___uselocale($12) | 0;
  switch ($13 | 0) {
  case -2:
  case -1:
   {
    break L1;
    break;
   }
  case 0:
   {
    $$sink = 1;
    break;
   }
  default:
   $$sink = $13;
  }
  $$029 = $$029 + 1 | 0;
  $$030 = $$sink + $$030 | 0;
  $$034 = $$034 + $$sink | 0;
 }
 return $$030 | 0;
}

function __ZN8optframe19RandomDescentMethodI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_4SOSCE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $17 = 0, $19 = 0, $20 = 0, $3 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $3 = sp;
 $5 = HEAP32[$0 + 20 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 76 >> 2] & 31]($3, $5, HEAP32[$1 + 20 >> 2] | 0, HEAP32[$1 + 24 >> 2] | 0);
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 31]($0, $1, $3, $2);
 HEAP32[$3 >> 2] = 4920;
 $17 = HEAP32[$3 + 40 >> 2] | 0;
 if (!$17) {
  STACKTOP = sp;
  return;
 }
 $19 = $3 + 44 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 if (($20 | 0) != ($17 | 0)) HEAP32[$19 >> 2] = $20 + (~(($20 + -16 - $17 | 0) >>> 4) << 4);
 __ZdlPv($17);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIPN8optframe11LocalSearchI6RepHFMiEENS_9allocatorIS5_EEEC2ERKS8_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = $7 >> 2;
 if (!$8) return;
 if ($8 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 << 2);
 $14 = HEAP32[$1 >> 2] | 0;
 $17 = (HEAP32[$4 >> 2] | 0) - $14 | 0;
 if (($17 | 0) <= 0) return;
 _memcpy($11 | 0, $14 | 0, $17 | 0) | 0;
 HEAP32[$2 >> 2] = $11 + ($17 >>> 2 << 2);
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $16 = 0, $25 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($1, $0);
  if (HEAP8[$1 >> 0] | 0) {
   $16 = HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 24 >> 2] & 127]($16) | 0) == -1) {
    $25 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
    __ZNSt3__28ios_base5clearEj($25, HEAP32[$25 + 16 >> 2] | 1);
   }
  }
  __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($1);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $16 = 0, $25 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($1, $0);
  if (HEAP8[$1 >> 0] | 0) {
   $16 = HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 24 >> 2] & 127]($16) | 0) == -1) {
    $25 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
    __ZNSt3__28ios_base5clearEj($25, HEAP32[$25 + 16 >> 2] | 1);
   }
  }
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($1);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) {
  if (($8 | 0) < 69) $$0 = $8 + 2e3 | 0; else $$0 = ($8 | 0) < 100 ? $8 + 1900 | 0 : $8;
  HEAP32[$1 >> 2] = $$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) {
  if (($8 | 0) < 69) $$0 = $8 + 2e3 | 0; else $$0 = ($8 | 0) < 100 ? $8 + 1900 | 0 : $8;
  HEAP32[$1 >> 2] = $$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZN8optframe9Direction13isImprovementERKNS_8MoveCostERKNS_10EvaluationES6_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $20 = 0.0;
 $20 = +HEAPF64[$1 + 24 >> 3] + +HEAPF64[$1 + 40 >> 3] * +HEAPF64[$1 + 32 >> 3] + (+HEAPF64[$2 + 24 >> 3] + +HEAPF64[$2 + 64 >> 3] * +HEAPF64[$2 + 32 >> 3]);
 if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 64 >> 2] & 127]($0) | 0) if (+HEAPF64[$3 + 24 >> 3] + +HEAPF64[$3 + 64 >> 3] * +HEAPF64[$3 + 32 >> 3] - $20 >= .0001) {
  $$0 = 1;
  return $$0 | 0;
 }
 if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 64 >> 2] & 127]($0) | 0)) if ($20 - (+HEAPF64[$3 + 24 >> 3] + +HEAPF64[$3 + 64 >> 3] * +HEAPF64[$3 + 32 >> 3]) >= .0001) {
  $$0 = 1;
  return $$0 | 0;
 }
 $$0 = 0;
 return $$0 | 0;
}

function __ZNSt3__26vectorIPN8optframe8SolutionI6RepHFMiEENS_9allocatorIS5_EEEC2ERKS8_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = $7 >> 2;
 if (!$8) return;
 if ($8 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 << 2);
 $14 = HEAP32[$1 >> 2] | 0;
 $17 = (HEAP32[$4 >> 2] | 0) - $14 | 0;
 if (($17 | 0) <= 0) return;
 _memcpy($11 | 0, $14 | 0, $17 | 0) | 0;
 HEAP32[$2 >> 2] = $11 + ($17 >>> 2 << 2);
 return;
}

function __ZNSt3__223mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $24 = 0, $26 = 0, $29 = 0, $32 = 0, $4 = 0, $5 = 0, $9 = 0;
 $1 = $0 + 2496 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = (($2 + 1 | 0) >>> 0) % 624 | 0;
 $5 = $0 + ($2 << 2) | 0;
 $9 = HEAP32[$0 + ($4 << 2) >> 2] | 0;
 HEAP32[$5 >> 2] = 0 - ($9 & 1) & -1727483681 ^ HEAP32[$0 + (((($2 + 397 | 0) >>> 0) % 624 | 0) << 2) >> 2] ^ ($9 & 2147483646 | HEAP32[$5 >> 2] & -2147483648) >>> 1;
 $24 = HEAP32[$0 + (HEAP32[$1 >> 2] << 2) >> 2] | 0;
 $26 = $24 >>> 11 ^ $24;
 HEAP32[$1 >> 2] = $4;
 $29 = $26 << 7 & -1658038656 ^ $26;
 $32 = $29 << 15 & -272236544 ^ $29;
 return $32 >>> 18 ^ $32 | 0;
}

function __ZNSt3__26vectorIPN8optframe15MultiEvaluationENS_9allocatorIS3_EEEC2ERKS6_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = $7 >> 2;
 if (!$8) return;
 if ($8 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 << 2);
 $14 = HEAP32[$1 >> 2] | 0;
 $17 = (HEAP32[$4 >> 2] | 0) - $14 | 0;
 if (($17 | 0) <= 0) return;
 _memcpy($11 | 0, $14 | 0, $17 | 0) | 0;
 HEAP32[$2 >> 2] = $11 + ($17 >>> 2 << 2);
 return;
}

function __ZN8optframe7RandGen5randGEv($0) {
 $0 = $0 | 0;
 var $$0 = 0.0, $1 = 0, $18 = 0.0, $25 = 0.0, $28 = 0.0, $36 = 0.0, $7 = 0;
 $1 = $0 + 40 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 511]($0);
  HEAP8[$1 >> 0] = 1;
 }
 $7 = $0 + 32 | 0;
 if (HEAP8[$7 >> 0] | 0) {
  HEAP8[$7 >> 0] = 0;
  $$0 = +HEAPF64[$0 + 24 >> 3];
  return +$$0;
 }
 do {
  $18 = +FUNCTION_TABLE_di[HEAP32[(HEAP32[$0 >> 2] | 0) + 56 >> 2] & 7]($0) * 2.0 + -1.0;
  $25 = +FUNCTION_TABLE_di[HEAP32[(HEAP32[$0 >> 2] | 0) + 56 >> 2] & 7]($0) * 2.0 + -1.0;
  $28 = $18 * $18 + $25 * $25;
 } while ($28 >= 1.0);
 $36 = +Math_sqrt(+(+Math_log(+$28) * -2.0 / $28));
 HEAPF64[$0 + 24 >> 3] = $25 * $36;
 HEAP8[$7 >> 0] = 1;
 $$0 = $18 * $36;
 return +$$0;
}

function __ZN3HFM14treatForecastsD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 HEAP32[$0 >> 2] = 3880;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) == ($2 | 0)) $21 = $2; else {
  $8 = $5;
  while (1) {
   $7 = $8 + -12 | 0;
   HEAP32[$4 >> 2] = $7;
   $9 = HEAP32[$7 >> 2] | 0;
   if (!$9) $11 = $7; else {
    $13 = $8 + -8 | 0;
    $14 = HEAP32[$13 >> 2] | 0;
    if (($14 | 0) != ($9 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -8 - $9 | 0) >>> 3) << 3);
    __ZdlPv($9);
    $11 = HEAP32[$4 >> 2] | 0;
   }
   if (($11 | 0) == ($2 | 0)) break; else $8 = $11;
  }
  $21 = HEAP32[$1 >> 2] | 0;
 }
 __ZdlPv($21);
 return;
}

function __ZNSt3__214__num_put_base12__format_intEPcPKcbj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$014 = 0, $$1 = 0, $$sink$sink = 0, $10 = 0;
 if (!($3 & 2048)) $$0 = $0; else {
  HEAP8[$0 >> 0] = 43;
  $$0 = $0 + 1 | 0;
 }
 if (!($3 & 512)) {
  $$014 = $1;
  $$1 = $$0;
 } else {
  HEAP8[$$0 >> 0] = 35;
  $$014 = $1;
  $$1 = $$0 + 1 | 0;
 }
 while (1) {
  $10 = HEAP8[$$014 >> 0] | 0;
  if (!($10 << 24 >> 24)) break;
  HEAP8[$$1 >> 0] = $10;
  $$014 = $$014 + 1 | 0;
  $$1 = $$1 + 1 | 0;
 }
 switch ($3 & 74) {
 case 64:
  {
   $$sink$sink = 111;
   break;
  }
 case 8:
  {
   $$sink$sink = $3 & 16384 | 0 ? 88 : 120;
   break;
  }
 default:
  $$sink$sink = $2 ? 100 : 117;
 }
 HEAP8[$$1 >> 0] = $$sink$sink;
 return;
}

function __ZN9scannerpp7ScannerD2Ev($0) {
 $0 = $0 | 0;
 var $$pre = 0, $1 = 0, $15 = 0, $2 = 0, $20 = 0, $25 = 0;
 HEAP32[$0 >> 2] = 3192;
 $1 = $0 + 8 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) {
  $$pre = HEAP32[$0 + 4 >> 2] | 0;
  if ($$pre | 0) if (HEAP8[$0 + 24 >> 0] | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$pre >> 2] | 0) + 4 >> 2] & 511]($$pre);
 } else {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 4 >> 2] & 511]($2);
  HEAP32[$1 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
 }
 $15 = $0 + 40 | 0;
 if ((HEAP8[$15 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$15 >> 2] | 0);
 $20 = $0 + 28 | 0;
 if ((HEAP8[$20 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$20 >> 2] | 0);
 $25 = $0 + 12 | 0;
 if ((HEAP8[$25 + 11 >> 0] | 0) >= 0) return;
 __ZdlPv(HEAP32[$25 >> 2] | 0);
 return;
}

function __ZNSt3__213__vector_baseINS_6vectorIdNS_9allocatorIdEEEENS2_IS4_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $12 = 0, $13 = 0, $20 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) == ($1 | 0)) $20 = $1; else {
  $7 = $4;
  while (1) {
   $6 = $7 + -12 | 0;
   HEAP32[$3 >> 2] = $6;
   $8 = HEAP32[$6 >> 2] | 0;
   if (!$8) $10 = $6; else {
    $12 = $7 + -8 | 0;
    $13 = HEAP32[$12 >> 2] | 0;
    if (($13 | 0) != ($8 | 0)) HEAP32[$12 >> 2] = $13 + (~(($13 + -8 - $8 | 0) >>> 3) << 3);
    __ZdlPv($8);
    $10 = HEAP32[$3 >> 2] | 0;
   }
   if (($10 | 0) == ($1 | 0)) break; else $7 = $10;
  }
  $20 = HEAP32[$0 >> 2] | 0;
 }
 __ZdlPv($20);
 return;
}

function __ZN8optframe18BasicInitialParetoI6RepHFMiE14generateParetoEjd($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = +$3;
 var $$09 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 6156;
 $4 = $0 + 4 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$4 + 12 >> 2] = 0;
 HEAP32[$4 + 16 >> 2] = 0;
 HEAP32[$4 + 20 >> 2] = 0;
 HEAP8[$4 + 24 >> 0] = 0;
 if (!$2) return;
 $6 = $1 + 20 | 0;
 $7 = $1 + 24 | 0;
 $$09 = 0;
 do {
  $8 = HEAP32[$6 >> 2] | 0;
  __ZN8optframe13paretoManagerI6RepHFMiE11addSolutionERNS_6ParetoIS1_iEERKNS_8SolutionIS1_iEE($7, $0, FUNCTION_TABLE_iid[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 3]($8, $3) | 0) | 0;
  $$09 = $$09 + 1 | 0;
 } while ($$09 >>> 0 < $2 >>> 0);
 return;
}

function __ZNSt3__26vectorINS_4pairIiiEENS_9allocatorIS2_EEEC2ERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = $7 >> 3;
 if (!$8) return;
 if ($8 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 << 3);
 $14 = HEAP32[$1 >> 2] | 0;
 $17 = (HEAP32[$4 >> 2] | 0) - $14 | 0;
 if (($17 | 0) <= 0) return;
 _memcpy($11 | 0, $14 | 0, $17 | 0) | 0;
 HEAP32[$2 >> 2] = $11 + ($17 >>> 3 << 3);
 return;
}

function __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = $7 >> 4;
 if (!$8) return;
 if ($8 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 << 4);
 $14 = HEAP32[$1 >> 2] | 0;
 $17 = (HEAP32[$4 >> 2] | 0) - $14 | 0;
 if (($17 | 0) <= 0) return;
 _memcpy($11 | 0, $14 | 0, $17 | 0) | 0;
 HEAP32[$2 >> 2] = $11 + ($17 >>> 4 << 4);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 12 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 12 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 31 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 3) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 366 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 31 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 3) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 366 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 13 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8 + -1; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 13 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8 + -1; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = $7 >> 2;
 if (!$8) return;
 if ($8 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 << 2);
 $14 = HEAP32[$1 >> 2] | 0;
 $17 = (HEAP32[$4 >> 2] | 0) - $14 | 0;
 if (($17 | 0) <= 0) return;
 _memcpy($11 | 0, $14 | 0, $17 | 0) | 0;
 HEAP32[$2 >> 2] = $11 + ($17 >>> 2 << 2);
 return;
}

function __ZNSt3__211__stdoutbufIwE6xsputnEPKwi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$010 = 0, $$011 = 0, $12 = 0, $14 = 0, $15 = 0;
 L1 : do if (!(HEAP8[$0 + 44 >> 0] | 0)) {
  $$0 = 0;
  $$011 = $1;
  while (1) {
   if (($$0 | 0) >= ($2 | 0)) {
    $$010 = $$0;
    break L1;
   }
   $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] | 0;
   $14 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$$011 >> 2] | 0) | 0;
   $15 = FUNCTION_TABLE_iii[$12 & 63]($0, $14) | 0;
   if (($15 | 0) == (__ZNSt3__211char_traitsIwE3eofEv() | 0)) {
    $$010 = $$0;
    break L1;
   }
   $$0 = $$0 + 1 | 0;
   $$011 = $$011 + 4 | 0;
  }
 } else $$010 = _fwrite($1, 4, $2, HEAP32[$0 + 32 >> 2] | 0) | 0; while (0);
 return $$010 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 1) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 7 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 61 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 60 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 1) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 7 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 61 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 60 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIdNS_9allocatorIdEEEC2ERKS3_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = $7 >> 3;
 if (!$8) return;
 if ($8 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 << 3);
 $14 = HEAP32[$1 >> 2] | 0;
 $17 = (HEAP32[$4 >> 2] | 0) - $14 | 0;
 if (($17 | 0) <= 0) return;
 _memcpy($11 | 0, $14 | 0, $17 | 0) | 0;
 HEAP32[$2 >> 2] = $11 + ($17 >>> 3 << 3);
 return;
}

function __ZNSt3__211__stdoutbufIcE6xsputnEPKci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$010 = 0, $$011 = 0, $12 = 0, $14 = 0, $15 = 0;
 L1 : do if (!(HEAP8[$0 + 44 >> 0] | 0)) {
  $$0 = 0;
  $$011 = $1;
  while (1) {
   if (($$0 | 0) >= ($2 | 0)) {
    $$010 = $$0;
    break L1;
   }
   $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] | 0;
   $14 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$$011 >> 0] | 0) | 0;
   $15 = FUNCTION_TABLE_iii[$12 & 63]($0, $14) | 0;
   if (($15 | 0) == (__ZNSt3__211char_traitsIcE3eofEv() | 0)) {
    $$010 = $$0;
    break L1;
   }
   $$0 = $$0 + 1 | 0;
   $$011 = $$011 + 1 | 0;
  }
 } else $$010 = _fwrite($1, 1, $2, HEAP32[$0 + 32 >> 2] | 0) | 0; while (0);
 return $$010 | 0;
}

function ___fflush_unlocked($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, label = 0;
 $1 = $0 + 20 | 0;
 $3 = $0 + 28 | 0;
 if ((HEAP32[$1 >> 2] | 0) >>> 0 > (HEAP32[$3 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
  if (!(HEAP32[$1 >> 2] | 0)) $$0 = -1; else label = 3;
 } else label = 3;
 if ((label | 0) == 3) {
  $10 = $0 + 4 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $12 = $0 + 8 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ($11 >>> 0 < $13 >>> 0) FUNCTION_TABLE_iiii[HEAP32[$0 + 40 >> 2] & 63]($0, $11 - $13 | 0, 1) | 0;
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$12 >> 2] = 0;
  HEAP32[$10 >> 2] = 0;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 24 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 24 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZN8optframe14MultiDirection12addObjectiveEPNS_9DirectionE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre = 0, $2 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $1;
 $4 = $1;
 $$pre = $0 + 24 | 0;
 do if ($1 | 0) {
  $5 = HEAP32[$$pre >> 2] | 0;
  if (($5 | 0) == (HEAP32[$0 + 28 >> 2] | 0)) {
   __ZNSt3__26vectorIPN8optframe9DirectionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0 + 20 | 0, $2);
   break;
  } else {
   HEAP32[$5 >> 2] = $4;
   HEAP32[$$pre >> 2] = (HEAP32[$$pre >> 2] | 0) + 4;
   break;
  }
 } while (0);
 HEAP32[$0 + 32 >> 2] = (HEAP32[$$pre >> 2] | 0) - (HEAP32[$0 + 20 >> 2] | 0) >> 2;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 __ZNKSt3__28ios_base6getlocEv($4, $1);
 $5 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34568) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 48 >> 2] & 31]($5, 26800, 26826, $2) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34576) | 0;
 HEAP32[$3 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 127]($0, $9);
 __ZNSt3__26localeD2Ev($4);
 STACKTOP = sp;
 return;
}

function _fgetc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $15 = 0, $16 = 0, $24 = 0, $6 = 0, $7 = 0, label = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($0) | 0)) label = 3; else {
  $15 = $0 + 4 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if ($16 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0) {
   HEAP32[$15 >> 2] = $16 + 1;
   $24 = HEAPU8[$16 >> 0] | 0;
  } else $24 = ___uflow($0) | 0;
  ___unlockfile($0);
  $$0 = $24;
 }
 do if ((label | 0) == 3) {
  $6 = $0 + 4 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if ($7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0) {
   HEAP32[$6 >> 2] = $7 + 1;
   $$0 = HEAPU8[$7 >> 0] | 0;
   break;
  } else {
   $$0 = ___uflow($0) | 0;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 __ZNKSt3__28ios_base6getlocEv($4, $1);
 $5 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34536) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 32 >> 2] & 31]($5, 26800, 26826, $2) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 34552) | 0;
 HEAP8[$3 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 127]($0, $9);
 __ZNSt3__26localeD2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pre$phiZ2D = 0, $13 = 0, $14 = 0, $3 = 0, $6 = 0;
 __ZNSt3__214__shared_count12__add_sharedEv($1);
 $3 = $0 + 8 | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) - $6 >> 2 >>> 0 > $2 >>> 0) {
  $$pre$phiZ2D = $3;
  $13 = $6;
 } else {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($3, $2 + 1 | 0);
  $$pre$phiZ2D = $3;
  $13 = HEAP32[$3 >> 2] | 0;
 }
 $14 = HEAP32[$13 + ($2 << 2) >> 2] | 0;
 if ($14 | 0) __ZNSt3__214__shared_count16__release_sharedEv($14) | 0;
 HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + ($2 << 2) >> 2] = $1;
 return;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $2 = 0, $4 = 0;
 $1 = $0 + 44 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = HEAP32[$0 + 24 >> 2] | 0;
 if ($2 >>> 0 < $4 >>> 0) {
  HEAP32[$1 >> 2] = $4;
  $13 = $4;
 } else $13 = $2;
 if (!(HEAP32[$0 + 48 >> 2] & 8)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $10 = $0 + 16 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if ($11 >>> 0 < $13 >>> 0) {
  HEAP32[$10 >> 2] = $13;
  $17 = $13;
 } else $17 = $11;
 $15 = HEAP32[$0 + 12 >> 2] | 0;
 if ($15 >>> 0 >= $17 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 $$0 = HEAPU8[$15 >> 0] | 0;
 return $$0 | 0;
}

function __ZN8optframe18BasicInitialParetoI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $16 = 0, $18 = 0, $19 = 0, $4 = 0, $6 = 0, $7 = 0;
 HEAP32[$0 >> 2] = 6180;
 HEAP32[$0 + 24 >> 2] = 6228;
 HEAP32[$0 + 52 >> 2] = 6248;
 $4 = HEAP32[$0 + 56 >> 2] | 0;
 if ($4 | 0) {
  $6 = $0 + 60 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if (($7 | 0) != ($4 | 0)) HEAP32[$6 >> 2] = $7 + (~(($7 + -4 - $4 | 0) >>> 2) << 2);
  __ZdlPv($4);
 }
 HEAP32[$0 + 32 >> 2] = 6248;
 $16 = HEAP32[$0 + 36 >> 2] | 0;
 if (!$16) {
  __ZdlPv($0);
  return;
 }
 $18 = $0 + 40 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if (($19 | 0) != ($16 | 0)) HEAP32[$18 >> 2] = $19 + (~(($19 + -4 - $16 | 0) >>> 2) << 2);
 __ZdlPv($16);
 __ZdlPv($0);
 return;
}

function _strtox($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $3 = 0, $4 = 0, $5 = 0, $8 = 0.0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $3 = sp;
 dest = $3;
 stop = dest + 124 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $4 = $3 + 4 | 0;
 HEAP32[$4 >> 2] = $0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = -1;
 HEAP32[$3 + 44 >> 2] = $0;
 HEAP32[$3 + 76 >> 2] = -1;
 ___shlim($3, 0);
 $8 = +___floatscan($3, $2, 1);
 $14 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) + (HEAP32[$3 + 108 >> 2] | 0) | 0;
 if ($1 | 0) HEAP32[$1 >> 2] = $14 | 0 ? $0 + $14 | 0 : $0;
 STACKTOP = sp;
 return +$8;
}

function __ZN8optframe10EvaluationaSERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (($1 | 0) == ($0 | 0)) return $0 | 0;
 HEAPF64[$0 + 24 >> 3] = +HEAPF64[$1 + 24 >> 3];
 HEAPF64[$0 + 32 >> 3] = +HEAPF64[$1 + 32 >> 3];
 HEAP8[$0 + 56 >> 0] = HEAP8[$1 + 56 >> 0] | 0;
 HEAP8[$0 + 57 >> 0] = HEAP8[$1 + 57 >> 0] | 0;
 HEAPF64[$0 + 64 >> 3] = +HEAPF64[$1 + 64 >> 3];
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($0 + 40 | 0, HEAP32[$1 + 40 >> 2] | 0, HEAP32[$1 + 44 >> 2] | 0);
 HEAP32[$0 + 52 >> 2] = HEAP32[$1 + 52 >> 2];
 return $0 | 0;
}

function _getc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $15 = 0, $16 = 0, $24 = 0, $6 = 0, $7 = 0, label = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($0) | 0)) label = 3; else {
  $15 = $0 + 4 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if ($16 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0) {
   HEAP32[$15 >> 2] = $16 + 1;
   $24 = HEAPU8[$16 >> 0] | 0;
  } else $24 = ___uflow($0) | 0;
  $$0 = $24;
 }
 do if ((label | 0) == 3) {
  $6 = $0 + 4 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if ($7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0) {
   HEAP32[$6 >> 2] = $7 + 1;
   $$0 = HEAPU8[$7 >> 0] | 0;
   break;
  } else {
   $$0 = ___uflow($0) | 0;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__26locale2id5__getEv($0) {
 $0 = $0 | 0;
 var $$byval_copy = 0, $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy = sp + 32 | 0;
 $1 = sp + 24 | 0;
 $2 = sp;
 $3 = sp + 16 | 0;
 HEAP32[$3 >> 2] = 256;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZNSt3__212_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_($2, $$byval_copy, $0);
 if ((HEAP32[$0 >> 2] | 0) != -1) {
  HEAP32[$$byval_copy >> 2] = $2;
  HEAP32[$1 >> 2] = $$byval_copy;
  __ZNSt3__211__call_onceERVmPvPFvS2_E($0, $1, 257);
 }
 STACKTOP = sp;
 return (HEAP32[$0 + 4 >> 2] | 0) + -1 | 0;
}

function __ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$011 = 0, $$012 = 0, $7 = 0, $8 = 0, label = 0;
 $$011 = $3;
 $$012 = $1;
 while (1) {
  if (($$011 | 0) == ($4 | 0)) {
   label = 7;
   break;
  }
  if (($$012 | 0) == ($2 | 0)) {
   $$0 = -1;
   break;
  }
  $7 = HEAP8[$$012 >> 0] | 0;
  $8 = HEAP8[$$011 >> 0] | 0;
  if ($7 << 24 >> 24 < $8 << 24 >> 24) {
   $$0 = -1;
   break;
  }
  if ($8 << 24 >> 24 < $7 << 24 >> 24) {
   $$0 = 1;
   break;
  }
  $$011 = $$011 + 1 | 0;
  $$012 = $$012 + 1 | 0;
 }
 if ((label | 0) == 7) $$0 = ($$012 | 0) != ($2 | 0) & 1;
 return $$0 | 0;
}

function ___toread($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $15 = 0, $23 = 0, $3 = 0, $7 = 0, $9 = 0;
 $1 = $0 + 74 | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 HEAP8[$1 >> 0] = $3 + 255 | $3;
 $7 = $0 + 20 | 0;
 $9 = $0 + 28 | 0;
 if ((HEAP32[$7 >> 2] | 0) >>> 0 > (HEAP32[$9 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$7 >> 2] = 0;
 $15 = HEAP32[$0 >> 2] | 0;
 if (!($15 & 4)) {
  $23 = (HEAP32[$0 + 44 >> 2] | 0) + (HEAP32[$0 + 48 >> 2] | 0) | 0;
  HEAP32[$0 + 8 >> 2] = $23;
  HEAP32[$0 + 4 >> 2] = $23;
  $$0 = $15 << 27 >> 31;
 } else {
  HEAP32[$0 >> 2] = $15 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZN3HFM30NSIteratorHFMChangeSingleInputC2ERK6RepHFMNSt3__26vectorIiNS4_9allocatorIiEEEES8_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $7 = 0;
 $7 = $0 + 12 | 0;
 HEAP8[$7 + 4 >> 0] = 0;
 HEAP32[$0 + 8 >> 2] = 2;
 HEAP8[$0 + 15 >> 0] = 0;
 HEAP8[$7 >> 0] = 1;
 HEAP8[$0 + 13 >> 0] = 1;
 HEAP8[$0 + 14 >> 0] = 0;
 HEAP32[$0 >> 2] = 5664;
 HEAP32[$0 + 24 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = 0;
 HEAP32[$0 + 32 >> 2] = 0;
 HEAP32[$0 + 40 >> 2] = $1;
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($0 + 44 | 0, $2);
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($0 + 56 | 0, $3);
 HEAP32[$0 + 36 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) HEAP32[$1 >> 2] = $8 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) HEAP32[$1 >> 2] = $8 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNSt3__2L11init_wam_pmEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[29792] | 0)) if (___cxa_guard_acquire(29792) | 0) {
  $4 = 35468;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 35756);
  ___cxa_atexit(263, 0, ___dso_handle | 0) | 0;
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35468, 11932) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(35480, 11944) | 0;
 return;
}

function __ZNSt3__2L10init_am_pmEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[29712] | 0)) if (___cxa_guard_acquire(29712) | 0) {
  $4 = 34656;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 34944);
  ___cxa_atexit(259, 0, ___dso_handle | 0) | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(34656, 27318) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(34668, 27321) | 0;
 return;
}

function _realloc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $11 = 0, $14 = 0, $17 = 0, $22 = 0;
 if (!$0) {
  $$1 = _malloc($1) | 0;
  return $$1 | 0;
 }
 if ($1 >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  $$1 = 0;
  return $$1 | 0;
 }
 $11 = _try_realloc_chunk($0 + -8 | 0, $1 >>> 0 < 11 ? 16 : $1 + 11 & -8) | 0;
 if ($11 | 0) {
  $$1 = $11 + 8 | 0;
  return $$1 | 0;
 }
 $14 = _malloc($1) | 0;
 if (!$14) {
  $$1 = 0;
  return $$1 | 0;
 }
 $17 = HEAP32[$0 + -4 >> 2] | 0;
 $22 = ($17 & -8) - (($17 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy($14 | 0, $0 | 0, ($22 >>> 0 < $1 >>> 0 ? $22 : $1) | 0) | 0;
 _free($0);
 $$1 = $14;
 return $$1 | 0;
}

function __ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$011 = 0, $$012 = 0, $7 = 0, $8 = 0, label = 0;
 $$011 = $3;
 $$012 = $1;
 while (1) {
  if (($$011 | 0) == ($4 | 0)) {
   label = 7;
   break;
  }
  if (($$012 | 0) == ($2 | 0)) {
   $$0 = -1;
   break;
  }
  $7 = HEAP32[$$012 >> 2] | 0;
  $8 = HEAP32[$$011 >> 2] | 0;
  if (($7 | 0) < ($8 | 0)) {
   $$0 = -1;
   break;
  }
  if (($8 | 0) < ($7 | 0)) {
   $$0 = 1;
   break;
  }
  $$011 = $$011 + 4 | 0;
  $$012 = $$012 + 4 | 0;
 }
 if ((label | 0) == 7) $$0 = ($$012 | 0) != ($2 | 0) & 1;
 return $$0 | 0;
}

function __ZNK8optframe10Evaluation5cloneEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = __Znwj(72) | 0;
 HEAP8[$1 + 16 >> 0] = 0;
 HEAP32[$1 + 8 >> 2] = 2;
 HEAP8[$1 + 15 >> 0] = 0;
 HEAP8[$1 + 12 >> 0] = 1;
 HEAP8[$1 + 13 >> 0] = 1;
 HEAP8[$1 + 14 >> 0] = 0;
 HEAP32[$1 >> 2] = 4920;
 HEAPF64[$1 + 24 >> 3] = +HEAPF64[$0 + 24 >> 3];
 HEAPF64[$1 + 32 >> 3] = +HEAPF64[$0 + 32 >> 3];
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($1 + 40 | 0, $0 + 40 | 0);
 HEAP32[$1 + 52 >> 2] = HEAP32[$0 + 52 >> 2];
 HEAP8[$1 + 56 >> 0] = HEAP8[$0 + 56 >> 0] | 0;
 HEAP8[$1 + 57 >> 0] = HEAP8[$0 + 57 >> 0] | 0;
 HEAPF64[$1 + 64 >> 3] = +HEAPF64[$0 + 64 >> 3];
 return $1 | 0;
}

function __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $12 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 HEAP8[$6 >> 0] = 37;
 $7 = $6 + 1 | 0;
 HEAP8[$7 >> 0] = $4;
 $8 = $6 + 2 | 0;
 HEAP8[$8 >> 0] = $5;
 HEAP8[$6 + 3 >> 0] = 0;
 if ($5 << 24 >> 24) {
  HEAP8[$7 >> 0] = $5;
  HEAP8[$8 >> 0] = $4;
 }
 $12 = __ZNSt3__212_GLOBAL__N_17countofIcEEjPKT_S4_($1, HEAP32[$2 >> 2] | 0) | 0;
 HEAP32[$2 >> 2] = $1 + (_strftime_l($1 | 0, $12 | 0, $6 | 0, $3 | 0, HEAP32[$0 >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = $3 - $4 >> 2;
 $8 = $4;
 $9 = $3;
 L1 : do if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) {
  $12 = $8 + ($1 << 2) | 0;
  $13 = $9;
  while (1) {
   if (($13 | 0) == ($12 | 0)) break L1;
   $15 = $13 + -4 | 0;
   HEAP32[$2 >> 2] = $15;
   $13 = $15;
  }
 } while (0);
 return;
}

function __ZN8optframe18BasicInitialParetoI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $16 = 0, $18 = 0, $19 = 0, $4 = 0, $6 = 0, $7 = 0;
 HEAP32[$0 >> 2] = 6180;
 HEAP32[$0 + 24 >> 2] = 6228;
 HEAP32[$0 + 52 >> 2] = 6248;
 $4 = HEAP32[$0 + 56 >> 2] | 0;
 if ($4 | 0) {
  $6 = $0 + 60 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if (($7 | 0) != ($4 | 0)) HEAP32[$6 >> 2] = $7 + (~(($7 + -4 - $4 | 0) >>> 2) << 2);
  __ZdlPv($4);
 }
 HEAP32[$0 + 32 >> 2] = 6248;
 $16 = HEAP32[$0 + 36 >> 2] | 0;
 if (!$16) return;
 $18 = $0 + 40 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if (($19 | 0) != ($16 | 0)) HEAP32[$18 >> 2] = $19 + (~(($19 + -4 - $16 | 0) >>> 2) << 2);
 __ZdlPv($16);
 return;
}

function __ZN8optframe13paretoManagerI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $15 = 0, $17 = 0, $18 = 0, $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 6228;
 HEAP32[$0 + 28 >> 2] = 6248;
 $3 = HEAP32[$0 + 32 >> 2] | 0;
 if ($3 | 0) {
  $5 = $0 + 36 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($3);
 }
 HEAP32[$0 + 8 >> 2] = 6248;
 $15 = HEAP32[$0 + 12 >> 2] | 0;
 if (!$15) {
  __ZdlPv($0);
  return;
 }
 $17 = $0 + 16 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if (($18 | 0) != ($15 | 0)) HEAP32[$17 >> 2] = $18 + (~(($18 + -4 - $15 | 0) >>> 2) << 2);
 __ZdlPv($15);
 __ZdlPv($0);
 return;
}

function __ZN8optframe4MoveI6RepHFMiE8applyMEVERNS_15MultiEvaluationERS1_Pi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$012 = 0, $11 = 0, $15 = 0, $6 = 0, $7 = 0, $9 = 0;
 $6 = HEAP32[$1 + 24 >> 2] | 0;
 $7 = HEAP32[$1 + 20 >> 2] | 0;
 $9 = $7;
 if (($6 | 0) != ($7 | 0)) {
  $11 = ($6 - $7 | 0) / 72 | 0;
  $$012 = 0;
  do {
   HEAP8[$9 + ($$012 * 72 | 0) + 56 >> 0] = 1;
   $$012 = $$012 + 1 | 0;
  } while ($$012 >>> 0 < $11 >>> 0);
 }
 $15 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($0, $2, $3) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 68 >> 2] & 127]($0, $3);
 return $15 | 0;
}

function __ZN3HFM24MoveHFMChangeSingleInput12canBeAppliedERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $12 = 0, $14 = 0, $16 = 0, $4 = 0, $8 = 0;
 $4 = HEAP32[$0 + 20 >> 2] | 0;
 if (($4 | 0) <= -1) return 0;
 $8 = HEAP32[$1 >> 2] | 0;
 $12 = $8;
 if (($4 | 0) >= ((HEAP32[$1 + 4 >> 2] | 0) - $8 >> 3 | 0)) return 0;
 $14 = HEAP32[$12 + ($4 << 3) + 4 >> 2] | 0;
 $16 = HEAP32[$0 + 36 >> 2] | 0;
 if (($16 + $14 | 0) > (HEAP32[$0 + 28 >> 2] | 0) ? 1 : ($14 - $16 | 0) < (HEAP32[$0 + 32 >> 2] | 0)) return 0; else return ($14 | 0) != ($16 | 0) & ($14 | 0) != (0 - $16 | 0) | (HEAP32[$12 + ($4 << 3) >> 2] | 0) != 0 | 0;
 return 0;
}

function __ZN8optframe8SolutionI6RepHFMiEaSERKS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $12 = 0, $3 = 0, $4 = 0, $6 = 0, $9 = 0, $storemerge = 0;
 if (($1 | 0) == ($0 | 0)) return $0 | 0;
 $3 = $0 + 20 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) {
  __ZN6RepHFMD2Ev($4);
  __ZdlPv($4);
 }
 $6 = __Znwj(128) | 0;
 __ZN6RepHFMC2ERKS_($6, HEAP32[$1 + 20 >> 2] | 0);
 HEAP32[$3 >> 2] = $6;
 $9 = $0 + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) $storemerge = 0; else {
  __ZdlPv($10);
  $12 = __Znwj(4) | 0;
  HEAP32[$12 >> 2] = HEAP32[HEAP32[$1 + 24 >> 2] >> 2];
  $storemerge = $12;
 }
 HEAP32[$9 >> 2] = $storemerge;
 return $0 | 0;
}

function __ZN8optframe8MoveCostaSERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (($1 | 0) == ($0 | 0)) return $0 | 0;
 HEAPF64[$0 + 24 >> 3] = +HEAPF64[$1 + 24 >> 3];
 HEAPF64[$0 + 32 >> 3] = +HEAPF64[$1 + 32 >> 3];
 HEAP8[$0 + 48 >> 0] = HEAP8[$1 + 48 >> 0] | 0;
 HEAP8[$0 + 49 >> 0] = HEAP8[$1 + 49 >> 0] | 0;
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($0 + 52 | 0, HEAP32[$1 + 52 >> 2] | 0, HEAP32[$1 + 56 >> 2] | 0);
 HEAPF64[$0 + 40 >> 3] = +HEAPF64[$1 + 40 >> 3];
 return $0 | 0;
}

function __ZTv0_n12_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0, $7 = 0, $8 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 3452;
 $5 = $4 + 64 | 0;
 HEAP32[$5 >> 2] = 3492;
 HEAP32[$4 + 8 >> 2] = 3472;
 $7 = $4 + 12 | 0;
 HEAP32[$7 >> 2] = 3548;
 $8 = $4 + 44 | 0;
 if ((HEAP8[$8 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$8 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($7);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($4, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 __ZdlPv($4);
 return;
}

function _sbrk(increment) {
 increment = increment | 0;
 var oldDynamicTop = 0, newDynamicTop = 0;
 increment = increment + 15 & -16 | 0;
 oldDynamicTop = HEAP32[DYNAMICTOP_PTR >> 2] | 0;
 newDynamicTop = oldDynamicTop + increment | 0;
 if ((increment | 0) > 0 & (newDynamicTop | 0) < (oldDynamicTop | 0) | (newDynamicTop | 0) < 0) {
  abortOnCannotGrowMemory() | 0;
  ___setErrNo(12);
  return -1;
 }
 HEAP32[DYNAMICTOP_PTR >> 2] = newDynamicTop;
 if ((newDynamicTop | 0) > (getTotalMemory() | 0)) if (!(enlargeMemory() | 0)) {
  HEAP32[DYNAMICTOP_PTR >> 2] = oldDynamicTop;
  ___setErrNo(12);
  return -1;
 }
 return oldDynamicTop | 0;
}

function __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0);
 HEAP32[$0 >> 2] = 11016;
 HEAP32[$0 + 32 >> 2] = $1;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 36336) | 0;
 __ZNSt3__26localeD2Ev($3);
 HEAP32[$0 + 36 >> 2] = $7;
 HEAP32[$0 + 40 >> 2] = $2;
 HEAP8[$0 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0);
 HEAP32[$0 >> 2] = 11080;
 HEAP32[$0 + 32 >> 2] = $1;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 36328) | 0;
 __ZNSt3__26localeD2Ev($3);
 HEAP32[$0 + 36 >> 2] = $7;
 HEAP32[$0 + 40 >> 2] = $2;
 HEAP8[$0 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26locale5__impD2Ev($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $11 = 0, $2 = 0, $4 = 0;
 HEAP32[$0 >> 2] = 13608;
 $1 = $0 + 8 | 0;
 $2 = $0 + 12 | 0;
 $$0 = 0;
 while (1) {
  $4 = HEAP32[$1 >> 2] | 0;
  if ($$0 >>> 0 >= (HEAP32[$2 >> 2] | 0) - $4 >> 2 >>> 0) break;
  $11 = HEAP32[$4 + ($$0 << 2) >> 2] | 0;
  if ($11 | 0) __ZNSt3__214__shared_count16__release_sharedEv($11) | 0;
  $$0 = $$0 + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 144 | 0);
 __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($1);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZN8optframe14MultiEvaluatorI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $13 = 0, $15 = 0, $16 = 0, $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4976;
 $2 = HEAP32[$0 + 36 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
  __ZdlPv($2);
 }
 HEAP32[$0 >> 2] = 5044;
 $13 = HEAP32[$0 + 20 >> 2] | 0;
 if (!$13) {
  __ZdlPv($0);
  return;
 }
 $15 = $0 + 24 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $13 | 0) >>> 2) << 2);
 __ZdlPv($13);
 __ZdlPv($0);
 return;
}

function _pad($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$lcssa = 0, $$011 = 0, $13 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $5 = sp;
 if (($2 | 0) > ($3 | 0) & ($4 & 73728 | 0) == 0) {
  $9 = $2 - $3 | 0;
  _memset($5 | 0, $1 | 0, ($9 >>> 0 < 256 ? $9 : 256) | 0) | 0;
  if ($9 >>> 0 > 255) {
   $13 = $2 - $3 | 0;
   $$011 = $9;
   do {
    _out_57($0, $5, 256);
    $$011 = $$011 + -256 | 0;
   } while ($$011 >>> 0 > 255);
   $$0$lcssa = $13 & 255;
  } else $$0$lcssa = $9;
  _out_57($0, $5, $$0$lcssa);
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $13 = 0, $7 = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $12 = 0; else {
  $7 = $3 + 112 | 0;
  if ($1 >>> 0 < 29 & (HEAP8[$7 >> 0] | 0) == 0) {
   HEAP8[$7 >> 0] = 1;
   $12 = $3;
   break;
  } else {
   $12 = __Znwj($1 << 2) | 0;
   break;
  }
 } while (0);
 HEAP32[$0 >> 2] = $12;
 $13 = $12 + ($2 << 2) | 0;
 HEAP32[$0 + 8 >> 2] = $13;
 HEAP32[$0 + 4 >> 2] = $13;
 HEAP32[$0 + 12 >> 2] = $12 + ($1 << 2);
 return;
}

function __ZTv0_n12_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0, $7 = 0, $8 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 3452;
 $5 = $4 + 64 | 0;
 HEAP32[$5 >> 2] = 3492;
 HEAP32[$4 + 8 >> 2] = 3472;
 $7 = $4 + 12 | 0;
 HEAP32[$7 >> 2] = 3548;
 $8 = $4 + 44 | 0;
 if ((HEAP8[$8 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$8 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($7);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($4, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 return;
}

function __ZN8optframe13paretoManagerI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $15 = 0, $17 = 0, $18 = 0, $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 6228;
 HEAP32[$0 + 28 >> 2] = 6248;
 $3 = HEAP32[$0 + 32 >> 2] | 0;
 if ($3 | 0) {
  $5 = $0 + 36 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($3);
 }
 HEAP32[$0 + 8 >> 2] = 6248;
 $15 = HEAP32[$0 + 12 >> 2] | 0;
 if (!$15) return;
 $17 = $0 + 16 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if (($18 | 0) != ($15 | 0)) HEAP32[$17 >> 2] = $18 + (~(($18 + -4 - $15 | 0) >>> 2) << 2);
 __ZdlPv($15);
 return;
}

function _strtox_164($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $12 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $5 = sp;
 HEAP32[$5 >> 2] = 0;
 $6 = $5 + 4 | 0;
 HEAP32[$6 >> 2] = $0;
 HEAP32[$5 + 44 >> 2] = $0;
 $10 = $5 + 8 | 0;
 HEAP32[$10 >> 2] = ($0 | 0) < 0 ? -1 : $0 + 2147483647 | 0;
 HEAP32[$5 + 76 >> 2] = -1;
 ___shlim($5, 0);
 $12 = ___intscan($5, $2, 1, $3, $4) | 0;
 if ($1 | 0) HEAP32[$1 >> 2] = $0 + ((HEAP32[$6 >> 2] | 0) + (HEAP32[$5 + 108 >> 2] | 0) - (HEAP32[$10 >> 2] | 0));
 STACKTOP = sp;
 return $12 | 0;
}

function __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0);
 HEAP32[$0 >> 2] = 11144;
 HEAP32[$0 + 32 >> 2] = $1;
 HEAP32[$0 + 40 >> 2] = $2;
 HEAP32[$0 + 48 >> 2] = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP8[$0 + 52 >> 0] = 0;
 $11 = HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 FUNCTION_TABLE_vii[$11 & 127]($0, $3);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0);
 HEAP32[$0 >> 2] = 11208;
 HEAP32[$0 + 32 >> 2] = $1;
 HEAP32[$0 + 40 >> 2] = $2;
 HEAP32[$0 + 48 >> 2] = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP8[$0 + 52 >> 0] = 0;
 $11 = HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 FUNCTION_TABLE_vii[$11 & 127]($0, $3);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZNK8optframe8MoveCost5cloneEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = __Znwj(64) | 0;
 HEAP8[$1 + 16 >> 0] = 0;
 HEAP32[$1 + 8 >> 2] = 2;
 HEAP8[$1 + 15 >> 0] = 0;
 HEAP8[$1 + 12 >> 0] = 1;
 HEAP8[$1 + 13 >> 0] = 1;
 HEAP8[$1 + 14 >> 0] = 0;
 HEAP32[$1 >> 2] = 4004;
 HEAPF64[$1 + 24 >> 3] = +HEAPF64[$0 + 24 >> 3];
 HEAPF64[$1 + 32 >> 3] = +HEAPF64[$0 + 32 >> 3];
 HEAPF64[$1 + 40 >> 3] = +HEAPF64[$0 + 40 >> 3];
 HEAP8[$1 + 48 >> 0] = HEAP8[$0 + 48 >> 0] | 0;
 HEAP8[$1 + 49 >> 0] = HEAP8[$0 + 49 >> 0] | 0;
 __ZNSt3__26vectorINS_4pairIddEENS_9allocatorIS2_EEEC2ERKS5_($1 + 52 | 0, $0 + 52 | 0);
 return $1 | 0;
}

function __ZN3HFM17HFMMultiEvaluatorD0Ev($0) {
 $0 = $0 | 0;
 var $13 = 0, $15 = 0, $16 = 0, $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4976;
 $2 = HEAP32[$0 + 36 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
  __ZdlPv($2);
 }
 HEAP32[$0 >> 2] = 5044;
 $13 = HEAP32[$0 + 20 >> 2] | 0;
 if (!$13) {
  __ZdlPv($0);
  return;
 }
 $15 = $0 + 24 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $13 | 0) >>> 2) << 2);
 __ZdlPv($13);
 __ZdlPv($0);
 return;
}

function __ZN3HFM19NSSeqHFMModifyRules11getIteratorERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $5 = 0;
 $3 = __Znwj(52) | 0;
 $5 = HEAP32[$0 + 20 >> 2] | 0;
 HEAP8[$3 + 16 >> 0] = 0;
 HEAP32[$3 + 8 >> 2] = 2;
 HEAP8[$3 + 15 >> 0] = 0;
 HEAP8[$3 + 12 >> 0] = 1;
 HEAP8[$3 + 13 >> 0] = 1;
 HEAP8[$3 + 14 >> 0] = 0;
 HEAP32[$3 >> 2] = 5892;
 HEAP32[$3 + 24 >> 2] = 0;
 HEAP32[$3 + 28 >> 2] = 0;
 HEAP32[$3 + 32 >> 2] = 0;
 HEAP32[$3 + 40 >> 2] = $1;
 HEAP32[$3 + 44 >> 2] = $5;
 HEAP32[$3 + 48 >> 2] = $0 + 28;
 HEAP32[$3 + 36 >> 2] = 0;
 HEAP32[$3 + 20 >> 2] = 0;
 return $3 | 0;
}

function _strcmp($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $2 = 0, $3 = 0, $8 = 0, $9 = 0;
 $2 = HEAP8[$0 >> 0] | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 if ($2 << 24 >> 24 == 0 ? 1 : $2 << 24 >> 24 != $3 << 24 >> 24) {
  $$lcssa = $3;
  $$lcssa8 = $2;
 } else {
  $$011 = $1;
  $$0710 = $0;
  do {
   $$0710 = $$0710 + 1 | 0;
   $$011 = $$011 + 1 | 0;
   $8 = HEAP8[$$0710 >> 0] | 0;
   $9 = HEAP8[$$011 >> 0] | 0;
  } while (!($8 << 24 >> 24 == 0 ? 1 : $8 << 24 >> 24 != $9 << 24 >> 24));
  $$lcssa = $9;
  $$lcssa8 = $8;
 }
 return ($$lcssa8 & 255) - ($$lcssa & 255) | 0;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $5 = 0, $7 = 0, $8 = 0;
 $4 = $1 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $7 = $1 + 36 | 0;
 $8 = $1 + 24 | 0;
 do if (!$5) {
  HEAP32[$4 >> 2] = $2;
  HEAP32[$8 >> 2] = $3;
  HEAP32[$7 >> 2] = 1;
 } else {
  if (($5 | 0) != ($2 | 0)) {
   HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 1;
   HEAP32[$8 >> 2] = 2;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  if ((HEAP32[$8 >> 2] | 0) == 2) HEAP32[$8 >> 2] = $3;
 } while (0);
 return;
}

function __ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 3616;
 $5 = $4 + 60 | 0;
 HEAP32[$5 >> 2] = 3636;
 $6 = $4 + 8 | 0;
 HEAP32[$6 >> 2] = 3548;
 $7 = $4 + 40 | 0;
 if ((HEAP8[$7 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$7 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($4, 3648);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 __ZdlPv($4);
 return;
}

function __ZNSt3__221binomial_distributionIiE10param_typeC2Eid($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $13 = 0.0, $14 = 0.0, $17 = 0.0, $19 = 0.0, $26 = 0.0, $9 = 0;
 HEAP32[$0 >> 2] = $1;
 HEAPF64[$0 + 8 >> 3] = $2;
 if (!($2 > 0.0 & $2 < 1.0)) return;
 $9 = ~~(+($1 + 1 | 0) * $2);
 HEAP32[$0 + 32 >> 2] = $9;
 $13 = +_lgamma(+($1 | 0) + 1.0);
 $14 = +($9 | 0);
 $17 = $13 - +_lgamma($14 + 1.0);
 $19 = +($1 - $9 | 0);
 $26 = 1.0 - $2;
 HEAPF64[$0 + 16 >> 3] = +Math_exp(+($17 - +_lgamma($19 + 1.0) + $14 * +Math_log(+$2) + $19 * +Math_log(+$26)));
 HEAPF64[$0 + 24 >> 3] = $2 / $26;
 return;
}

function ___stdio_seek($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $3 = sp + 20 | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = $1;
 HEAP32[$vararg_buffer + 12 >> 2] = $3;
 HEAP32[$vararg_buffer + 16 >> 2] = $2;
 if ((___syscall_ret(___syscall140(140, $vararg_buffer | 0) | 0) | 0) < 0) {
  HEAP32[$3 >> 2] = -1;
  $10 = -1;
 } else $10 = HEAP32[$3 >> 2] | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $4 = 0;
 if ((__ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8max_sizeEv($0) | 0) >>> 0 < $1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $4 = $0 + 128 | 0;
 if ($1 >>> 0 < 29 & (HEAP8[$4 >> 0] | 0) == 0) {
  HEAP8[$4 >> 0] = 1;
  $$0$i$i = $0 + 16 | 0;
 } else $$0$i$i = __Znwj($1 << 2) | 0;
 HEAP32[$0 + 4 >> 2] = $$0$i$i;
 HEAP32[$0 >> 2] = $$0$i$i;
 HEAP32[$0 + 8 >> 2] = $$0$i$i + ($1 << 2);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function __ZN3HFM25NSSeqHFMChangeSingleInputD0Ev($0) {
 $0 = $0 | 0;
 var $13 = 0, $15 = 0, $16 = 0, $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4156;
 $2 = HEAP32[$0 + 40 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 44 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
  __ZdlPv($2);
 }
 $13 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$13) {
  __ZdlPv($0);
  return;
 }
 $15 = $0 + 32 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $13 | 0) >>> 2) << 2);
 __ZdlPv($13);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function __ZN3HFM24NSSeqNEIGHAddSingleInputD0Ev($0) {
 $0 = $0 | 0;
 var $13 = 0, $15 = 0, $16 = 0, $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4284;
 $2 = HEAP32[$0 + 40 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 44 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
  __ZdlPv($2);
 }
 $13 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$13) {
  __ZdlPv($0);
  return;
 }
 $15 = $0 + 32 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $13 | 0) >>> 2) << 2);
 __ZdlPv($13);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function __ZN8optframe14MultiEvaluatorI6RepHFMiE12addEvaluatorERNS_9EvaluatorIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $1;
 $3 = $0 + 40 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 >>> 0 < (HEAP32[$0 + 44 >> 2] | 0) >>> 0) {
  HEAP32[$4 >> 2] = $1;
  HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 4;
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__26vectorIPN8optframe9EvaluatorI6RepHFMiEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0 + 36 | 0, $2);
  STACKTOP = sp;
  return;
 }
}

function __ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 3616;
 $5 = $4 + 60 | 0;
 HEAP32[$5 >> 2] = 3636;
 $6 = $4 + 8 | 0;
 HEAP32[$6 >> 2] = 3548;
 $7 = $4 + 40 | 0;
 if ((HEAP8[$7 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$7 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($4, 3648);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 return;
}

function __ZThn8_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0;
 $1 = $0 + -8 | 0;
 HEAP32[$1 >> 2] = 3452;
 $2 = $1 + 64 | 0;
 HEAP32[$2 >> 2] = 3492;
 HEAP32[$1 + 8 >> 2] = 3472;
 $4 = $1 + 12 | 0;
 HEAP32[$4 >> 2] = 3548;
 $5 = $1 + 44 | 0;
 if ((HEAP8[$5 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$5 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($1, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($2);
 __ZdlPv($1);
 return;
}

function __ZNK3HFM24MoveHFMChangeSingleInputeqERKN8optframe4MoveI6RepHFMiEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $27 = 0;
 if ((HEAP32[$1 + 20 >> 2] | 0) != (HEAP32[$0 + 20 >> 2] | 0)) {
  $27 = 0;
  return $27 | 0;
 }
 if ((HEAP8[$1 + 24 >> 0] | 0) != (HEAP8[$0 + 24 >> 0] | 0)) {
  $27 = 0;
  return $27 | 0;
 }
 if ((HEAP32[$1 + 28 >> 2] | 0) != (HEAP32[$0 + 28 >> 2] | 0)) {
  $27 = 0;
  return $27 | 0;
 }
 if ((HEAP32[$1 + 32 >> 2] | 0) != (HEAP32[$0 + 32 >> 2] | 0)) {
  $27 = 0;
  return $27 | 0;
 }
 $27 = (HEAP32[$1 + 36 >> 2] | 0) == (HEAP32[$0 + 36 >> 2] | 0);
 return $27 | 0;
}

function __ZN8optframe14MultiEvaluatorI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $13 = 0, $15 = 0, $16 = 0, $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4976;
 $2 = HEAP32[$0 + 36 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
  __ZdlPv($2);
 }
 HEAP32[$0 >> 2] = 5044;
 $13 = HEAP32[$0 + 20 >> 2] | 0;
 if (!$13) return;
 $15 = $0 + 24 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $13 | 0) >>> 2) << 2);
 __ZdlPv($13);
 return;
}

function __ZN8optframe9Direction6equalsERKNS_10EvaluationES3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $26 = 0, $3 = 0, $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $7 = HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0;
 HEAPF64[$3 >> 3] = +HEAPF64[$1 + 24 >> 3] + +HEAPF64[$1 + 64 >> 3] * +HEAPF64[$1 + 32 >> 3];
 HEAPF64[$4 >> 3] = +HEAPF64[$2 + 24 >> 3] + +HEAPF64[$2 + 64 >> 3] * +HEAPF64[$2 + 32 >> 3];
 $26 = FUNCTION_TABLE_iiiiii[$7 & 31]($0, $3, $4, $1 + 40 | 0, $2 + 40 | 0) | 0;
 STACKTOP = sp;
 return $26 | 0;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $16 = 0, $2 = 0;
 HEAP32[$0 >> 2] = 3328;
 $1 = $0 + 64 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 | 0) {
  __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE4syncEv($0) | 0;
  if (!(_fclose($2) | 0)) HEAP32[$1 >> 2] = 0;
 }
 if (HEAP8[$0 + 96 >> 0] | 0) {
  $10 = HEAP32[$0 + 32 >> 2] | 0;
  if ($10 | 0) __ZdaPv($10);
 }
 if (HEAP8[$0 + 97 >> 0] | 0) {
  $16 = HEAP32[$0 + 56 >> 2] | 0;
  if ($16 | 0) __ZdaPv($16);
 }
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function __ZN8optframe9Direction6equalsERKNS_8MoveCostES3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $26 = 0, $3 = 0, $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $7 = HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0;
 HEAPF64[$3 >> 3] = +HEAPF64[$1 + 24 >> 3] + +HEAPF64[$1 + 40 >> 3] * +HEAPF64[$1 + 32 >> 3];
 HEAPF64[$4 >> 3] = +HEAPF64[$2 + 24 >> 3] + +HEAPF64[$2 + 40 >> 3] * +HEAPF64[$2 + 32 >> 3];
 $26 = FUNCTION_TABLE_iiiiii[$7 & 31]($0, $3, $4, $1 + 52 | 0, $2 + 52 | 0) | 0;
 STACKTOP = sp;
 return $26 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $10 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $5) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4); else {
  $10 = HEAP32[$0 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 15]($10, $1, $2, $3, $4, $5);
 }
 return;
}

function __ZThn8_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0;
 $1 = $0 + -8 | 0;
 HEAP32[$1 >> 2] = 3452;
 $2 = $1 + 64 | 0;
 HEAP32[$2 >> 2] = 3492;
 HEAP32[$1 + 8 >> 2] = 3472;
 $4 = $1 + 12 | 0;
 HEAP32[$4 >> 2] = 3548;
 $5 = $1 + 44 | 0;
 if ((HEAP8[$5 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$5 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($1, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($2);
 return;
}

function _getint_58($0) {
 $0 = $0 | 0;
 var $$0$lcssa = 0, $$06 = 0, $1 = 0, $5 = 0, $7 = 0, $isdigittmp4 = 0, $isdigittmp7 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $isdigittmp4 = (HEAP8[$1 >> 0] | 0) + -48 | 0;
 if ($isdigittmp4 >>> 0 < 10) {
  $$06 = 0;
  $7 = $1;
  $isdigittmp7 = $isdigittmp4;
  while (1) {
   $5 = $isdigittmp7 + ($$06 * 10 | 0) | 0;
   $7 = $7 + 1 | 0;
   HEAP32[$0 >> 2] = $7;
   $isdigittmp7 = (HEAP8[$7 >> 0] | 0) + -48 | 0;
   if ($isdigittmp7 >>> 0 >= 10) {
    $$0$lcssa = $5;
    break;
   } else $$06 = $5;
  }
 } else $$0$lcssa = 0;
 return $$0$lcssa | 0;
}

function __ZN8optframe5TimerD0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $1 = sp + 16 | 0;
 HEAP32[$0 >> 2] = 5092;
 if (!(HEAP8[$0 + 17 >> 0] | 0)) {
  __ZdlPv($0);
  STACKTOP = sp;
  return;
 }
 _gettimeofday($1 | 0, sp + 8 | 0) | 0;
 HEAPF64[$vararg_buffer >> 3] = (+(HEAP32[$1 >> 2] | 0) * 1.0e6 + +(HEAP32[$1 + 4 >> 2] | 0) - (+(HEAP32[$0 + 20 >> 2] | 0) * 1.0e6 + +(HEAP32[$0 + 24 >> 2] | 0))) * 1.0e-06;
 _printf(17801, $vararg_buffer) | 0;
 __ZdlPv($0);
 STACKTOP = sp;
 return;
}

function _wmemmove($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$01417 = 0, $$019 = 0, $$118 = 0, $$in = 0;
 if ($0 - $1 >> 2 >>> 0 < $2 >>> 0) {
  $$in = $2;
  do {
   $$in = $$in + -1 | 0;
   HEAP32[$0 + ($$in << 2) >> 2] = HEAP32[$1 + ($$in << 2) >> 2];
  } while (($$in | 0) != 0);
 } else if ($2 | 0) {
  $$01417 = $1;
  $$019 = $0;
  $$118 = $2;
  while (1) {
   $$118 = $$118 + -1 | 0;
   HEAP32[$$019 >> 2] = HEAP32[$$01417 >> 2];
   if (!$$118) break; else {
    $$01417 = $$01417 + 4 | 0;
    $$019 = $$019 + 4 | 0;
   }
  }
 }
 return $0 | 0;
}

function _memcmp($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $14 = 0, $4 = 0, $5 = 0;
 L1 : do if (!$2) $14 = 0; else {
  $$01318 = $0;
  $$01417 = $2;
  $$019 = $1;
  while (1) {
   $4 = HEAP8[$$01318 >> 0] | 0;
   $5 = HEAP8[$$019 >> 0] | 0;
   if ($4 << 24 >> 24 != $5 << 24 >> 24) break;
   $$01417 = $$01417 + -1 | 0;
   if (!$$01417) {
    $14 = 0;
    break L1;
   } else {
    $$01318 = $$01318 + 1 | 0;
    $$019 = $$019 + 1 | 0;
   }
  }
  $14 = ($4 & 255) - ($5 & 255) | 0;
 } while (0);
 return $14 | 0;
}

function __ZN3HFM25NSSeqHFMChangeSingleInputD2Ev($0) {
 $0 = $0 | 0;
 var $13 = 0, $15 = 0, $16 = 0, $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4156;
 $2 = HEAP32[$0 + 40 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 44 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
  __ZdlPv($2);
 }
 $13 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$13) return;
 $15 = $0 + 32 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $13 | 0) >>> 2) << 2);
 __ZdlPv($13);
 return;
}

function __ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0, $8 = 0, $9 = 0;
 $2 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 36336) | 0;
 $3 = $0 + 36 | 0;
 HEAP32[$3 >> 2] = $2;
 $8 = $0 + 44 | 0;
 HEAP32[$8 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 127]($2) | 0;
 $9 = HEAP32[$3 >> 2] | 0;
 HEAP8[$0 + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] & 127]($9) | 0) & 1;
 if ((HEAP32[$8 >> 2] | 0) > 8) __ZNSt3__221__throw_runtime_errorEPKc(26652); else return;
}

function __ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0, $8 = 0, $9 = 0;
 $2 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 36328) | 0;
 $3 = $0 + 36 | 0;
 HEAP32[$3 >> 2] = $2;
 $8 = $0 + 44 | 0;
 HEAP32[$8 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 127]($2) | 0;
 $9 = HEAP32[$3 >> 2] | 0;
 HEAP8[$0 + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] & 127]($9) | 0) & 1;
 if ((HEAP32[$8 >> 2] | 0) > 8) __ZNSt3__221__throw_runtime_errorEPKc(26652); else return;
}

function __ZN3HFM24NSSeqNEIGHAddSingleInputD2Ev($0) {
 $0 = $0 | 0;
 var $13 = 0, $15 = 0, $16 = 0, $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4284;
 $2 = HEAP32[$0 + 40 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 44 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
  __ZdlPv($2);
 }
 $13 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$13) return;
 $15 = $0 + 32 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($13 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $13 | 0) >>> 2) << 2);
 __ZdlPv($13);
 return;
}

function __ZNSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0, $4 = 0;
 HEAP32[$0 >> 2] = 3452;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 3492;
 HEAP32[$0 + 8 >> 2] = 3472;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 3548;
 $4 = $0 + 44 | 0;
 if ((HEAP8[$4 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($0, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function _store_int_144($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $7 = 0;
 L1 : do if ($0 | 0) switch ($1 | 0) {
 case -2:
  {
   HEAP8[$0 >> 0] = $2;
   break L1;
   break;
  }
 case -1:
  {
   HEAP16[$0 >> 1] = $2;
   break L1;
   break;
  }
 case 0:
  {
   HEAP32[$0 >> 2] = $2;
   break L1;
   break;
  }
 case 1:
  {
   HEAP32[$0 >> 2] = $2;
   break L1;
   break;
  }
 case 3:
  {
   $7 = $0;
   HEAP32[$7 >> 2] = $2;
   HEAP32[$7 + 4 >> 2] = $3;
   break L1;
   break;
  }
 default:
  break L1;
 } while (0);
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($0) {
 $0 = $0 | 0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -4 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 do if ($7 | 0) {
  $10 = HEAP32[$0 + 16 >> 2] | 0;
  if (($10 | 0) == ($7 | 0)) {
   HEAP8[$10 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv($7);
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0, $4 = 0;
 HEAP32[$0 >> 2] = 3452;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 3492;
 HEAP32[$0 + 8 >> 2] = 3472;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 3548;
 $4 = $0 + 44 | 0;
 if ((HEAP8[$4 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($0, 3504);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function __ZN8optframe5TimerD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $1 = sp + 16 | 0;
 HEAP32[$0 >> 2] = 5092;
 if (!(HEAP8[$0 + 17 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 _gettimeofday($1 | 0, sp + 8 | 0) | 0;
 HEAPF64[$vararg_buffer >> 3] = (+(HEAP32[$1 >> 2] | 0) * 1.0e6 + +(HEAP32[$1 + 4 >> 2] | 0) - (+(HEAP32[$0 + 20 >> 2] | 0) * 1.0e6 + +(HEAP32[$0 + 24 >> 2] | 0))) * 1.0e-06;
 _printf(17801, $vararg_buffer) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_INS_4pairIdiEENS_9allocatorIS2_EEEENS3_IS5_EEEC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $6 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if (!$1) return;
 if ($1 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $6 = $1 * 12 | 0;
 $7 = __Znwj($6) | 0;
 HEAP32[$0 >> 2] = $7;
 $8 = $7 + ($1 * 12 | 0) | 0;
 HEAP32[$0 + 8 >> 2] = $8;
 _memset($7 | 0, 0, $6 | 0) | 0;
 HEAP32[$2 >> 2] = $8;
 return;
}

function ___stdout_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 HEAP32[$0 + 36 >> 2] = 35;
 if (!(HEAP32[$0 >> 2] & 64)) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = 21523;
  HEAP32[$vararg_buffer + 8 >> 2] = sp + 16;
  if (___syscall54(54, $vararg_buffer | 0) | 0) HEAP8[$0 + 75 >> 0] = -1;
 }
 $14 = ___stdio_write($0, $1, $2) | 0;
 STACKTOP = sp;
 return $14 | 0;
}

function _fmt_x($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$05$lcssa = 0, $$056 = 0, $14 = 0, $15 = 0, $8 = 0;
 if (($0 | 0) == 0 & ($1 | 0) == 0) $$05$lcssa = $2; else {
  $$056 = $2;
  $15 = $1;
  $8 = $0;
  while (1) {
   $14 = $$056 + -1 | 0;
   HEAP8[$14 >> 0] = HEAPU8[23862 + ($8 & 15) >> 0] | 0 | $3;
   $8 = _bitshift64Lshr($8 | 0, $15 | 0, 4) | 0;
   $15 = tempRet0;
   if (($8 | 0) == 0 & ($15 | 0) == 0) {
    $$05$lcssa = $14;
    break;
   } else $$056 = $14;
  }
 }
 return $$05$lcssa | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $14 = 0, $7 = 0, $8 = 0;
 $7 = HEAP32[$0 + 4 >> 2] | 0;
 $8 = $7 >> 8;
 if (!($7 & 1)) $$0 = $8; else $$0 = HEAP32[(HEAP32[$3 >> 2] | 0) + $8 >> 2] | 0;
 $14 = HEAP32[$0 >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 20 >> 2] & 15]($14, $1, $2, $3 + $$0 | 0, $7 & 2 | 0 ? $4 : 2, $5);
 return;
}

function __ZNSt3__211__call_onceERVmPvPFvS2_E($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _pthread_mutex_lock(36376) | 0;
 while (1) {
  if ((HEAP32[$0 >> 2] | 0) != 1) break;
  _pthread_cond_wait(36404, 36376) | 0;
 }
 if (!(HEAP32[$0 >> 2] | 0)) {
  HEAP32[$0 >> 2] = 1;
  _pthread_mutex_unlock(36376) | 0;
  FUNCTION_TABLE_vi[$2 & 511]($1);
  _pthread_mutex_lock(36376) | 0;
  HEAP32[$0 >> 2] = -1;
  _pthread_mutex_unlock(36376) | 0;
  _pthread_cond_broadcast(36404) | 0;
 } else _pthread_mutex_unlock(36376) | 0;
 return;
}

function _fwrite($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $11 = 0, $12 = 0, $15 = 0, $4 = 0, $phitmp = 0;
 $4 = Math_imul($2, $1) | 0;
 $$ = ($1 | 0) == 0 ? 0 : $2;
 if ((HEAP32[$3 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($3) | 0) == 0;
  $11 = ___fwritex($0, $4, $3) | 0;
  if ($phitmp) $12 = $11; else {
   ___unlockfile($3);
   $12 = $11;
  }
 } else $12 = ___fwritex($0, $4, $3) | 0;
 if (($12 | 0) == ($4 | 0)) $15 = $$; else $15 = ($12 >>> 0) / ($1 >>> 0) | 0;
 return $15 | 0;
}

function __ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $3 = 0;
 HEAP32[$0 >> 2] = 3616;
 $1 = $0 + 60 | 0;
 HEAP32[$1 >> 2] = 3636;
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 3548;
 $3 = $0 + 40 | 0;
 if ((HEAP8[$3 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, 3648);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$lcssa = 0, $7 = 0;
 $$0 = $2;
 while (1) {
  if (($$0 | 0) == ($3 | 0)) {
   $$0$lcssa = $3;
   break;
  }
  if ((HEAP32[$$0 >> 2] | 0) >>> 0 >= 128) {
   $$0$lcssa = $$0;
   break;
  }
  $7 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
  if (!((HEAP16[$7 + (HEAP32[$$0 >> 2] << 1) >> 1] & $1) << 16 >> 16)) {
   $$0$lcssa = $$0;
   break;
  }
  $$0 = $$0 + 4 | 0;
 }
 return $$0$lcssa | 0;
}

function __ZNK8optframe16EmptyLocalSearchI6RepHFMiE3logEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, dest = 0, src = 0, stop = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $2 = __Znwj(32) | 0;
 HEAP32[$0 >> 2] = $2;
 HEAP32[$0 + 8 >> 2] = -2147483616;
 HEAP32[$0 + 4 >> 2] = 24;
 dest = $2;
 src = 21085;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$2 + 24 >> 0] = 0;
 return;
}

function __ZNSt3__26vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEEC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $6 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if (!$1) return;
 if ($1 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $6 = $1 * 12 | 0;
 $7 = __Znwj($6) | 0;
 HEAP32[$0 >> 2] = $7;
 $8 = $7 + ($1 * 12 | 0) | 0;
 HEAP32[$0 + 8 >> 2] = $8;
 _memset($7 | 0, 0, $6 | 0) | 0;
 HEAP32[$2 >> 2] = $8;
 return;
}

function __ZNK8optframe15SingleObjSearchI6RepHFMiE3logEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, dest = 0, src = 0, stop = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $2 = __Znwj(32) | 0;
 HEAP32[$0 >> 2] = $2;
 HEAP32[$0 + 8 >> 2] = -2147483616;
 HEAP32[$0 + 4 >> 2] = 20;
 dest = $2;
 src = 18023;
 stop = dest + 20 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$2 + 20 >> 0] = 0;
 return;
}

function __ZN8optframe5NSSeqI6RepHFMiE16getBlockIteratorERKNS_8SolutionIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $9 = 0;
 $9 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($0, HEAP32[$1 + 20 >> 2] | 0, HEAP32[$1 + 24 >> 2] | 0) | 0;
 $10 = __Znwj(24) | 0;
 HEAP8[$10 + 16 >> 0] = 0;
 HEAP32[$10 + 8 >> 2] = 2;
 HEAP8[$10 + 15 >> 0] = 0;
 HEAP8[$10 + 12 >> 0] = 1;
 HEAP8[$10 + 13 >> 0] = 1;
 HEAP8[$10 + 14 >> 0] = 0;
 HEAP32[$10 >> 2] = 5276;
 HEAP32[$10 + 20 >> 2] = $9;
 return $10 | 0;
}

function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $8 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3); else {
  $8 = HEAP32[$0 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, $1, $2, $3);
 }
 return;
}

function __ZN8optframe15ParetoDominanceI6RepHFMiE9dominatesERKNS_15MultiEvaluationES5_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZN8optframe15ParetoDominanceI6RepHFMiE14checkDominatesERKNS_15MultiEvaluationES5_($3, $0, $1, $2);
 $4 = HEAP32[$3 >> 2] | 0;
 STACKTOP = sp;
 return (($4 | 0) > 0 ? ((HEAP32[$3 + 4 >> 2] | 0) + $4 | 0) == (((HEAP32[$1 + 24 >> 2] | 0) - (HEAP32[$1 + 20 >> 2] | 0) | 0) / 72 | 0 | 0) : 0) | 0;
}

function __ZN3HFM25NSSeqHFMRemoveSingleInput11getIteratorERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0;
 $3 = __Znwj(44) | 0;
 HEAP8[$3 + 16 >> 0] = 0;
 HEAP32[$3 + 8 >> 2] = 2;
 HEAP8[$3 + 15 >> 0] = 0;
 HEAP8[$3 + 12 >> 0] = 1;
 HEAP8[$3 + 13 >> 0] = 1;
 HEAP8[$3 + 14 >> 0] = 0;
 HEAP32[$3 >> 2] = 5500;
 HEAP32[$3 + 24 >> 2] = 0;
 HEAP32[$3 + 28 >> 2] = 0;
 HEAP32[$3 + 32 >> 2] = 0;
 HEAP32[$3 + 40 >> 2] = $1;
 HEAP32[$3 + 36 >> 2] = 0;
 HEAP32[$3 + 20 >> 2] = 0;
 return $3 | 0;
}

function __ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $3 = 0;
 HEAP32[$0 >> 2] = 3616;
 $1 = $0 + 60 | 0;
 HEAP32[$1 >> 2] = 3636;
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 3548;
 $3 = $0 + 40 | 0;
 if ((HEAP8[$3 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, 3648);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function ___fmodeflags($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$ = 0, $$2 = 0, $$2$ = 0, $$4 = 0, $2 = 0, $3 = 0, $5 = 0, $8 = 0;
 $2 = (_strchr($0, 43) | 0) == 0;
 $3 = HEAP8[$0 >> 0] | 0;
 $$0 = $2 ? $3 << 24 >> 24 != 114 & 1 : 2;
 $5 = (_strchr($0, 120) | 0) == 0;
 $$0$ = $5 ? $$0 : $$0 | 128;
 $8 = (_strchr($0, 101) | 0) == 0;
 $$2 = $8 ? $$0$ : $$0$ | 524288;
 $$2$ = $3 << 24 >> 24 == 114 ? $$2 : $$2 | 64;
 $$4 = $3 << 24 >> 24 == 119 ? $$2$ | 512 : $$2$;
 return ($3 << 24 >> 24 == 97 ? $$4 | 1024 : $$4) | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $13 = 0, $6 = 0, $7 = 0;
 $6 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = $6 >> 8;
 if (!($6 & 1)) $$0 = $7; else $$0 = HEAP32[(HEAP32[$2 >> 2] | 0) + $7 >> 2] | 0;
 $13 = HEAP32[$0 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 15]($13, $1, $2 + $$0 | 0, $6 & 2 | 0 ? $3 : 2, $4);
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0;
 $1 = $0 + 8 | 0;
 $3 = ___uselocale(HEAP32[$1 >> 2] | 0) | 0;
 $4 = _mbtowc(0, 0, 4) | 0;
 if ($3 | 0) ___uselocale($3) | 0;
 if (!$4) {
  $7 = HEAP32[$1 >> 2] | 0;
  if (!$7) $$0 = 1; else {
   $9 = ___uselocale($7) | 0;
   $10 = ___ctype_get_mb_cur_max() | 0;
   if ($9 | 0) ___uselocale($9) | 0;
   return ($10 | 0) == 1 | 0;
  }
 } else $$0 = -1;
 return $$0 | 0;
}

function __ZNK8optframe8MoveCost2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, dest = 0, src = 0, stop = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $2 = __Znwj(32) | 0;
 HEAP32[$0 >> 2] = $2;
 HEAP32[$0 + 8 >> 2] = -2147483616;
 HEAP32[$0 + 4 >> 2] = 17;
 dest = $2;
 src = 21019;
 stop = dest + 17 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$2 + 17 >> 0] = 0;
 return;
}

function __ZNK3HFM12HFMEvaluator2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, dest = 0, src = 0, stop = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $2 = __Znwj(32) | 0;
 HEAP32[$0 >> 2] = $2;
 HEAP32[$0 + 8 >> 2] = -2147483616;
 HEAP32[$0 + 4 >> 2] = 31;
 dest = $2;
 src = 20879;
 stop = dest + 31 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$2 + 31 >> 0] = 0;
 return;
}

function __ZNK8optframe7RandGen2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, dest = 0, src = 0, stop = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $2 = __Znwj(32) | 0;
 HEAP32[$0 >> 2] = $2;
 HEAP32[$0 + 8 >> 2] = -2147483616;
 HEAP32[$0 + 4 >> 2] = 16;
 dest = $2;
 src = 21289;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$2 + 16 >> 0] = 0;
 return;
}

function ___string_read($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$027 = 0, $$027$ = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 $3 = $0 + 84 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $2 + 256 | 0;
 $6 = _memchr($4, 0, $5) | 0;
 $$027 = ($6 | 0) == 0 ? $5 : $6 - $4 | 0;
 $$027$ = $$027 >>> 0 < $2 >>> 0 ? $$027 : $2;
 _memcpy($1 | 0, $4 | 0, $$027$ | 0) | 0;
 HEAP32[$0 + 4 >> 2] = $4 + $$027$;
 $14 = $4 + $$027 | 0;
 HEAP32[$0 + 8 >> 2] = $14;
 HEAP32[$3 >> 2] = $14;
 return $$027$ | 0;
}

function __ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$lcssa = 0, $7 = 0;
 $$0 = $2;
 while (1) {
  if (($$0 | 0) == ($3 | 0)) {
   $$0$lcssa = $3;
   break;
  }
  if ((HEAP32[$$0 >> 2] | 0) >>> 0 < 128) {
   $7 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
   if ((HEAP16[$7 + (HEAP32[$$0 >> 2] << 1) >> 1] & $1) << 16 >> 16) {
    $$0$lcssa = $$0;
    break;
   }
  }
  $$0 = $$0 + 4 | 0;
 }
 return $$0$lcssa | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $12 = 0, $5 = 0, $6 = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = $5 >> 8;
 if (!($5 & 1)) $$0 = $6; else $$0 = HEAP32[(HEAP32[$2 >> 2] | 0) + $6 >> 2] | 0;
 $12 = HEAP32[$0 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 31]($12, $1, $2 + $$0 | 0, $5 & 2 | 0 ? $3 : 2);
 return;
}

function ___towrite($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $14 = 0, $3 = 0, $7 = 0;
 $1 = $0 + 74 | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 HEAP8[$1 >> 0] = $3 + 255 | $3;
 $7 = HEAP32[$0 >> 2] | 0;
 if (!($7 & 8)) {
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  $14 = HEAP32[$0 + 44 >> 2] | 0;
  HEAP32[$0 + 28 >> 2] = $14;
  HEAP32[$0 + 20 >> 2] = $14;
  HEAP32[$0 + 16 >> 2] = $14 + (HEAP32[$0 + 48 >> 2] | 0);
  $$0 = 0;
 } else {
  HEAP32[$0 >> 2] = $7 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$08 = 0, $13 = 0, $7 = 0;
 $$0 = $3;
 $$08 = $1;
 while (1) {
  if (($$08 | 0) == ($2 | 0)) break;
  if ((HEAP32[$$08 >> 2] | 0) >>> 0 < 128) {
   $7 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
   $13 = HEAPU16[$7 + (HEAP32[$$08 >> 2] << 1) >> 1] | 0;
  } else $13 = 0;
  HEAP16[$$0 >> 1] = $13;
  $$0 = $$0 + 2 | 0;
  $$08 = $$08 + 4 | 0;
 }
 return $2 | 0;
}

function __ZN8optframe9Direction10betterThanERKNS_10EvaluationES3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sink7 = 0, $$sink8 = 0, $6 = 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 64 >> 2] & 127]($0) | 0;
 $$sink8 = $6 ? $2 : $1;
 $$sink7 = $6 ? $1 : $2;
 return +HEAPF64[$$sink8 + 24 >> 3] + +HEAPF64[$$sink8 + 64 >> 3] * +HEAPF64[$$sink8 + 32 >> 3] - (+HEAPF64[$$sink7 + 24 >> 3] + +HEAPF64[$$sink7 + 64 >> 3] * +HEAPF64[$$sink7 + 32 >> 3]) >= .0001 | 0;
}

function __ZN8optframe2NSI6RepHFMiE15validRandomMoveERKS1_PKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $6 = 0;
 $6 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 63]($0, $1, $2) | 0;
 if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 36 >> 2] & 63]($6, $1, $2) | 0) {
  $$0 = $6;
  return $$0 | 0;
 }
 if (!$6) {
  $$0 = 0;
  return $$0 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$6 >> 2] | 0) + 4 >> 2] & 511]($6);
 $$0 = 0;
 return $$0 | 0;
}

function __ZN8optframe19ParetoDominanceWeakI6RepHFMiE9dominatesERKNS_15MultiEvaluationES5_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZN8optframe15ParetoDominanceI6RepHFMiE14checkDominatesERKNS_15MultiEvaluationES5_($3, $0, $1, $2);
 STACKTOP = sp;
 return ((HEAP32[$3 + 4 >> 2] | 0) + (HEAP32[$3 >> 2] | 0) | 0) == (((HEAP32[$1 + 24 >> 2] | 0) - (HEAP32[$1 + 20 >> 2] | 0) | 0) / 72 | 0 | 0) | 0;
}

function __ZN8optframe9Direction10betterThanERKNS_8MoveCostES3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sink7 = 0, $$sink8 = 0, $6 = 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 64 >> 2] & 127]($0) | 0;
 $$sink8 = $6 ? $2 : $1;
 $$sink7 = $6 ? $1 : $2;
 return +HEAPF64[$$sink8 + 24 >> 3] + +HEAPF64[$$sink8 + 40 >> 3] * +HEAPF64[$$sink8 + 32 >> 3] - (+HEAPF64[$$sink7 + 24 >> 3] + +HEAPF64[$$sink7 + 40 >> 3] * +HEAPF64[$$sink7 + 32 >> 3]) >= .0001 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $4 = 0, $8 = 0, $9 = 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0;
 if (($4 | 0) == (__ZNSt3__211char_traitsIwE3eofEv() | 0)) $$0 = __ZNSt3__211char_traitsIwE3eofEv() | 0; else {
  $8 = $0 + 12 | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  HEAP32[$8 >> 2] = $9 + 4;
  $$0 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$9 >> 2] | 0) | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $4 = 0, $8 = 0, $9 = 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0;
 if (($4 | 0) == (__ZNSt3__211char_traitsIcE3eofEv() | 0)) $$0 = __ZNSt3__211char_traitsIcE3eofEv() | 0; else {
  $8 = $0 + 12 | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  HEAP32[$8 >> 2] = $9 + 1;
  $$0 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$9 >> 0] | 0) | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0, $4 = 0, $6 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($4 | 0) == ($1 | 0)) break;
   $6 = $4 + -4 | 0;
   HEAP32[$3 >> 2] = $6;
   $4 = $6;
  }
  if (($0 + 16 | 0) == ($1 | 0)) {
   HEAP8[$0 + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv($1);
   break;
  }
 } while (0);
 return;
}

function _fmt_o($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $7 = 0;
 if (($0 | 0) == 0 & ($1 | 0) == 0) $$0$lcssa = $2; else {
  $$06 = $2;
  $11 = $1;
  $7 = $0;
  while (1) {
   $10 = $$06 + -1 | 0;
   HEAP8[$10 >> 0] = $7 & 7 | 48;
   $7 = _bitshift64Lshr($7 | 0, $11 | 0, 3) | 0;
   $11 = tempRet0;
   if (($7 | 0) == 0 & ($11 | 0) == 0) {
    $$0$lcssa = $10;
    break;
   } else $$06 = $10;
  }
 }
 return $$0$lcssa | 0;
}

function __ZNSt3__223mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $4 = 0, $7 = 0;
 HEAP32[$0 >> 2] = $1;
 $$0 = 1;
 $4 = $1;
 while (1) {
  if (($$0 | 0) == 624) break;
  $7 = (Math_imul($4 >>> 30 ^ $4, 1812433253) | 0) + $$0 | 0;
  HEAP32[$0 + ($$0 << 2) >> 2] = $7;
  $$0 = $$0 + 1 | 0;
  $4 = $7;
 }
 HEAP32[$0 + 2496 >> 2] = 0;
 return;
}

function __ZN3HFM15ConstructiveACFD0Ev($0) {
 $0 = $0 | 0;
 var $12 = 0, $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5180;
 $2 = HEAP32[$0 + 144 >> 2] | 0;
 if (!$2) {
  $12 = $0 + 24 | 0;
  __ZN3HFM17ProblemParametersD2Ev($12);
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 148 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -8 - $2 | 0) >>> 3) << 3);
 __ZdlPv($2);
 $12 = $0 + 24 | 0;
 __ZN3HFM17ProblemParametersD2Ev($12);
 __ZdlPv($0);
 return;
}

function __ZTv0_n12_NSt3__213basic_fstreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 3232;
 $5 = $4 + 112 | 0;
 HEAP32[$5 >> 2] = 3272;
 HEAP32[$4 + 8 >> 2] = 3252;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($4 + 12 | 0);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($4, 3284);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 __ZdlPv($4);
 return;
}

function __ZN8optframe7RandGen12randBinomialEdi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 40 | 0;
 $4 = sp;
 HEAP32[$3 >> 2] = 1;
 __ZNSt3__221binomial_distributionIiE10param_typeC2Eid($4, $2, $1);
 $5 = __ZNSt3__221binomial_distributionIiEclINS_26linear_congruential_engineIjLj48271ELj0ELj2147483647EEEEEiRT_RKNS1_10param_typeE($4, $3, $4) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function _vsscanf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $8 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $3 = sp;
 dest = $3;
 stop = dest + 124 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3 + 32 >> 2] = 55;
 HEAP32[$3 + 44 >> 2] = $0;
 HEAP32[$3 + 76 >> 2] = -1;
 HEAP32[$3 + 84 >> 2] = $0;
 $8 = _vfscanf($3, $1, $2) | 0;
 STACKTOP = sp;
 return $8 | 0;
}

function __ZNSt3__28ios_base4initEPv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, dest = 0, stop = 0;
 HEAP32[$0 + 24 >> 2] = $1;
 HEAP32[$0 + 16 >> 2] = ($1 | 0) == 0 & 1;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 4098;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 6;
 $10 = $0 + 28 | 0;
 dest = $0 + 32 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZNSt3__26localeC2Ev($10);
 return;
}

function __ZN3HFM30NSIteratorHFMRemoveSingleInput4nextEv($0) {
 $0 = $0 | 0;
 var $$sink = 0, $1 = 0, $14 = 0, $3 = 0, $7 = 0;
 $1 = $0 + 36 | 0;
 $3 = (HEAP32[$1 >> 2] | 0) + 1 | 0;
 HEAP32[$1 >> 2] = $3;
 $7 = HEAP32[$0 + 24 >> 2] | 0;
 if (($3 | 0) >= ((HEAP32[$0 + 28 >> 2] | 0) - $7 >> 2 | 0)) {
  $$sink = 0;
  $14 = $0 + 20 | 0;
  HEAP32[$14 >> 2] = $$sink;
  return;
 }
 $$sink = HEAP32[$7 + ($3 << 2) >> 2] | 0;
 $14 = $0 + 20 | 0;
 HEAP32[$14 >> 2] = $$sink;
 return;
}

function __ZN3HFM30NSIteratorHFMChangeSingleInput4nextEv($0) {
 $0 = $0 | 0;
 var $$sink = 0, $1 = 0, $14 = 0, $3 = 0, $7 = 0;
 $1 = $0 + 36 | 0;
 $3 = (HEAP32[$1 >> 2] | 0) + 1 | 0;
 HEAP32[$1 >> 2] = $3;
 $7 = HEAP32[$0 + 24 >> 2] | 0;
 if (($3 | 0) >= ((HEAP32[$0 + 28 >> 2] | 0) - $7 >> 2 | 0)) {
  $$sink = 0;
  $14 = $0 + 20 | 0;
  HEAP32[$14 >> 2] = $$sink;
  return;
 }
 $$sink = HEAP32[$7 + ($3 << 2) >> 2] | 0;
 $14 = $0 + 20 | 0;
 HEAP32[$14 >> 2] = $$sink;
 return;
}

function __ZN3HFM29NSIteratorNEIGHAddSingleInput4nextEv($0) {
 $0 = $0 | 0;
 var $$sink = 0, $1 = 0, $14 = 0, $3 = 0, $7 = 0;
 $1 = $0 + 68 | 0;
 $3 = (HEAP32[$1 >> 2] | 0) + 1 | 0;
 HEAP32[$1 >> 2] = $3;
 $7 = HEAP32[$0 + 56 >> 2] | 0;
 if (($3 | 0) >= ((HEAP32[$0 + 60 >> 2] | 0) - $7 >> 2 | 0)) {
  $$sink = 0;
  $14 = $0 + 52 | 0;
  HEAP32[$14 >> 2] = $$sink;
  return;
 }
 $$sink = HEAP32[$7 + ($3 << 2) >> 2] | 0;
 $14 = $0 + 52 | 0;
 HEAP32[$14 >> 2] = $$sink;
 return;
}

function _sin_pi($0) {
 $0 = +$0;
 var $$0 = 0.0, $1 = 0.0, $13 = 0.0, $4 = 0.0, $8 = 0;
 $1 = $0 * .5;
 $4 = ($1 - +Math_floor(+$1)) * 2.0;
 $8 = (~~($4 * 4.0) + 1 | 0) / 2 | 0;
 $13 = ($4 - +($8 | 0) * .5) * 3.141592653589793;
 switch ($8 | 0) {
 case 3:
  {
   $$0 = -+___cos($13, 0.0);
   break;
  }
 case 1:
  {
   $$0 = +___cos($13, 0.0);
   break;
  }
 case 2:
  {
   $$0 = +___sin(-$13, 0.0, 0);
   break;
  }
 default:
  $$0 = +___sin($13, 0.0, 0);
 }
 return +$$0;
}

function __ZN3HFM24NSIteratorHFMModifyRules4nextEv($0) {
 $0 = $0 | 0;
 var $$sink = 0, $1 = 0, $14 = 0, $3 = 0, $7 = 0;
 $1 = $0 + 36 | 0;
 $3 = (HEAP32[$1 >> 2] | 0) + 1 | 0;
 HEAP32[$1 >> 2] = $3;
 $7 = HEAP32[$0 + 24 >> 2] | 0;
 if (($3 | 0) >= ((HEAP32[$0 + 28 >> 2] | 0) - $7 >> 2 | 0)) {
  $$sink = 0;
  $14 = $0 + 20 | 0;
  HEAP32[$14 >> 2] = $$sink;
  return;
 }
 $$sink = HEAP32[$7 + ($3 << 2) >> 2] | 0;
 $14 = $0 + 20 | 0;
 HEAP32[$14 >> 2] = $$sink;
 return;
}

function __ZTv0_n12_NSt3__213basic_fstreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 3232;
 $5 = $4 + 112 | 0;
 HEAP32[$5 >> 2] = 3272;
 HEAP32[$4 + 8 >> 2] = 3252;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($4 + 12 | 0);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($4, 3284);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 return;
}

function runPostSets() {}
function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}

function ___sin($0, $1, $2) {
 $0 = +$0;
 $1 = +$1;
 $2 = $2 | 0;
 var $$0 = 0.0, $13 = 0.0, $14 = 0.0, $3 = 0.0;
 $3 = $0 * $0;
 $13 = $3 * ($3 * $3) * ($3 * 1.58969099521155e-10 + -2.5050760253406863e-08) + ($3 * ($3 * 2.7557313707070068e-06 + -1.984126982985795e-04) + .00833333333332249);
 $14 = $3 * $0;
 if (!$2) $$0 = $14 * ($3 * $13 + -.16666666666666632) + $0; else $$0 = $0 - ($14 * .16666666666666632 + ($3 * ($1 * .5 - $14 * $13) - $1));
 return +$$0;
}

function _vasprintf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
 $4 = _vsnprintf(0, 0, $1, $3) | 0;
 if (($4 | 0) < 0) $$0 = -1; else {
  $6 = $4 + 1 | 0;
  $7 = _malloc($6) | 0;
  HEAP32[$0 >> 2] = $7;
  if (!$7) $$0 = -1; else $$0 = _vsnprintf($7, $6, $1, $2) | 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__212_GLOBAL__N_129throw_from_string_invalid_argERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0) {
 $0 = $0 | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 __ZNSt3__2plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_($1, $0, 28969);
 __ZNSt3__212_GLOBAL__N_112throw_helperISt16invalid_argumentEEvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($1);
}

function ___ftello_unlocked($0) {
 $0 = $0 | 0;
 var $$0 = 0, $11 = 0, $12 = 0;
 if (!(HEAP32[$0 >> 2] & 128)) $11 = 1; else $11 = (HEAP32[$0 + 20 >> 2] | 0) >>> 0 > (HEAP32[$0 + 28 >> 2] | 0) >>> 0 ? 2 : 1;
 $12 = FUNCTION_TABLE_iiii[HEAP32[$0 + 40 >> 2] & 63]($0, 0, $11) | 0;
 if (($12 | 0) < 0) $$0 = $12; else $$0 = $12 - (HEAP32[$0 + 8 >> 2] | 0) + (HEAP32[$0 + 4 >> 2] | 0) + (HEAP32[$0 + 20 >> 2] | 0) - (HEAP32[$0 + 28 >> 2] | 0) | 0;
 return $$0 | 0;
}

function __ZNKSt3__25ctypeIcE10do_toupperEPcPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $12 = 0, $4 = 0, $6 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP8[$$0 >> 0] | 0;
  if ($4 << 24 >> 24 > -1) {
   $6 = __ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0;
   $12 = HEAP32[$6 + (HEAP8[$$0 >> 0] << 2) >> 2] & 255;
  } else $12 = $4;
  HEAP8[$$0 >> 0] = $12;
  $$0 = $$0 + 1 | 0;
 }
 return $2 | 0;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEPcPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $12 = 0, $4 = 0, $6 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP8[$$0 >> 0] | 0;
  if ($4 << 24 >> 24 > -1) {
   $6 = __ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0;
   $12 = HEAP32[$6 + (HEAP8[$$0 >> 0] << 2) >> 2] & 255;
  } else $12 = $4;
  HEAP8[$$0 >> 0] = $12;
  $$0 = $$0 + 1 | 0;
 }
 return $2 | 0;
}

function __ZNSt3__212_GLOBAL__N_130throw_from_string_out_of_rangeERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0) {
 $0 = $0 | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 __ZNSt3__2plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_($1, $0, 28989);
 __ZNSt3__212_GLOBAL__N_112throw_helperISt12out_of_rangeEEvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($1);
}

function __ZNSt3__212__rs_defaultclEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[29656] | 0)) if (___cxa_guard_acquire(29656) | 0) __ZNSt3__223mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj(30988, 5489);
 return __ZNSt3__223mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv(30988) | 0;
}

function __ZN3HFM15ConstructiveACFD2Ev($0) {
 $0 = $0 | 0;
 var $12 = 0, $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5180;
 $2 = HEAP32[$0 + 144 >> 2] | 0;
 if (!$2) {
  $12 = $0 + 24 | 0;
  __ZN3HFM17ProblemParametersD2Ev($12);
  return;
 }
 $4 = $0 + 148 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -8 - $2 | 0) >>> 3) << 3);
 __ZdlPv($2);
 $12 = $0 + 24 | 0;
 __ZN3HFM17ProblemParametersD2Ev($12);
 return;
}

function __ZTv0_n12_NSt3__214basic_ifstreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 3396;
 $5 = $4 + 108 | 0;
 HEAP32[$5 >> 2] = 3416;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($4 + 8 | 0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($4, 3428);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 __ZdlPv($4);
 return;
}

function __ZNKSt3__25ctypeIwE10do_toupperEPwPKw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $4 = 0, $6 = 0, $9 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP32[$$0 >> 2] | 0;
  if ($4 >>> 0 < 128) {
   $6 = __ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0;
   $9 = HEAP32[$6 + (HEAP32[$$0 >> 2] << 2) >> 2] | 0;
  } else $9 = $4;
  HEAP32[$$0 >> 2] = $9;
  $$0 = $$0 + 4 | 0;
 }
 return $2 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEPwPKw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $4 = 0, $6 = 0, $9 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP32[$$0 >> 2] | 0;
  if ($4 >>> 0 < 128) {
   $6 = __ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0;
   $9 = HEAP32[$6 + (HEAP32[$$0 >> 2] << 2) >> 2] | 0;
  } else $9 = $4;
  HEAP32[$$0 >> 2] = $9;
  $$0 = $$0 + 4 | 0;
 }
 return $2 | 0;
}

function __ZNSt3__28numpunctIwEC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $6 = 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 13720;
 HEAP32[$0 + 8 >> 2] = 46;
 HEAP32[$0 + 12 >> 2] = 44;
 $6 = $0 + 16 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}
function __ZNSt3__28numpunctIcEC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $6 = 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 13680;
 HEAP8[$0 + 8 >> 0] = 46;
 HEAP8[$0 + 9 >> 0] = 44;
 $6 = $0 + 12 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$09 = 0, $10 = 0, $8 = 0;
 $8 = ($2 - $1 | 0) >>> 2;
 $$0 = $4;
 $$09 = $1;
 while (1) {
  if (($$09 | 0) == ($2 | 0)) break;
  $10 = HEAP32[$$09 >> 2] | 0;
  HEAP8[$$0 >> 0] = $10 >>> 0 < 128 ? $10 & 255 : $3;
  $$0 = $$0 + 1 | 0;
  $$09 = $$09 + 4 | 0;
 }
 return $1 + ($8 << 2) | 0;
}

function __ZThn20_N8optframe24MOILSLPerturbationLPlus2I6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $6 = 0, $7 = 0;
 $1 = $0 + -20 | 0;
 HEAP32[$1 >> 2] = 4740;
 HEAP32[$1 + 20 >> 2] = 4788;
 $4 = HEAP32[$1 + 24 >> 2] | 0;
 if (!$4) {
  __ZdlPv($1);
  return;
 }
 $6 = $1 + 28 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) != ($4 | 0)) HEAP32[$6 >> 2] = $7 + (~(($7 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 __ZdlPv($1);
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP8[$0 + 128 >> 0] = 0;
 if ($1 | 0) {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($0, $1);
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($0, $1);
 }
 return;
}

function __ZTv0_n12_NSt3__214basic_ifstreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 3396;
 $5 = $4 + 108 | 0;
 HEAP32[$5 >> 2] = 3416;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($4 + 8 | 0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($4, 3428);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 return;
}

function __ZThn20_N8optframe22ILSLPerturbationLPlus2I6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $6 = 0, $7 = 0;
 $1 = $0 + -20 | 0;
 HEAP32[$1 >> 2] = 4468;
 HEAP32[$1 + 20 >> 2] = 4516;
 $4 = HEAP32[$1 + 24 >> 2] | 0;
 if (!$4) {
  __ZdlPv($1);
  return;
 }
 $6 = $1 + 28 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) != ($4 | 0)) HEAP32[$6 >> 2] = $7 + (~(($7 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 __ZdlPv($1);
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP8[$0 + 8 + 3 >> 0] = 1;
 __ZNSt3__211char_traitsIwE6assignEPwjw($0, 1, 45) | 0;
 HEAP32[$2 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($0 + 4 | 0, $2);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP8[$0 + 8 + 3 >> 0] = 1;
 __ZNSt3__211char_traitsIwE6assignEPwjw($0, 1, 45) | 0;
 HEAP32[$2 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($0 + 4 | 0, $2);
 STACKTOP = sp;
 return;
}

function __ZThn8_NSt3__213basic_fstreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 $1 = $0 + -8 | 0;
 HEAP32[$1 >> 2] = 3232;
 $2 = $1 + 112 | 0;
 HEAP32[$2 >> 2] = 3272;
 HEAP32[$1 + 8 >> 2] = 3252;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($1 + 12 | 0);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($1, 3284);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($2);
 __ZdlPv($1);
 return;
}

function __ZThn4_N8optframe22BasicMOILSPerturbationI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $6 = 0, $7 = 0;
 $1 = $0 + -4 | 0;
 HEAP32[$1 >> 2] = 4804;
 HEAP32[$1 + 4 >> 2] = 4824;
 $4 = HEAP32[$1 + 36 >> 2] | 0;
 if (!$4) {
  __ZdlPv($1);
  return;
 }
 $6 = $1 + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) != ($4 | 0)) HEAP32[$6 >> 2] = $7 + (~(($7 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 __ZdlPv($1);
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP8[$0 + 11 >> 0] = 1;
 __ZNSt3__211char_traitsIcE6assignEPcjc($0, 1, 45) | 0;
 HEAP8[$2 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($0 + 1 | 0, $2);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP8[$0 + 11 >> 0] = 1;
 __ZNSt3__211char_traitsIcE6assignEPcjc($0, 1, 45) | 0;
 HEAP8[$2 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($0 + 1 | 0, $2);
 STACKTOP = sp;
 return;
}

function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else _memcpy(dest, src, num) | 0;
 return dest | 0;
}

function __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($0, $1, $2, $3, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $varargs = $varargs | 0;
 var $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 HEAP32[$4 >> 2] = $varargs;
 $5 = ___uselocale($2) | 0;
 $6 = _vsnprintf($0, $1, $3, $4) | 0;
 if ($5 | 0) ___uselocale($5) | 0;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $6 = 0;
 HEAP8[$0 >> 0] = 0;
 HEAP32[$0 + 4 >> 2] = $1;
 $6 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[$6 + 16 >> 2] | 0)) {
  $11 = HEAP32[$6 + 72 >> 2] | 0;
  if ($11 | 0) __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv($11) | 0;
  HEAP8[$0 >> 0] = 1;
 }
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $6 = 0;
 HEAP8[$0 >> 0] = 0;
 HEAP32[$0 + 4 >> 2] = $1;
 $6 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[$6 + 16 >> 2] | 0)) {
  $11 = HEAP32[$6 + 72 >> 2] | 0;
  if ($11 | 0) __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  HEAP8[$0 >> 0] = 1;
 }
 return;
}

function __ZNSt3__212_GLOBAL__N_112throw_helperISt16invalid_argumentEEvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0) {
 $0 = $0 | 0;
 var $1 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $1 = HEAP32[1710] | 0;
 HEAP32[$vararg_buffer >> 2] = (HEAP8[$0 + 11 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0;
 _fprintf($1, 28985, $vararg_buffer) | 0;
 _abort();
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $5) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4);
 return;
}

function __ZNSt3__212_GLOBAL__N_112throw_helperISt12out_of_rangeEEvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0) {
 $0 = $0 | 0;
 var $1 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $1 = HEAP32[1710] | 0;
 HEAP32[$vararg_buffer >> 2] = (HEAP8[$0 + 11 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0;
 _fprintf($1, 28985, $vararg_buffer) | 0;
 _abort();
}

function __ZThn8_NSt3__213basic_fstreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 $1 = $0 + -8 | 0;
 HEAP32[$1 >> 2] = 3232;
 $2 = $1 + 112 | 0;
 HEAP32[$2 >> 2] = 3272;
 HEAP32[$1 + 8 >> 2] = 3252;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($1 + 12 | 0);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($1, 3284);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($2);
 return;
}

function __ZN24GeneralParetoLocalSearchI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 6356;
 __ZN17paretoManagerGPLSI6RepHFMiED2Ev($0 + 40 | 0);
 $3 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$3) {
  __ZdlPv($0);
  return;
 }
 $5 = $0 + 32 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $3 | 0) >>> 2) << 2);
 __ZdlPv($3);
 __ZdlPv($0);
 return;
}

function _arg_n_143($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $2 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = HEAP32[$0 >> 2];
 $$0 = $1;
 while (1) {
  $9 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
  $10 = HEAP32[$9 >> 2] | 0;
  HEAP32[$2 >> 2] = $9 + 4;
  if ($$0 >>> 0 > 1) $$0 = $$0 + -1 | 0; else break;
 }
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNSt3__28ios_base16__call_callbacksENS0_5eventE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $4 = 0, $5 = 0, $7 = 0;
 $4 = $0 + 32 | 0;
 $5 = $0 + 36 | 0;
 $$0 = HEAP32[$0 + 40 >> 2] | 0;
 while (1) {
  if (!$$0) break;
  $7 = $$0 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$4 >> 2] | 0) + ($7 << 2) >> 2] & 7]($1, $0, HEAP32[(HEAP32[$5 >> 2] | 0) + ($7 << 2) >> 2] | 0);
  $$0 = $7;
 }
 return;
}

function _copysign($0, $1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0, $3 = 0, $8 = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $1;
 $8 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | $3 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = $2;
 HEAP32[tempDoublePtr + 4 >> 2] = $8;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 $4 = ___uselocale($1) | 0;
 $5 = _vasprintf($0, $2, $3) | 0;
 if ($4 | 0) ___uselocale($4) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $5 = 0;
 if (($0 | 0) != ($1 | 0)) {
  $4 = HEAP8[$1 + 11 >> 0] | 0;
  $5 = $4 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0, $5 ? HEAP32[$1 >> 2] | 0 : $1, $5 ? HEAP32[$1 + 4 >> 2] | 0 : $4 & 255) | 0;
 }
 return $0 | 0;
}

function __ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 4740;
 HEAP32[$0 + 20 >> 2] = 4788;
 $3 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$3) {
  __ZdlPv($0);
  return;
 }
 $5 = $0 + 28 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $3 | 0) >>> 2) << 2);
 __ZdlPv($3);
 __ZdlPv($0);
 return;
}

function __ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 $4 = ___uselocale($1) | 0;
 $5 = _vsscanf($0, $2, $3) | 0;
 if ($4 | 0) ___uselocale($4) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZThn20_N8optframe24MOILSLPerturbationLPlus2I6RepHFMiED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $6 = 0, $7 = 0;
 $1 = $0 + -20 | 0;
 HEAP32[$1 >> 2] = 4740;
 HEAP32[$1 + 20 >> 2] = 4788;
 $4 = HEAP32[$1 + 24 >> 2] | 0;
 if (!$4) return;
 $6 = $1 + 28 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) != ($4 | 0)) HEAP32[$6 >> 2] = $7 + (~(($7 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 return;
}

function __ZNSt3__218__libcpp_refstringC2EPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, $7 = 0;
 $2 = _strlen($1) | 0;
 $4 = __Znwj($2 + 13 | 0) | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$4 + 4 >> 2] = $2;
 HEAP32[$4 + 8 >> 2] = 0;
 $7 = __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE($4) | 0;
 _memcpy($7 | 0, $1 | 0, $2 + 1 | 0) | 0;
 HEAP32[$0 >> 2] = $7;
 return;
}

function __ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 4468;
 HEAP32[$0 + 20 >> 2] = 4516;
 $3 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$3) {
  __ZdlPv($0);
  return;
 }
 $5 = $0 + 28 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $3 | 0) >>> 2) << 2);
 __ZdlPv($3);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_fstreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 HEAP32[$0 >> 2] = 3232;
 $1 = $0 + 112 | 0;
 HEAP32[$1 >> 2] = 3272;
 HEAP32[$0 + 8 >> 2] = 3252;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0 + 12 | 0);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($0, 3284);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function __ZN8optframe22BasicMOILSPerturbationI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 4804;
 HEAP32[$0 + 4 >> 2] = 4824;
 $3 = HEAP32[$0 + 36 >> 2] | 0;
 if (!$3) {
  __ZdlPv($0);
  return;
 }
 $5 = $0 + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $3 | 0) >>> 2) << 2);
 __ZdlPv($3);
 __ZdlPv($0);
 return;
}

function __ZThn20_N8optframe22ILSLPerturbationLPlus2I6RepHFMiED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $6 = 0, $7 = 0;
 $1 = $0 + -20 | 0;
 HEAP32[$1 >> 2] = 4468;
 HEAP32[$1 + 20 >> 2] = 4516;
 $4 = HEAP32[$1 + 24 >> 2] | 0;
 if (!$4) return;
 $6 = $1 + 28 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) != ($4 | 0)) HEAP32[$6 >> 2] = $7 + (~(($7 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 return;
}

function ___unlist_locked_file($0) {
 $0 = $0 | 0;
 var $$pre = 0, $$sink = 0, $5 = 0, $9 = 0;
 if (HEAP32[$0 + 68 >> 2] | 0) {
  $5 = HEAP32[$0 + 116 >> 2] | 0;
  $$pre = $0 + 112 | 0;
  if ($5 | 0) HEAP32[$5 + 112 >> 2] = HEAP32[$$pre >> 2];
  $9 = HEAP32[$$pre >> 2] | 0;
  if (!$9) $$sink = (___pthread_self_97() | 0) + 232 | 0; else $$sink = $9 + 116 | 0;
  HEAP32[$$sink >> 2] = $5;
 }
 return;
}

function __ZThn4_N8optframe22BasicMOILSPerturbationI6RepHFMiED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $6 = 0, $7 = 0;
 $1 = $0 + -4 | 0;
 HEAP32[$1 >> 2] = 4804;
 HEAP32[$1 + 4 >> 2] = 4824;
 $4 = HEAP32[$1 + 36 >> 2] | 0;
 if (!$4) return;
 $6 = $1 + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) != ($4 | 0)) HEAP32[$6 >> 2] = $7 + (~(($7 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 return;
}

function ___cos($0, $1) {
 $0 = +$0;
 $1 = +$1;
 var $16 = 0.0, $17 = 0.0, $2 = 0.0, $3 = 0.0;
 $2 = $0 * $0;
 $3 = $2 * $2;
 $16 = $2 * .5;
 $17 = 1.0 - $16;
 return +($17 + (1.0 - $17 - $16 + ($2 * ($2 * ($2 * ($2 * 2.480158728947673e-05 + -.001388888888887411) + .0416666666666666) + $3 * $3 * ($2 * (2.087572321298175e-09 - $2 * 1.1359647557788195e-11) + -2.7557314351390663e-07)) - $0 * $1)));
}

function __ZN8optframe22RandGenMersenneTwister10initializeEv($0) {
 $0 = $0 | 0;
 var $$07 = 0, $3 = 0, $6 = 0;
 HEAP32[$0 + 2540 >> 2] = 0;
 $3 = HEAP32[$0 + 36 >> 2] | 0;
 HEAP32[$0 + 44 >> 2] = $3;
 $$07 = 1;
 $6 = $3;
 do {
  $6 = (Math_imul($6 >>> 30 ^ $6, 1812433253) | 0) + $$07 | 0;
  HEAP32[$0 + 44 + ($$07 << 2) >> 2] = $6;
  $$07 = $$07 + 1 | 0;
 } while (($$07 | 0) != 624);
 return;
}

function __ZNKSt3__212_GLOBAL__N_111__fake_bindclEv($0) {
 $0 = $0 | 0;
 var $$unpack = 0, $$unpack2 = 0, $10 = 0, $3 = 0;
 $$unpack = HEAP32[$0 + 4 >> 2] | 0;
 $$unpack2 = HEAP32[$0 + 8 >> 2] | 0;
 $3 = (HEAP32[$0 >> 2] | 0) + ($$unpack2 >> 1) | 0;
 if (!($$unpack2 & 1)) $10 = $$unpack; else $10 = HEAP32[(HEAP32[$3 >> 2] | 0) + $$unpack >> 2] | 0;
 FUNCTION_TABLE_vi[$10 & 511]($3);
 return;
}

function __ZNK3HFM17MoveHFMModifyRuleeqERKN8optframe4MoveI6RepHFMiEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $17 = 0;
 if ((HEAP32[$1 + 20 >> 2] | 0) != (HEAP32[$0 + 20 >> 2] | 0)) {
  $17 = 0;
  return $17 | 0;
 }
 if ((HEAP32[$1 + 24 >> 2] | 0) != (HEAP32[$0 + 24 >> 2] | 0)) {
  $17 = 0;
  return $17 | 0;
 }
 $17 = (HEAP8[$1 + 40 >> 0] | 0) == (HEAP8[$0 + 40 >> 0] | 0);
 return $17 | 0;
}

function __ZNSt3__213basic_fstreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 HEAP32[$0 >> 2] = 3232;
 $1 = $0 + 112 | 0;
 HEAP32[$1 >> 2] = 3272;
 HEAP32[$0 + 8 >> 2] = 3252;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0 + 12 | 0);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($0, 3284);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function __ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$09 = 0, $6 = 0;
 $$0 = $4;
 $$09 = $1;
 while (1) {
  if (($$09 | 0) == ($2 | 0)) break;
  $6 = HEAP8[$$09 >> 0] | 0;
  HEAP8[$$0 >> 0] = $6 << 24 >> 24 > -1 ? $6 : $3;
  $$0 = $$0 + 1 | 0;
  $$09 = $$09 + 1 | 0;
 }
 return $2 | 0;
}

function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}

function __ZSt9terminatev() {
 var $0 = 0, $2 = 0, $5 = 0;
 $0 = ___cxa_get_globals_fast() | 0;
 if ($0 | 0) {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2 | 0) {
   $5 = $2 + 48 | 0;
   if ((HEAP32[$5 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[$5 + 4 >> 2] | 0) == 1129074247 : 0) __ZSt11__terminatePFvvE(HEAP32[$2 + 12 >> 2] | 0);
  }
 }
 __ZSt11__terminatePFvvE(__ZSt13get_terminatev() | 0);
}

function __ZN24GeneralParetoLocalSearchI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 6356;
 __ZN17paretoManagerGPLSI6RepHFMiED2Ev($0 + 40 | 0);
 $3 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$3) return;
 $5 = $0 + 32 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $3 | 0) >>> 2) << 2);
 __ZdlPv($3);
 return;
}

function __ZThn4_N8optframe19IteratedLocalSearchINSt3__24pairINS2_IiiEES3_EE6RepHFMiE6searchERNS_4SOSCEPKNS_8SolutionIS5_iEEPKNS_10EvaluationE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return __ZN8optframe19IteratedLocalSearchINSt3__24pairINS2_IiiEES3_EE6RepHFMiE6searchERNS_4SOSCEPKNS_8SolutionIS5_iEEPKNS_10EvaluationE($0 + -4 | 0, $1, $2, $3) | 0;
}

function __ZNSt3__218__libcpp_refstringD2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $4 = 0, $5 = 0;
 if (__ZNKSt3__218__libcpp_refstring15__uses_refcountEv($0) | 0) {
  $3 = __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_829(HEAP32[$0 >> 2] | 0) | 0;
  $4 = $3 + 8 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $5 + -1;
  if (($5 + -1 | 0) < 0) __ZdlPv($3);
 }
 return;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3);
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 8 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  HEAP32[$3 >> 2] = 0;
  $3 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $5 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 36336) | 0;
 HEAP32[$0 + 36 >> 2] = $5;
 HEAP8[$0 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 127]($5) | 0) & 1;
 return;
}

function __ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $5 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 36328) | 0;
 HEAP32[$0 + 36 >> 2] = $5;
 HEAP8[$0 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 127]($5) | 0) & 1;
 return;
}

function __ZN8optframe9DirectionD0Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 6056;
 HEAP32[$0 + 24 >> 2] = 4004;
 $3 = HEAP32[$0 + 76 >> 2] | 0;
 if (!$3) {
  __ZdlPv($0);
  return;
 }
 $5 = $0 + 80 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -16 - $3 | 0) >>> 4) << 4);
 __ZdlPv($3);
 __ZdlPv($0);
 return;
}

function __ZN3HFM12HFMEvaluatorD0Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 6056;
 HEAP32[$0 + 24 >> 2] = 4004;
 $3 = HEAP32[$0 + 76 >> 2] | 0;
 if (!$3) {
  __ZdlPv($0);
  return;
 }
 $5 = $0 + 80 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -16 - $3 | 0) >>> 4) << 4);
 __ZdlPv($3);
 __ZdlPv($0);
 return;
}

function __ZN8optframe27VariableNeighborhoodDescentI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4408;
 $2 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 __ZdlPv($0);
 return;
}

function __ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE17initializeHistoryEv($0) {
 $0 = $0 | 0;
 var $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 $3 = HEAP32[$0 + 40 >> 2] | 0;
 $4 = HEAP32[$0 + 44 >> 2] | 0;
 $5 = __Znwj(16) | 0;
 $6 = $5;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 $11 = $5 + 8 | 0;
 HEAP32[$11 >> 2] = $3;
 HEAP32[$11 + 4 >> 2] = $4;
 return $5 | 0;
}

function __ZNSt3__214basic_ifstreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 HEAP32[$0 >> 2] = 3396;
 $1 = $0 + 108 | 0;
 HEAP32[$1 >> 2] = 3416;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0 + 8 | 0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, 3428);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function ___cxa_can_catch($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
 $8 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 63]($0, $1, $3) | 0;
 if ($8) HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
 STACKTOP = sp;
 return $8 & 1 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 4 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  HEAP32[$3 >> 2] = 0;
  $3 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function _rand() {
 var $0 = 0, $10 = 0, $14 = 0, $6 = 0, $8 = 0, $9 = 0;
 $0 = 29648;
 $6 = ___muldi3(HEAP32[$0 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0, 1284865837, 1481765933) | 0;
 $8 = _i64Add($6 | 0, tempRet0 | 0, 1, 0) | 0;
 $9 = tempRet0;
 $10 = 29648;
 HEAP32[$10 >> 2] = $8;
 HEAP32[$10 + 4 >> 2] = $9;
 $14 = _bitshift64Lshr($8 | 0, $9 | 0, 33) | 0;
 return $14 | 0;
}

function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) >> 0] | 0) + 24 | 0;
}

function __ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 4740;
 HEAP32[$0 + 20 >> 2] = 4788;
 $3 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$3) return;
 $5 = $0 + 28 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $3 | 0) >>> 2) << 2);
 __ZdlPv($3);
 return;
}

function __ZN8optframe19ParetoDominanceWeakI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 6248;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 __ZdlPv($0);
 return;
}

function __ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 4468;
 HEAP32[$0 + 20 >> 2] = 4516;
 $3 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$3) return;
 $5 = $0 + 28 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $3 | 0) >>> 2) << 2);
 __ZdlPv($3);
 return;
}

function __ZN8optframe4MoveI6RepHFMiE11applyUpdateERNS_10EvaluationERS1_Pi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $8 = 0;
 HEAP8[$1 + 56 >> 0] = 1;
 $8 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($0, $2, $3) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 68 >> 2] & 127]($0, $3);
 return $8 | 0;
}

function __ZN8optframe22BasicMOILSPerturbationI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 4804;
 HEAP32[$0 + 4 >> 2] = 4824;
 $3 = HEAP32[$0 + 36 >> 2] | 0;
 if (!$3) return;
 $5 = $0 + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $3 | 0) >>> 2) << 2);
 __ZdlPv($3);
 return;
}

function __ZNKSt3__27collateIwE7do_hashEPKwS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$020 = 0, $6 = 0, $7 = 0;
 $$0 = 0;
 $$020 = $1;
 while (1) {
  if (($$020 | 0) == ($2 | 0)) break;
  $6 = (HEAP32[$$020 >> 2] | 0) + ($$0 << 4) | 0;
  $7 = $6 & -268435456;
  $$0 = ($7 >>> 24 | $7) ^ $6;
  $$020 = $$020 + 4 | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__213__vector_baseIPNS_4pairIN8optframe8SolutionI6RepHFMiEENS2_10EvaluationEEENS_9allocatorIS8_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 return;
}

function __ZNKSt3__27collateIcE7do_hashEPKcS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$020 = 0, $7 = 0, $8 = 0;
 $$0 = 0;
 $$020 = $1;
 while (1) {
  if (($$020 | 0) == ($2 | 0)) break;
  $7 = (HEAP8[$$020 >> 0] | 0) + ($$0 << 4) | 0;
  $8 = $7 & -268435456;
  $$0 = ($8 >>> 24 | $8) ^ $7;
  $$020 = $$020 + 1 | 0;
 }
 return $$0 | 0;
}

function __ZN8optframe15ParetoDominanceI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 6248;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 __ZdlPv($0);
 return;
}

function ___fseeko($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0, $9 = 0, $phitmp = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($0) | 0) == 0;
  $8 = ___fseeko_unlocked($0, $1, $2) | 0;
  if ($phitmp) $9 = $8; else {
   ___unlockfile($0);
   $9 = $8;
  }
 } else $9 = ___fseeko_unlocked($0, $1, $2) | 0;
 return $9 | 0;
}

function __ZN3HFM24MoveHFMRemoveSingleInputD0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5572;
 $2 = HEAP32[$0 + 36 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 40 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -8 - $2 | 0) >>> 3) << 3);
 __ZdlPv($2);
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $11 = 0, $6 = 0;
 $6 = $0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 $11 = $0 + 8 | 0;
 HEAP32[$11 >> 2] = -1;
 HEAP32[$11 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $11 = 0, $6 = 0;
 $6 = $0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 $11 = $0 + 8 | 0;
 HEAP32[$11 >> 2] = -1;
 HEAP32[$11 + 4 >> 2] = -1;
 return;
}

function __ZN3HFM23MoveNEIGHAddSingleInputD0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5408;
 $2 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 32 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -8 - $2 | 0) >>> 3) << 3);
 __ZdlPv($2);
 __ZdlPv($0);
 return;
}

function __ZNSt3__214basic_ifstreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 HEAP32[$0 >> 2] = 3396;
 $1 = $0 + 108 | 0;
 HEAP32[$1 >> 2] = 3416;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0 + 8 | 0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, 3428);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function _wmemcpy($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$058 = 0, $$067 = 0, $$09 = 0;
 if ($2 | 0) {
  $$058 = $2;
  $$067 = $1;
  $$09 = $0;
  while (1) {
   $$058 = $$058 + -1 | 0;
   HEAP32[$$09 >> 2] = HEAP32[$$067 >> 2];
   if (!$$058) break; else {
    $$067 = $$067 + 4 | 0;
    $$09 = $$09 + 4 | 0;
   }
  }
 }
 return $0 | 0;
}

function __ZN8optframe14MultiDirectionD0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5044;
 $2 = HEAP32[$0 + 20 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 24 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 __ZdlPv($0);
 return;
}

function __ZN3HFM19NSSeqHFMModifyRulesD0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5828;
 $2 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 32 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -8 - $2 | 0) >>> 3) << 3);
 __ZdlPv($2);
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $8 = 0;
 $8 = $2 + 8 | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 15]($0, $1, HEAP32[$8 >> 2] | 0, HEAP32[$8 + 4 >> 2] | 0, 0, $3);
 return;
}

function __ZN8optframe4NGESI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4624;
 $2 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 32 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 __ZdlPv($0);
 return;
}

function ___munmap($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 _dummy_253();
 HEAP32[$vararg_buffer >> 2] = $0;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 $4 = ___syscall_ret(___syscall91(91, $vararg_buffer | 0) | 0) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZN8optframe8MoveCost6updateERNS_10EvaluationE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $1 + 24 | 0;
 HEAPF64[$2 >> 3] = +HEAPF64[$2 >> 3] + +HEAPF64[$0 + 24 >> 3];
 $7 = $1 + 32 | 0;
 HEAPF64[$7 >> 3] = +HEAPF64[$7 >> 3] + +HEAPF64[$0 + 32 >> 3];
 if (HEAP8[$0 + 48 >> 0] | 0) return;
 HEAP8[$1 + 56 >> 0] = 0;
 return;
}

function __ZN8optframe10EvaluationD0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4920;
 $2 = HEAP32[$0 + 40 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 44 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -16 - $2 | 0) >>> 4) << 4);
 __ZdlPv($2);
 __ZdlPv($0);
 return;
}

function __ZN8optframe8MoveCostD0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4004;
 $2 = HEAP32[$0 + 52 >> 2] | 0;
 if (!$2) {
  __ZdlPv($0);
  return;
 }
 $4 = $0 + 56 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -16 - $2 | 0) >>> 4) << 4);
 __ZdlPv($2);
 __ZdlPv($0);
 return;
}

function __ZN8optframe7RandGen24randBinomialWithNegativeEdi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = $2 | 0;
 var $11 = 0, $6 = 0;
 $6 = FUNCTION_TABLE_iidi[HEAP32[(HEAP32[$0 >> 2] | 0) + 60 >> 2] & 3]($0, $1, $2) | 0;
 $11 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($0, 2) | 0) == 1;
 return ($11 ? 0 - $6 | 0 : $6) | 0;
}

function __ZN8optframe9DirectionD2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 6056;
 HEAP32[$0 + 24 >> 2] = 4004;
 $3 = HEAP32[$0 + 76 >> 2] | 0;
 if (!$3) return;
 $5 = $0 + 80 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -16 - $3 | 0) >>> 4) << 4);
 __ZdlPv($3);
 return;
}

function __ZN3HFM24MoveHFMRemoveSingleInput12canBeAppliedERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $4 = 0, $9 = 0;
 $4 = HEAP32[$0 + 20 >> 2] | 0;
 if (($4 | 0) > -1) {
  $9 = (HEAP32[$1 + 4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
  return ($9 | 0) > 8 & ($4 | 0) < ($9 >> 3 | 0) | 0;
 } else return 0;
 return 0;
}

function __ZNSt3__28ios_base4InitD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(33664) | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv(33748) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(34e3) | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv(34084) | 0;
 return;
}

function __ZN8optframe27VariableNeighborhoodDescentI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4408;
 $2 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 return;
}

function __ZNSt3__213__vector_baseIPN8optframe11LocalSearchI6RepHFMiEENS_9allocatorIS5_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 HEAP32[$0 >> 2] = 10712;
 __ZNSt3__26localeC2Ev($0 + 4 | 0);
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 HEAP32[$0 >> 2] = 10648;
 __ZNSt3__26localeC2Ev($0 + 4 | 0);
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 return;
}

function _sn_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $5 = 0, $6 = 0, $8 = 0;
 $5 = $0 + 20 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $8 = (HEAP32[$0 + 16 >> 2] | 0) - $6 | 0;
 $$ = $8 >>> 0 > $2 >>> 0 ? $2 : $8;
 _memcpy($6 | 0, $1 | 0, $$ | 0) | 0;
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$;
 return $2 | 0;
}

function __ZNSt3__213__vector_baseIPN8optframe5NSSeqI6RepHFMiEENS_9allocatorIS5_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 return;
}

function __ZNSt3__25ctypeIcEC2EPKtbj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $7 = 0;
 HEAP32[$0 + 4 >> 2] = $3 + -1;
 HEAP32[$0 >> 2] = 13628;
 $7 = $0 + 8 | 0;
 HEAP32[$7 >> 2] = $1;
 HEAP8[$0 + 12 >> 0] = $2 & 1;
 if (!$1) HEAP32[$7 >> 2] = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
 return;
}

function __ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE11localSearchERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $5 = 0;
 $5 = HEAP32[$0 + 32 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 40 >> 2] & 31]($5, $1, $2, $3);
 return;
}

function __ZNSt3__212_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$unpack = 0, $$unpack5 = 0;
 $$unpack = HEAP32[$1 >> 2] | 0;
 $$unpack5 = HEAP32[$1 + 4 >> 2] | 0;
 HEAP32[$0 >> 2] = $2;
 HEAP32[$0 + 4 >> 2] = $$unpack;
 HEAP32[$0 + 8 >> 2] = $$unpack5;
 return;
}

function __ZNSt3__212_GLOBAL__N_18as_floatIdNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEET_RKS7_RKT0_Pj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return +(+__ZNSt3__212_GLOBAL__N_115as_float_helperIdNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPFdPKcPPcEEET_RKS7_RKT0_PjT1_($0, $1, $2));
}

function __ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN8optframe15ParetoDominanceI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 6248;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$2) $7 = 1; else {
  $4 = ___uselocale($2) | 0;
  $5 = ___ctype_get_mb_cur_max() | 0;
  if (!$4) $7 = $5; else {
   ___uselocale($4) | 0;
   $7 = $5;
  }
 }
 return $7 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $7 = 0;
 if ((HEAP32[$1 + 4 >> 2] | 0) == ($2 | 0)) {
  $7 = $1 + 28 | 0;
  if ((HEAP32[$7 >> 2] | 0) != 1) HEAP32[$7 >> 2] = $3;
 }
 return;
}

function __Znwj($0) {
 $0 = $0 | 0;
 var $$ = 0, $$lcssa = 0, $2 = 0, $4 = 0;
 $$ = ($0 | 0) == 0 ? 1 : $0;
 while (1) {
  $2 = _malloc($$) | 0;
  if ($2 | 0) {
   $$lcssa = $2;
   break;
  }
  $4 = __ZSt15get_new_handlerv() | 0;
  if (!$4) {
   $$lcssa = 0;
   break;
  }
  FUNCTION_TABLE_v[$4 & 3]();
 }
 return $$lcssa | 0;
}

function __ZN3HFM24MoveHFMRemoveSingleInputD2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5572;
 $2 = HEAP32[$0 + 36 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 40 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -8 - $2 | 0) >>> 3) << 3);
 __ZdlPv($2);
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN3HFM23MoveNEIGHAddSingleInputD2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5408;
 $2 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 32 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -8 - $2 | 0) >>> 3) << 3);
 __ZdlPv($2);
 return;
}

function ___stdio_close($0) {
 $0 = $0 | 0;
 var $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer >> 2] = _dummy_121(HEAP32[$0 + 60 >> 2] | 0) | 0;
 $5 = ___syscall_ret(___syscall6(6, $vararg_buffer | 0) | 0) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZN8optframe14MultiEvaluatorI6RepHFMiE10betterThanERKNS_10EvaluationES5_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $7 = 0;
 $7 = HEAP32[(HEAP32[$0 + 36 >> 2] | 0) + ($3 << 2) >> 2] | 0;
 return FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 40 >> 2] & 63]($7, $1, $2) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $0 + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $0 + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$07 = 0;
 $$0 = $3;
 $$07 = $1;
 while (1) {
  if (($$07 | 0) == ($2 | 0)) break;
  HEAP8[$$0 >> 0] = HEAP8[$$07 >> 0] | 0;
  $$0 = $$0 + 1 | 0;
  $$07 = $$07 + 1 | 0;
 }
 return $2 | 0;
}

function __ZN8optframe14MultiDirectionD2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5044;
 $2 = HEAP32[$0 + 20 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 24 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 return;
}

function __ZN3HFM19NSSeqHFMModifyRulesD2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5828;
 $2 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 32 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -8 - $2 | 0) >>> 3) << 3);
 __ZdlPv($2);
 return;
}

function __ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$07 = 0;
 $$0 = $3;
 $$07 = $1;
 while (1) {
  if (($$07 | 0) == ($2 | 0)) break;
  HEAP32[$$0 >> 2] = HEAP8[$$07 >> 0];
  $$0 = $$0 + 4 | 0;
  $$07 = $$07 + 1 | 0;
 }
 return $2 | 0;
}

function __ZN8optframe4NGESI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4624;
 $2 = HEAP32[$0 + 28 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 32 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 return;
}

function __ZNSt3__28ios_baseD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 10632;
 __ZNSt3__28ios_base16__call_callbacksENS0_5eventE($0, 0);
 __ZNSt3__26localeD2Ev($0 + 28 | 0);
 _free(HEAP32[$0 + 32 >> 2] | 0);
 _free(HEAP32[$0 + 36 >> 2] | 0);
 _free(HEAP32[$0 + 48 >> 2] | 0);
 _free(HEAP32[$0 + 60 >> 2] | 0);
 return;
}

function __ZN8optframe14MultiEvaluatorI6RepHFMiE6equalsERKNS_10EvaluationES5_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $7 = 0;
 $7 = HEAP32[(HEAP32[$0 + 36 >> 2] | 0) + ($3 << 2) >> 2] | 0;
 return FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 52 >> 2] & 63]($7, $1, $2) | 0;
}

function __ZN8optframe10EvaluationD2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4920;
 $2 = HEAP32[$0 + 40 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 44 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -16 - $2 | 0) >>> 4) << 4);
 __ZdlPv($2);
 return;
}

function ___uflow($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(___toread($0) | 0)) if ((FUNCTION_TABLE_iiii[HEAP32[$0 + 32 >> 2] & 63]($0, $1, 1) | 0) == 1) $$0 = HEAPU8[$1 >> 0] | 0; else $$0 = -1; else $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN8optframe8MoveCostD2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 4004;
 $2 = HEAP32[$0 + 52 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 56 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -16 - $2 | 0) >>> 4) << 4);
 __ZdlPv($2);
 return;
}

function dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}

function ___shlim($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $6 = 0, $9 = 0;
 HEAP32[$0 + 104 >> 2] = $1;
 $4 = HEAP32[$0 + 8 >> 2] | 0;
 $6 = HEAP32[$0 + 4 >> 2] | 0;
 $9 = $4 - $6 | 0;
 HEAP32[$0 + 108 >> 2] = $9;
 HEAP32[$0 + 100 >> 2] = ($1 | 0) != 0 & ($9 | 0) > ($1 | 0) ? $6 + $1 | 0 : $4;
 return;
}

function ___ftello($0) {
 $0 = $0 | 0;
 var $6 = 0, $7 = 0, $phitmp = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($0) | 0) == 0;
  $6 = ___ftello_unlocked($0) | 0;
  if ($phitmp) $7 = $6; else {
   ___unlockfile($0);
   $7 = $6;
  }
 } else $7 = ___ftello_unlocked($0) | 0;
 return $7 | 0;
}

function __ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0;
 $8 = _catopen((HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0;
 $8 = _catopen((HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZN8optframe8SolutionI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5136;
 $2 = HEAP32[$0 + 20 >> 2] | 0;
 if ($2 | 0) {
  __ZN6RepHFMD2Ev($2);
  __ZdlPv($2);
 }
 $5 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$5) {
  __ZdlPv($0);
  return;
 }
 __ZdlPv($5);
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 HEAP32[$0 >> 2] = 3548;
 $1 = $0 + 32 | 0;
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNK3HFM24MoveHFMRemoveSingleInputeqERKN8optframe4MoveI6RepHFMiEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0;
 if ((HEAP32[$1 + 20 >> 2] | 0) != (HEAP32[$0 + 20 >> 2] | 0)) {
  $12 = 0;
  return $12 | 0;
 }
 $12 = (HEAP8[$1 + 24 >> 0] | 0) == (HEAP8[$0 + 24 >> 0] | 0);
 return $12 | 0;
}

function __ZNK8optframe9Component2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP8[$0 + 11 >> 0] = 8;
 $3 = $0;
 HEAP32[$3 >> 2] = 1182036047;
 HEAP32[$3 + 4 >> 2] = 1701667186;
 HEAP8[$0 + 8 >> 0] = 0;
 return;
}

function _snprintf($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 $4 = _vsnprintf($0, $1, $2, $3) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 switch (HEAP32[$0 + 4 >> 2] & 74) {
 case 64:
  {
   $$0 = 8;
   break;
  }
 case 8:
  {
   $$0 = 16;
   break;
  }
 case 0:
  {
   $$0 = 0;
   break;
  }
 default:
  $$0 = 10;
 }
 return $$0 | 0;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 HEAP32[$0 >> 2] = 3548;
 $1 = $0 + 32 | 0;
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function __ZN8optframe7RandGen4randEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $7 = 0;
 $1 = $0 + 40 | 0;
 if (HEAP8[$1 >> 0] | 0) {
  $7 = _rand() | 0;
  return $7 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 511]($0);
 HEAP8[$1 >> 0] = 1;
 $7 = _rand() | 0;
 return $7 | 0;
}

function __ZN3HFM17HFMMultiEvaluator10betterThanERKN8optframe10EvaluationES4_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $5 = 0;
 $5 = HEAP32[$0 + 52 >> 2] | 0;
 return FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 40 >> 2] & 63]($5, $1, $2) | 0;
}

function dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 return FUNCTION_TABLE_iiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0) | 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 HEAP32[$0 >> 2] = 13560;
 $1 = $0 + 8 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 | 0) != (__ZNSt3__26__clocEv() | 0)) _freelocale(HEAP32[$1 >> 2] | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZN3HFM17HFMMultiEvaluator6equalsERKN8optframe10EvaluationES4_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $5 = 0;
 $5 = HEAP32[$0 + 52 >> 2] | 0;
 return FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 52 >> 2] & 63]($5, $1, $2) | 0;
}

function __ZNSt3__214__shared_count16__release_sharedEv($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ((__ZNSt3__212_GLOBAL__N_19decrementIlEET_RS2_($0 + 4 | 0) | 0) == -1) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] & 511]($0);
  $$0 = 1;
 } else $$0 = 0;
 return $$0 | 0;
}

function _wmemset($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$056 = 0, $$07 = 0;
 if ($2 | 0) {
  $$056 = $2;
  $$07 = $0;
  while (1) {
   $$056 = $$056 + -1 | 0;
   HEAP32[$$07 >> 2] = $1;
   if (!$$056) break; else $$07 = $$07 + 4 | 0;
  }
 }
 return $0 | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$7 >> 2] = $5;
 return 3;
}

function _abort_message($0, $varargs) {
 $0 = $0 | 0;
 $varargs = $varargs | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 HEAP32[$1 >> 2] = $varargs;
 $2 = HEAP32[1710] | 0;
 _vfprintf($2, $0, $1) | 0;
 _fputc(10, $2) | 0;
 _abort();
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$7 >> 2] = $5;
 return 3;
}

function __ZN8optframe7RandGen4randEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = $0 + 40 | 0;
 if (!(HEAP8[$2 >> 0] | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 511]($0);
  HEAP8[$2 >> 0] = 1;
 }
 return (_rand() | 0) % ($1 | 0) | 0 | 0;
}

function ___cxa_get_globals_fast() {
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(36452, 3) | 0)) {
  $3 = _pthread_getspecific(HEAP32[9114] | 0) | 0;
  STACKTOP = sp;
  return $3 | 0;
 } else _abort_message(29284, sp);
 return 0;
}

function __ZNKSt3__26locale5__imp9has_facetEl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $5 = 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 > $1 >>> 0) $13 = (HEAP32[$5 + ($1 << 2) >> 2] | 0) != 0; else $13 = 0;
 return $13 | 0;
}

function __ZN9scannerpp15ConversionErrorD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $6 = 0;
 $1 = $0 + 16 | 0;
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
 $6 = $0 + 4 | 0;
 if ((HEAP8[$6 + 11 >> 0] | 0) >= 0) return;
 __ZdlPv(HEAP32[$6 >> 2] | 0);
 return;
}

function __ZN8optframe8SolutionI6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 5136;
 $2 = HEAP32[$0 + 20 >> 2] | 0;
 if ($2 | 0) {
  __ZN6RepHFMD2Ev($2);
  __ZdlPv($2);
 }
 $5 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$5) return;
 __ZdlPv($5);
 return;
}

function _fprintf($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = _vfprintf($0, $1, $2) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function _sscanf($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = _vsscanf($0, $1, $2) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($0, $1, __ZNSt3__211char_traitsIwE6lengthEPKw($1) | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0, $1, __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0) | 0;
}

function _printf($0, $varargs) {
 $0 = $0 | 0;
 $varargs = $varargs | 0;
 var $1 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 HEAP32[$1 >> 2] = $varargs;
 $3 = _vfprintf(HEAP32[1742] | 0, $0, $1) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}

function __ZN8optframe11LocalSearchI6RepHFMiE6setLOSENS_3LOSENSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS_8SolutionIS1_iEERNS_10EvaluationE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free($0);
 if (!(_pthread_setspecific(HEAP32[9114] | 0, 0) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(29383, sp);
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[7521] = 0;
 HEAP32[7520] = 13804;
 __ZNSt3__220__time_get_c_storageIwEC2Ev(30088);
 HEAP32[7520] = 11652;
 HEAP32[7522] = 11700;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[7517] = 0;
 HEAP32[7516] = 13804;
 __ZNSt3__220__time_get_c_storageIcEC2Ev(30072);
 HEAP32[7516] = 11568;
 HEAP32[7518] = 11616;
 return;
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($0 + 8 | 0, $1 + 12 | 0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, $1 + 4 | 0);
 return;
}

function __ZN8optframe7RandGen6rand01Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = $0 + 40 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 511]($0);
  HEAP8[$1 >> 0] = 1;
 }
 return +(+(_rand() | 0) / 2147483647.0);
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 return __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($2, $3, $4, 1114111, 0) | 0;
}

function dynCall_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 return FUNCTION_TABLE_iiiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0) | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 return __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($2, $3, $4, 1114111, 0) | 0;
}

function __ZNKSt3__25ctypeIwE5do_isEtw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $9 = 0;
 if ($2 >>> 0 < 128) $9 = (HEAP16[(__ZNSt3__25ctypeIcE13classic_tableEv() | 0) + ($2 << 1) >> 1] & $1) << 16 >> 16 != 0; else $9 = 0;
 return $9 | 0;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36304) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36296) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36288) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36280) | 0);
 return;
}

function __ZN3HFM23MoveNEIGHAddSingleInput12canBeAppliedERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0;
 if (HEAP32[$0 + 20 >> 2] | 0) {
  $8 = 1;
  return $8 | 0;
 }
 $8 = (HEAP32[$0 + 24 >> 2] | 0) != 0;
 return $8 | 0;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36240) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36232) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36224) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(35412) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(34600) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(34592) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(34584) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(34560) | 0);
 return;
}

function __ZNSt3__211char_traitsIwE7not_eofEj($0) {
 $0 = $0 | 0;
 var $5 = 0;
 if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($0, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) $5 = ~(__ZNSt3__211char_traitsIwE3eofEv() | 0); else $5 = $0;
 return $5 | 0;
}

function __ZNSt3__211char_traitsIcE7not_eofEi($0) {
 $0 = $0 | 0;
 var $5 = 0;
 if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($0, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) $5 = ~(__ZNSt3__211char_traitsIcE3eofEv() | 0); else $5 = $0;
 return $5 | 0;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $8 = 0;
 if ($1 << 24 >> 24 > -1) $8 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $8 = $1;
 return $8 | 0;
}

function dynCall_iiiiiid(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 return FUNCTION_TABLE_iiiiiid[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6) | 0;
}

function ___ofl_add($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0;
 $1 = ___ofl_lock() | 0;
 HEAP32[$0 + 56 >> 2] = HEAP32[$1 >> 2];
 $4 = HEAP32[$1 >> 2] | 0;
 if ($4 | 0) HEAP32[$4 + 52 >> 2] = $0;
 HEAP32[$1 >> 2] = $0;
 ___ofl_unlock();
 return $0 | 0;
}

function __ZNKSt3__25ctypeIcE10do_toupperEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $8 = 0;
 if ($1 << 24 >> 24 > -1) $8 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + (($1 & 255) << 2) >> 2] & 255; else $8 = $1;
 return $8 | 0;
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function ___uselocale($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0;
 $2 = (___pthread_self_739() | 0) + 188 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($0 | 0) HEAP32[$2 >> 2] = ($0 | 0) == (-1 | 0) ? 30872 : $0;
 return (($3 | 0) == 30872 ? -1 : $3) | 0;
}

function __ZN8optframe11LocalSearchI6RepHFMiE6getLOSENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SolutionIS1_iEERNS_10EvaluationE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return 2;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $7 = 0;
 $7 = $3 - $2 | 0;
 return ($7 >>> 0 < $4 >>> 0 ? $7 : $4) | 0;
}

function __ZNK8optframe4SOSC2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP8[$0 + 11 >> 0] = 4;
 HEAP32[$0 >> 2] = 1129533267;
 HEAP8[$0 + 4 >> 0] = 0;
 return;
}

function __ZNK8optframe4MOSC2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP8[$0 + 11 >> 0] = 4;
 HEAP32[$0 >> 2] = 1129533261;
 HEAP8[$0 + 4 >> 0] = 0;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[7529] = 0;
 HEAP32[7528] = 13804;
 HEAP32[7530] = __ZNSt3__26__clocEv() | 0;
 HEAP32[7528] = 13040;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[7525] = 0;
 HEAP32[7524] = 13804;
 HEAP32[7526] = __ZNSt3__26__clocEv() | 0;
 HEAP32[7524] = 13016;
 return;
}

function __ZNKSt3__25ctypeIwE10do_toupperEw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $6 = 0;
 if ($1 >>> 0 < 128) $6 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + ($1 << 2) >> 2] | 0; else $6 = $1;
 return $6 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $6 = 0;
 if ($1 >>> 0 < 128) $6 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + ($1 << 2) >> 2] | 0; else $6 = $1;
 return $6 | 0;
}

function __ZN8optframe15ParetoDominanceI6RepHFMiE9dominatesEPKNS_15MultiEvaluationES5_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 63]($0, $1, $2) | 0;
}

function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE8__monthsEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[29800] | 0)) if (___cxa_guard_acquire(29800) | 0) {
  __ZNSt3__2L12init_wmonthsEv();
  HEAP32[9012] = 35760;
 }
 return HEAP32[9012] | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE8__monthsEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[29720] | 0)) if (___cxa_guard_acquire(29720) | 0) {
  __ZNSt3__2L11init_monthsEv();
  HEAP32[8809] = 34948;
 }
 return HEAP32[8809] | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(36456, 268) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(29333, sp);
}

function ___cxx_global_array_dtor_120($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 35756;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
 } while (($2 | 0) != 35468);
 return;
}

function ___cxx_global_array_dtor_117($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 34944;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 } while (($2 | 0) != 34656);
 return;
}

function __ZNKSt3__220__time_get_c_storageIwE7__weeksEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[29816] | 0)) if (___cxa_guard_acquire(29816) | 0) {
  __ZNSt3__2L11init_wweeksEv();
  HEAP32[9055] = 36052;
 }
 return HEAP32[9055] | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE7__am_pmEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[29784] | 0)) if (___cxa_guard_acquire(29784) | 0) {
  __ZNSt3__2L11init_wam_pmEv();
  HEAP32[8939] = 35468;
 }
 return HEAP32[8939] | 0;
}

function ___cxx_global_array_dtor_93($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 36048;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
 } while (($2 | 0) != 35760);
 return;
}

function ___cxx_global_array_dtor_69($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 35236;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 } while (($2 | 0) != 34948);
 return;
}

function ___cxx_global_array_dtor_54($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 36220;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
 } while (($2 | 0) != 36052);
 return;
}

function __ZNSt3__211char_traitsIcE6assignEPcjc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if ($1 | 0) _memset($0 | 0, (__ZNSt3__211char_traitsIcE11to_int_typeEc($2) | 0) & 255 | 0, $1 | 0) | 0;
 return $0 | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE7__weeksEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[29736] | 0)) if (___cxa_guard_acquire(29736) | 0) {
  __ZNSt3__2L10init_weeksEv();
  HEAP32[8852] = 35240;
 }
 return HEAP32[8852] | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE7__am_pmEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[29704] | 0)) if (___cxa_guard_acquire(29704) | 0) {
  __ZNSt3__2L10init_am_pmEv();
  HEAP32[8736] = 34656;
 }
 return HEAP32[8736] | 0;
}

function dynCall_iiiiid(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = +a5;
 return FUNCTION_TABLE_iiiiid[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, +a5) | 0;
}

function ___cxx_global_array_dtor($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 35408;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 } while (($2 | 0) != 35240);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36344) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36352) | 0);
 return;
}

function __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($0, 10980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($0 + 12 | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36336) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36328) | 0);
 return;
}

function __ZNSt3__25ctypeIcED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 HEAP32[$0 >> 2] = 13628;
 $2 = HEAP32[$0 + 8 >> 2] | 0;
 if ($2 | 0) if (HEAP8[$0 + 12 >> 0] | 0) __ZdaPv($2);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED2Ev($0, 10912);
 __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($0, 10864);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED2Ev($0, 10856);
 __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev($0 + 8 | 0);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, 10808);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($0 + 8 | 0);
 return;
}

function __ZNKSt3__26locale9use_facetERNS0_2idE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 return __ZNKSt3__26locale5__imp9use_facetEl($2, __ZNSt3__26locale2id5__getEv($1) | 0) | 0;
}

function __ZNKSt3__26locale9has_facetERNS0_2idE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 return __ZNKSt3__26locale5__imp9has_facetEl($2, __ZNSt3__26locale2id5__getEv($1) | 0) | 0;
}

function __ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE20terminationConditionERNSt3__24pairINS4_IiiEES5_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return (HEAP32[$1 + 4 >> 2] | 0) >= (HEAP32[$1 + 12 >> 2] | 0) | 0;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36272) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36264) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36256) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36248) | 0);
 return;
}

function __ZTv0_n12_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function ___lctrans_impl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$1) $$0 = 0; else $$0 = ___mo_lookup(HEAP32[$1 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0, $0) | 0;
 return ($$0 | 0 ? $$0 : $0) | 0;
}

function __ZNSt3__28numpunctIwED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 13720;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 16 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__28numpunctIcED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 13680;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 12 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__26locale8__globalEv() {
 if (!(HEAP8[30312] | 0)) if (___cxa_guard_acquire(30312) | 0) {
  __ZNSt3__26locale5__imp11make_globalEv() | 0;
  HEAP32[9093] = 36368;
 }
 return HEAP32[9093] | 0;
}

function __ZNSt3__26locale7classicEv() {
 if (!(HEAP8[30144] | 0)) if (___cxa_guard_acquire(30144) | 0) {
  __ZNSt3__26locale5__imp12make_classicEv() | 0;
  HEAP32[9091] = 36360;
 }
 return HEAP32[9091] | 0;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(34576) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(34552) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36320) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(36312) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(34528) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(34520) | 0);
 return;
}

function __ZNSt3__26localeC2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[(__ZNSt3__26locale8__globalEv() | 0) >> 2] | 0;
 HEAP32[$0 >> 2] = $2;
 __ZNSt3__214__shared_count12__add_sharedEv($2);
 return;
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(34568) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(34536) | 0);
 return;
}

function __ZN8optframe7RandGen4randEjj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($0, 1 - $1 + $2 | 0) | 0) + $1 | 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tEC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 13560;
 HEAP32[$0 + 8 >> 2] = __ZNSt3__26__clocEv() | 0;
 return;
}

function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}

function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__211char_traitsIwE4moveEPwPKwj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$2) $5 = $0; else {
  _wmemmove($0, $1, $2) | 0;
  $5 = $0;
 }
 return $5 | 0;
}

function __ZN8optframe9Direction13isImprovementERKNS_8MoveCostE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 63]($0, $1, $0 + 24 | 0) | 0;
}

function __ZNSt3__211char_traitsIwE6assignEPwjw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$1) $5 = $0; else {
  _wmemset($0, $2, $1) | 0;
  $5 = $0;
 }
 return $5 | 0;
}

function __ZNSt3__211char_traitsIwE4copyEPwPKwj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$2) $5 = $0; else {
  _wmemcpy($0, $1, $2) | 0;
  $5 = $0;
 }
 return $5 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($0) {
 $0 = $0 | 0;
 __ZNKSt3__212_GLOBAL__N_111__fake_bindclEv(HEAP32[HEAP32[$0 >> 2] >> 2] | 0);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 HEAP32[$4 >> 2] = $2;
 return 3;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 HEAP32[$4 >> 2] = $2;
 return 3;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 HEAP32[$4 >> 2] = $2;
 return 3;
}

function ___DOUBLE_BITS_511($0) {
 $0 = +$0;
 var $1 = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $1 = HEAP32[tempDoublePtr >> 2] | 0;
 tempRet0 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 return $1 | 0;
}

function ___DOUBLE_BITS_63($0) {
 $0 = +$0;
 var $1 = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $1 = HEAP32[tempDoublePtr >> 2] | 0;
 tempRet0 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 return $1 | 0;
}

function __ZNSt3__26localeC2ERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$0 >> 2] = $2;
 __ZNSt3__214__shared_count12__add_sharedEv($2);
 return;
}

function __ZNSt3__211char_traitsIcE7compareEPKcS3_j($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0;
 if (!$2) $$0 = 0; else $$0 = _memcmp($0, $1, $2) | 0;
 return $$0 | 0;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function __ZThn4_NK8optframe25IteratedLocalSearchLevelsI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZNK8optframe27VariableNeighborhoodDescentI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe27VariableNeighborhoodDescentI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNKSt3__28numpunctIwE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1 + 16 | 0);
 return;
}

function __ZNKSt3__28numpunctIcE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1 + 12 | 0);
 return;
}

function __ZN8optframe16EmptyLocalSearchI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return;
}

function ___syscall_ret($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ($0 >>> 0 > 4294963200) {
  HEAP32[(___errno_location() | 0) >> 2] = 0 - $0;
  $$0 = -1;
 } else $$0 = $0;
 return $$0 | 0;
}

function _getTimeSeriesSize($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[7581] | 0;
 return (HEAP32[$1 + ($0 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[$1 + ($0 * 12 | 0) >> 2] | 0) >> 3 | 0;
}

function __ZNSt3__210__time_putD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) != (__ZNSt3__26__clocEv() | 0)) _freelocale(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZNK8optframe25IteratedLocalSearchLevelsI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE11idComponentEv($0);
 return;
}

function dynCall_viiid(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = +a4;
 FUNCTION_TABLE_viiid[index & 1](a1 | 0, a2 | 0, a3 | 0, +a4);
}

function __ZThn4_NK8optframe22BasicMOILSPerturbationI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe22BasicMOILSPerturbationI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZNK8optframe24MOILSLPerturbationLPlus2I6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiE11idComponentEv($0);
 return;
}

function b14(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(14);
 return 0;
}

function __ZN8optframe4MoveI6RepHFMiE7costMEVERKNS_15MultiEvaluationERKS1_PKib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 return 0;
}

function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}

function __ZN8optframe7RandGen5randGEdd($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 return +(+FUNCTION_TABLE_di[HEAP32[(HEAP32[$0 >> 2] | 0) + 72 >> 2] & 7]($0) * $2 + $1);
}

function __ZNSt3__212__rs_defaultD2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = (HEAP32[7739] | 0) + -1 | 0;
 HEAP32[7739] = $2;
 if (!$2) _pthread_mutex_unlock(30960) | 0;
 return;
}

function __ZNK8optframe22ILSLPerturbationLPlus2I6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiE11idComponentEv($0);
 return;
}

function __ZNK8optframe22DefaultNSBlockIteratorI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe22DefaultNSBlockIteratorI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZNK8optframe22BasicMOILSPerturbationI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe22BasicMOILSPerturbationI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZNSt3__26__clocEv() {
 if (!(HEAP8[29664] | 0)) if (___cxa_guard_acquire(29664) | 0) HEAP32[8636] = ___newlocale(2147483647, 26836, 0) | 0;
 return HEAP32[8636] | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($0) {
 $0 = $0 | 0;
 if ((HEAP8[$0 + 8 + 3 >> 0] | 0) < 0) __ZdlPv(HEAP32[$0 >> 2] | 0);
 return;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 63](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function __ZN8optframe4MoveI6RepHFMiE4costERKNS_10EvaluationERKS1_PKib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 return 0;
}

function __ZN3HFM18ConstructiveRandom16generateSolutionEd($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 return __ZN3HFM18ConstructiveRandom21generateSolutionAlphaEfd($0, 0.0, $1) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0) {
 $0 = $0 | 0;
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZNK8optframe19RandomDescentMethodI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe19RandomDescentMethodI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZNK8optframe19MORandomImprovementI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe19MORandomImprovementI6RepHFMiE11idComponentEv($0);
 return;
}

function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 return ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
}

function _strchr($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = ___strchrnul($0, $1) | 0;
 return ((HEAP8[$2 >> 0] | 0) == ($1 & 255) << 24 >> 24 ? $2 : 0) | 0;
}

function __ZNSt3__211char_traitsIcE4moveEPcPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if ($2 | 0) _memmove($0 | 0, $1 | 0, $2 | 0) | 0;
 return $0 | 0;
}

function __ZNK8optframe18BasicInitialParetoI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe18BasicInitialParetoI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZSt11__terminatePFvvE($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 FUNCTION_TABLE_v[$0 & 3]();
 _abort_message(29436, sp);
}

function __ZNSt3__211char_traitsIcE4copyEPcPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if ($2 | 0) _memcpy($0 | 0, $1 | 0, $2 | 0) | 0;
 return $0 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[7515] = 0;
 HEAP32[7514] = 13372;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[7513] = 0;
 HEAP32[7512] = 13344;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[7511] = 0;
 HEAP32[7510] = 13316;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[7509] = 0;
 HEAP32[7508] = 13288;
 return;
}

function __ZNK8optframe6ParetoI6RepHFMiE5cloneEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = __Znwj(32) | 0;
 __ZN8optframe6ParetoI6RepHFMiEC2ERKS2_($1, $0);
 return $1 | 0;
}

function __ZNK8optframe15MultiEvaluation5cloneEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = __Znwj(32) | 0;
 __ZN8optframe15MultiEvaluationC2ERKS0_($1, $0);
 return $1 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function dynCall_iidi(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iidi[index & 3](a1 | 0, +a2, a3 | 0) | 0;
}

function __ZNSt3__28ios_base33__set_badbit_and_consider_rethrowEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = $0 + 16 | 0;
 HEAP32[$1 >> 2] = HEAP32[$1 >> 2] | 1;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[7499] = 0;
 HEAP32[7498] = 11516;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[7497] = 0;
 HEAP32[7496] = 11464;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[7495] = 0;
 HEAP32[7494] = 11400;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[7493] = 0;
 HEAP32[7492] = 11336;
 return;
}

function __ZNK8optframe9Component8toStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($0, $1);
 return;
}

function __ZNK8optframe16EmptyLocalSearchI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe16EmptyLocalSearchI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZThn8_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev($0 + -8 | 0);
 return;
}

function __ZThn8_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev($0 + -8 | 0);
 return;
}

function __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN8optframe7RandGen5randPEd($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 return +(+(+FUNCTION_TABLE_di[HEAP32[(HEAP32[$0 >> 2] | 0) + 56 >> 2] & 7]($0) < $1 & 1));
}

function __ZN3HFM15ConstructiveACF16generateSolutionEd($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 return __ZN3HFM15ConstructiveACF19generateSolutionACFEfd($0, 0.0, $1) | 0;
}

function ___cxa_guard_acquire($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ((HEAP8[$0 >> 0] | 0) == 1) $$0 = 0; else {
  HEAP8[$0 >> 0] = 1;
  $$0 = 1;
 }
 return $$0 | 0;
}

function b13(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(13);
 return 0;
}

function __ZNSt3__26locale5facet16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 if ($0 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 511]($0);
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $1 >>> 0 <= $0 >>> 0 & $0 >>> 0 < $2 >>> 0 | 0;
}

function __ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $1 >>> 0 <= $0 >>> 0 & $0 >>> 0 < $2 >>> 0 | 0;
}

function __ZNSt3__212_GLOBAL__N_19decrementIlEET_RS2_($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $1 + -1;
 return $1 + -1 | 0;
}

function __ZNSt11logic_errorC2EPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 14196;
 __ZNSt3__218__libcpp_refstringC2EPKc($0 + 4 | 0, $1);
 return;
}

function __ZNK8optframe14MultiEvaluatorI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe14MultiEvaluatorI6RepHFMiE11idComponentEv($0);
 return;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 7](a1 | 0, a2 | 0, a3 | 0);
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNK8optframe9Component3logEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($0, $1);
 return;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNK8optframe13MOLocalSearchI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe13MOLocalSearchI6RepHFMiE11idComponentEv($0);
 return;
}

function _wcslen($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 $$0 = $0;
 while (1) if (!(HEAP32[$$0 >> 2] | 0)) break; else $$0 = $$0 + 4 | 0;
 return $$0 - $0 >> 2 | 0;
}

function ___cxa_is_pointer_type($0) {
 $0 = $0 | 0;
 var $4 = 0;
 if (!$0) $4 = 0; else $4 = (___dynamic_cast($0, 3048, 3152, 0) | 0) != 0;
 return $4 & 1 | 0;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__26locale2id6__initEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[8637] | 0;
 HEAP32[8637] = $1 + 1;
 HEAP32[$0 + 4 >> 2] = $1 + 1;
 return;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return ret | 0;
}

function __ZNK8optframe12ConstructiveI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe12ConstructiveI6RepHFMiE11idComponentEv($0);
 return;
}

function dynCall_didd(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 return +FUNCTION_TABLE_didd[index & 1](a1 | 0, +a2, +a3);
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function __GLOBAL__sub_I_mainHFM_cpp() {
 HEAP32[7581] = 0;
 HEAP32[7582] = 0;
 HEAP32[7583] = 0;
 ___cxa_atexit(254, 30324, ___dso_handle | 0) | 0;
 return;
}

function _strtoull_l($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0;
 $4 = _strtoull($0, $1, $2) | 0;
 return $4 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function __ZN3HFM18ConstructiveRandomD0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 5228;
 __ZN3HFM17ProblemParametersD2Ev($0 + 24 | 0);
 __ZdlPv($0);
 return;
}

function _strtoll_l($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0;
 $4 = _strtoll($0, $1, $2) | 0;
 return $4 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 10712;
 __ZNSt3__26localeD2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 10648;
 __ZNSt3__26localeD2Ev($0 + 4 | 0);
 return;
}

function __ZNK8optframe10NSIteratorI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe10NSIteratorI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZN8optframe4MoveI6RepHFMiE9updateLOSERS1_RiRNS_10EvaluationE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return;
}

function _strtoll($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0;
 $3 = _strtox_164($0, $1, $2, 0, -2147483648) | 0;
 return $3 | 0;
}

function ___ctype_get_mb_cur_max() {
 var $4 = 0;
 $4 = (HEAP32[HEAP32[(___pthread_self_386() | 0) + 188 >> 2] >> 2] | 0) != 0;
 return ($4 ? 4 : 1) | 0;
}

function establishStackSpace(stackBase, stackMax) {
 stackBase = stackBase | 0;
 stackMax = stackMax | 0;
 STACKTOP = stackBase;
 STACK_MAX = stackMax;
}

function __ZNSt3__26locale5__imp12make_classicEv() {
 __ZNSt3__212_GLOBAL__N_14makeINS_6locale5__impEjEERT_T0_();
 HEAP32[9090] = 30152;
 return 36360;
}

function __ZN8optframe16EmptyLocalSearchI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_4SOSCE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return;
}

function __ZNK8optframe8SolutionI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe8SolutionI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNKSt3__26locale5__imp9use_facetEl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return HEAP32[(HEAP32[$0 + 8 >> 2] | 0) + ($1 << 2) >> 2] | 0;
}

function __ZN3HFM30NSIteratorHFMChangeSingleInputD0Ev($0) {
 $0 = $0 | 0;
 __ZN3HFM30NSIteratorHFMChangeSingleInputD2Ev($0);
 __ZdlPv($0);
 return;
}

function _strtoull($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0;
 $3 = _strtox_164($0, $1, $2, -1, -1) | 0;
 return $3 | 0;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZN9scannerpp12FileNotFoundD2Ev($0) {
 $0 = $0 | 0;
 if ((HEAP8[$0 + 11 >> 0] | 0) >= 0) return;
 __ZdlPv(HEAP32[$0 >> 2] | 0);
 return;
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 63](a1 | 0, a2 | 0) | 0;
}

function b12(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(12);
 return 0;
}

function __ZNSt3__28ios_base5clearEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 16 >> 2] = (HEAP32[$0 + 24 >> 2] | 0) == 0 | $1;
 return;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZN8optframe10NSIteratorI6RepHFMiE6setLOSENS_3LOSERNS_8SolutionIS1_iEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return;
}

function __ZN3HFM29NSIteratorNEIGHAddSingleInputD0Ev($0) {
 $0 = $0 | 0;
 __ZN3HFM29NSIteratorNEIGHAddSingleInputD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__25ctypeIwE9do_narrowEwc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ($1 >>> 0 < 128 ? $1 & 255 : $2) | 0;
}

function __ZNKSt3__25ctypeIcE9do_narrowEcc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ($1 << 24 >> 24 > -1 ? $1 : $2) | 0;
}

function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ($0 | 0) == ($1 | 0) | 0;
}

function b11(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 abort(11);
 return 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $0 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $0 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_() {
 __ZNSt3__27codecvtIwc11__mbstate_tEC2Ej(29880, 1);
 return;
}

function __ZNK8optframe5NSSeqI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe5NSSeqI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZNK8optframe14MultiDirection2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe14MultiDirection11idComponentEv($0);
 return;
}

function __ZN3HFM18ConstructiveRandomD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 5228;
 __ZN3HFM17ProblemParametersD2Ev($0 + 24 | 0);
 return;
}

function __ZN8optframe12CheckCommandI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 __ZN8optframe12CheckCommandI6RepHFMiED2Ev($0);
 __ZdlPv($0);
 return;
}

function _wctomb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$0) $$0 = 0; else $$0 = _wcrtomb($0, $1, 0) | 0;
 return $$0 | 0;
}

function _swapc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = _llvm_bswap_i32($0 | 0) | 0;
 return (($1 | 0) == 0 ? $0 : $3) | 0;
}

function __ZNK8optframe4NGESI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe4NGESI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZNK8optframe4MoveI6RepHFMiE2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe4MoveI6RepHFMiE11idComponentEv($0);
 return;
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}

function _out_57($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($1, $2, $0) | 0;
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function __ZNSt3__214__shared_count12__add_sharedEv($0) {
 $0 = $0 | 0;
 __ZNSt3__212_GLOBAL__N_19incrementIlEET_RS2_($0 + 4 | 0);
 return;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function dynCall_iid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 return FUNCTION_TABLE_iid[index & 3](a1 | 0, +a2) | 0;
}

function __ZNK3HFM17HFMMultiEvaluator2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN3HFM17HFMMultiEvaluator11idComponentEv($0);
 return;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__27codecvtIwc11__mbstate_tED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__26locale5__imp11make_globalEv() {
 __ZNSt3__26localeC2ERKS0_(36368, __ZNSt3__26locale7classicEv() | 0);
 return 36368;
}

function __ZNSt11logic_errorD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 14196;
 __ZNSt3__218__libcpp_refstringD2Ev($0 + 4 | 0);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 127](a1 | 0, a2 | 0);
}

function dynCall_did(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 return +FUNCTION_TABLE_did[index & 1](a1 | 0, +a2);
}

function b22(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(22);
}

function __ZNK8optframe10Evaluation2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe10Evaluation11idComponentEv($0);
 return;
}

function __ZN8optframe7RandGen10initializeEv($0) {
 $0 = $0 | 0;
 _srand(HEAP32[$0 + 36 >> 2] | 0);
 HEAP8[$0 + 32 >> 0] = 0;
 return;
}

function __ZNSt3__26localeD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_() {
 HEAP32[7475] = 0;
 HEAP32[7474] = 13940;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_() {
 HEAP32[7477] = 0;
 HEAP32[7476] = 13988;
 return;
}

function __ZNSt3__211char_traitsIcE6assignERcRKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = HEAP8[$1 >> 0] | 0;
 return;
}

function __ZN17paretoManagerGPLSI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 __ZN17paretoManagerGPLSI6RepHFMiED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_() {
 HEAP32[7469] = 0;
 HEAP32[7468] = 13892;
 return;
}

function __ZNSt3__211char_traitsIwE6assignERwRKw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 return;
}

function __ZN8optframe4MoveI6RepHFMiE21isPartialLocalOptimumERKNS_8SolutionIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return 0;
}

function __ZNKSt3__28ios_base6getlocEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26localeC2ERKS0_($0, $1 + 28 | 0);
 return;
}

function __ZNK8optframe9Direction2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe9Direction11idComponentEv($0);
 return;
}

function __ZN8optframe22DefaultNSBlockIteratorI6RepHFMiE6isDoneEv($0) {
 $0 = $0 | 0;
 return (HEAP32[$0 + 20 >> 2] | 0) == 0 | 0;
}

function __ZN3HFM17MoveHFMModifyRule12canBeAppliedERK6RepHFMPKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return 1;
}

function ___cxx_global_var_init() {
 __ZNSt3__28ios_base4InitC2Ev(0);
 ___cxa_atexit(255, 38536, ___dso_handle | 0) | 0;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_() {
 __ZNSt3__25ctypeIcEC2EPKtbj(29848, 0, 0, 1);
 return;
}

function __ZNSt3__211__stdoutbufIwED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 return;
}

function __ZNSt3__211__stdoutbufIcED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function __ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 1073741823;
}

function __ZNSt3__212_GLOBAL__N_19incrementIlEET_RS2_($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__210__stdinbufIwED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 return;
}

function __ZNSt3__210__stdinbufIcED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($0) {
 $0 = $0 | 0;
 return 2;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($0) {
 $0 = $0 | 0;
 return 2;
}

function __ZNK8optframe10Evaluation10isFeasibleEv($0) {
 $0 = $0 | 0;
 return +Math_abs(+(+HEAPF64[$0 + 32 >> 3])) <= .0001 | 0;
}

function b10(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(10);
 return 0;
}

function _llvm_bswap_i32(x) {
 x = x | 0;
 return (x & 255) << 24 | (x >> 8 & 255) << 16 | (x >> 16 & 255) << 8 | x >>> 24 | 0;
}

function __ZN8optframe6ParetoI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 __ZN8optframe6ParetoI6RepHFMiED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN8optframe15MultiEvaluationD0Ev($0) {
 $0 = $0 | 0;
 __ZN8optframe15MultiEvaluationD2Ev($0);
 __ZdlPv($0);
 return;
}

function _mbsinit($0) {
 $0 = $0 | 0;
 var $5 = 0;
 if (!$0) $5 = 1; else $5 = (HEAP32[$0 >> 2] | 0) == 0;
 return $5 & 1 | 0;
}

function _mbrlen($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return _mbrtowc(0, $0, $1, $2 | 0 ? $2 : 30940) | 0;
}

function __ZNSt3__27codecvtIDsc11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27codecvtIDic11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__217__widen_from_utf8ILj32EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_() {
 HEAP32[7507] = 0;
 HEAP32[7506] = 13232;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_() {
 HEAP32[7505] = 0;
 HEAP32[7504] = 13176;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_() {
 HEAP32[7503] = 0;
 HEAP32[7502] = 13120;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_() {
 HEAP32[7501] = 0;
 HEAP32[7500] = 13064;
 return;
}

function __ZNSt3__27codecvtIcc11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__216__narrow_to_utf8ILj32EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__211char_traitsIcE2eqEcc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $0 << 24 >> 24 == $1 << 24 >> 24 | 0;
}

function _srand($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 29648;
 HEAP32[$2 >> 2] = $0 + -1;
 HEAP32[$2 + 4 >> 2] = 0;
 return;
}

function __ZNSt3__210__stdinbufIwE9underflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb($0, 0) | 0;
}

function __ZNSt3__210__stdinbufIcE9underflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb($0, 0) | 0;
}

function __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE($0) {
 $0 = $0 | 0;
 return $0 + 12 | 0;
}

function __ZNSt3__211char_traitsIwE11eq_int_typeEjj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ($0 | 0) == ($1 | 0) | 0;
}

function __ZNSt3__211char_traitsIcE11eq_int_typeEii($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ($0 | 0) == ($1 | 0) | 0;
}

function __ZN3HFM30NSIteratorHFMRemoveSingleInput6isDoneEv($0) {
 $0 = $0 | 0;
 return (HEAP32[$0 + 20 >> 2] | 0) == 0 | 0;
}

function __ZN3HFM30NSIteratorHFMChangeSingleInput6isDoneEv($0) {
 $0 = $0 | 0;
 return (HEAP32[$0 + 20 >> 2] | 0) == 0 | 0;
}

function __ZN3HFM18HFMProblemInstanceD0Ev($0) {
 $0 = $0 | 0;
 __ZN3HFM18HFMProblemInstanceD2Ev($0);
 __ZdlPv($0);
 return;
}

function b9(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = +p4;
 abort(9);
 return 0;
}

function __ZNK8optframe5Timer2idEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8optframe5Timer11idComponentEv($0);
 return;
}

function __ZN3HFM29NSIteratorNEIGHAddSingleInput6isDoneEv($0) {
 $0 = $0 | 0;
 return (HEAP32[$0 + 52 >> 2] | 0) == 0 | 0;
}

function _strerror($0) {
 $0 = $0 | 0;
 return ___strerror_l($0, HEAP32[(___pthread_self_313() | 0) + 188 >> 2] | 0) | 0;
}

function __ZNKSt11logic_error4whatEv($0) {
 $0 = $0 | 0;
 return __ZNKSt3__218__libcpp_refstring5c_strEv($0 + 4 | 0) | 0;
}

function __ZN3HFM17ProblemParametersD0Ev($0) {
 $0 = $0 | 0;
 __ZN3HFM17ProblemParametersD2Ev($0);
 __ZdlPv($0);
 return;
}

function ___loc_is_allocated($0) {
 $0 = $0 | 0;
 return ($0 | 0) != 7352 & (($0 | 0) != 0 & ($0 | 0) != 30900) & 1 | 0;
}

function __ZThn4_N8optframe25IteratedLocalSearchLevelsI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0 + -4 | 0);
 return;
}

function __ZNSt3__210__stdinbufIwE5uflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb($0, 1) | 0;
}

function __ZNSt3__210__stdinbufIcE5uflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb($0, 1) | 0;
}

function __ZN8optframe22DefaultNSBlockIteratorI6RepHFMiE7currentEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 20 >> 2] | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_() {
 HEAP32[7535] = 0;
 HEAP32[7534] = 13432;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_() {
 HEAP32[7533] = 0;
 HEAP32[7532] = 13400;
 return;
}

function __ZNSt3__211__stdoutbufIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__211__stdoutbufIwED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__211__stdoutbufIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__211__stdoutbufIcED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIwLb1EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIwLb0EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIcLb1EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIcLb0EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN8optframe22DefaultNSBlockIteratorI6RepHFMiE4nextEv($0) {
 $0 = $0 | 0;
 HEAP32[$0 + 20 >> 2] = 0;
 return;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 127](a1 | 0) | 0;
}

function __ZNSt3__212__rs_defaultC2Ev($0) {
 $0 = $0 | 0;
 _pthread_mutex_lock(30960) | 0;
 HEAP32[7739] = 1;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_() {
 HEAP32[7461] = 0;
 HEAP32[7460] = 11304;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_() {
 HEAP32[7459] = 0;
 HEAP32[7458] = 11272;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_6locale5__impEjEERT_T0_() {
 __ZNSt3__26locale5__impC2Ej(30152, 1);
 return;
}

function _isxdigit($0) {
 $0 = $0 | 0;
 return (($0 + -48 | 0) >>> 0 < 10 | (($0 | 32) + -97 | 0) >>> 0 < 6) & 1 | 0;
}

function __ZNSt3__212_GLOBAL__N_17countofIwEEjPKT_S4_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $1 - $0 >> 2 | 0;
}

function __ZNSt3__210__stdinbufIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__stdinbufIwED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210__stdinbufIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__stdinbufIcED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN3HFM24NSIteratorHFMModifyRules6isDoneEv($0) {
 $0 = $0 | 0;
 return (HEAP32[$0 + 20 >> 2] | 0) == 0 | 0;
}

function b21(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(21);
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_() {
 __ZNSt3__28numpunctIwEC2Ej(29936, 1);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_() {
 __ZNSt3__28numpunctIcEC2Ej(29912, 1);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_() {
 HEAP32[7467] = 0;
 HEAP32[7466] = 13824;
 return;
}

function __ZN8optframe5NSSeqI6RepHFMiE6getLOSERKNS_8SolutionIS1_iEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return 2;
}

function __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0);
 return;
}

function __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0);
 return;
}

function __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_829($0) {
 $0 = $0 | 0;
 return $0 + -12 | 0;
}

function dynCall_di(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return +FUNCTION_TABLE_di[index & 7](a1 | 0);
}

function _do_read($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ___string_read($0, $1, $2) | 0;
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[9115] | 0;
 HEAP32[9115] = $0 + 0;
 return $0 | 0;
}

function __ZNSt3__26locale5facetD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__26locale5__impD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5__impD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN8optframe19IteratedLocalSearchINSt3__24pairINS2_IiiEES3_EE6RepHFMiED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZN3HFM13ForecastClassD0Ev($0) {
 $0 = $0 | 0;
 __ZN3HFM13ForecastClassD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28messagesIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28messagesIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__25ctypeIcE21__classic_upper_tableEv() {
 return HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0;
}

function __ZNSt3__25ctypeIcE21__classic_lower_tableEv() {
 return HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0;
}

function __ZNSt3__212_GLOBAL__N_17countofIcEEjPKT_S4_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $1 - $0 | 0;
}

function __ZSt13get_terminatev() {
 var $0 = 0;
 $0 = HEAP32[3525] | 0;
 HEAP32[3525] = $0 + 0;
 return $0 | 0;
}

function __ZNSt3__28numpunctIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28numpunctIwED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28numpunctIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28numpunctIcED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27collateIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__27collateIwED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27collateIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__27collateIcED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__25ctypeIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 511](a1 | 0);
}

function b8(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(8);
 return 0;
}

function _catgets($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return $3 | 0;
}

function __ZN8optframe4MoveI6RepHFMiE13independentOfERKS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return 0;
}

function ___clang_call_terminate($0) {
 $0 = $0 | 0;
 ___cxa_begin_catch($0 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt12length_errorD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt11logic_errorD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__28numpunctIwE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 12 >> 2] | 0;
}

function __ZNKSt3__25ctypeIwE8do_widenEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $1 << 24 >> 24 | 0;
}

function __ZN8optframe4MoveI6RepHFMiE17updateNeighStatusEPi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _strtold_l($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return +(+_strtold($0, $1));
}

function __ZNSt3__28ios_baseD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__25ctypeIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__25ctypeIcED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIwLb1EED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__210moneypunctIwLb0EED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__210moneypunctIcLb1EED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__210moneypunctIcLb0EED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt11logic_errorD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt11logic_errorD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__28numpunctIwE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 8 >> 2] | 0;
}

function __ZN9scannerpp4FileD0Ev($0) {
 $0 = $0 | 0;
 __ZN9scannerpp4FileD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__28numpunctIcE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return HEAP8[$0 + 9 >> 0] | 0;
}

function __ZNKSt3__28numpunctIcE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return HEAP8[$0 + 8 >> 0] | 0;
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0 | 0;
 _abort();
}

function _strtof_l($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return +(+_strtof($0, $1));
}

function _strtod_l($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return +(+_strtod($0, $1));
}

function __ZNSt3__220__time_get_c_storageIwEC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 14072;
 return;
}

function __ZNSt3__220__time_get_c_storageIcEC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 14036;
 return;
}

function __ZNKSt3__220__vector_base_commonILb1EE20__throw_out_of_rangeEv($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZN8optframe22DefaultNSBlockIteratorI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZN8optframe19RandomDescentMethodI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZN8optframe19MORandomImprovementI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function b20(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(20);
}

function __ZNSt3__28messagesIwED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__28messagesIcED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__25ctypeIcE13classic_tableEv() {
 return HEAP32[(___ctype_b_loc() | 0) >> 2] | 0;
}

function _isspace($0) {
 $0 = $0 | 0;
 return (($0 | 0) == 32 | ($0 + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function __ZThn4_N8optframe25IteratedLocalSearchLevelsI6RepHFMiED1Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt8bad_castD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt8bad_castD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27collateIwED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__27collateIcED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__218__libcpp_refstring5c_strEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 >> 2] | 0;
}

function __ZN8optframe16EmptyLocalSearchI6RepHFMiED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _isdigit_l($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ($0 + -48 | 0) >>> 0 < 10 | 0;
}

function _getNTimeSeries() {
 return ((HEAP32[7582] | 0) - (HEAP32[7581] | 0) | 0) / 12 | 0 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 1;
}

function b19(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = +p3;
 abort(19);
}

function __ZNK8optframe9Component6getLogEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 4 >> 2] | 0;
}

function _freelocale($0) {
 $0 = $0 | 0;
 if (___loc_is_allocated($0) | 0) _free($0);
 return;
}

function ___lctrans($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ___lctrans_impl($0, $1) | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 return 4;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 return 4;
}

function __ZNKSt3__25ctypeIcE8do_widenEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $1 | 0;
}

function __ZN8optframe9Component6getLogEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 4 >> 2] | 0;
}

function __ZNSt3__28__rs_getEv($0) {
 $0 = $0 | 0;
 __ZNSt3__212__rs_defaultC2Ev(0);
 return;
}

function __ZNSt3__211char_traitsIcE12to_char_typeEi($0) {
 $0 = $0 | 0;
 return $0 & 255 | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZN8optframe22RandGenMersenneTwisterD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZN8optframe22DefaultNSBlockIteratorI6RepHFMiE5firstEv($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__211char_traitsIcE11to_int_typeEc($0) {
 $0 = $0 | 0;
 return $0 & 255 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNSt3__211char_traitsIwE6lengthEPKw($0) {
 $0 = $0 | 0;
 return _wcslen($0) | 0;
}

function __ZNSt3__211char_traitsIcE6lengthEPKc($0) {
 $0 = $0 | 0;
 return _strlen($0) | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZN3HFM25NSSeqHFMRemoveSingleInputD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _round(d) {
 d = +d;
 return d >= 0.0 ? +Math_floor(d + .5) : +Math_ceil(d - .5);
}

function __ZNKSt3__28messagesIwE8do_closeEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNKSt3__28messagesIcE8do_closeEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNKSt3__218__libcpp_refstring15__uses_refcountEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZN3HFM24MoveHFMChangeSingleInputD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function b7(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(7);
 return 0;
}

function __ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function _strtold($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return +(+_strtox($0, $1, 2));
}

function __ZNSt3__211char_traitsIwE12to_char_typeEj($0) {
 $0 = $0 | 0;
 return $0 | 0;
}

function b5(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = p2 | 0;
 abort(5);
 return 0;
}

function _strtof($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return +(+_strtox($0, $1, 0));
}

function _strtod($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return +(+_strtox($0, $1, 1));
}

function __ZNSt3__211char_traitsIwE11to_int_typeEw($0) {
 $0 = $0 | 0;
 return $0 | 0;
}

function b2(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = +p2;
 abort(2);
 return 0.0;
}

function _isxdigit_l($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return _isxdigit($0) | 0;
}

function __ZNSt8bad_castC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 14236;
 return;
}

function __ZN3HFM17MoveHFMModifyRuleD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _copysignl($0, $1) {
 $0 = +$0;
 $1 = +$1;
 return +(+_copysign($0, $1));
}

function __ZN8optframe4MoveI6RepHFMiE10hasReverseEv($0) {
 $0 = $0 | 0;
 return 1;
}

function _scalbnl($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 return +(+_scalbn($0, $1));
}

function __ZNK3HFM12HFMEvaluator14isMinimizationEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($0) {
 $0 = $0 | 0;
 return;
}

function b18(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(18);
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 3]();
}

function _frexpl($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 return +(+_frexp($0, $1));
}

function __ZNSt3__221__throw_runtime_errorEPKc($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZN8optframe7RandGenD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function ___errno_location() {
 return (___pthread_self_316() | 0) + 64 | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function _fmodl($0, $1) {
 $0 = +$0;
 $1 = +$1;
 return +(+_fmod($0, $1));
}

function __ZN8optframe4SOSCD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZN8optframe4MOSCD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZN8optframe9Direction3minEv($0) {
 $0 = $0 | 0;
 return +-inf;
}

function __ZN8optframe9Direction3maxEv($0) {
 $0 = $0 | 0;
 return +inf;
}

function b6(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(6);
 return 0;
}

function _catopen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return -1 | 0;
}

function b1(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(1);
 return 0.0;
}

function _lgamma($0) {
 $0 = +$0;
 return +(+___lgamma_r($0, 30896));
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function b4(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(4);
 return 0;
}

function __ZNSt3__214__shared_countD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNKSt8bad_cast4whatEv($0) {
 $0 = $0 | 0;
 return 29509;
}

function __GLOBAL__I_000101() {
 ___cxx_global_var_init();
 return;
}

function ___cxa_pure_virtual__wrapper() {
 ___cxa_pure_virtual();
}

function __ZNSt3__26locale5facetD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__212__do_nothingEPv($0) {
 $0 = $0 | 0;
 return;
}

function __ZN8optframe9ComponentD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function b17(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(17);
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function ___pthread_self_739() {
 return _pthread_self() | 0;
}

function ___pthread_self_386() {
 return _pthread_self() | 0;
}

function ___pthread_self_349() {
 return _pthread_self() | 0;
}

function ___pthread_self_346() {
 return _pthread_self() | 0;
}

function ___pthread_self_343() {
 return _pthread_self() | 0;
}

function ___pthread_self_340() {
 return _pthread_self() | 0;
}

function ___pthread_self_316() {
 return _pthread_self() | 0;
}

function ___pthread_self_313() {
 return _pthread_self() | 0;
}

function _pthread_cond_broadcast(x) {
 x = x | 0;
 return 0;
}

function ___pthread_self_97() {
 return _pthread_self() | 0;
}

function _getchar() {
 return _fgetc(HEAP32[1617] | 0) | 0;
}

function __Znaj($0) {
 $0 = $0 | 0;
 return __Znwj($0) | 0;
}

function __ZdaPv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _pthread_mutex_unlock(x) {
 x = x | 0;
 return 0;
}

function ___cxa_guard_release($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt9type_infoD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt9exceptionD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZdlPv($0) {
 $0 = $0 | 0;
 _free($0);
 return;
}

function __ZNSt8bad_castD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__211char_traitsIwE3eofEv() {
 return -1;
}

function __ZNSt3__211char_traitsIcE3eofEv() {
 return -1;
}

function _pthread_mutex_lock(x) {
 x = x | 0;
 return 0;
}

function ___ofl_lock() {
 ___lock(30928);
 return 30936;
}

function b0(p0) {
 p0 = p0 | 0;
 abort(0);
 return 0.0;
}

function _emscripten_get_global_libc() {
 return 30832;
}

function _dummy_121($0) {
 $0 = $0 | 0;
 return $0 | 0;
}

function ___ofl_unlock() {
 ___unlock(30928);
 return;
}

function b3(p0) {
 p0 = p0 | 0;
 abort(3);
 return 0;
}

function ___unlockfile($0) {
 $0 = $0 | 0;
 return;
}

function ___lockfile($0) {
 $0 = $0 | 0;
 return 0;
}

function __GLOBAL__sub_I_iostream_cpp() {
 return;
}

function _catclose($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZSt17__throw_bad_allocv() {
 _abort();
}

function ___ctype_toupper_loc() {
 return 7544;
}

function ___ctype_tolower_loc() {
 return 9084;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b16(p0) {
 p0 = p0 | 0;
 abort(16);
}

function ___ctype_b_loc() {
 return 7540;
}

function _pthread_self() {
 return 6596;
}

function _dummy_253() {
 return;
}

function b15() {
 abort(15);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_di = [b0,__ZN8optframe7RandGen6rand01Ev,__ZN8optframe7RandGen5randGEv,__ZN8optframe22RandGenMersenneTwister6rand01Ev,__ZN8optframe9Direction3minEv,__ZN8optframe9Direction3maxEv,b0,b0];
var FUNCTION_TABLE_did = [b1,__ZN8optframe7RandGen5randPEd];
var FUNCTION_TABLE_didd = [b2,__ZN8optframe7RandGen5randGEdd];
var FUNCTION_TABLE_ii = [b3,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZN8optframe9Component6getLogEv,__ZNK8optframe9Component6getLogEv,__ZN8optframe7RandGen4randEv,__ZN8optframe22RandGenMersenneTwister4randEv,__ZNK8optframe8MoveCost5cloneEv,__ZNK3HFM12HFMEvaluator14isMinimizationEv,__ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE17initializeHistoryEv,__ZNK8optframe15MultiEvaluation5cloneEv,__ZNK8optframe10Evaluation5cloneEv,__ZNK8optframe10Evaluation10isFeasibleEv,__ZN8optframe22DefaultNSBlockIteratorI6RepHFMiE6isDoneEv,__ZN8optframe22DefaultNSBlockIteratorI6RepHFMiE7currentEv,__ZN3HFM29NSIteratorNEIGHAddSingleInput6isDoneEv,__ZN3HFM29NSIteratorNEIGHAddSingleInput7currentEv,__ZN8optframe4MoveI6RepHFMiE10hasReverseEv,__ZN3HFM30NSIteratorHFMRemoveSingleInput6isDoneEv,__ZN3HFM30NSIteratorHFMRemoveSingleInput7currentEv,__ZN3HFM30NSIteratorHFMChangeSingleInput6isDoneEv,__ZN3HFM30NSIteratorHFMChangeSingleInput7currentEv,__ZN3HFM24NSIteratorHFMModifyRules6isDoneEv,__ZN3HFM24NSIteratorHFMModifyRules7currentEv,__ZNK8optframe6ParetoI6RepHFMiE5cloneEv
,___stdio_close,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__211__stdoutbufIwE4syncEv,__ZNSt3__211__stdoutbufIcE4syncEv,__ZNSt3__210__stdinbufIwE9underflowEv,__ZNSt3__210__stdinbufIwE5uflowEv,__ZNSt3__210__stdinbufIcE9underflowEv,__ZNSt3__210__stdinbufIcE5uflowEv,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIcE7__weeksEv,__ZNKSt3__220__time_get_c_storageIcE8__monthsEv,__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIcE3__cEv,__ZNKSt3__220__time_get_c_storageIcE3__rEv,__ZNKSt3__220__time_get_c_storageIcE3__xEv,__ZNKSt3__220__time_get_c_storageIcE3__XEv,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIwE7__weeksEv,__ZNKSt3__220__time_get_c_storageIwE8__monthsEv,__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIwE3__cEv,__ZNKSt3__220__time_get_c_storageIwE3__rEv,__ZNKSt3__220__time_get_c_storageIwE3__xEv,__ZNKSt3__220__time_get_c_storageIwE3__XEv,__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv
,__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__28numpunctIcE16do_decimal_pointEv,__ZNKSt3__28numpunctIcE16do_thousands_sepEv,__ZNKSt3__28numpunctIwE16do_decimal_pointEv,__ZNKSt3__28numpunctIwE16do_thousands_sepEv,__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt11logic_error4whatEv,__ZNKSt8bad_cast4whatEv,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_iid = [b4,__ZN3HFM15ConstructiveACF16generateSolutionEd,__ZN3HFM18ConstructiveRandom16generateSolutionEd,b4];
var FUNCTION_TABLE_iidi = [b5,__ZN8optframe7RandGen12randBinomialEdi,__ZN8optframe7RandGen24randBinomialWithNegativeEdi,b5];
var FUNCTION_TABLE_iii = [b6,__ZN9scannerpp7ScanneraSERKS0_,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZN8optframe7RandGen10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZN8optframe7RandGen4randEi,__ZN8optframe22RandGenMersenneTwister4randEi,__ZN8optframe9Component10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZN8optframe16EmptyLocalSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe8MoveCostaSERKS0_,__ZN8optframe9EvaluatorI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe9Direction13isImprovementERKNS_8MoveCostE,__ZN8optframe5NSSeqI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe5NSSeqI6RepHFMiE16getBlockIteratorERKNS_8SolutionIS1_iEE,__ZN8optframe5NSSeqI6RepHFMiE6getLOSERKNS_8SolutionIS1_iEE,__ZN8optframe11LocalSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe27VariableNeighborhoodDescentI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE20terminationConditionERNSt3__24pairINS4_IiiEES5_EE,__ZN8optframe15SingleObjSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe14MultiEvaluatorI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe14MultiDirection12addObjectiveEPNS_9DirectionE,__ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe15MultiEvaluationaSERKS0_,__ZN8optframe10EvaluationaSERKS0_,__ZN8optframe14MultiDirection10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZN8optframe5Timer10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
,__ZN8optframe12ConstructiveI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe4MoveI6RepHFMiE13independentOfERKS2_,__ZN8optframe4MoveI6RepHFMiE21isPartialLocalOptimumERKNS_8SolutionIS1_iEE,__ZNK3HFM23MoveNEIGHAddSingleInputeqERKN8optframe4MoveI6RepHFMiEE,__ZNK3HFM24MoveHFMRemoveSingleInputeqERKN8optframe4MoveI6RepHFMiEE,__ZNK3HFM24MoveHFMChangeSingleInputeqERKN8optframe4MoveI6RepHFMiEE,__ZNK3HFM17MoveHFMModifyRuleeqERKN8optframe4MoveI6RepHFMiEE,__ZN8optframe9Direction10compatibleENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZN8optframe6ParetoI6RepHFMiEaSERKS2_,__ZN8optframe19MORandomImprovementI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN8optframe13MOLocalSearchI6RepHFMiE10compatibleENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__211__stdoutbufIwE8overflowEj,__ZNSt3__211__stdoutbufIcE8overflowEi,__ZNSt3__210__stdinbufIwE9pbackfailEj,__ZNSt3__210__stdinbufIcE9pbackfailEi,__ZNKSt3__25ctypeIcE10do_toupperEc,__ZNKSt3__25ctypeIcE10do_tolowerEc,__ZNKSt3__25ctypeIcE8do_widenEc,__ZNKSt3__25ctypeIwE10do_toupperEw,__ZNKSt3__25ctypeIwE10do_tolowerEw,__ZNKSt3__25ctypeIwE8do_widenEc,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiii = [b7,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZN8optframe7RandGen4randEjj,__ZN8optframe9Direction10betterThanERKNS_8MoveCostES3_,__ZN8optframe9Direction10betterThanERKNS_10EvaluationES3_,__ZN8optframe9Direction6equalsERKNS_8MoveCostES3_,__ZN8optframe9Direction6equalsERKNS_10EvaluationES3_,__ZN8optframe9EvaluatorI6RepHFMiE10betterThanERKNS_8SolutionIS1_iEES6_,__ZN3HFM25NSSeqHFMChangeSingleInput10randomMoveERK6RepHFMPKi,__ZN8optframe2NSI6RepHFMiE15validRandomMoveERKS1_PKi,__ZN3HFM25NSSeqHFMChangeSingleInput11getIteratorERK6RepHFMPKi,__ZN3HFM25NSSeqHFMRemoveSingleInput10randomMoveERK6RepHFMPKi,__ZN3HFM25NSSeqHFMRemoveSingleInput11getIteratorERK6RepHFMPKi,__ZN3HFM24NSSeqNEIGHAddSingleInput10randomMoveERK6RepHFMPKi,__ZN3HFM24NSSeqNEIGHAddSingleInput11getIteratorERK6RepHFMPKi,__ZN3HFM23MoveNEIGHAddSingleInput12canBeAppliedERK6RepHFMPKi,__ZN3HFM23MoveNEIGHAddSingleInput5applyER6RepHFMPi,__ZN3HFM24MoveHFMRemoveSingleInput12canBeAppliedERK6RepHFMPKi,__ZN3HFM24MoveHFMRemoveSingleInput5applyER6RepHFMPi,__ZN3HFM24MoveHFMChangeSingleInput12canBeAppliedERK6RepHFMPKi,__ZN3HFM24MoveHFMChangeSingleInput5applyER6RepHFMPi,__ZN3HFM19NSSeqHFMModifyRules10randomMoveERK6RepHFMPKi,__ZN3HFM19NSSeqHFMModifyRules11getIteratorERK6RepHFMPKi,__ZN3HFM17MoveHFMModifyRule12canBeAppliedERK6RepHFMPKi,__ZN3HFM17MoveHFMModifyRule5applyER6RepHFMPi,__ZN8optframe15ParetoDominanceI6RepHFMiE9dominatesERKNS_8SolutionIS1_iEES6_
,__ZN8optframe15ParetoDominanceI6RepHFMiE9dominatesEPKNS_15MultiEvaluationES5_,__ZN8optframe15ParetoDominanceI6RepHFMiE9dominatesERKNS_15MultiEvaluationES5_,__ZN8optframe19ParetoDominanceWeakI6RepHFMiE9dominatesERKNS_15MultiEvaluationES5_,__ZN24GeneralParetoLocalSearchI6RepHFMiE24searchWithOptionalParetoERN8optframe4MOSCEPNS2_6ParetoIS0_iEE,___stdio_read,___stdio_seek,___stdio_write,___stdout_write,_sn_write,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNSt3__211__stdoutbufIwE6xsputnEPKwi,__ZNSt3__211__stdoutbufIcE6xsputnEPKci,__ZNKSt3__27collateIcE7do_hashEPKcS3_,__ZNKSt3__27collateIwE7do_hashEPKwS3_,__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__25ctypeIcE10do_toupperEPcPKc,__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__25ctypeIcE9do_narrowEcc,__ZNKSt3__25ctypeIwE5do_isEtw,__ZNKSt3__25ctypeIwE10do_toupperEPwPKw,__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__25ctypeIwE9do_narrowEwc,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_do_read,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiii = [b8,__ZN8optframe11LocalSearchI6RepHFMiE6getLOSENSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SolutionIS1_iEERNS_10EvaluationE,__ZN8optframe9Direction13isImprovementERKNS_8MoveCostERKNS_10EvaluationES6_,__ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE19acceptanceCriterionERKNS_10EvaluationES5_RNSt3__24pairINS7_IiiEES8_EE,__ZN8optframe19IteratedLocalSearchINSt3__24pairINS2_IiiEES3_EE6RepHFMiE6searchERNS_4SOSCEPKNS_8SolutionIS5_iEEPKNS_10EvaluationE,__ZThn4_N8optframe19IteratedLocalSearchINSt3__24pairINS2_IiiEES3_EE6RepHFMiE6searchERNS_4SOSCEPKNS_8SolutionIS5_iEEPKNS_10EvaluationE,__ZN8optframe4NGESI6RepHFMiE6searchERNS_4SOSCEPKNS_8SolutionIS1_iEEPKNS_10EvaluationE,__ZN3HFM17HFMMultiEvaluator10betterThanERKN8optframe10EvaluationES4_i,__ZN3HFM17HFMMultiEvaluator6equalsERKN8optframe10EvaluationES4_i,__ZN8optframe14MultiEvaluatorI6RepHFMiE10betterThanERKNS_10EvaluationES5_i,__ZN8optframe14MultiEvaluatorI6RepHFMiE6equalsERKNS_10EvaluationES5_i,__ZN8optframe4MoveI6RepHFMiE11applyUpdateERNS_10EvaluationERS1_Pi,__ZN8optframe4MoveI6RepHFMiE8applyMEVERNS_15MultiEvaluationERS1_Pi,__ZN8optframe13paretoManagerI6RepHFMiE18addSolutionWithMEVERNS_6ParetoIS1_iEERKNS_8SolutionIS1_iEERKNS_15MultiEvaluationE,__ZN17paretoManagerGPLSI6RepHFMiE18addSolutionWithMEVERN8optframe6ParetoIS0_iEERKNS2_8SolutionIS0_iEERKNS2_15MultiEvaluationE,__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8];
var FUNCTION_TABLE_iiiiid = [b9,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b9,b9,b9];
var FUNCTION_TABLE_iiiiii = [b10,__ZN8optframe9Direction6equalsERKdS2_RKNSt3__26vectorINS3_4pairIddEENS3_9allocatorIS6_EEEESB_,__ZN8optframe4MoveI6RepHFMiE4costERKNS_10EvaluationERKS1_PKib,__ZN8optframe4MoveI6RepHFMiE7costMEVERKNS_15MultiEvaluationERKS1_PKib,__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b10,b10,b10,b10,b10
,b10,b10,b10];
var FUNCTION_TABLE_iiiiiid = [b11,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b11];
var FUNCTION_TABLE_iiiiiii = [b12,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12];
var FUNCTION_TABLE_iiiiiiii = [b13,__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b13];
var FUNCTION_TABLE_iiiiiiiii = [b14,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b14,b14,b14,b14,b14];
var FUNCTION_TABLE_v = [b15,___cxa_pure_virtual__wrapper,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev];
var FUNCTION_TABLE_vi = [b16,__ZN9scannerpp7ScannerD2Ev,__ZN9scannerpp7ScannerD0Ev,__ZN9scannerpp4FileD2Ev,__ZN9scannerpp4FileD0Ev,__ZNSt3__213basic_fstreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_fstreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__213basic_fstreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__213basic_fstreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_fstreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_fstreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__214basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__214basic_ifstreamIcNS_11char_traitsIcEEED0Ev
,__ZTv0_n12_NSt3__214basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__214basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZN8optframe9ComponentD2Ev,__ZN8optframe7RandGenD0Ev,__ZNK8optframe9Component5printEv,__ZN8optframe7RandGen10initializeEv,__ZN8optframe22RandGenMersenneTwisterD0Ev,__ZN8optframe22RandGenMersenneTwister10initializeEv,__ZN8optframe4SOSCD0Ev,__ZN3HFM14treatForecastsD2Ev,__ZN3HFM14treatForecastsD0Ev,__ZN3HFM17ProblemParametersD2Ev,__ZN3HFM17ProblemParametersD0Ev,__ZN3HFM13ForecastClassD2Ev,__ZN3HFM13ForecastClassD0Ev,__ZN8optframe12CheckCommandI6RepHFMiED2Ev,__ZN8optframe12CheckCommandI6RepHFMiED0Ev,__ZN8optframe16EmptyLocalSearchI6RepHFMiED0Ev
,__ZN8optframe8MoveCostD2Ev,__ZN8optframe8MoveCostD0Ev,__ZNK8optframe8MoveCost5printEv,__ZN8optframe9DirectionD2Ev,__ZN3HFM12HFMEvaluatorD0Ev,__ZNK8optframe9Direction5printEv,__ZN3HFM25NSSeqHFMChangeSingleInputD2Ev,__ZN3HFM25NSSeqHFMChangeSingleInputD0Ev,__ZN3HFM25NSSeqHFMRemoveSingleInputD0Ev,__ZN3HFM24NSSeqNEIGHAddSingleInputD2Ev,__ZN3HFM24NSSeqNEIGHAddSingleInputD0Ev,__ZN8optframe19RandomDescentMethodI6RepHFMiED0Ev,__ZN8optframe27VariableNeighborhoodDescentI6RepHFMiED2Ev,__ZN8optframe27VariableNeighborhoodDescentI6RepHFMiED0Ev,__ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiED2Ev,__ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiED0Ev,__ZThn20_N8optframe22ILSLPerturbationLPlus2I6RepHFMiED1Ev,__ZThn20_N8optframe22ILSLPerturbationLPlus2I6RepHFMiED0Ev,__ZN8optframe19IteratedLocalSearchINSt3__24pairINS2_IiiEES3_EE6RepHFMiED2Ev,__ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiED0Ev,__ZThn4_N8optframe25IteratedLocalSearchLevelsI6RepHFMiED1Ev,__ZThn4_N8optframe25IteratedLocalSearchLevelsI6RepHFMiED0Ev,__ZN8optframe4NGESI6RepHFMiED2Ev,__ZN8optframe4NGESI6RepHFMiED0Ev,__ZN8optframe14MultiEvaluatorI6RepHFMiED2Ev,__ZN3HFM17HFMMultiEvaluatorD0Ev,__ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiED2Ev,__ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiED0Ev,__ZThn20_N8optframe24MOILSLPerturbationLPlus2I6RepHFMiED1Ev,__ZThn20_N8optframe24MOILSLPerturbationLPlus2I6RepHFMiED0Ev
,__ZN8optframe22BasicMOILSPerturbationI6RepHFMiED2Ev,__ZN8optframe22BasicMOILSPerturbationI6RepHFMiED0Ev,__ZThn4_N8optframe22BasicMOILSPerturbationI6RepHFMiED1Ev,__ZThn4_N8optframe22BasicMOILSPerturbationI6RepHFMiED0Ev,__ZN8optframe15MultiEvaluationD2Ev,__ZN8optframe15MultiEvaluationD0Ev,__ZNK8optframe15MultiEvaluation5printEv,__ZN8optframe10EvaluationD2Ev,__ZN8optframe10EvaluationD0Ev,__ZNK8optframe10Evaluation5printEv,__ZN8optframe14MultiEvaluatorI6RepHFMiED0Ev,__ZN8optframe14MultiDirectionD2Ev,__ZN8optframe14MultiDirectionD0Ev,__ZN8optframe5TimerD2Ev,__ZN8optframe5TimerD0Ev,__ZN8optframe8SolutionI6RepHFMiED2Ev,__ZN8optframe8SolutionI6RepHFMiED0Ev,__ZN3HFM15ConstructiveACFD2Ev,__ZN3HFM15ConstructiveACFD0Ev,__ZN3HFM18ConstructiveRandomD2Ev,__ZN3HFM18ConstructiveRandomD0Ev,__ZN8optframe22DefaultNSBlockIteratorI6RepHFMiED0Ev,__ZN8optframe22DefaultNSBlockIteratorI6RepHFMiE5firstEv,__ZN8optframe22DefaultNSBlockIteratorI6RepHFMiE4nextEv,__ZN3HFM29NSIteratorNEIGHAddSingleInputD2Ev,__ZN3HFM29NSIteratorNEIGHAddSingleInputD0Ev,__ZN3HFM29NSIteratorNEIGHAddSingleInput5firstEv,__ZN3HFM29NSIteratorNEIGHAddSingleInput4nextEv,__ZN3HFM23MoveNEIGHAddSingleInputD2Ev,__ZN3HFM23MoveNEIGHAddSingleInputD0Ev
,__ZNK3HFM23MoveNEIGHAddSingleInput5printEv,__ZN3HFM30NSIteratorHFMRemoveSingleInputD2Ev,__ZN3HFM30NSIteratorHFMRemoveSingleInputD0Ev,__ZN3HFM30NSIteratorHFMRemoveSingleInput5firstEv,__ZN3HFM30NSIteratorHFMRemoveSingleInput4nextEv,__ZN3HFM24MoveHFMRemoveSingleInputD2Ev,__ZN3HFM24MoveHFMRemoveSingleInputD0Ev,__ZNK3HFM24MoveHFMRemoveSingleInput5printEv,__ZN3HFM30NSIteratorHFMChangeSingleInputD2Ev,__ZN3HFM30NSIteratorHFMChangeSingleInputD0Ev,__ZN3HFM30NSIteratorHFMChangeSingleInput5firstEv,__ZN3HFM30NSIteratorHFMChangeSingleInput4nextEv,__ZN3HFM24MoveHFMChangeSingleInputD0Ev,__ZNK3HFM24MoveHFMChangeSingleInput5printEv,__ZN3HFM19NSSeqHFMModifyRulesD2Ev,__ZN3HFM19NSSeqHFMModifyRulesD0Ev,__ZN3HFM24NSIteratorHFMModifyRulesD2Ev,__ZN3HFM24NSIteratorHFMModifyRulesD0Ev,__ZN3HFM24NSIteratorHFMModifyRules5firstEv,__ZN3HFM24NSIteratorHFMModifyRules4nextEv,__ZN3HFM17MoveHFMModifyRuleD0Ev,__ZNK3HFM17MoveHFMModifyRule5printEv,__ZN8optframe9DirectionD0Ev,__ZN3HFM18HFMProblemInstanceD2Ev,__ZN3HFM18HFMProblemInstanceD0Ev,__ZN8optframe6ParetoI6RepHFMiED2Ev,__ZN8optframe6ParetoI6RepHFMiED0Ev,__ZN8optframe18BasicInitialParetoI6RepHFMiED2Ev,__ZN8optframe18BasicInitialParetoI6RepHFMiED0Ev,__ZN8optframe13paretoManagerI6RepHFMiED2Ev
,__ZN8optframe13paretoManagerI6RepHFMiED0Ev,__ZN8optframe15ParetoDominanceI6RepHFMiED2Ev,__ZN8optframe15ParetoDominanceI6RepHFMiED0Ev,__ZN8optframe19ParetoDominanceWeakI6RepHFMiED0Ev,__ZN8optframe19MORandomImprovementI6RepHFMiED0Ev,__ZNK8optframe19MORandomImprovementI6RepHFMiE5printEv,__ZN24GeneralParetoLocalSearchI6RepHFMiED2Ev,__ZN24GeneralParetoLocalSearchI6RepHFMiED0Ev,__ZN17paretoManagerGPLSI6RepHFMiED2Ev,__ZN17paretoManagerGPLSI6RepHFMiED0Ev,__ZN8optframe4MOSCD0Ev,__ZNSt3__28ios_baseD2Ev,__ZNSt3__28ios_baseD0Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__211__stdoutbufIwED2Ev,__ZNSt3__211__stdoutbufIwED0Ev,__ZNSt3__211__stdoutbufIcED2Ev,__ZNSt3__211__stdoutbufIcED0Ev,__ZNSt3__210__stdinbufIwED2Ev
,__ZNSt3__210__stdinbufIwED0Ev,__ZNSt3__210__stdinbufIcED2Ev,__ZNSt3__210__stdinbufIcED0Ev,__ZNSt3__27collateIcED2Ev,__ZNSt3__27collateIcED0Ev,__ZNSt3__26locale5facet16__on_zero_sharedEv,__ZNSt3__27collateIwED2Ev,__ZNSt3__27collateIwED0Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__210moneypunctIcLb0EED2Ev,__ZNSt3__210moneypunctIcLb0EED0Ev,__ZNSt3__210moneypunctIcLb1EED2Ev,__ZNSt3__210moneypunctIcLb1EED0Ev,__ZNSt3__210moneypunctIwLb0EED2Ev,__ZNSt3__210moneypunctIwLb0EED0Ev
,__ZNSt3__210moneypunctIwLb1EED2Ev,__ZNSt3__210moneypunctIwLb1EED0Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28messagesIcED2Ev,__ZNSt3__28messagesIcED0Ev,__ZNSt3__28messagesIwED2Ev,__ZNSt3__28messagesIwED0Ev,__ZNSt3__26locale5facetD2Ev,__ZNSt3__216__narrow_to_utf8ILj32EED0Ev,__ZNSt3__217__widen_from_utf8ILj32EED0Ev,__ZNSt3__27codecvtIwc11__mbstate_tED2Ev,__ZNSt3__27codecvtIwc11__mbstate_tED0Ev,__ZNSt3__26locale5__impD2Ev,__ZNSt3__26locale5__impD0Ev,__ZNSt3__25ctypeIcED2Ev,__ZNSt3__25ctypeIcED0Ev,__ZNSt3__28numpunctIcED2Ev,__ZNSt3__28numpunctIcED0Ev,__ZNSt3__28numpunctIwED2Ev,__ZNSt3__28numpunctIwED0Ev,__ZNSt3__26locale5facetD0Ev,__ZNSt3__25ctypeIwED0Ev,__ZNSt3__27codecvtIcc11__mbstate_tED0Ev
,__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__27codecvtIDic11__mbstate_tED0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,__ZNSt12length_errorD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZN9scannerpp12FileNotFoundD2Ev,__ZN9scannerpp15ConversionErrorD2Ev,__ZNSt3__213__vector_baseINS_6vectorIdNS_9allocatorIdEEEENS2_IS4_EEED2Ev,__ZNSt3__28ios_base4InitD2Ev,__ZNSt3__26locale2id6__initEv,__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,___cxx_global_array_dtor_117,___cxx_global_array_dtor_69,___cxx_global_array_dtor,__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev,___cxx_global_array_dtor_120,___cxx_global_array_dtor_93,___cxx_global_array_dtor_54,__ZNSt3__212__do_nothingEPv,_free,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16];
var FUNCTION_TABLE_vii = [b17,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNK8optframe7RandGen2idEv,__ZNK8optframe9Component8toStringEv,__ZNK8optframe9Component3logEv,__ZNK8optframe4SOSC2idEv,__ZNK8optframe16EmptyLocalSearchI6RepHFMiE2idEv,__ZNK8optframe16EmptyLocalSearchI6RepHFMiE3logEv,__ZNK8optframe8MoveCost2idEv,__ZN8optframe8MoveCost6updateERNS_10EvaluationE,__ZNK3HFM12HFMEvaluator2idEv,__ZNK8optframe9Direction8toStringEv,__ZNK8optframe5NSSeqI6RepHFMiE2idEv,__ZNK3HFM25NSSeqHFMChangeSingleInput8toStringEv,__ZNK3HFM25NSSeqHFMRemoveSingleInput8toStringEv,__ZNK3HFM24NSSeqNEIGHAddSingleInput8toStringEv,__ZNK8optframe19RandomDescentMethodI6RepHFMiE2idEv,__ZNK8optframe27VariableNeighborhoodDescentI6RepHFMiE2idEv,__ZNK8optframe27VariableNeighborhoodDescentI6RepHFMiE8toStringEv,__ZNK8optframe22ILSLPerturbationLPlus2I6RepHFMiE2idEv,__ZNK8optframe25IteratedLocalSearchLevelsI6RepHFMiE2idEv,__ZThn4_NK8optframe25IteratedLocalSearchLevelsI6RepHFMiE2idEv,__ZNK8optframe15SingleObjSearchI6RepHFMiE3logEv,__ZNK8optframe4NGESI6RepHFMiE2idEv,__ZNK3HFM17HFMMultiEvaluator2idEv,__ZN3HFM17HFMMultiEvaluator12addEvaluatorERN8optframe9EvaluatorI6RepHFMiEE,__ZNK8optframe24MOILSLPerturbationLPlus2I6RepHFMiE2idEv,__ZNK8optframe22BasicMOILSPerturbationI6RepHFMiE2idEv
,__ZThn4_NK8optframe22BasicMOILSPerturbationI6RepHFMiE2idEv,__ZNK8optframe9Component2idEv,__ZNK8optframe15MultiEvaluation8toStringEv,__ZNK8optframe10Evaluation2idEv,__ZNK8optframe10Evaluation8toStringEv,__ZNK8optframe14MultiEvaluatorI6RepHFMiE2idEv,__ZN8optframe14MultiEvaluatorI6RepHFMiE12addEvaluatorERNS_9EvaluatorIS1_iEE,__ZNK8optframe14MultiDirection2idEv,__ZNK8optframe5Timer2idEv,__ZNK8optframe8SolutionI6RepHFMiE2idEv,__ZNK8optframe8SolutionI6RepHFMiE8toStringEv,__ZNK8optframe12ConstructiveI6RepHFMiE2idEv,__ZNK8optframe22DefaultNSBlockIteratorI6RepHFMiE2idEv,__ZNK8optframe10NSIteratorI6RepHFMiE2idEv,__ZN8optframe10NSIteratorI6RepHFMiE10firstValidERKNS_8SolutionIS1_iEE,__ZN8optframe10NSIteratorI6RepHFMiE9nextValidERKNS_8SolutionIS1_iEE,__ZNK8optframe4MoveI6RepHFMiE2idEv,__ZN8optframe4MoveI6RepHFMiE17updateNeighStatusEPi,__ZNK3HFM19NSSeqHFMModifyRules8toStringEv,__ZNK8optframe9Direction2idEv,__ZNK8optframe18BasicInitialParetoI6RepHFMiE2idEv,__ZNK8optframe19MORandomImprovementI6RepHFMiE2idEv,__ZNK8optframe19MORandomImprovementI6RepHFMiE8toStringEv,__ZNK8optframe19MORandomImprovementI6RepHFMiE3logEv,__ZNK8optframe13MOLocalSearchI6RepHFMiE2idEv,__ZNK8optframe4MOSC2idEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE
,__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE,__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__28messagesIcE8do_closeEi,__ZNKSt3__28messagesIwE8do_closeEi,__ZNKSt3__28numpunctIcE11do_groupingEv,__ZNKSt3__28numpunctIcE11do_truenameEv,__ZNKSt3__28numpunctIcE12do_falsenameEv
,__ZNKSt3__28numpunctIwE11do_groupingEv,__ZNKSt3__28numpunctIwE11do_truenameEv,__ZNKSt3__28numpunctIwE12do_falsenameEv,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_viii = [b18,__ZN8optframe16EmptyLocalSearchI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_4SOSCE,__ZN8optframe19RandomDescentMethodI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_4SOSCE,__ZN8optframe27VariableNeighborhoodDescentI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_4SOSCE,__ZN8optframe10NSIteratorI6RepHFMiE6setLOSENS_3LOSERNS_8SolutionIS1_iEE,b18,b18,b18];
var FUNCTION_TABLE_viiid = [b19,__ZN8optframe18BasicInitialParetoI6RepHFMiE14generateParetoEjd];
var FUNCTION_TABLE_viiii = [b20,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZN8optframe16EmptyLocalSearchI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCE,__ZN3HFM12HFMEvaluator8evaluateERK6RepHFMPKi,__ZN8optframe9EvaluatorI6RepHFMiE10reevaluateERNS_10EvaluationERKS1_PKi,__ZN8optframe19RandomDescentMethodI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCE,__ZN8optframe27VariableNeighborhoodDescentI6RepHFMiE4execERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCE,__ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE11localSearchERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCE,__ZN3HFM17HFMMultiEvaluator8evaluateERK6RepHFMPKi,__ZN3HFM17HFMMultiEvaluator13reevaluateMEVERN8optframe15MultiEvaluationERK6RepHFMPKi,__ZN8optframe14MultiEvaluatorI6RepHFMiE8evaluateERKS1_PKi,__ZN8optframe14MultiEvaluatorI6RepHFMiE13reevaluateMEVERNS_15MultiEvaluationERKS1_PKi,__ZN8optframe4MoveI6RepHFMiE9updateLOSERS1_RiRNS_10EvaluationE,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__27collateIcE12do_transformEPKcS3_,__ZNKSt3__27collateIwE12do_transformEPKwS3_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20];
var FUNCTION_TABLE_viiiii = [b21,__ZN8optframe11LocalSearchI6RepHFMiE6setLOSENS_3LOSENSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS_8SolutionIS1_iEERNS_10EvaluationE,__ZN8optframe22ILSLPerturbationLPlus2I6RepHFMiE7perturbERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCEi,__ZN8optframe25IteratedLocalSearchLevelsI6RepHFMiE12perturbationERNS_8SolutionIS1_iEERNS_10EvaluationERNS_4SOSCERNSt3__24pairINSB_IiiEESC_EE,__ZN8optframe24MOILSLPerturbationLPlus2I6RepHFMiE7perturbERNS_8SolutionIS1_iEERNS_15MultiEvaluationERNS_4MOSCEi,__ZN8optframe19MORandomImprovementI6RepHFMiE4execERNS_6ParetoIS1_iEERNS_8SolutionIS1_iEERNS_13paretoManagerIS1_iEERNS_4MOSCE,__ZN24GeneralParetoLocalSearchI6RepHFMiE4execERN8optframe6ParetoIS0_iEERNS2_8SolutionIS0_iEERNS2_13paretoManagerIS0_iEERNS2_4MOSCE,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b21,b21,b21,b21,b21,b21];
var FUNCTION_TABLE_viiiiii = [b22,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZN8optframe19MORandomImprovementI6RepHFMiE4execERNS_6ParetoIS1_iEERNS_8SolutionIS1_iEERNS_15MultiEvaluationERNS_13paretoManagerIS1_iEERNS_4MOSCE,__ZN24GeneralParetoLocalSearchI6RepHFMiE4execERN8optframe6ParetoIS0_iEERNS2_8SolutionIS0_iEERNS2_15MultiEvaluationERNS2_13paretoManagerIS0_iEERNS2_4MOSCE,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b22,b22,b22,b22];

  return { __GLOBAL__I_000101: __GLOBAL__I_000101, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, __GLOBAL__sub_I_mainHFM_cpp: __GLOBAL__sub_I_mainHFM_cpp, ___cxa_can_catch: ___cxa_can_catch, ___cxa_is_pointer_type: ___cxa_is_pointer_type, ___errno_location: ___errno_location, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, ___uremdi3: ___uremdi3, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _callTSForecasting: _callTSForecasting, _emscripten_get_global_libc: _emscripten_get_global_libc, _fflush: _fflush, _free: _free, _getNTimeSeries: _getNTimeSeries, _getTimeSeriesSize: _getTimeSeriesSize, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _llvm_bswap_i32: _llvm_bswap_i32, _loadTS: _loadTS, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _pthread_cond_broadcast: _pthread_cond_broadcast, _pthread_mutex_lock: _pthread_mutex_lock, _pthread_mutex_unlock: _pthread_mutex_unlock, _round: _round, _sbrk: _sbrk, dynCall_di: dynCall_di, dynCall_did: dynCall_did, dynCall_didd: dynCall_didd, dynCall_ii: dynCall_ii, dynCall_iid: dynCall_iid, dynCall_iidi: dynCall_iidi, dynCall_iii: dynCall_iii, dynCall_iiii: dynCall_iiii, dynCall_iiiii: dynCall_iiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_iiiiii: dynCall_iiiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_v: dynCall_v, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_viii: dynCall_viii, dynCall_viiid: dynCall_viiid, dynCall_viiii: dynCall_viiii, dynCall_viiiii: dynCall_viiiii, dynCall_viiiiii: dynCall_viiiiii, establishStackSpace: establishStackSpace, getTempRet0: getTempRet0, runPostSets: runPostSets, setTempRet0: setTempRet0, setThrew: setThrew, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var __GLOBAL__I_000101 = Module["__GLOBAL__I_000101"] = asm["__GLOBAL__I_000101"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var __GLOBAL__sub_I_mainHFM_cpp = Module["__GLOBAL__sub_I_mainHFM_cpp"] = asm["__GLOBAL__sub_I_mainHFM_cpp"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _callTSForecasting = Module["_callTSForecasting"] = asm["_callTSForecasting"];
var _emscripten_get_global_libc = Module["_emscripten_get_global_libc"] = asm["_emscripten_get_global_libc"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var _free = Module["_free"] = asm["_free"];
var _getNTimeSeries = Module["_getNTimeSeries"] = asm["_getNTimeSeries"];
var _getTimeSeriesSize = Module["_getTimeSeriesSize"] = asm["_getTimeSeriesSize"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _loadTS = Module["_loadTS"] = asm["_loadTS"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _memset = Module["_memset"] = asm["_memset"];
var _pthread_cond_broadcast = Module["_pthread_cond_broadcast"] = asm["_pthread_cond_broadcast"];
var _pthread_mutex_lock = Module["_pthread_mutex_lock"] = asm["_pthread_mutex_lock"];
var _pthread_mutex_unlock = Module["_pthread_mutex_unlock"] = asm["_pthread_mutex_unlock"];
var _round = Module["_round"] = asm["_round"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_did = Module["dynCall_did"] = asm["dynCall_did"];
var dynCall_didd = Module["dynCall_didd"] = asm["dynCall_didd"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iid = Module["dynCall_iid"] = asm["dynCall_iid"];
var dynCall_iidi = Module["dynCall_iidi"] = asm["dynCall_iidi"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
;
Runtime.stackAlloc = Module['stackAlloc'];
Runtime.stackSave = Module['stackSave'];
Runtime.stackRestore = Module['stackRestore'];
Runtime.establishStackSpace = Module['establishStackSpace'];
Runtime.setTempRet0 = Module['setTempRet0'];
Runtime.getTempRet0 = Module['getTempRet0'];


// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;




if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, Runtime.GLOBAL_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, Runtime.GLOBAL_BASE);
      // Delete the typed array that contains the large blob of the memory initializer request response so that
      // we won't keep unnecessary memory lying around. However, keep the XHR object itself alive so that e.g.
      // its .status field can still be accessed later.
      if (Module['memoryInitializerRequest']) delete Module['memoryInitializerRequest'].response;
      removeRunDependency('memory initializer');
    }
    function doBrowserLoad() {
      Module['readAsync'](memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
    if (Module['memoryInitializerRequest']) {
      // a network request has already been created, just use that
      function useRequest() {
        var request = Module['memoryInitializerRequest'];
        var response = request.response;
        if (request.status !== 200 && request.status !== 0) {
            // If you see this warning, the issue may be that you are using locateFile or memoryInitializerPrefixURL, and defining them in JS. That
            // means that the HTML file doesn't know about them, and when it tries to create the mem init request early, does it to the wrong place.
            // Look in your browser's devtools network console to see what's going on.
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status + ', retrying ' + memoryInitializer);
            doBrowserLoad();
            return;
        }
        applyMemoryInitializer(response);
      }
      if (Module['memoryInitializerRequest'].response) {
        setTimeout(useRequest, 0); // it's already here; but, apply it asynchronously
      } else {
        Module['memoryInitializerRequest'].addEventListener('load', useRequest); // wait for it
      }
    } else {
      // fetch it from the network ourselves
      doBrowserLoad();
    }
  }
}



/**
 * @constructor
 * @extends {Error}
 * @this {ExitStatus}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      var toLog = e;
      if (e && typeof e === 'object' && e.stack) {
        toLog = [e, e.stack];
      }
      Module.printErr('exception thrown: ' + toLog);
      Module['quit'](1, e);
    }
  } finally {
    calledMain = true;
  }
}




/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }


  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();


    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  }
  Module['quit'](status, new ExitStatus(status));
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}







